# WebSocket Load Balancer Configuration for Printernizer
# Enhanced for Milestone 1.2: Real-time printer connectivity

apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-websocket-config
  namespace: printernizer
data:
  nginx.conf: |
    upstream printernizer_websocket {
        # Use sticky sessions for WebSocket connections
        ip_hash;
        
        # Backend WebSocket servers
        server printernizer-backend:8000 weight=1 max_fails=3 fail_timeout=30s;
        # Add more backend instances as needed for scaling
        # server printernizer-backend-2:8000 weight=1 max_fails=3 fail_timeout=30s;
        
        # Keep connections alive
        keepalive 32;
    }
    
    upstream printernizer_api {
        # Round-robin for regular API requests
        least_conn;
        
        server printernizer-backend:8000 weight=1 max_fails=3 fail_timeout=30s;
        # server printernizer-backend-2:8000 weight=1 max_fails=3 fail_timeout=30s;
        
        keepalive 16;
    }
    
    # Map for WebSocket upgrade handling
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }
    
    server {
        listen 80;
        server_name printernizer.porcus3d.de;
        
        # Redirect HTTP to HTTPS
        return 301 https://$server_name$request_uri;
    }
    
    server {
        listen 443 ssl http2;
        server_name printernizer.porcus3d.de;
        
        # SSL Configuration
        ssl_certificate /etc/ssl/certs/printernizer.crt;
        ssl_certificate_key /etc/ssl/private/printernizer.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;
        
        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        
        # WebSocket and real-time endpoints
        location /ws/ {
            proxy_pass http://printernizer_websocket;
            
            # WebSocket specific headers
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            
            # Important headers for WebSocket
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket timeouts
            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;
            proxy_connect_timeout 60s;
            
            # Disable buffering for real-time data
            proxy_buffering off;
            proxy_cache off;
            
            # Enable session affinity
            proxy_set_header X-Session-Affinity $remote_addr;
        }
        
        # API endpoints
        location /api/ {
            proxy_pass http://printernizer_api;
            
            # Standard proxy headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # API timeouts
            proxy_read_timeout 60s;
            proxy_send_timeout 60s;
            proxy_connect_timeout 10s;
            
            # Enable buffering for API responses
            proxy_buffering on;
            proxy_buffer_size 8k;
            proxy_buffers 16 8k;
            
            # CORS headers for API
            add_header Access-Control-Allow-Origin "https://porcus3d.de" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
            add_header Access-Control-Expose-Headers "Content-Length,Content-Range" always;
            
            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "https://porcus3d.de";
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
                add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
                add_header Access-Control-Max-Age 1728000;
                add_header Content-Type "text/plain; charset=utf-8";
                add_header Content-Length 0;
                return 204;
            }
        }
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Static frontend content
        location / {
            proxy_pass http://printernizer-frontend;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Frontend caching
            proxy_cache_valid 200 302 10m;
            proxy_cache_valid 404 1m;
            
            # Enable gzip compression
            gzip on;
            gzip_vary on;
            gzip_min_length 1000;
            gzip_proxied any;
            gzip_comp_level 6;
            gzip_types
                text/plain
                text/css
                text/xml
                text/javascript
                application/javascript
                application/xml+rss
                application/json;
        }
        
        # WebSocket connection monitoring endpoint
        location /metrics/websockets {
            proxy_pass http://printernizer_api;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Only allow Prometheus to access this endpoint
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }
    }

---
# WebSocket-aware Ingress Controller
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: printernizer-websocket-ingress
  namespace: printernizer
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    
    # WebSocket specific annotations
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/websocket-services: "printernizer-backend"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_cache off;
      
    # Session affinity for WebSocket connections
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/affinity-mode: "persistent"
    nginx.ingress.kubernetes.io/session-cookie-name: "printernizer-websocket"
    nginx.ingress.kubernetes.io/session-cookie-max-age: "3600"
    
spec:
  tls:
  - hosts:
    - printernizer.porcus3d.de
    secretName: printernizer-websocket-tls
  rules:
  - host: printernizer.porcus3d.de
    http:
      paths:
      # WebSocket connections - sticky sessions
      - path: /ws
        pathType: Prefix
        backend:
          service:
            name: printernizer-backend
            port:
              number: 8000
      # API endpoints - load balanced
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: printernizer-backend
            port:
              number: 8000
      # Frontend - load balanced
      - path: /
        pathType: Prefix
        backend:
          service:
            name: printernizer-frontend
            port:
              number: 80

---
# Service for WebSocket connections with session affinity
apiVersion: v1
kind: Service
metadata:
  name: printernizer-websocket-service
  namespace: printernizer
  labels:
    app: printernizer-websocket
spec:
  selector:
    app: printernizer-backend
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
    name: websocket
  # Enable session affinity for WebSocket connections
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 3600  # 1 hour session timeout