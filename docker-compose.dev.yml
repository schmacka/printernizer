# Docker Compose for Printernizer Development Environment

version: '3.8'

services:
  # Backend API Service - Development Mode
  printernizer-backend-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    container_name: printernizer-backend-dev
    restart: "no"
    environment:
      - ENVIRONMENT=development
      - TZ=Europe/Berlin
      - PORT=8000
      - LOG_LEVEL=debug
      - DATABASE_PATH=/app/data/printernizer.db
      - CORS_ORIGINS=http://localhost:3000,http://localhost:8080
    volumes:
      - ./src:/app/src
      - ./frontend:/app/frontend
      - ./database_schema.sql:/app/database_schema.sql
      - printernizer-dev-data:/app/data
      - printernizer-dev-logs:/app/logs
    ports:
      - "8000:8000"
    networks:
      - printernizer-dev-network
    command: >
      sh -c "
      pip install -e . &&
      uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload --reload-dir src
      "

  # Frontend Development Server
  printernizer-frontend-dev:
    image: nginx:alpine
    container_name: printernizer-frontend-dev
    restart: "no"
    environment:
      - TZ=Europe/Berlin
    volumes:
      - ./frontend:/usr/share/nginx/html
      - ./docker/dev-nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "8080:80"
    networks:
      - printernizer-dev-network
    depends_on:
      - printernizer-backend-dev

  # Redis for Development
  printernizer-redis-dev:
    image: redis:7-alpine
    container_name: printernizer-redis-dev
    restart: "no"
    ports:
      - "6379:6379"
    networks:
      - printernizer-dev-network

  # Database Admin (optional)
  printernizer-db-admin:
    image: adminer
    container_name: printernizer-db-admin
    restart: "no"
    ports:
      - "8081:8080"
    networks:
      - printernizer-dev-network

networks:
  printernizer-dev-network:
    driver: bridge
    name: printernizer-dev-network

volumes:
  printernizer-dev-data:
    name: printernizer-dev-data
  printernizer-dev-logs:
    name: printernizer-dev-logs