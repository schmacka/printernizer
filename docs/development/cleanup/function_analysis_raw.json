{
  "files": [
    {
      "filepath": "demo_gcode_optimization.py",
      "functions": [
        {
          "name": "create_sample_gcode",
          "full_name": "create_sample_gcode",
          "class": null,
          "signature": "()",
          "return_type": "str",
          "decorators": [],
          "docstring": "Create a sample G-code file with warmup phase.",
          "line_start": 18,
          "line_end": 71,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "demo_optimization",
          "full_name": "demo_optimization",
          "class": null,
          "signature": "()",
          "return_type": "",
          "decorators": [],
          "docstring": "Demonstrate G-code optimization functionality.",
          "line_start": 74,
          "line_end": 158,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "analyze_gcode_file_lines",
          "full_name": "analyze_gcode_file_lines",
          "class": null,
          "signature": "(self, lines)",
          "return_type": "",
          "decorators": [],
          "docstring": "Helper method to analyze lines directly (for demo).",
          "line_start": 161,
          "line_end": 171,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "os",
          "alias": null,
          "line": 7
        },
        {
          "type": "import",
          "module": "sys",
          "alias": null,
          "line": 8
        },
        {
          "type": "import",
          "module": "tempfile",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "pathlib",
          "name": "Path",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "src.utils.gcode_analyzer",
          "name": "GcodeAnalyzer",
          "alias": null,
          "line": 15
        }
      ],
      "function_calls": [
        {
          "caller": "demo_optimization",
          "callee": "print",
          "line": 76,
          "type": "direct"
        },
        {
          "caller": "demo_optimization",
          "callee": "print",
          "line": 77,
          "type": "direct"
        },
        {
          "caller": "demo_optimization",
          "callee": "create_sample_gcode",
          "line": 80,
          "type": "direct"
        },
        {
          "caller": "demo_optimization",
          "callee": "split",
          "line": 81,
          "type": "attribute"
        },
        {
          "caller": "demo_optimization",
          "callee": "strip",
          "line": 81,
          "type": "attribute"
        },
        {
          "caller": "demo_optimization",
          "callee": "print",
          "line": 83,
          "type": "direct"
        },
        {
          "caller": "demo_optimization",
          "callee": "len",
          "line": 83,
          "type": "direct"
        },
        {
          "caller": "demo_optimization",
          "callee": "print",
          "line": 84,
          "type": "direct"
        },
        {
          "caller": "demo_optimization",
          "callee": "print",
          "line": 87,
          "type": "direct"
        },
        {
          "caller": "demo_optimization",
          "callee": "print",
          "line": 88,
          "type": "direct"
        },
        {
          "caller": "demo_optimization",
          "callee": "GcodeAnalyzer",
          "line": 90,
          "type": "direct"
        },
        {
          "caller": "demo_optimization",
          "callee": "analyze_gcode_file_lines",
          "line": 93,
          "type": "attribute"
        },
        {
          "caller": "demo_optimization",
          "callee": "print",
          "line": 95,
          "type": "direct"
        },
        {
          "caller": "demo_optimization",
          "callee": "print",
          "line": 96,
          "type": "direct"
        },
        {
          "caller": "demo_optimization",
          "callee": "print",
          "line": 97,
          "type": "direct"
        },
        {
          "caller": "demo_optimization",
          "callee": "print",
          "line": 98,
          "type": "direct"
        },
        {
          "caller": "demo_optimization",
          "callee": "print",
          "line": 99,
          "type": "direct"
        },
        {
          "caller": "demo_optimization",
          "callee": "get_optimized_gcode_lines",
          "line": 102,
          "type": "attribute"
        },
        {
          "caller": "demo_optimization",
          "callee": "print",
          "line": 103,
          "type": "direct"
        },
        {
          "caller": "demo_optimization",
          "callee": "len",
          "line": 103,
          "type": "direct"
        },
        {
          "caller": "demo_optimization",
          "callee": "len",
          "line": 103,
          "type": "direct"
        },
        {
          "caller": "demo_optimization",
          "callee": "len",
          "line": 103,
          "type": "direct"
        },
        {
          "caller": "demo_optimization",
          "callee": "len",
          "line": 103,
          "type": "direct"
        },
        {
          "caller": "demo_optimization",
          "callee": "print",
          "line": 107,
          "type": "direct"
        },
        {
          "caller": "demo_optimization",
          "callee": "enumerate",
          "line": 108,
          "type": "direct"
        },
        {
          "caller": "demo_optimization",
          "callee": "strip",
          "line": 109,
          "type": "attribute"
        },
        {
          "caller": "demo_optimization",
          "callee": "startswith",
          "line": 109,
          "type": "attribute"
        },
        {
          "caller": "demo_optimization",
          "callee": "print",
          "line": 110,
          "type": "direct"
        },
        {
          "caller": "demo_optimization",
          "callee": "print",
          "line": 112,
          "type": "direct"
        },
        {
          "caller": "demo_optimization",
          "callee": "enumerate",
          "line": 113,
          "type": "direct"
        },
        {
          "caller": "demo_optimization",
          "callee": "strip",
          "line": 114,
          "type": "attribute"
        },
        {
          "caller": "demo_optimization",
          "callee": "print",
          "line": 115,
          "type": "direct"
        },
        {
          "caller": "demo_optimization",
          "callee": "print",
          "line": 117,
          "type": "direct"
        },
        {
          "caller": "demo_optimization",
          "callee": "print",
          "line": 120,
          "type": "direct"
        },
        {
          "caller": "demo_optimization",
          "callee": "print",
          "line": 121,
          "type": "direct"
        },
        {
          "caller": "demo_optimization",
          "callee": "GcodeAnalyzer",
          "line": 123,
          "type": "direct"
        },
        {
          "caller": "demo_optimization",
          "callee": "get_optimized_gcode_lines",
          "line": 124,
          "type": "attribute"
        },
        {
          "caller": "demo_optimization",
          "callee": "print",
          "line": 126,
          "type": "direct"
        },
        {
          "caller": "demo_optimization",
          "callee": "len",
          "line": 126,
          "type": "direct"
        },
        {
          "caller": "demo_optimization",
          "callee": "print",
          "line": 127,
          "type": "direct"
        },
        {
          "caller": "demo_optimization",
          "callee": "print",
          "line": 129,
          "type": "direct"
        },
        {
          "caller": "demo_optimization",
          "callee": "print",
          "line": 132,
          "type": "direct"
        },
        {
          "caller": "demo_optimization",
          "callee": "print",
          "line": 133,
          "type": "direct"
        },
        {
          "caller": "demo_optimization",
          "callee": "len",
          "line": 135,
          "type": "direct"
        },
        {
          "caller": "demo_optimization",
          "callee": "len",
          "line": 135,
          "type": "direct"
        },
        {
          "caller": "demo_optimization",
          "callee": "len",
          "line": 135,
          "type": "direct"
        },
        {
          "caller": "demo_optimization",
          "callee": "print",
          "line": 136,
          "type": "direct"
        },
        {
          "caller": "demo_optimization",
          "callee": "print",
          "line": 137,
          "type": "direct"
        },
        {
          "caller": "demo_optimization",
          "callee": "print",
          "line": 138,
          "type": "direct"
        },
        {
          "caller": "demo_optimization",
          "callee": "print",
          "line": 140,
          "type": "direct"
        },
        {
          "caller": "demo_optimization",
          "callee": "print",
          "line": 143,
          "type": "direct"
        },
        {
          "caller": "demo_optimization",
          "callee": "print",
          "line": 144,
          "type": "direct"
        },
        {
          "caller": "demo_optimization",
          "callee": "NamedTemporaryFile",
          "line": 146,
          "type": "attribute"
        },
        {
          "caller": "demo_optimization",
          "callee": "write",
          "line": 147,
          "type": "attribute"
        },
        {
          "caller": "demo_optimization",
          "callee": "join",
          "line": 147,
          "type": "attribute"
        },
        {
          "caller": "demo_optimization",
          "callee": "NamedTemporaryFile",
          "line": 150,
          "type": "attribute"
        },
        {
          "caller": "demo_optimization",
          "callee": "write",
          "line": 151,
          "type": "attribute"
        },
        {
          "caller": "demo_optimization",
          "callee": "join",
          "line": 151,
          "type": "attribute"
        },
        {
          "caller": "demo_optimization",
          "callee": "print",
          "line": 154,
          "type": "direct"
        },
        {
          "caller": "demo_optimization",
          "callee": "print",
          "line": 155,
          "type": "direct"
        },
        {
          "caller": "demo_optimization",
          "callee": "print",
          "line": 156,
          "type": "direct"
        },
        {
          "caller": "analyze_gcode_file_lines",
          "callee": "find_print_start_line",
          "line": 163,
          "type": "attribute"
        },
        {
          "caller": "analyze_gcode_file_lines",
          "callee": "len",
          "line": 166,
          "type": "direct"
        }
      ],
      "error": null
    },
    {
      "filepath": "scripts\\analyze_codebase.py",
      "functions": [
        {
          "name": "__init__",
          "full_name": "FunctionAnalyzer.__init__",
          "class": "FunctionAnalyzer",
          "signature": "(self, filepath: str)",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 23,
          "line_end": 29,
          "access_level": "dunder",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "visit_Import",
          "full_name": "FunctionAnalyzer.visit_Import",
          "class": "FunctionAnalyzer",
          "signature": "(self, node)",
          "return_type": "",
          "decorators": [],
          "docstring": "Track import statements",
          "line_start": 31,
          "line_end": 40,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "visit_ImportFrom",
          "full_name": "FunctionAnalyzer.visit_ImportFrom",
          "class": "FunctionAnalyzer",
          "signature": "(self, node)",
          "return_type": "",
          "decorators": [],
          "docstring": "Track from...import statements",
          "line_start": 42,
          "line_end": 53,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "visit_ClassDef",
          "full_name": "FunctionAnalyzer.visit_ClassDef",
          "class": "FunctionAnalyzer",
          "signature": "(self, node)",
          "return_type": "",
          "decorators": [],
          "docstring": "Track class context for methods",
          "line_start": 55,
          "line_end": 60,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "visit_FunctionDef",
          "full_name": "FunctionAnalyzer.visit_FunctionDef",
          "class": "FunctionAnalyzer",
          "signature": "(self, node)",
          "return_type": "",
          "decorators": [],
          "docstring": "Extract function definition information",
          "line_start": 62,
          "line_end": 115,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "visit_AsyncFunctionDef",
          "full_name": "FunctionAnalyzer.visit_AsyncFunctionDef",
          "class": "FunctionAnalyzer",
          "signature": "(self, node)",
          "return_type": "",
          "decorators": [],
          "docstring": "Handle async functions",
          "line_start": 117,
          "line_end": 119,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "visit_Call",
          "full_name": "FunctionAnalyzer.visit_Call",
          "class": "FunctionAnalyzer",
          "signature": "(self, node)",
          "return_type": "",
          "decorators": [],
          "docstring": "Track function calls",
          "line_start": 121,
          "line_end": 142,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "analyze_file",
          "full_name": "analyze_file",
          "class": null,
          "signature": "(filepath: str)",
          "return_type": "Dict",
          "decorators": [],
          "docstring": "Analyze a single Python file",
          "line_start": 145,
          "line_end": 169,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "find_python_files",
          "full_name": "find_python_files",
          "class": null,
          "signature": "(root_dir: str)",
          "return_type": "List[str]",
          "decorators": [],
          "docstring": "Find all Python files excluding venv and .git",
          "line_start": 172,
          "line_end": 183,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "build_dependency_graph",
          "full_name": "build_dependency_graph",
          "class": null,
          "signature": "(all_results: List[Dict])",
          "return_type": "Dict",
          "decorators": [],
          "docstring": "Build function call dependency graph",
          "line_start": 186,
          "line_end": 200,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "find_entry_points",
          "full_name": "find_entry_points",
          "class": null,
          "signature": "(all_results: List[Dict])",
          "return_type": "List[Dict]",
          "decorators": [],
          "docstring": "Identify entry points in the codebase",
          "line_start": 203,
          "line_end": 244,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "generate_function_inventory_report",
          "full_name": "generate_function_inventory_report",
          "class": null,
          "signature": "(all_results: List[Dict], output_file: str)",
          "return_type": "",
          "decorators": [],
          "docstring": "Generate markdown report of all functions",
          "line_start": 247,
          "line_end": 302,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "generate_dependency_report",
          "full_name": "generate_dependency_report",
          "class": null,
          "signature": "(dependency_graph: Dict, output_file: str)",
          "return_type": "",
          "decorators": [],
          "docstring": "Generate dependency analysis report",
          "line_start": 305,
          "line_end": 320,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "generate_entry_points_report",
          "full_name": "generate_entry_points_report",
          "class": null,
          "signature": "(entry_points: List[Dict], output_file: str)",
          "return_type": "",
          "decorators": [],
          "docstring": "Generate entry points report",
          "line_start": 323,
          "line_end": 348,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "main",
          "full_name": "main",
          "class": null,
          "signature": "()",
          "return_type": "",
          "decorators": [],
          "docstring": "Main analysis execution",
          "line_start": 351,
          "line_end": 398,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "ast",
          "alias": null,
          "line": 11
        },
        {
          "type": "import",
          "module": "json",
          "alias": null,
          "line": 12
        },
        {
          "type": "import",
          "module": "os",
          "alias": null,
          "line": 13
        },
        {
          "type": "from_import",
          "module": "pathlib",
          "name": "Path",
          "alias": null,
          "line": 14
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Dict",
          "alias": null,
          "line": 15
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "List",
          "alias": null,
          "line": 15
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Set",
          "alias": null,
          "line": 15
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Tuple",
          "alias": null,
          "line": 15
        },
        {
          "type": "from_import",
          "module": "collections",
          "name": "defaultdict",
          "alias": null,
          "line": 16
        },
        {
          "type": "import",
          "module": "re",
          "alias": null,
          "line": 17
        }
      ],
      "function_calls": [
        {
          "caller": "FunctionAnalyzer.visit_Import",
          "callee": "append",
          "line": 34,
          "type": "attribute"
        },
        {
          "caller": "FunctionAnalyzer.visit_Import",
          "callee": "generic_visit",
          "line": 40,
          "type": "attribute"
        },
        {
          "caller": "FunctionAnalyzer.visit_ImportFrom",
          "callee": "append",
          "line": 46,
          "type": "attribute"
        },
        {
          "caller": "FunctionAnalyzer.visit_ImportFrom",
          "callee": "generic_visit",
          "line": 53,
          "type": "attribute"
        },
        {
          "caller": "FunctionAnalyzer.visit_ClassDef",
          "callee": "generic_visit",
          "line": 59,
          "type": "attribute"
        },
        {
          "caller": "FunctionAnalyzer.visit_FunctionDef",
          "callee": "unparse",
          "line": 69,
          "type": "attribute"
        },
        {
          "caller": "FunctionAnalyzer.visit_FunctionDef",
          "callee": "append",
          "line": 70,
          "type": "attribute"
        },
        {
          "caller": "FunctionAnalyzer.visit_FunctionDef",
          "callee": "unparse",
          "line": 73,
          "type": "attribute"
        },
        {
          "caller": "FunctionAnalyzer.visit_FunctionDef",
          "callee": "get_docstring",
          "line": 76,
          "type": "attribute"
        },
        {
          "caller": "FunctionAnalyzer.visit_FunctionDef",
          "callee": "unparse",
          "line": 81,
          "type": "attribute"
        },
        {
          "caller": "FunctionAnalyzer.visit_FunctionDef",
          "callee": "startswith",
          "line": 84,
          "type": "attribute"
        },
        {
          "caller": "FunctionAnalyzer.visit_FunctionDef",
          "callee": "startswith",
          "line": 84,
          "type": "attribute"
        },
        {
          "caller": "FunctionAnalyzer.visit_FunctionDef",
          "callee": "startswith",
          "line": 85,
          "type": "attribute"
        },
        {
          "caller": "FunctionAnalyzer.visit_FunctionDef",
          "callee": "endswith",
          "line": 85,
          "type": "attribute"
        },
        {
          "caller": "FunctionAnalyzer.visit_FunctionDef",
          "callee": "join",
          "line": 95,
          "type": "attribute"
        },
        {
          "caller": "FunctionAnalyzer.visit_FunctionDef",
          "callee": "isinstance",
          "line": 103,
          "type": "direct"
        },
        {
          "caller": "FunctionAnalyzer.visit_FunctionDef",
          "callee": "append",
          "line": 109,
          "type": "attribute"
        },
        {
          "caller": "FunctionAnalyzer.visit_FunctionDef",
          "callee": "generic_visit",
          "line": 114,
          "type": "attribute"
        },
        {
          "caller": "FunctionAnalyzer.visit_AsyncFunctionDef",
          "callee": "visit_FunctionDef",
          "line": 119,
          "type": "attribute"
        },
        {
          "caller": "FunctionAnalyzer.visit_Call",
          "callee": "isinstance",
          "line": 125,
          "type": "direct"
        },
        {
          "caller": "FunctionAnalyzer.visit_Call",
          "callee": "append",
          "line": 127,
          "type": "attribute"
        },
        {
          "caller": "FunctionAnalyzer.visit_Call",
          "callee": "isinstance",
          "line": 133,
          "type": "direct"
        },
        {
          "caller": "FunctionAnalyzer.visit_Call",
          "callee": "append",
          "line": 136,
          "type": "attribute"
        },
        {
          "caller": "FunctionAnalyzer.visit_Call",
          "callee": "generic_visit",
          "line": 142,
          "type": "attribute"
        },
        {
          "caller": "analyze_file",
          "callee": "open",
          "line": 148,
          "type": "direct"
        },
        {
          "caller": "analyze_file",
          "callee": "read",
          "line": 149,
          "type": "attribute"
        },
        {
          "caller": "analyze_file",
          "callee": "parse",
          "line": 151,
          "type": "attribute"
        },
        {
          "caller": "analyze_file",
          "callee": "FunctionAnalyzer",
          "line": 152,
          "type": "direct"
        },
        {
          "caller": "analyze_file",
          "callee": "visit",
          "line": 153,
          "type": "attribute"
        },
        {
          "caller": "analyze_file",
          "callee": "str",
          "line": 168,
          "type": "direct"
        },
        {
          "caller": "find_python_files",
          "callee": "Path",
          "line": 175,
          "type": "direct"
        },
        {
          "caller": "find_python_files",
          "callee": "rglob",
          "line": 177,
          "type": "attribute"
        },
        {
          "caller": "find_python_files",
          "callee": "any",
          "line": 179,
          "type": "direct"
        },
        {
          "caller": "find_python_files",
          "callee": "append",
          "line": 181,
          "type": "attribute"
        },
        {
          "caller": "find_python_files",
          "callee": "str",
          "line": 181,
          "type": "direct"
        },
        {
          "caller": "find_python_files",
          "callee": "sorted",
          "line": 183,
          "type": "direct"
        },
        {
          "caller": "build_dependency_graph",
          "callee": "defaultdict",
          "line": 188,
          "type": "direct"
        },
        {
          "caller": "build_dependency_graph",
          "callee": "append",
          "line": 194,
          "type": "attribute"
        },
        {
          "caller": "build_dependency_graph",
          "callee": "dict",
          "line": 200,
          "type": "direct"
        },
        {
          "caller": "find_entry_points",
          "callee": "open",
          "line": 212,
          "type": "direct"
        },
        {
          "caller": "find_entry_points",
          "callee": "read",
          "line": 213,
          "type": "attribute"
        },
        {
          "caller": "find_entry_points",
          "callee": "append",
          "line": 218,
          "type": "attribute"
        },
        {
          "caller": "find_entry_points",
          "callee": "join",
          "line": 226,
          "type": "attribute"
        },
        {
          "caller": "find_entry_points",
          "callee": "any",
          "line": 227,
          "type": "direct"
        },
        {
          "caller": "find_entry_points",
          "callee": "append",
          "line": 228,
          "type": "attribute"
        },
        {
          "caller": "find_entry_points",
          "callee": "join",
          "line": 237,
          "type": "attribute"
        },
        {
          "caller": "find_entry_points",
          "callee": "str",
          "line": 237,
          "type": "direct"
        },
        {
          "caller": "find_entry_points",
          "callee": "append",
          "line": 238,
          "type": "attribute"
        },
        {
          "caller": "generate_function_inventory_report",
          "callee": "open",
          "line": 249,
          "type": "direct"
        },
        {
          "caller": "generate_function_inventory_report",
          "callee": "write",
          "line": 250,
          "type": "attribute"
        },
        {
          "caller": "generate_function_inventory_report",
          "callee": "write",
          "line": 251,
          "type": "attribute"
        },
        {
          "caller": "generate_function_inventory_report",
          "callee": "stat",
          "line": 251,
          "type": "attribute"
        },
        {
          "caller": "generate_function_inventory_report",
          "callee": "Path",
          "line": 251,
          "type": "direct"
        },
        {
          "caller": "generate_function_inventory_report",
          "callee": "sum",
          "line": 254,
          "type": "direct"
        },
        {
          "caller": "generate_function_inventory_report",
          "callee": "len",
          "line": 254,
          "type": "direct"
        },
        {
          "caller": "generate_function_inventory_report",
          "callee": "len",
          "line": 255,
          "type": "direct"
        },
        {
          "caller": "generate_function_inventory_report",
          "callee": "write",
          "line": 256,
          "type": "attribute"
        },
        {
          "caller": "generate_function_inventory_report",
          "callee": "write",
          "line": 257,
          "type": "attribute"
        },
        {
          "caller": "generate_function_inventory_report",
          "callee": "write",
          "line": 258,
          "type": "attribute"
        },
        {
          "caller": "generate_function_inventory_report",
          "callee": "write",
          "line": 261,
          "type": "attribute"
        },
        {
          "caller": "generate_function_inventory_report",
          "callee": "write",
          "line": 264,
          "type": "attribute"
        },
        {
          "caller": "generate_function_inventory_report",
          "callee": "write",
          "line": 265,
          "type": "attribute"
        },
        {
          "caller": "generate_function_inventory_report",
          "callee": "write",
          "line": 271,
          "type": "attribute"
        },
        {
          "caller": "generate_function_inventory_report",
          "callee": "write",
          "line": 272,
          "type": "attribute"
        },
        {
          "caller": "generate_function_inventory_report",
          "callee": "len",
          "line": 272,
          "type": "direct"
        },
        {
          "caller": "generate_function_inventory_report",
          "callee": "write",
          "line": 274,
          "type": "attribute"
        },
        {
          "caller": "generate_function_inventory_report",
          "callee": "write",
          "line": 275,
          "type": "attribute"
        },
        {
          "caller": "generate_function_inventory_report",
          "callee": "join",
          "line": 279,
          "type": "attribute"
        },
        {
          "caller": "generate_function_inventory_report",
          "callee": "write",
          "line": 280,
          "type": "attribute"
        },
        {
          "caller": "generate_function_inventory_report",
          "callee": "write",
          "line": 283,
          "type": "attribute"
        },
        {
          "caller": "generate_function_inventory_report",
          "callee": "write",
          "line": 286,
          "type": "attribute"
        },
        {
          "caller": "generate_function_inventory_report",
          "callee": "sum",
          "line": 288,
          "type": "direct"
        },
        {
          "caller": "generate_function_inventory_report",
          "callee": "sum",
          "line": 289,
          "type": "direct"
        },
        {
          "caller": "generate_function_inventory_report",
          "callee": "sum",
          "line": 290,
          "type": "direct"
        },
        {
          "caller": "generate_function_inventory_report",
          "callee": "write",
          "line": 292,
          "type": "attribute"
        },
        {
          "caller": "generate_function_inventory_report",
          "callee": "write",
          "line": 293,
          "type": "attribute"
        },
        {
          "caller": "generate_function_inventory_report",
          "callee": "write",
          "line": 294,
          "type": "attribute"
        },
        {
          "caller": "generate_function_inventory_report",
          "callee": "sum",
          "line": 296,
          "type": "direct"
        },
        {
          "caller": "generate_function_inventory_report",
          "callee": "sum",
          "line": 297,
          "type": "direct"
        },
        {
          "caller": "generate_function_inventory_report",
          "callee": "sum",
          "line": 298,
          "type": "direct"
        },
        {
          "caller": "generate_function_inventory_report",
          "callee": "write",
          "line": 300,
          "type": "attribute"
        },
        {
          "caller": "generate_function_inventory_report",
          "callee": "write",
          "line": 301,
          "type": "attribute"
        },
        {
          "caller": "generate_function_inventory_report",
          "callee": "write",
          "line": 302,
          "type": "attribute"
        },
        {
          "caller": "generate_dependency_report",
          "callee": "open",
          "line": 307,
          "type": "direct"
        },
        {
          "caller": "generate_dependency_report",
          "callee": "write",
          "line": 308,
          "type": "attribute"
        },
        {
          "caller": "generate_dependency_report",
          "callee": "write",
          "line": 310,
          "type": "attribute"
        },
        {
          "caller": "generate_dependency_report",
          "callee": "write",
          "line": 311,
          "type": "attribute"
        },
        {
          "caller": "generate_dependency_report",
          "callee": "len",
          "line": 311,
          "type": "direct"
        },
        {
          "caller": "generate_dependency_report",
          "callee": "write",
          "line": 312,
          "type": "attribute"
        },
        {
          "caller": "generate_dependency_report",
          "callee": "sum",
          "line": 312,
          "type": "direct"
        },
        {
          "caller": "generate_dependency_report",
          "callee": "len",
          "line": 312,
          "type": "direct"
        },
        {
          "caller": "generate_dependency_report",
          "callee": "values",
          "line": 312,
          "type": "attribute"
        },
        {
          "caller": "generate_dependency_report",
          "callee": "write",
          "line": 314,
          "type": "attribute"
        },
        {
          "caller": "generate_dependency_report",
          "callee": "sorted",
          "line": 315,
          "type": "direct"
        },
        {
          "caller": "generate_dependency_report",
          "callee": "items",
          "line": 315,
          "type": "attribute"
        },
        {
          "caller": "generate_dependency_report",
          "callee": "write",
          "line": 316,
          "type": "attribute"
        },
        {
          "caller": "generate_dependency_report",
          "callee": "write",
          "line": 317,
          "type": "attribute"
        },
        {
          "caller": "generate_dependency_report",
          "callee": "write",
          "line": 319,
          "type": "attribute"
        },
        {
          "caller": "generate_dependency_report",
          "callee": "write",
          "line": 320,
          "type": "attribute"
        },
        {
          "caller": "generate_entry_points_report",
          "callee": "open",
          "line": 325,
          "type": "direct"
        },
        {
          "caller": "generate_entry_points_report",
          "callee": "write",
          "line": 326,
          "type": "attribute"
        },
        {
          "caller": "generate_entry_points_report",
          "callee": "write",
          "line": 328,
          "type": "attribute"
        },
        {
          "caller": "generate_entry_points_report",
          "callee": "write",
          "line": 329,
          "type": "attribute"
        },
        {
          "caller": "generate_entry_points_report",
          "callee": "len",
          "line": 329,
          "type": "direct"
        },
        {
          "caller": "generate_entry_points_report",
          "callee": "defaultdict",
          "line": 332,
          "type": "direct"
        },
        {
          "caller": "generate_entry_points_report",
          "callee": "append",
          "line": 334,
          "type": "attribute"
        },
        {
          "caller": "generate_entry_points_report",
          "callee": "sorted",
          "line": 336,
          "type": "direct"
        },
        {
          "caller": "generate_entry_points_report",
          "callee": "items",
          "line": 336,
          "type": "attribute"
        },
        {
          "caller": "generate_entry_points_report",
          "callee": "write",
          "line": 337,
          "type": "attribute"
        },
        {
          "caller": "generate_entry_points_report",
          "callee": "upper",
          "line": 337,
          "type": "attribute"
        },
        {
          "caller": "generate_entry_points_report",
          "callee": "write",
          "line": 338,
          "type": "attribute"
        },
        {
          "caller": "generate_entry_points_report",
          "callee": "len",
          "line": 338,
          "type": "direct"
        },
        {
          "caller": "generate_entry_points_report",
          "callee": "write",
          "line": 341,
          "type": "attribute"
        },
        {
          "caller": "generate_entry_points_report",
          "callee": "write",
          "line": 343,
          "type": "attribute"
        },
        {
          "caller": "generate_entry_points_report",
          "callee": "write",
          "line": 345,
          "type": "attribute"
        },
        {
          "caller": "generate_entry_points_report",
          "callee": "join",
          "line": 345,
          "type": "attribute"
        },
        {
          "caller": "generate_entry_points_report",
          "callee": "write",
          "line": 347,
          "type": "attribute"
        },
        {
          "caller": "generate_entry_points_report",
          "callee": "write",
          "line": 348,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 353,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "find_python_files",
          "line": 357,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 358,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "len",
          "line": 358,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "enumerate",
          "line": 362,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 363,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "len",
          "line": 363,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "analyze_file",
          "line": 364,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "append",
          "line": 365,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 368,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "build_dependency_graph",
          "line": 369,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 372,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "find_entry_points",
          "line": 373,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "Path",
          "line": 376,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "mkdir",
          "line": 377,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 379,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "open",
          "line": 380,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "dump",
          "line": 381,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 388,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "generate_function_inventory_report",
          "line": 389,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "generate_dependency_report",
          "line": 390,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "generate_entry_points_report",
          "line": 391,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 393,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 394,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 395,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 396,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 397,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 398,
          "type": "direct"
        }
      ],
      "error": null
    },
    {
      "filepath": "scripts\\bambu_credentials.py",
      "functions": [
        {
          "name": "__init__",
          "full_name": "BambuCredentials.__init__",
          "class": "BambuCredentials",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 18,
          "line_end": 19,
          "access_level": "dunder",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_printer_credentials",
          "full_name": "BambuCredentials.get_printer_credentials",
          "class": "BambuCredentials",
          "signature": "(self, host: str)",
          "return_type": "tuple[str, str]",
          "decorators": [],
          "docstring": "Get printer credentials securely.\n\nArgs:\n    host: Printer IP address or hostname\n    \nReturns:\n    Tuple of (username, access_code)\n    \nRaises:\n    ValueError: If credentials cannot be obtained",
          "line_start": 21,
          "line_end": 64,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_validate_access_code",
          "full_name": "BambuCredentials._validate_access_code",
          "class": "BambuCredentials",
          "signature": "(self, access_code: str)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Validate access code format.",
          "line_start": 66,
          "line_end": 72,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_is_development_environment",
          "full_name": "BambuCredentials._is_development_environment",
          "class": "BambuCredentials",
          "signature": "(self)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Check if running in development environment.",
          "line_start": 74,
          "line_end": 80,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_bambu_credentials",
          "full_name": "get_bambu_credentials",
          "class": null,
          "signature": "(host: str)",
          "return_type": "tuple[str, str]",
          "decorators": [],
          "docstring": "Get Bambu Lab printer credentials securely.\n\nArgs:\n    host: Printer IP address or hostname\n    \nReturns:\n    Tuple of (username, access_code)\n    \nExample:\n    username, access_code = get_bambu_credentials(\"192.168.1.100\")",
          "line_start": 87,
          "line_end": 100,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "setup_example_env",
          "full_name": "setup_example_env",
          "class": null,
          "signature": "()",
          "return_type": "",
          "decorators": [],
          "docstring": "Print example environment setup instructions.",
          "line_start": 103,
          "line_end": 125,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "os",
          "alias": null,
          "line": 8
        },
        {
          "type": "import",
          "module": "sys",
          "alias": null,
          "line": 9
        },
        {
          "type": "import",
          "module": "getpass",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Optional",
          "alias": null,
          "line": 11
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Dict",
          "alias": null,
          "line": 11
        },
        {
          "type": "from_import",
          "module": "pathlib",
          "name": "Path",
          "alias": null,
          "line": 12
        }
      ],
      "function_calls": [
        {
          "caller": "BambuCredentials.get_printer_credentials",
          "callee": "getenv",
          "line": 35,
          "type": "attribute"
        },
        {
          "caller": "BambuCredentials.get_printer_credentials",
          "callee": "getenv",
          "line": 36,
          "type": "attribute"
        },
        {
          "caller": "BambuCredentials.get_printer_credentials",
          "callee": "_validate_access_code",
          "line": 39,
          "type": "attribute"
        },
        {
          "caller": "BambuCredentials.get_printer_credentials",
          "callee": "ValueError",
          "line": 42,
          "type": "direct"
        },
        {
          "caller": "BambuCredentials.get_printer_credentials",
          "callee": "_is_development_environment",
          "line": 50,
          "type": "attribute"
        },
        {
          "caller": "BambuCredentials.get_printer_credentials",
          "callee": "print",
          "line": 51,
          "type": "direct"
        },
        {
          "caller": "BambuCredentials.get_printer_credentials",
          "callee": "print",
          "line": 52,
          "type": "direct"
        },
        {
          "caller": "BambuCredentials.get_printer_credentials",
          "callee": "getpass",
          "line": 54,
          "type": "attribute"
        },
        {
          "caller": "BambuCredentials.get_printer_credentials",
          "callee": "_validate_access_code",
          "line": 55,
          "type": "attribute"
        },
        {
          "caller": "BambuCredentials.get_printer_credentials",
          "callee": "ValueError",
          "line": 59,
          "type": "direct"
        },
        {
          "caller": "BambuCredentials.get_printer_credentials",
          "callee": "ValueError",
          "line": 61,
          "type": "direct"
        },
        {
          "caller": "BambuCredentials._validate_access_code",
          "callee": "isinstance",
          "line": 69,
          "type": "direct"
        },
        {
          "caller": "BambuCredentials._validate_access_code",
          "callee": "isdigit",
          "line": 70,
          "type": "attribute"
        },
        {
          "caller": "BambuCredentials._validate_access_code",
          "callee": "len",
          "line": 71,
          "type": "direct"
        },
        {
          "caller": "BambuCredentials._is_development_environment",
          "callee": "lower",
          "line": 77,
          "type": "attribute"
        },
        {
          "caller": "BambuCredentials._is_development_environment",
          "callee": "getenv",
          "line": 77,
          "type": "attribute"
        },
        {
          "caller": "BambuCredentials._is_development_environment",
          "callee": "lower",
          "line": 78,
          "type": "attribute"
        },
        {
          "caller": "BambuCredentials._is_development_environment",
          "callee": "getenv",
          "line": 78,
          "type": "attribute"
        },
        {
          "caller": "BambuCredentials._is_development_environment",
          "callee": "isatty",
          "line": 79,
          "type": "attribute"
        },
        {
          "caller": "get_bambu_credentials",
          "callee": "get_printer_credentials",
          "line": 100,
          "type": "attribute"
        },
        {
          "caller": "setup_example_env",
          "callee": "print",
          "line": 105,
          "type": "direct"
        },
        {
          "caller": "setup_example_env",
          "callee": "print",
          "line": 106,
          "type": "direct"
        },
        {
          "caller": "setup_example_env",
          "callee": "print",
          "line": 107,
          "type": "direct"
        },
        {
          "caller": "setup_example_env",
          "callee": "print",
          "line": 108,
          "type": "direct"
        },
        {
          "caller": "setup_example_env",
          "callee": "print",
          "line": 109,
          "type": "direct"
        },
        {
          "caller": "setup_example_env",
          "callee": "print",
          "line": 110,
          "type": "direct"
        },
        {
          "caller": "setup_example_env",
          "callee": "print",
          "line": 111,
          "type": "direct"
        },
        {
          "caller": "setup_example_env",
          "callee": "print",
          "line": 112,
          "type": "direct"
        },
        {
          "caller": "setup_example_env",
          "callee": "print",
          "line": 113,
          "type": "direct"
        },
        {
          "caller": "setup_example_env",
          "callee": "print",
          "line": 114,
          "type": "direct"
        },
        {
          "caller": "setup_example_env",
          "callee": "print",
          "line": 115,
          "type": "direct"
        },
        {
          "caller": "setup_example_env",
          "callee": "print",
          "line": 116,
          "type": "direct"
        },
        {
          "caller": "setup_example_env",
          "callee": "print",
          "line": 117,
          "type": "direct"
        },
        {
          "caller": "setup_example_env",
          "callee": "print",
          "line": 118,
          "type": "direct"
        },
        {
          "caller": "setup_example_env",
          "callee": "print",
          "line": 119,
          "type": "direct"
        },
        {
          "caller": "setup_example_env",
          "callee": "print",
          "line": 120,
          "type": "direct"
        },
        {
          "caller": "setup_example_env",
          "callee": "print",
          "line": 121,
          "type": "direct"
        },
        {
          "caller": "setup_example_env",
          "callee": "print",
          "line": 122,
          "type": "direct"
        },
        {
          "caller": "setup_example_env",
          "callee": "print",
          "line": 123,
          "type": "direct"
        },
        {
          "caller": "setup_example_env",
          "callee": "print",
          "line": 124,
          "type": "direct"
        },
        {
          "caller": "setup_example_env",
          "callee": "print",
          "line": 125,
          "type": "direct"
        }
      ],
      "error": null
    },
    {
      "filepath": "scripts\\debug_bambu_ftp.py",
      "functions": [
        {
          "name": "test_direct_ftp",
          "full_name": "test_direct_ftp",
          "class": null,
          "signature": "()",
          "return_type": "",
          "decorators": [],
          "docstring": "Test direct FTP connection with detailed debugging.",
          "line_start": 12,
          "line_end": 107,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "ftplib",
          "alias": null,
          "line": 6
        },
        {
          "type": "import",
          "module": "ssl",
          "alias": null,
          "line": 7
        },
        {
          "type": "import",
          "module": "socket",
          "alias": null,
          "line": 8
        },
        {
          "type": "import",
          "module": "sys",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "pathlib",
          "name": "Path",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "bambu_credentials",
          "name": "get_bambu_credentials",
          "alias": null,
          "line": 14
        }
      ],
      "function_calls": [
        {
          "caller": "test_direct_ftp",
          "callee": "print",
          "line": 19,
          "type": "direct"
        },
        {
          "caller": "test_direct_ftp",
          "callee": "print",
          "line": 20,
          "type": "direct"
        },
        {
          "caller": "test_direct_ftp",
          "callee": "print",
          "line": 21,
          "type": "direct"
        },
        {
          "caller": "test_direct_ftp",
          "callee": "print",
          "line": 22,
          "type": "direct"
        },
        {
          "caller": "test_direct_ftp",
          "callee": "print",
          "line": 23,
          "type": "direct"
        },
        {
          "caller": "test_direct_ftp",
          "callee": "get_bambu_credentials",
          "line": 26,
          "type": "direct"
        },
        {
          "caller": "test_direct_ftp",
          "callee": "print",
          "line": 27,
          "type": "direct"
        },
        {
          "caller": "test_direct_ftp",
          "callee": "print",
          "line": 28,
          "type": "direct"
        },
        {
          "caller": "test_direct_ftp",
          "callee": "len",
          "line": 28,
          "type": "direct"
        },
        {
          "caller": "test_direct_ftp",
          "callee": "print",
          "line": 30,
          "type": "direct"
        },
        {
          "caller": "test_direct_ftp",
          "callee": "print",
          "line": 32,
          "type": "direct"
        },
        {
          "caller": "test_direct_ftp",
          "callee": "print",
          "line": 36,
          "type": "direct"
        },
        {
          "caller": "test_direct_ftp",
          "callee": "socket",
          "line": 37,
          "type": "attribute"
        },
        {
          "caller": "test_direct_ftp",
          "callee": "settimeout",
          "line": 38,
          "type": "attribute"
        },
        {
          "caller": "test_direct_ftp",
          "callee": "connect_ex",
          "line": 39,
          "type": "attribute"
        },
        {
          "caller": "test_direct_ftp",
          "callee": "close",
          "line": 40,
          "type": "attribute"
        },
        {
          "caller": "test_direct_ftp",
          "callee": "print",
          "line": 43,
          "type": "direct"
        },
        {
          "caller": "test_direct_ftp",
          "callee": "print",
          "line": 45,
          "type": "direct"
        },
        {
          "caller": "test_direct_ftp",
          "callee": "print",
          "line": 49,
          "type": "direct"
        },
        {
          "caller": "test_direct_ftp",
          "callee": "create_default_context",
          "line": 50,
          "type": "attribute"
        },
        {
          "caller": "test_direct_ftp",
          "callee": "print",
          "line": 53,
          "type": "direct"
        },
        {
          "caller": "test_direct_ftp",
          "callee": "print",
          "line": 56,
          "type": "direct"
        },
        {
          "caller": "test_direct_ftp",
          "callee": "FTP_TLS",
          "line": 57,
          "type": "attribute"
        },
        {
          "caller": "test_direct_ftp",
          "callee": "set_debuglevel",
          "line": 58,
          "type": "attribute"
        },
        {
          "caller": "test_direct_ftp",
          "callee": "set_pasv",
          "line": 59,
          "type": "attribute"
        },
        {
          "caller": "test_direct_ftp",
          "callee": "print",
          "line": 60,
          "type": "direct"
        },
        {
          "caller": "test_direct_ftp",
          "callee": "print",
          "line": 63,
          "type": "direct"
        },
        {
          "caller": "test_direct_ftp",
          "callee": "connect",
          "line": 64,
          "type": "attribute"
        },
        {
          "caller": "test_direct_ftp",
          "callee": "print",
          "line": 65,
          "type": "direct"
        },
        {
          "caller": "test_direct_ftp",
          "callee": "print",
          "line": 68,
          "type": "direct"
        },
        {
          "caller": "test_direct_ftp",
          "callee": "login",
          "line": 69,
          "type": "attribute"
        },
        {
          "caller": "test_direct_ftp",
          "callee": "print",
          "line": 70,
          "type": "direct"
        },
        {
          "caller": "test_direct_ftp",
          "callee": "print",
          "line": 73,
          "type": "direct"
        },
        {
          "caller": "test_direct_ftp",
          "callee": "prot_p",
          "line": 74,
          "type": "attribute"
        },
        {
          "caller": "test_direct_ftp",
          "callee": "print",
          "line": 75,
          "type": "direct"
        },
        {
          "caller": "test_direct_ftp",
          "callee": "print",
          "line": 78,
          "type": "direct"
        },
        {
          "caller": "test_direct_ftp",
          "callee": "cwd",
          "line": 79,
          "type": "attribute"
        },
        {
          "caller": "test_direct_ftp",
          "callee": "pwd",
          "line": 80,
          "type": "attribute"
        },
        {
          "caller": "test_direct_ftp",
          "callee": "print",
          "line": 81,
          "type": "direct"
        },
        {
          "caller": "test_direct_ftp",
          "callee": "retrlines",
          "line": 84,
          "type": "attribute"
        },
        {
          "caller": "test_direct_ftp",
          "callee": "print",
          "line": 85,
          "type": "direct"
        },
        {
          "caller": "test_direct_ftp",
          "callee": "len",
          "line": 85,
          "type": "direct"
        },
        {
          "caller": "test_direct_ftp",
          "callee": "print",
          "line": 87,
          "type": "direct"
        },
        {
          "caller": "test_direct_ftp",
          "callee": "print",
          "line": 90,
          "type": "direct"
        },
        {
          "caller": "test_direct_ftp",
          "callee": "quit",
          "line": 91,
          "type": "attribute"
        },
        {
          "caller": "test_direct_ftp",
          "callee": "print",
          "line": 92,
          "type": "direct"
        },
        {
          "caller": "test_direct_ftp",
          "callee": "print",
          "line": 97,
          "type": "direct"
        },
        {
          "caller": "test_direct_ftp",
          "callee": "print",
          "line": 100,
          "type": "direct"
        },
        {
          "caller": "test_direct_ftp",
          "callee": "print",
          "line": 103,
          "type": "direct"
        },
        {
          "caller": "test_direct_ftp",
          "callee": "print",
          "line": 106,
          "type": "direct"
        }
      ],
      "error": null
    },
    {
      "filepath": "scripts\\debug_bambu_ftp_v2.py",
      "functions": [
        {
          "name": "test_alternative_ftp",
          "full_name": "test_alternative_ftp",
          "class": null,
          "signature": "()",
          "return_type": "",
          "decorators": [],
          "docstring": "Test alternative FTP connection approach.",
          "line_start": 12,
          "line_end": 137,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "ftplib",
          "alias": null,
          "line": 6
        },
        {
          "type": "import",
          "module": "ssl",
          "alias": null,
          "line": 7
        },
        {
          "type": "import",
          "module": "socket",
          "alias": null,
          "line": 8
        },
        {
          "type": "import",
          "module": "sys",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "pathlib",
          "name": "Path",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "bambu_credentials",
          "name": "get_bambu_credentials",
          "alias": null,
          "line": 14
        }
      ],
      "function_calls": [
        {
          "caller": "test_alternative_ftp",
          "callee": "print",
          "line": 19,
          "type": "direct"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "print",
          "line": 20,
          "type": "direct"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "print",
          "line": 21,
          "type": "direct"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "print",
          "line": 22,
          "type": "direct"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "print",
          "line": 23,
          "type": "direct"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "get_bambu_credentials",
          "line": 26,
          "type": "direct"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "print",
          "line": 27,
          "type": "direct"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "print",
          "line": 29,
          "type": "direct"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "print",
          "line": 34,
          "type": "direct"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "create_default_context",
          "line": 36,
          "type": "attribute"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "FTP_TLS",
          "line": 40,
          "type": "attribute"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "set_pasv",
          "line": 41,
          "type": "attribute"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "print",
          "line": 42,
          "type": "direct"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "connect",
          "line": 43,
          "type": "attribute"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "print",
          "line": 44,
          "type": "direct"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "login",
          "line": 45,
          "type": "attribute"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "print",
          "line": 46,
          "type": "direct"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "prot_p",
          "line": 47,
          "type": "attribute"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "print",
          "line": 48,
          "type": "direct"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "cwd",
          "line": 51,
          "type": "attribute"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "retrlines",
          "line": 53,
          "type": "attribute"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "print",
          "line": 54,
          "type": "direct"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "len",
          "line": 54,
          "type": "direct"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "quit",
          "line": 56,
          "type": "attribute"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "print",
          "line": 60,
          "type": "direct"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "print",
          "line": 63,
          "type": "direct"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "create_default_context",
          "line": 65,
          "type": "attribute"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "FTP_TLS",
          "line": 69,
          "type": "attribute"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "set_pasv",
          "line": 70,
          "type": "attribute"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "print",
          "line": 71,
          "type": "direct"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "connect",
          "line": 72,
          "type": "attribute"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "print",
          "line": 73,
          "type": "direct"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "login",
          "line": 74,
          "type": "attribute"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "print",
          "line": 75,
          "type": "direct"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "prot_p",
          "line": 76,
          "type": "attribute"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "print",
          "line": 77,
          "type": "direct"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "cwd",
          "line": 80,
          "type": "attribute"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "retrlines",
          "line": 82,
          "type": "attribute"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "print",
          "line": 83,
          "type": "direct"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "len",
          "line": 83,
          "type": "direct"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "quit",
          "line": 85,
          "type": "attribute"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "print",
          "line": 89,
          "type": "direct"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "print",
          "line": 92,
          "type": "direct"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "socket",
          "line": 95,
          "type": "attribute"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "settimeout",
          "line": 96,
          "type": "attribute"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "print",
          "line": 98,
          "type": "direct"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "connect",
          "line": 99,
          "type": "attribute"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "print",
          "line": 101,
          "type": "direct"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "create_default_context",
          "line": 102,
          "type": "attribute"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "wrap_socket",
          "line": 106,
          "type": "attribute"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "print",
          "line": 108,
          "type": "direct"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "FTP",
          "line": 109,
          "type": "attribute"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "makefile",
          "line": 111,
          "type": "attribute"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "getresp",
          "line": 114,
          "type": "attribute"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "print",
          "line": 115,
          "type": "direct"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "print",
          "line": 117,
          "type": "direct"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "login",
          "line": 118,
          "type": "attribute"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "print",
          "line": 119,
          "type": "direct"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "cwd",
          "line": 122,
          "type": "attribute"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "retrlines",
          "line": 124,
          "type": "attribute"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "print",
          "line": 125,
          "type": "direct"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "len",
          "line": 125,
          "type": "direct"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "quit",
          "line": 127,
          "type": "attribute"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "print",
          "line": 131,
          "type": "direct"
        },
        {
          "caller": "test_alternative_ftp",
          "callee": "print",
          "line": 136,
          "type": "direct"
        }
      ],
      "error": null
    },
    {
      "filepath": "scripts\\download_bambu_files.py",
      "functions": [
        {
          "name": "__init__",
          "full_name": "BambuDownloadManager.__init__",
          "class": "BambuDownloadManager",
          "signature": "(self, download_base_dir: str)",
          "return_type": "",
          "decorators": [],
          "docstring": "Initialize download manager.\n\nArgs:\n    download_base_dir: Base directory for downloaded files",
          "line_start": 54,
          "line_end": 73,
          "access_level": "dunder",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "download_from_bambulab_printers",
          "full_name": "BambuDownloadManager.download_from_bambulab_printers",
          "class": "BambuDownloadManager",
          "signature": "(self, printer_configs: List[Dict[str, str]], file_filter: Optional[str], download_all: bool)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Download files from multiple Bambu Lab printers.\n\nArgs:\n    printer_configs: List of printer configuration dicts with 'ip', 'access_code', 'name'\n    file_filter: Optional filename filter (None = interactive selection)\n    download_all: Download all 3D files automatically\n\nReturns:\n    Summary dictionary with download results",
          "line_start": 75,
          "line_end": 130,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_process_single_printer",
          "full_name": "BambuDownloadManager._process_single_printer",
          "class": "BambuDownloadManager",
          "signature": "(self, config: Dict[str, str], file_filter: Optional[str], download_all: bool)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Process a single printer for file downloads.",
          "line_start": 132,
          "line_end": 228,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_interactive_file_selection",
          "full_name": "BambuDownloadManager._interactive_file_selection",
          "class": "BambuDownloadManager",
          "signature": "(self, files: List[BambuFTPFile])",
          "return_type": "List[BambuFTPFile]",
          "decorators": [],
          "docstring": "Interactive file selection for download.",
          "line_start": 230,
          "line_end": 273,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_sanitize_name",
          "full_name": "BambuDownloadManager._sanitize_name",
          "class": "BambuDownloadManager",
          "signature": "(self, name: str)",
          "return_type": "str",
          "decorators": [],
          "docstring": "Sanitize name for use as directory name.",
          "line_start": 275,
          "line_end": 283,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_generate_summary",
          "full_name": "BambuDownloadManager._generate_summary",
          "class": "BambuDownloadManager",
          "signature": "(self, results: Dict[str, Any], duration)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Generate download summary.",
          "line_start": 285,
          "line_end": 307,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_print_summary",
          "full_name": "BambuDownloadManager._print_summary",
          "class": "BambuDownloadManager",
          "signature": "(self, summary: Dict[str, Any])",
          "return_type": "",
          "decorators": [],
          "docstring": "Print download summary.",
          "line_start": 309,
          "line_end": 322,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "main",
          "full_name": "main",
          "class": null,
          "signature": "()",
          "return_type": "",
          "decorators": [],
          "docstring": "Main function.",
          "line_start": 325,
          "line_end": 421,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "asyncio",
          "alias": null,
          "line": 27
        },
        {
          "type": "import",
          "module": "argparse",
          "alias": null,
          "line": 28
        },
        {
          "type": "import",
          "module": "os",
          "alias": null,
          "line": 29
        },
        {
          "type": "import",
          "module": "sys",
          "alias": null,
          "line": 30
        },
        {
          "type": "from_import",
          "module": "pathlib",
          "name": "Path",
          "alias": null,
          "line": 31
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 32
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "List",
          "alias": null,
          "line": 33
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Dict",
          "alias": null,
          "line": 33
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Tuple",
          "alias": null,
          "line": 33
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Optional",
          "alias": null,
          "line": 33
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Any",
          "alias": null,
          "line": 33
        },
        {
          "type": "import",
          "module": "json",
          "alias": null,
          "line": 34
        },
        {
          "type": "from_import",
          "module": "services.bambu_ftp_service",
          "name": "BambuFTPService",
          "alias": null,
          "line": 42
        },
        {
          "type": "from_import",
          "module": "services.bambu_ftp_service",
          "name": "BambuFTPFile",
          "alias": null,
          "line": 42
        },
        {
          "type": "from_import",
          "module": "printers.bambu_lab",
          "name": "BambuLabPrinter",
          "alias": null,
          "line": 43
        },
        {
          "type": "import",
          "module": "re",
          "alias": null,
          "line": 277
        }
      ],
      "function_calls": [
        {
          "caller": "BambuDownloadManager.__init__",
          "callee": "Path",
          "line": 61,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager.__init__",
          "callee": "mkdir",
          "line": 62,
          "type": "attribute"
        },
        {
          "caller": "BambuDownloadManager.download_from_bambulab_printers",
          "callee": "now",
          "line": 90,
          "type": "attribute"
        },
        {
          "caller": "BambuDownloadManager.download_from_bambulab_printers",
          "callee": "print",
          "line": 92,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager.download_from_bambulab_printers",
          "callee": "print",
          "line": 93,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager.download_from_bambulab_printers",
          "callee": "print",
          "line": 94,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager.download_from_bambulab_printers",
          "callee": "absolute",
          "line": 94,
          "type": "attribute"
        },
        {
          "caller": "BambuDownloadManager.download_from_bambulab_printers",
          "callee": "print",
          "line": 95,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager.download_from_bambulab_printers",
          "callee": "len",
          "line": 95,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager.download_from_bambulab_printers",
          "callee": "print",
          "line": 96,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager.download_from_bambulab_printers",
          "callee": "strftime",
          "line": 96,
          "type": "attribute"
        },
        {
          "caller": "BambuDownloadManager.download_from_bambulab_printers",
          "callee": "print",
          "line": 97,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager.download_from_bambulab_printers",
          "callee": "enumerate",
          "line": 101,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager.download_from_bambulab_printers",
          "callee": "get",
          "line": 102,
          "type": "attribute"
        },
        {
          "caller": "BambuDownloadManager.download_from_bambulab_printers",
          "callee": "print",
          "line": 103,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager.download_from_bambulab_printers",
          "callee": "len",
          "line": 103,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager.download_from_bambulab_printers",
          "callee": "print",
          "line": 104,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager.download_from_bambulab_printers",
          "callee": "_process_single_printer",
          "line": 107,
          "type": "attribute"
        },
        {
          "caller": "BambuDownloadManager.download_from_bambulab_printers",
          "callee": "print",
          "line": 112,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager.download_from_bambulab_printers",
          "callee": "str",
          "line": 115,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager.download_from_bambulab_printers",
          "callee": "print",
          "line": 121,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager.download_from_bambulab_printers",
          "callee": "now",
          "line": 123,
          "type": "attribute"
        },
        {
          "caller": "BambuDownloadManager.download_from_bambulab_printers",
          "callee": "_generate_summary",
          "line": 127,
          "type": "attribute"
        },
        {
          "caller": "BambuDownloadManager.download_from_bambulab_printers",
          "callee": "_print_summary",
          "line": 128,
          "type": "attribute"
        },
        {
          "caller": "BambuDownloadManager._process_single_printer",
          "callee": "get",
          "line": 136,
          "type": "attribute"
        },
        {
          "caller": "BambuDownloadManager._process_single_printer",
          "callee": "BambuFTPService",
          "line": 139,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager._process_single_printer",
          "callee": "test_connection",
          "line": 142,
          "type": "attribute"
        },
        {
          "caller": "BambuDownloadManager._process_single_printer",
          "callee": "ConnectionError",
          "line": 144,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager._process_single_printer",
          "callee": "print",
          "line": 146,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager._process_single_printer",
          "callee": "print",
          "line": 149,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager._process_single_printer",
          "callee": "list_files",
          "line": 150,
          "type": "attribute"
        },
        {
          "caller": "BambuDownloadManager._process_single_printer",
          "callee": "len",
          "line": 155,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager._process_single_printer",
          "callee": "print",
          "line": 156,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager._process_single_printer",
          "callee": "len",
          "line": 156,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager._process_single_printer",
          "callee": "len",
          "line": 156,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager._process_single_printer",
          "callee": "print",
          "line": 171,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager._process_single_printer",
          "callee": "len",
          "line": 171,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager._process_single_printer",
          "callee": "lower",
          "line": 175,
          "type": "attribute"
        },
        {
          "caller": "BambuDownloadManager._process_single_printer",
          "callee": "lower",
          "line": 175,
          "type": "attribute"
        },
        {
          "caller": "BambuDownloadManager._process_single_printer",
          "callee": "print",
          "line": 176,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager._process_single_printer",
          "callee": "len",
          "line": 176,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager._process_single_printer",
          "callee": "_interactive_file_selection",
          "line": 180,
          "type": "attribute"
        },
        {
          "caller": "BambuDownloadManager._process_single_printer",
          "callee": "_sanitize_name",
          "line": 191,
          "type": "attribute"
        },
        {
          "caller": "BambuDownloadManager._process_single_printer",
          "callee": "strftime",
          "line": 192,
          "type": "attribute"
        },
        {
          "caller": "BambuDownloadManager._process_single_printer",
          "callee": "now",
          "line": 192,
          "type": "attribute"
        },
        {
          "caller": "BambuDownloadManager._process_single_printer",
          "callee": "mkdir",
          "line": 193,
          "type": "attribute"
        },
        {
          "caller": "BambuDownloadManager._process_single_printer",
          "callee": "print",
          "line": 200,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager._process_single_printer",
          "callee": "download_file",
          "line": 205,
          "type": "attribute"
        },
        {
          "caller": "BambuDownloadManager._process_single_printer",
          "callee": "str",
          "line": 205,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager._process_single_printer",
          "callee": "exists",
          "line": 207,
          "type": "attribute"
        },
        {
          "caller": "BambuDownloadManager._process_single_printer",
          "callee": "stat",
          "line": 208,
          "type": "attribute"
        },
        {
          "caller": "BambuDownloadManager._process_single_printer",
          "callee": "print",
          "line": 213,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager._process_single_printer",
          "callee": "print",
          "line": 215,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager._process_single_printer",
          "callee": "print",
          "line": 219,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager._process_single_printer",
          "callee": "str",
          "line": 226,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager._process_single_printer",
          "callee": "len",
          "line": 227,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager._interactive_file_selection",
          "callee": "print",
          "line": 235,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager._interactive_file_selection",
          "callee": "print",
          "line": 236,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager._interactive_file_selection",
          "callee": "enumerate",
          "line": 237,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager._interactive_file_selection",
          "callee": "print",
          "line": 239,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager._interactive_file_selection",
          "callee": "print",
          "line": 241,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager._interactive_file_selection",
          "callee": "print",
          "line": 242,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager._interactive_file_selection",
          "callee": "print",
          "line": 243,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager._interactive_file_selection",
          "callee": "print",
          "line": 244,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager._interactive_file_selection",
          "callee": "lower",
          "line": 247,
          "type": "attribute"
        },
        {
          "caller": "BambuDownloadManager._interactive_file_selection",
          "callee": "strip",
          "line": 247,
          "type": "attribute"
        },
        {
          "caller": "BambuDownloadManager._interactive_file_selection",
          "callee": "input",
          "line": 247,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager._interactive_file_selection",
          "callee": "split",
          "line": 257,
          "type": "attribute"
        },
        {
          "caller": "BambuDownloadManager._interactive_file_selection",
          "callee": "int",
          "line": 259,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager._interactive_file_selection",
          "callee": "strip",
          "line": 259,
          "type": "attribute"
        },
        {
          "caller": "BambuDownloadManager._interactive_file_selection",
          "callee": "len",
          "line": 260,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager._interactive_file_selection",
          "callee": "append",
          "line": 261,
          "type": "attribute"
        },
        {
          "caller": "BambuDownloadManager._interactive_file_selection",
          "callee": "print",
          "line": 263,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager._interactive_file_selection",
          "callee": "print",
          "line": 265,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager._interactive_file_selection",
          "callee": "print",
          "line": 268,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager._interactive_file_selection",
          "callee": "len",
          "line": 268,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager._interactive_file_selection",
          "callee": "print",
          "line": 272,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager._sanitize_name",
          "callee": "sub",
          "line": 279,
          "type": "attribute"
        },
        {
          "caller": "BambuDownloadManager._sanitize_name",
          "callee": "sub",
          "line": 281,
          "type": "attribute"
        },
        {
          "caller": "BambuDownloadManager._sanitize_name",
          "callee": "strip",
          "line": 283,
          "type": "attribute"
        },
        {
          "caller": "BambuDownloadManager._generate_summary",
          "callee": "total_seconds",
          "line": 288,
          "type": "attribute"
        },
        {
          "caller": "BambuDownloadManager._generate_summary",
          "callee": "split",
          "line": 289,
          "type": "attribute"
        },
        {
          "caller": "BambuDownloadManager._generate_summary",
          "callee": "str",
          "line": 289,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager._generate_summary",
          "callee": "str",
          "line": 306,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager._generate_summary",
          "callee": "absolute",
          "line": 306,
          "type": "attribute"
        },
        {
          "caller": "BambuDownloadManager._print_summary",
          "callee": "print",
          "line": 311,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager._print_summary",
          "callee": "print",
          "line": 312,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager._print_summary",
          "callee": "print",
          "line": 313,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager._print_summary",
          "callee": "print",
          "line": 314,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager._print_summary",
          "callee": "print",
          "line": 315,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager._print_summary",
          "callee": "print",
          "line": 316,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager._print_summary",
          "callee": "print",
          "line": 317,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager._print_summary",
          "callee": "print",
          "line": 319,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager._print_summary",
          "callee": "print",
          "line": 320,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager._print_summary",
          "callee": "print",
          "line": 321,
          "type": "direct"
        },
        {
          "caller": "BambuDownloadManager._print_summary",
          "callee": "print",
          "line": 322,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "ArgumentParser",
          "line": 327,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "add_argument",
          "line": 328,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "add_argument",
          "line": 329,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "add_argument",
          "line": 330,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "add_argument",
          "line": 331,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "add_argument",
          "line": 332,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "add_argument",
          "line": 333,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "add_argument",
          "line": 334,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "add_argument",
          "line": 335,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "parse_args",
          "line": 337,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "open",
          "line": 348,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "load",
          "line": 349,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "get",
          "line": 350,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 352,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "getenv",
          "line": 365,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "getenv",
          "line": 366,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 375,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 376,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 377,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 378,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 379,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 383,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "BambuDownloadManager",
          "line": 388,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "download_from_bambulab_printers",
          "line": 399,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 407,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 410,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 413,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 417,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 420,
          "type": "direct"
        }
      ],
      "error": null
    },
    {
      "filepath": "scripts\\download_target_file.py",
      "functions": [
        {
          "name": "download_target_file",
          "full_name": "download_target_file",
          "class": null,
          "signature": "()",
          "return_type": "",
          "decorators": [],
          "docstring": "Download the specific target file.",
          "line_start": 21,
          "line_end": 144,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "sys",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "pathlib",
          "name": "Path",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "bambulabs_api",
          "name": "Printer",
          "alias": "BambuClient",
          "line": 14
        },
        {
          "type": "from_import",
          "module": "bambu_credentials",
          "name": "get_bambu_credentials",
          "alias": null,
          "line": 23
        }
      ],
      "function_calls": [
        {
          "caller": "download_target_file",
          "callee": "print",
          "line": 29,
          "type": "direct"
        },
        {
          "caller": "download_target_file",
          "callee": "print",
          "line": 30,
          "type": "direct"
        },
        {
          "caller": "download_target_file",
          "callee": "print",
          "line": 31,
          "type": "direct"
        },
        {
          "caller": "download_target_file",
          "callee": "print",
          "line": 32,
          "type": "direct"
        },
        {
          "caller": "download_target_file",
          "callee": "get_bambu_credentials",
          "line": 35,
          "type": "direct"
        },
        {
          "caller": "download_target_file",
          "callee": "print",
          "line": 36,
          "type": "direct"
        },
        {
          "caller": "download_target_file",
          "callee": "print",
          "line": 38,
          "type": "direct"
        },
        {
          "caller": "download_target_file",
          "callee": "print",
          "line": 43,
          "type": "direct"
        },
        {
          "caller": "download_target_file",
          "callee": "BambuClient",
          "line": 44,
          "type": "direct"
        },
        {
          "caller": "download_target_file",
          "callee": "connect",
          "line": 49,
          "type": "attribute"
        },
        {
          "caller": "download_target_file",
          "callee": "print",
          "line": 50,
          "type": "direct"
        },
        {
          "caller": "download_target_file",
          "callee": "print",
          "line": 53,
          "type": "direct"
        },
        {
          "caller": "download_target_file",
          "callee": "list_cache_dir",
          "line": 54,
          "type": "attribute"
        },
        {
          "caller": "download_target_file",
          "callee": "print",
          "line": 55,
          "type": "direct"
        },
        {
          "caller": "download_target_file",
          "callee": "len",
          "line": 55,
          "type": "direct"
        },
        {
          "caller": "download_target_file",
          "callee": "isinstance",
          "line": 62,
          "type": "direct"
        },
        {
          "caller": "download_target_file",
          "callee": "split",
          "line": 64,
          "type": "attribute"
        },
        {
          "caller": "download_target_file",
          "callee": "strip",
          "line": 64,
          "type": "attribute"
        },
        {
          "caller": "download_target_file",
          "callee": "len",
          "line": 65,
          "type": "direct"
        },
        {
          "caller": "download_target_file",
          "callee": "join",
          "line": 66,
          "type": "attribute"
        },
        {
          "caller": "download_target_file",
          "callee": "lower",
          "line": 71,
          "type": "attribute"
        },
        {
          "caller": "download_target_file",
          "callee": "lower",
          "line": 71,
          "type": "attribute"
        },
        {
          "caller": "download_target_file",
          "callee": "print",
          "line": 77,
          "type": "direct"
        },
        {
          "caller": "download_target_file",
          "callee": "print",
          "line": 78,
          "type": "direct"
        },
        {
          "caller": "download_target_file",
          "callee": "print",
          "line": 81,
          "type": "direct"
        },
        {
          "caller": "download_target_file",
          "callee": "download_file",
          "line": 83,
          "type": "attribute"
        },
        {
          "caller": "download_target_file",
          "callee": "getvalue",
          "line": 85,
          "type": "attribute"
        },
        {
          "caller": "download_target_file",
          "callee": "len",
          "line": 86,
          "type": "direct"
        },
        {
          "caller": "download_target_file",
          "callee": "Path",
          "line": 88,
          "type": "direct"
        },
        {
          "caller": "download_target_file",
          "callee": "mkdir",
          "line": 89,
          "type": "attribute"
        },
        {
          "caller": "download_target_file",
          "callee": "open",
          "line": 92,
          "type": "direct"
        },
        {
          "caller": "download_target_file",
          "callee": "write",
          "line": 93,
          "type": "attribute"
        },
        {
          "caller": "download_target_file",
          "callee": "print",
          "line": 95,
          "type": "direct"
        },
        {
          "caller": "download_target_file",
          "callee": "print",
          "line": 96,
          "type": "direct"
        },
        {
          "caller": "download_target_file",
          "callee": "len",
          "line": 96,
          "type": "direct"
        },
        {
          "caller": "download_target_file",
          "callee": "print",
          "line": 97,
          "type": "direct"
        },
        {
          "caller": "download_target_file",
          "callee": "absolute",
          "line": 97,
          "type": "attribute"
        },
        {
          "caller": "download_target_file",
          "callee": "disconnect",
          "line": 99,
          "type": "attribute"
        },
        {
          "caller": "download_target_file",
          "callee": "print",
          "line": 102,
          "type": "direct"
        },
        {
          "caller": "download_target_file",
          "callee": "print",
          "line": 104,
          "type": "direct"
        },
        {
          "caller": "download_target_file",
          "callee": "print",
          "line": 106,
          "type": "direct"
        },
        {
          "caller": "download_target_file",
          "callee": "print",
          "line": 109,
          "type": "direct"
        },
        {
          "caller": "download_target_file",
          "callee": "print",
          "line": 110,
          "type": "direct"
        },
        {
          "caller": "download_target_file",
          "callee": "isinstance",
          "line": 114,
          "type": "direct"
        },
        {
          "caller": "download_target_file",
          "callee": "split",
          "line": 115,
          "type": "attribute"
        },
        {
          "caller": "download_target_file",
          "callee": "strip",
          "line": 115,
          "type": "attribute"
        },
        {
          "caller": "download_target_file",
          "callee": "len",
          "line": 116,
          "type": "direct"
        },
        {
          "caller": "download_target_file",
          "callee": "join",
          "line": 117,
          "type": "attribute"
        },
        {
          "caller": "download_target_file",
          "callee": "any",
          "line": 121,
          "type": "direct"
        },
        {
          "caller": "download_target_file",
          "callee": "lower",
          "line": 121,
          "type": "attribute"
        },
        {
          "caller": "download_target_file",
          "callee": "append",
          "line": 122,
          "type": "attribute"
        },
        {
          "caller": "download_target_file",
          "callee": "enumerate",
          "line": 125,
          "type": "direct"
        },
        {
          "caller": "download_target_file",
          "callee": "print",
          "line": 126,
          "type": "direct"
        },
        {
          "caller": "download_target_file",
          "callee": "print",
          "line": 127,
          "type": "direct"
        },
        {
          "caller": "download_target_file",
          "callee": "print",
          "line": 129,
          "type": "direct"
        },
        {
          "caller": "download_target_file",
          "callee": "print",
          "line": 130,
          "type": "direct"
        },
        {
          "caller": "download_target_file",
          "callee": "enumerate",
          "line": 131,
          "type": "direct"
        },
        {
          "caller": "download_target_file",
          "callee": "split",
          "line": 132,
          "type": "attribute"
        },
        {
          "caller": "download_target_file",
          "callee": "strip",
          "line": 132,
          "type": "attribute"
        },
        {
          "caller": "download_target_file",
          "callee": "len",
          "line": 133,
          "type": "direct"
        },
        {
          "caller": "download_target_file",
          "callee": "join",
          "line": 134,
          "type": "attribute"
        },
        {
          "caller": "download_target_file",
          "callee": "print",
          "line": 137,
          "type": "direct"
        },
        {
          "caller": "download_target_file",
          "callee": "disconnect",
          "line": 139,
          "type": "attribute"
        },
        {
          "caller": "download_target_file",
          "callee": "print",
          "line": 143,
          "type": "direct"
        }
      ],
      "error": null
    },
    {
      "filepath": "scripts\\error_analysis_agent.py",
      "functions": [
        {
          "name": "__init__",
          "full_name": "ErrorAnalysisAgent.__init__",
          "class": "ErrorAnalysisAgent",
          "signature": "(self, log_file_path)",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 31,
          "line_end": 48,
          "access_level": "dunder",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "load_log",
          "full_name": "ErrorAnalysisAgent.load_log",
          "class": "ErrorAnalysisAgent",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Load log file into memory.",
          "line_start": 50,
          "line_end": 58,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "parse_errors",
          "full_name": "ErrorAnalysisAgent.parse_errors",
          "class": "ErrorAnalysisAgent",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Parse and categorize all errors from the log.",
          "line_start": 60,
          "line_end": 106,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "analyze_root_cause",
          "full_name": "ErrorAnalysisAgent.analyze_root_cause",
          "class": "ErrorAnalysisAgent",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Perform root cause analysis based on detected errors.",
          "line_start": 108,
          "line_end": 180,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "generate_report",
          "full_name": "ErrorAnalysisAgent.generate_report",
          "class": "ErrorAnalysisAgent",
          "signature": "(self, output_format)",
          "return_type": "",
          "decorators": [],
          "docstring": "Generate comprehensive error analysis report.",
          "line_start": 182,
          "line_end": 200,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_print_console_report",
          "full_name": "ErrorAnalysisAgent._print_console_report",
          "class": "ErrorAnalysisAgent",
          "signature": "(self, analysis, total_import_errors, total_errors, total_warnings, total_tracebacks, total_info)",
          "return_type": "",
          "decorators": [],
          "docstring": "Print report to console.",
          "line_start": 202,
          "line_end": 286,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_generate_json_report",
          "full_name": "ErrorAnalysisAgent._generate_json_report",
          "class": "ErrorAnalysisAgent",
          "signature": "(self, analysis, total_import_errors, total_errors, total_warnings, total_tracebacks, total_info)",
          "return_type": "",
          "decorators": [],
          "docstring": "Generate JSON format report.",
          "line_start": 288,
          "line_end": 308,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_generate_markdown_report",
          "full_name": "ErrorAnalysisAgent._generate_markdown_report",
          "class": "ErrorAnalysisAgent",
          "signature": "(self, analysis, total_import_errors, total_errors, total_warnings, total_tracebacks, total_info)",
          "return_type": "",
          "decorators": [],
          "docstring": "Generate Markdown format report.",
          "line_start": 310,
          "line_end": 350,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "apply_fixes",
          "full_name": "ErrorAnalysisAgent.apply_fixes",
          "class": "ErrorAnalysisAgent",
          "signature": "(self, analysis, dry_run)",
          "return_type": "",
          "decorators": [],
          "docstring": "Apply proposed fixes to files (with dry-run mode).",
          "line_start": 352,
          "line_end": 414,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "run",
          "full_name": "ErrorAnalysisAgent.run",
          "class": "ErrorAnalysisAgent",
          "signature": "(self, output_format, plan_mode, apply_fixes)",
          "return_type": "",
          "decorators": [],
          "docstring": "Execute the complete error analysis workflow.\n\nArgs:\n    output_format: Report format (console, json, markdown)\n    plan_mode: If True, show proposed fixes without applying (default)\n    apply_fixes: If True, apply fixes after user confirmation",
          "line_start": 416,
          "line_end": 457,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "main",
          "full_name": "main",
          "class": null,
          "signature": "()",
          "return_type": "",
          "decorators": [],
          "docstring": "Main entry point for the error analysis agent.",
          "line_start": 460,
          "line_end": 488,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "re",
          "alias": null,
          "line": 7
        },
        {
          "type": "import",
          "module": "sys",
          "alias": null,
          "line": 8
        },
        {
          "type": "import",
          "module": "argparse",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "collections",
          "name": "defaultdict",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "pathlib",
          "name": "Path",
          "alias": null,
          "line": 11
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 12
        },
        {
          "type": "import",
          "module": "json",
          "alias": null,
          "line": 291
        }
      ],
      "function_calls": [
        {
          "caller": "ErrorAnalysisAgent.__init__",
          "callee": "Path",
          "line": 32,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent.__init__",
          "callee": "defaultdict",
          "line": 35,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent.__init__",
          "callee": "defaultdict",
          "line": 36,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent.__init__",
          "callee": "defaultdict",
          "line": 37,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent.load_log",
          "callee": "exists",
          "line": 52,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent.load_log",
          "callee": "FileNotFoundError",
          "line": 53,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent.load_log",
          "callee": "open",
          "line": 55,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent.load_log",
          "callee": "readlines",
          "line": 56,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent.load_log",
          "callee": "print",
          "line": 58,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent.load_log",
          "callee": "len",
          "line": 58,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent.parse_errors",
          "callee": "enumerate",
          "line": 65,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent.parse_errors",
          "callee": "strip",
          "line": 69,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent.parse_errors",
          "callee": "append",
          "line": 71,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent.parse_errors",
          "callee": "strip",
          "line": 71,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent.parse_errors",
          "callee": "strip",
          "line": 73,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent.parse_errors",
          "callee": "startswith",
          "line": 73,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent.parse_errors",
          "callee": "append",
          "line": 74,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent.parse_errors",
          "callee": "search",
          "line": 79,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent.parse_errors",
          "callee": "group",
          "line": 81,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent.parse_errors",
          "callee": "append",
          "line": 82,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent.parse_errors",
          "callee": "search",
          "line": 85,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent.parse_errors",
          "callee": "group",
          "line": 87,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent.parse_errors",
          "callee": "append",
          "line": 88,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent.parse_errors",
          "callee": "search",
          "line": 91,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent.parse_errors",
          "callee": "group",
          "line": 93,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent.parse_errors",
          "callee": "append",
          "line": 94,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent.parse_errors",
          "callee": "search",
          "line": 97,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent.parse_errors",
          "callee": "group",
          "line": 99,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent.parse_errors",
          "callee": "append",
          "line": 100,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent.parse_errors",
          "callee": "append",
          "line": 104,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent.parse_errors",
          "callee": "strip",
          "line": 104,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent.parse_errors",
          "callee": "print",
          "line": 106,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent.analyze_root_cause",
          "callee": "sum",
          "line": 110,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent.analyze_root_cause",
          "callee": "len",
          "line": 110,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent.analyze_root_cause",
          "callee": "values",
          "line": 110,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent.analyze_root_cause",
          "callee": "sum",
          "line": 111,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent.analyze_root_cause",
          "callee": "len",
          "line": 111,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent.analyze_root_cause",
          "callee": "values",
          "line": 111,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent.analyze_root_cause",
          "callee": "sum",
          "line": 112,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent.analyze_root_cause",
          "callee": "len",
          "line": 112,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent.analyze_root_cause",
          "callee": "values",
          "line": 112,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent.analyze_root_cause",
          "callee": "append",
          "line": 125,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent.analyze_root_cause",
          "callee": "extend",
          "line": 131,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent.analyze_root_cause",
          "callee": "append",
          "line": 138,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent.analyze_root_cause",
          "callee": "append",
          "line": 145,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent.analyze_root_cause",
          "callee": "items",
          "line": 157,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent.analyze_root_cause",
          "callee": "append",
          "line": 158,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent.analyze_root_cause",
          "callee": "len",
          "line": 161,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent.analyze_root_cause",
          "callee": "append",
          "line": 164,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent.analyze_root_cause",
          "callee": "items",
          "line": 167,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent.analyze_root_cause",
          "callee": "append",
          "line": 168,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent.analyze_root_cause",
          "callee": "len",
          "line": 171,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent.analyze_root_cause",
          "callee": "append",
          "line": 174,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent.analyze_root_cause",
          "callee": "append",
          "line": 178,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent.generate_report",
          "callee": "analyze_root_cause",
          "line": 184,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent.generate_report",
          "callee": "sum",
          "line": 186,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent.generate_report",
          "callee": "len",
          "line": 186,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent.generate_report",
          "callee": "values",
          "line": 186,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent.generate_report",
          "callee": "sum",
          "line": 187,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent.generate_report",
          "callee": "len",
          "line": 187,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent.generate_report",
          "callee": "values",
          "line": 187,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent.generate_report",
          "callee": "sum",
          "line": 188,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent.generate_report",
          "callee": "len",
          "line": 188,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent.generate_report",
          "callee": "values",
          "line": 188,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent.generate_report",
          "callee": "len",
          "line": 189,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent.generate_report",
          "callee": "len",
          "line": 190,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent.generate_report",
          "callee": "_print_console_report",
          "line": 193,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent.generate_report",
          "callee": "_generate_json_report",
          "line": 196,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent.generate_report",
          "callee": "_generate_markdown_report",
          "line": 199,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "print",
          "line": 205,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "print",
          "line": 206,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "center",
          "line": 206,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "print",
          "line": 207,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "print",
          "line": 210,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "strftime",
          "line": 210,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "now",
          "line": 210,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "print",
          "line": 211,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "print",
          "line": 219,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "get",
          "line": 219,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "print",
          "line": 223,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "print",
          "line": 224,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "items",
          "line": 225,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "print",
          "line": 226,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "print",
          "line": 227,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "len",
          "line": 227,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "join",
          "line": 227,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "map",
          "line": 227,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "print",
          "line": 228,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "print",
          "line": 232,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "print",
          "line": 233,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "items",
          "line": 234,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "print",
          "line": 235,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "print",
          "line": 236,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "len",
          "line": 236,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "join",
          "line": 236,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "map",
          "line": 236,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "print",
          "line": 237,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "print",
          "line": 241,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "print",
          "line": 242,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "items",
          "line": 243,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "print",
          "line": 244,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "print",
          "line": 245,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "len",
          "line": 245,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "join",
          "line": 245,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "map",
          "line": 245,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "print",
          "line": 246,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "print",
          "line": 250,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "print",
          "line": 251,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "print",
          "line": 252,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "len",
          "line": 252,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "print",
          "line": 253,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "print",
          "line": 254,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "print",
          "line": 255,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "print",
          "line": 258,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "print",
          "line": 259,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "print",
          "line": 260,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "len",
          "line": 260,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "print",
          "line": 261,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "print",
          "line": 262,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "print",
          "line": 263,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "print",
          "line": 264,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "print",
          "line": 265,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "print",
          "line": 266,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "print",
          "line": 269,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "print",
          "line": 270,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "print",
          "line": 273,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "upper",
          "line": 273,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "print",
          "line": 274,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "print",
          "line": 275,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "print",
          "line": 277,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "print",
          "line": 278,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "print",
          "line": 279,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "print",
          "line": 282,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "print",
          "line": 283,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "enumerate",
          "line": 284,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "print",
          "line": 285,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent._print_console_report",
          "callee": "print",
          "line": 286,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent._generate_json_report",
          "callee": "dumps",
          "line": 293,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent._generate_json_report",
          "callee": "isoformat",
          "line": 294,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent._generate_json_report",
          "callee": "now",
          "line": 294,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent._generate_json_report",
          "callee": "str",
          "line": 295,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent._generate_json_report",
          "callee": "len",
          "line": 299,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent._generate_markdown_report",
          "callee": "strftime",
          "line": 321,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent._generate_markdown_report",
          "callee": "now",
          "line": 321,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent._generate_markdown_report",
          "callee": "get",
          "line": 323,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent._generate_markdown_report",
          "callee": "len",
          "line": 327,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent._generate_markdown_report",
          "callee": "title",
          "line": 339,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent._generate_markdown_report",
          "callee": "replace",
          "line": 339,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent._generate_markdown_report",
          "callee": "enumerate",
          "line": 347,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent.apply_fixes",
          "callee": "print",
          "line": 355,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent.apply_fixes",
          "callee": "print",
          "line": 358,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent.apply_fixes",
          "callee": "print",
          "line": 359,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent.apply_fixes",
          "callee": "enumerate",
          "line": 361,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent.apply_fixes",
          "callee": "print",
          "line": 362,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent.apply_fixes",
          "callee": "print",
          "line": 363,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent.apply_fixes",
          "callee": "print",
          "line": 364,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent.apply_fixes",
          "callee": "print",
          "line": 367,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent.apply_fixes",
          "callee": "print",
          "line": 368,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent.apply_fixes",
          "callee": "repr",
          "line": 368,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent.apply_fixes",
          "callee": "print",
          "line": 369,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent.apply_fixes",
          "callee": "print",
          "line": 370,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent.apply_fixes",
          "callee": "repr",
          "line": 370,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent.apply_fixes",
          "callee": "print",
          "line": 373,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent.apply_fixes",
          "callee": "print",
          "line": 374,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent.apply_fixes",
          "callee": "print",
          "line": 375,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent.apply_fixes",
          "callee": "print",
          "line": 379,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent.apply_fixes",
          "callee": "lower",
          "line": 380,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent.apply_fixes",
          "callee": "strip",
          "line": 380,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent.apply_fixes",
          "callee": "input",
          "line": 380,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent.apply_fixes",
          "callee": "print",
          "line": 383,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent.apply_fixes",
          "callee": "print",
          "line": 387,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent.apply_fixes",
          "callee": "Path",
          "line": 392,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent.apply_fixes",
          "callee": "exists",
          "line": 393,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent.apply_fixes",
          "callee": "print",
          "line": 394,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent.apply_fixes",
          "callee": "read_text",
          "line": 398,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent.apply_fixes",
          "callee": "replace",
          "line": 403,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent.apply_fixes",
          "callee": "write_text",
          "line": 404,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent.apply_fixes",
          "callee": "print",
          "line": 405,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent.apply_fixes",
          "callee": "print",
          "line": 408,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent.apply_fixes",
          "callee": "print",
          "line": 411,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent.apply_fixes",
          "callee": "print",
          "line": 413,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent.apply_fixes",
          "callee": "len",
          "line": 413,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent.run",
          "callee": "print",
          "line": 426,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent.run",
          "callee": "print",
          "line": 429,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent.run",
          "callee": "print",
          "line": 431,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent.run",
          "callee": "load_log",
          "line": 434,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent.run",
          "callee": "parse_errors",
          "line": 437,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent.run",
          "callee": "analyze_root_cause",
          "line": 440,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent.run",
          "callee": "generate_report",
          "line": 443,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent.run",
          "callee": "apply_fixes",
          "line": 450,
          "type": "attribute"
        },
        {
          "caller": "ErrorAnalysisAgent.run",
          "callee": "print",
          "line": 452,
          "type": "direct"
        },
        {
          "caller": "ErrorAnalysisAgent.run",
          "callee": "print",
          "line": 456,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "ArgumentParser",
          "line": 462,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "add_argument",
          "line": 473,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "add_argument",
          "line": 474,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "add_argument",
          "line": 476,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "parse_args",
          "line": 478,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "ErrorAnalysisAgent",
          "line": 481,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "run",
          "line": 482,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "Path",
          "line": 486,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "write_text",
          "line": 487,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 488,
          "type": "direct"
        }
      ],
      "error": null
    },
    {
      "filepath": "scripts\\quick_bambu_check.py",
      "functions": [
        {
          "name": "main",
          "full_name": "main",
          "class": null,
          "signature": "()",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 9,
          "line_end": 51,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "from_import",
          "module": "bambulabs_api",
          "name": "Printer",
          "alias": null,
          "line": 15
        },
        {
          "type": "import",
          "module": "aiohttp",
          "alias": null,
          "line": 38
        }
      ],
      "function_calls": [
        {
          "caller": "main",
          "callee": "print",
          "line": 10,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 11,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 16,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 17,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 19,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 20,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "Printer",
          "line": 26,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 31,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 33,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "str",
          "line": 33,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 34,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 39,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 41,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 42,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 44,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 45,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 46,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 47,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 48,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 49,
          "type": "direct"
        }
      ],
      "error": null
    },
    {
      "filepath": "scripts\\simple_bambu_test.py",
      "functions": [
        {
          "name": "test_download_specific_file",
          "full_name": "test_download_specific_file",
          "class": null,
          "signature": "()",
          "return_type": "",
          "decorators": [],
          "docstring": "Test downloading the specific file requested.",
          "line_start": 18,
          "line_end": 106,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "main",
          "full_name": "main",
          "class": null,
          "signature": "()",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 109,
          "line_end": 111,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "asyncio",
          "alias": null,
          "line": 6
        },
        {
          "type": "import",
          "module": "sys",
          "alias": null,
          "line": 7
        },
        {
          "type": "import",
          "module": "tempfile",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "pathlib",
          "name": "Path",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "services.bambu_ftp_service",
          "name": "BambuFTPService",
          "alias": null,
          "line": 15
        },
        {
          "type": "from_import",
          "module": "bambu_credentials",
          "name": "get_bambu_credentials",
          "alias": null,
          "line": 20
        }
      ],
      "function_calls": [
        {
          "caller": "test_download_specific_file",
          "callee": "print",
          "line": 25,
          "type": "direct"
        },
        {
          "caller": "test_download_specific_file",
          "callee": "print",
          "line": 26,
          "type": "direct"
        },
        {
          "caller": "test_download_specific_file",
          "callee": "print",
          "line": 27,
          "type": "direct"
        },
        {
          "caller": "test_download_specific_file",
          "callee": "print",
          "line": 28,
          "type": "direct"
        },
        {
          "caller": "test_download_specific_file",
          "callee": "print",
          "line": 29,
          "type": "direct"
        },
        {
          "caller": "test_download_specific_file",
          "callee": "get_bambu_credentials",
          "line": 32,
          "type": "direct"
        },
        {
          "caller": "test_download_specific_file",
          "callee": "print",
          "line": 33,
          "type": "direct"
        },
        {
          "caller": "test_download_specific_file",
          "callee": "print",
          "line": 35,
          "type": "direct"
        },
        {
          "caller": "test_download_specific_file",
          "callee": "print",
          "line": 40,
          "type": "direct"
        },
        {
          "caller": "test_download_specific_file",
          "callee": "BambuFTPService",
          "line": 41,
          "type": "direct"
        },
        {
          "caller": "test_download_specific_file",
          "callee": "print",
          "line": 44,
          "type": "direct"
        },
        {
          "caller": "test_download_specific_file",
          "callee": "test_connection",
          "line": 45,
          "type": "attribute"
        },
        {
          "caller": "test_download_specific_file",
          "callee": "print",
          "line": 47,
          "type": "direct"
        },
        {
          "caller": "test_download_specific_file",
          "callee": "print",
          "line": 49,
          "type": "direct"
        },
        {
          "caller": "test_download_specific_file",
          "callee": "print",
          "line": 52,
          "type": "direct"
        },
        {
          "caller": "test_download_specific_file",
          "callee": "list_files",
          "line": 53,
          "type": "attribute"
        },
        {
          "caller": "test_download_specific_file",
          "callee": "print",
          "line": 54,
          "type": "direct"
        },
        {
          "caller": "test_download_specific_file",
          "callee": "len",
          "line": 54,
          "type": "direct"
        },
        {
          "caller": "test_download_specific_file",
          "callee": "print",
          "line": 57,
          "type": "direct"
        },
        {
          "caller": "test_download_specific_file",
          "callee": "print",
          "line": 61,
          "type": "direct"
        },
        {
          "caller": "test_download_specific_file",
          "callee": "enumerate",
          "line": 62,
          "type": "direct"
        },
        {
          "caller": "test_download_specific_file",
          "callee": "print",
          "line": 63,
          "type": "direct"
        },
        {
          "caller": "test_download_specific_file",
          "callee": "lower",
          "line": 68,
          "type": "attribute"
        },
        {
          "caller": "test_download_specific_file",
          "callee": "lower",
          "line": 68,
          "type": "attribute"
        },
        {
          "caller": "test_download_specific_file",
          "callee": "print",
          "line": 73,
          "type": "direct"
        },
        {
          "caller": "test_download_specific_file",
          "callee": "print",
          "line": 74,
          "type": "direct"
        },
        {
          "caller": "test_download_specific_file",
          "callee": "print",
          "line": 77,
          "type": "direct"
        },
        {
          "caller": "test_download_specific_file",
          "callee": "print",
          "line": 78,
          "type": "direct"
        },
        {
          "caller": "test_download_specific_file",
          "callee": "NamedTemporaryFile",
          "line": 81,
          "type": "attribute"
        },
        {
          "caller": "test_download_specific_file",
          "callee": "print",
          "line": 84,
          "type": "direct"
        },
        {
          "caller": "test_download_specific_file",
          "callee": "download_file",
          "line": 85,
          "type": "attribute"
        },
        {
          "caller": "test_download_specific_file",
          "callee": "exists",
          "line": 87,
          "type": "attribute"
        },
        {
          "caller": "test_download_specific_file",
          "callee": "Path",
          "line": 87,
          "type": "direct"
        },
        {
          "caller": "test_download_specific_file",
          "callee": "stat",
          "line": 88,
          "type": "attribute"
        },
        {
          "caller": "test_download_specific_file",
          "callee": "Path",
          "line": 88,
          "type": "direct"
        },
        {
          "caller": "test_download_specific_file",
          "callee": "print",
          "line": 89,
          "type": "direct"
        },
        {
          "caller": "test_download_specific_file",
          "callee": "Path",
          "line": 92,
          "type": "direct"
        },
        {
          "caller": "test_download_specific_file",
          "callee": "mkdir",
          "line": 93,
          "type": "attribute"
        },
        {
          "caller": "test_download_specific_file",
          "callee": "rename",
          "line": 96,
          "type": "attribute"
        },
        {
          "caller": "test_download_specific_file",
          "callee": "Path",
          "line": 96,
          "type": "direct"
        },
        {
          "caller": "test_download_specific_file",
          "callee": "print",
          "line": 97,
          "type": "direct"
        },
        {
          "caller": "test_download_specific_file",
          "callee": "absolute",
          "line": 97,
          "type": "attribute"
        },
        {
          "caller": "test_download_specific_file",
          "callee": "print",
          "line": 101,
          "type": "direct"
        },
        {
          "caller": "test_download_specific_file",
          "callee": "print",
          "line": 105,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "test_download_specific_file",
          "line": 110,
          "type": "direct"
        }
      ],
      "error": null
    },
    {
      "filepath": "scripts\\test_bambu_credentials.py",
      "functions": [
        {
          "name": "validate_credentials",
          "full_name": "validate_credentials",
          "class": null,
          "signature": "(ip: str, access_code: str, serial: str)",
          "return_type": "tuple[bool, list[str]]",
          "decorators": [],
          "docstring": "Validate credential format before testing connection.",
          "line_start": 28,
          "line_end": 55,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_bambu_connection",
          "full_name": "test_bambu_connection",
          "class": null,
          "signature": "(ip: str, access_code: str, serial: str)",
          "return_type": "dict",
          "decorators": [],
          "docstring": "Test connection to Bambu Lab printer and gather basic info.",
          "line_start": 57,
          "line_end": 166,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "print_results",
          "full_name": "print_results",
          "class": null,
          "signature": "(result: dict)",
          "return_type": "",
          "decorators": [],
          "docstring": "Print formatted test results.",
          "line_start": 168,
          "line_end": 199,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_interactive_input",
          "full_name": "get_interactive_input",
          "class": null,
          "signature": "()",
          "return_type": "tuple[str, str, str]",
          "decorators": [],
          "docstring": "Get credentials interactively from user.",
          "line_start": 201,
          "line_end": 224,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "main",
          "full_name": "main",
          "class": null,
          "signature": "()",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 226,
          "line_end": 294,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "argparse",
          "alias": null,
          "line": 15
        },
        {
          "type": "import",
          "module": "asyncio",
          "alias": null,
          "line": 16
        },
        {
          "type": "import",
          "module": "sys",
          "alias": null,
          "line": 17
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Optional",
          "alias": null,
          "line": 18
        },
        {
          "type": "import",
          "module": "json",
          "alias": null,
          "line": 19
        },
        {
          "type": "from_import",
          "module": "bambulabs_api",
          "name": "Printer",
          "alias": null,
          "line": 23
        },
        {
          "type": "import",
          "module": "aiohttp",
          "alias": null,
          "line": 137
        }
      ],
      "function_calls": [
        {
          "caller": "validate_credentials",
          "callee": "split",
          "line": 33,
          "type": "attribute"
        },
        {
          "caller": "validate_credentials",
          "callee": "len",
          "line": 34,
          "type": "direct"
        },
        {
          "caller": "validate_credentials",
          "callee": "append",
          "line": 35,
          "type": "attribute"
        },
        {
          "caller": "validate_credentials",
          "callee": "int",
          "line": 39,
          "type": "direct"
        },
        {
          "caller": "validate_credentials",
          "callee": "append",
          "line": 41,
          "type": "attribute"
        },
        {
          "caller": "validate_credentials",
          "callee": "append",
          "line": 44,
          "type": "attribute"
        },
        {
          "caller": "validate_credentials",
          "callee": "isdigit",
          "line": 48,
          "type": "attribute"
        },
        {
          "caller": "validate_credentials",
          "callee": "len",
          "line": 48,
          "type": "direct"
        },
        {
          "caller": "validate_credentials",
          "callee": "append",
          "line": 49,
          "type": "attribute"
        },
        {
          "caller": "validate_credentials",
          "callee": "isalnum",
          "line": 52,
          "type": "attribute"
        },
        {
          "caller": "validate_credentials",
          "callee": "len",
          "line": 52,
          "type": "direct"
        },
        {
          "caller": "validate_credentials",
          "callee": "append",
          "line": 53,
          "type": "attribute"
        },
        {
          "caller": "validate_credentials",
          "callee": "len",
          "line": 55,
          "type": "direct"
        },
        {
          "caller": "test_bambu_connection",
          "callee": "print",
          "line": 60,
          "type": "direct"
        },
        {
          "caller": "test_bambu_connection",
          "callee": "print",
          "line": 61,
          "type": "direct"
        },
        {
          "caller": "test_bambu_connection",
          "callee": "print",
          "line": 62,
          "type": "direct"
        },
        {
          "caller": "test_bambu_connection",
          "callee": "len",
          "line": 62,
          "type": "direct"
        },
        {
          "caller": "test_bambu_connection",
          "callee": "print",
          "line": 63,
          "type": "direct"
        },
        {
          "caller": "test_bambu_connection",
          "callee": "print",
          "line": 64,
          "type": "direct"
        },
        {
          "caller": "test_bambu_connection",
          "callee": "print",
          "line": 77,
          "type": "direct"
        },
        {
          "caller": "test_bambu_connection",
          "callee": "Printer",
          "line": 78,
          "type": "direct"
        },
        {
          "caller": "test_bambu_connection",
          "callee": "print",
          "line": 85,
          "type": "direct"
        },
        {
          "caller": "test_bambu_connection",
          "callee": "print",
          "line": 88,
          "type": "direct"
        },
        {
          "caller": "test_bambu_connection",
          "callee": "get_current_state",
          "line": 90,
          "type": "attribute"
        },
        {
          "caller": "test_bambu_connection",
          "callee": "str",
          "line": 93,
          "type": "direct"
        },
        {
          "caller": "test_bambu_connection",
          "callee": "print",
          "line": 94,
          "type": "direct"
        },
        {
          "caller": "test_bambu_connection",
          "callee": "append",
          "line": 96,
          "type": "attribute"
        },
        {
          "caller": "test_bambu_connection",
          "callee": "str",
          "line": 96,
          "type": "direct"
        },
        {
          "caller": "test_bambu_connection",
          "callee": "print",
          "line": 97,
          "type": "direct"
        },
        {
          "caller": "test_bambu_connection",
          "callee": "str",
          "line": 97,
          "type": "direct"
        },
        {
          "caller": "test_bambu_connection",
          "callee": "get_bed_temperature",
          "line": 101,
          "type": "attribute"
        },
        {
          "caller": "test_bambu_connection",
          "callee": "get_nozzle_temperature",
          "line": 102,
          "type": "attribute"
        },
        {
          "caller": "test_bambu_connection",
          "callee": "float",
          "line": 105,
          "type": "direct"
        },
        {
          "caller": "test_bambu_connection",
          "callee": "float",
          "line": 106,
          "type": "direct"
        },
        {
          "caller": "test_bambu_connection",
          "callee": "print",
          "line": 108,
          "type": "direct"
        },
        {
          "caller": "test_bambu_connection",
          "callee": "print",
          "line": 110,
          "type": "direct"
        },
        {
          "caller": "test_bambu_connection",
          "callee": "str",
          "line": 110,
          "type": "direct"
        },
        {
          "caller": "test_bambu_connection",
          "callee": "hasattr",
          "line": 114,
          "type": "direct"
        },
        {
          "caller": "test_bambu_connection",
          "callee": "callable",
          "line": 117,
          "type": "direct"
        },
        {
          "caller": "test_bambu_connection",
          "callee": "subtask_name",
          "line": 117,
          "type": "attribute"
        },
        {
          "caller": "test_bambu_connection",
          "callee": "get_percentage",
          "line": 121,
          "type": "attribute"
        },
        {
          "caller": "test_bambu_connection",
          "callee": "str",
          "line": 124,
          "type": "direct"
        },
        {
          "caller": "test_bambu_connection",
          "callee": "print",
          "line": 127,
          "type": "direct"
        },
        {
          "caller": "test_bambu_connection",
          "callee": "print",
          "line": 129,
          "type": "direct"
        },
        {
          "caller": "test_bambu_connection",
          "callee": "print",
          "line": 131,
          "type": "direct"
        },
        {
          "caller": "test_bambu_connection",
          "callee": "str",
          "line": 131,
          "type": "direct"
        },
        {
          "caller": "test_bambu_connection",
          "callee": "print",
          "line": 134,
          "type": "direct"
        },
        {
          "caller": "test_bambu_connection",
          "callee": "append",
          "line": 139,
          "type": "attribute"
        },
        {
          "caller": "test_bambu_connection",
          "callee": "print",
          "line": 140,
          "type": "direct"
        },
        {
          "caller": "test_bambu_connection",
          "callee": "ClientSession",
          "line": 145,
          "type": "attribute"
        },
        {
          "caller": "test_bambu_connection",
          "callee": "ClientTimeout",
          "line": 145,
          "type": "attribute"
        },
        {
          "caller": "test_bambu_connection",
          "callee": "get",
          "line": 146,
          "type": "attribute"
        },
        {
          "caller": "test_bambu_connection",
          "callee": "print",
          "line": 150,
          "type": "direct"
        },
        {
          "caller": "test_bambu_connection",
          "callee": "print",
          "line": 153,
          "type": "direct"
        },
        {
          "caller": "test_bambu_connection",
          "callee": "append",
          "line": 155,
          "type": "attribute"
        },
        {
          "caller": "test_bambu_connection",
          "callee": "str",
          "line": 155,
          "type": "direct"
        },
        {
          "caller": "test_bambu_connection",
          "callee": "print",
          "line": 156,
          "type": "direct"
        },
        {
          "caller": "test_bambu_connection",
          "callee": "str",
          "line": 156,
          "type": "direct"
        },
        {
          "caller": "test_bambu_connection",
          "callee": "append",
          "line": 163,
          "type": "attribute"
        },
        {
          "caller": "test_bambu_connection",
          "callee": "str",
          "line": 163,
          "type": "direct"
        },
        {
          "caller": "test_bambu_connection",
          "callee": "print",
          "line": 164,
          "type": "direct"
        },
        {
          "caller": "test_bambu_connection",
          "callee": "str",
          "line": 164,
          "type": "direct"
        },
        {
          "caller": "print_results",
          "callee": "print",
          "line": 170,
          "type": "direct"
        },
        {
          "caller": "print_results",
          "callee": "print",
          "line": 171,
          "type": "direct"
        },
        {
          "caller": "print_results",
          "callee": "print",
          "line": 172,
          "type": "direct"
        },
        {
          "caller": "print_results",
          "callee": "print",
          "line": 175,
          "type": "direct"
        },
        {
          "caller": "print_results",
          "callee": "print",
          "line": 177,
          "type": "direct"
        },
        {
          "caller": "print_results",
          "callee": "print",
          "line": 179,
          "type": "direct"
        },
        {
          "caller": "print_results",
          "callee": "print",
          "line": 180,
          "type": "direct"
        },
        {
          "caller": "print_results",
          "callee": "print",
          "line": 181,
          "type": "direct"
        },
        {
          "caller": "print_results",
          "callee": "print",
          "line": 182,
          "type": "direct"
        },
        {
          "caller": "print_results",
          "callee": "print",
          "line": 185,
          "type": "direct"
        },
        {
          "caller": "print_results",
          "callee": "items",
          "line": 186,
          "type": "attribute"
        },
        {
          "caller": "print_results",
          "callee": "isinstance",
          "line": 187,
          "type": "direct"
        },
        {
          "caller": "print_results",
          "callee": "print",
          "line": 188,
          "type": "direct"
        },
        {
          "caller": "print_results",
          "callee": "title",
          "line": 188,
          "type": "attribute"
        },
        {
          "caller": "print_results",
          "callee": "items",
          "line": 189,
          "type": "attribute"
        },
        {
          "caller": "print_results",
          "callee": "print",
          "line": 190,
          "type": "direct"
        },
        {
          "caller": "print_results",
          "callee": "print",
          "line": 192,
          "type": "direct"
        },
        {
          "caller": "print_results",
          "callee": "title",
          "line": 192,
          "type": "attribute"
        },
        {
          "caller": "print_results",
          "callee": "print",
          "line": 195,
          "type": "direct"
        },
        {
          "caller": "print_results",
          "callee": "print",
          "line": 197,
          "type": "direct"
        },
        {
          "caller": "print_results",
          "callee": "print",
          "line": 199,
          "type": "direct"
        },
        {
          "caller": "get_interactive_input",
          "callee": "print",
          "line": 203,
          "type": "direct"
        },
        {
          "caller": "get_interactive_input",
          "callee": "print",
          "line": 204,
          "type": "direct"
        },
        {
          "caller": "get_interactive_input",
          "callee": "strip",
          "line": 207,
          "type": "attribute"
        },
        {
          "caller": "get_interactive_input",
          "callee": "input",
          "line": 207,
          "type": "direct"
        },
        {
          "caller": "get_interactive_input",
          "callee": "print",
          "line": 210,
          "type": "direct"
        },
        {
          "caller": "get_interactive_input",
          "callee": "strip",
          "line": 213,
          "type": "attribute"
        },
        {
          "caller": "get_interactive_input",
          "callee": "input",
          "line": 213,
          "type": "direct"
        },
        {
          "caller": "get_interactive_input",
          "callee": "print",
          "line": 216,
          "type": "direct"
        },
        {
          "caller": "get_interactive_input",
          "callee": "strip",
          "line": 219,
          "type": "attribute"
        },
        {
          "caller": "get_interactive_input",
          "callee": "input",
          "line": 219,
          "type": "direct"
        },
        {
          "caller": "get_interactive_input",
          "callee": "print",
          "line": 222,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 227,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 228,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 231,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 232,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "exit",
          "line": 233,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "ArgumentParser",
          "line": 235,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "add_argument",
          "line": 236,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "add_argument",
          "line": 237,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "add_argument",
          "line": 238,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "add_argument",
          "line": 239,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "parse_args",
          "line": 241,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 248,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "exit",
          "line": 249,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "get_interactive_input",
          "line": 250,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "validate_credentials",
          "line": 253,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 256,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 258,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 261,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 262,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 263,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 264,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "exit",
          "line": 266,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 269,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 270,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "test_bambu_connection",
          "line": 273,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 277,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "dumps",
          "line": 277,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "print_results",
          "line": 279,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 283,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 284,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 285,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 286,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 288,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 289,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 290,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 291,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 292,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "exit",
          "line": 294,
          "type": "attribute"
        }
      ],
      "error": null
    },
    {
      "filepath": "scripts\\test_bambu_ftp_direct.py",
      "functions": [
        {
          "name": "create_secure_ftp_connection",
          "full_name": "create_secure_ftp_connection",
          "class": null,
          "signature": "(host: str, username: str, password: str, port: int)",
          "return_type": "ftplib.FTP_TLS",
          "decorators": [],
          "docstring": "Create a secure FTP connection with implicit TLS to Bambu Lab printer.\n\nArgs:\n    host: Printer IP address\n    username: FTP username (should be \"bblp\")\n    password: Access code from Bambu Lab printer\n    port: FTP port (default 990 for implicit TLS)\n\nReturns:\n    Connected FTP_TLS instance\n\nRaises:\n    Various FTP and SSL exceptions on connection failure",
          "line_start": 34,
          "line_end": 97,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "list_directory",
          "full_name": "list_directory",
          "class": null,
          "signature": "(ftp: ftplib.FTP_TLS, directory: str)",
          "return_type": "list",
          "decorators": [],
          "docstring": "List files in the specified directory.\n\nArgs:\n    ftp: Connected FTP instance\n    directory: Directory path to list\n\nReturns:\n    List of file information dictionaries",
          "line_start": 100,
          "line_end": 166,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "download_file",
          "full_name": "download_file",
          "class": null,
          "signature": "(ftp: ftplib.FTP_TLS, remote_filename: str, local_path: str)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Download a file from the FTP server.\n\nArgs:\n    ftp: Connected FTP instance\n    remote_filename: Name of file to download\n    local_path: Local path to save the file\n\nReturns:\n    True if download successful, False otherwise",
          "line_start": 169,
          "line_end": 214,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "progress_callback",
          "full_name": "progress_callback",
          "class": null,
          "signature": "(data)",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 190,
          "line_end": 194,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_bambu_ftp",
          "full_name": "test_bambu_ftp",
          "class": null,
          "signature": "(ip_address: str, access_code: str)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Test complete FTP functionality with Bambu Lab printer.\n\nArgs:\n    ip_address: Printer IP address\n    access_code: Bambu Lab access code\n\nReturns:\n    True if all tests pass, False otherwise",
          "line_start": 217,
          "line_end": 291,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "main",
          "full_name": "main",
          "class": null,
          "signature": "()",
          "return_type": "",
          "decorators": [],
          "docstring": "Main function.",
          "line_start": 294,
          "line_end": 334,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "ftplib",
          "alias": null,
          "line": 23
        },
        {
          "type": "import",
          "module": "ssl",
          "alias": null,
          "line": 24
        },
        {
          "type": "import",
          "module": "os",
          "alias": null,
          "line": 25
        },
        {
          "type": "import",
          "module": "sys",
          "alias": null,
          "line": 26
        },
        {
          "type": "import",
          "module": "argparse",
          "alias": null,
          "line": 27
        },
        {
          "type": "import",
          "module": "tempfile",
          "alias": null,
          "line": 28
        },
        {
          "type": "from_import",
          "module": "pathlib",
          "name": "Path",
          "alias": null,
          "line": 29
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 30
        },
        {
          "type": "import",
          "module": "socket",
          "alias": null,
          "line": 31
        }
      ],
      "function_calls": [
        {
          "caller": "create_secure_ftp_connection",
          "callee": "print",
          "line": 50,
          "type": "direct"
        },
        {
          "caller": "create_secure_ftp_connection",
          "callee": "print",
          "line": 51,
          "type": "direct"
        },
        {
          "caller": "create_secure_ftp_connection",
          "callee": "print",
          "line": 52,
          "type": "direct"
        },
        {
          "caller": "create_secure_ftp_connection",
          "callee": "len",
          "line": 52,
          "type": "direct"
        },
        {
          "caller": "create_secure_ftp_connection",
          "callee": "create_default_context",
          "line": 55,
          "type": "attribute"
        },
        {
          "caller": "create_secure_ftp_connection",
          "callee": "FTP_TLS",
          "line": 61,
          "type": "attribute"
        },
        {
          "caller": "create_secure_ftp_connection",
          "callee": "set_pasv",
          "line": 64,
          "type": "attribute"
        },
        {
          "caller": "create_secure_ftp_connection",
          "callee": "print",
          "line": 68,
          "type": "direct"
        },
        {
          "caller": "create_secure_ftp_connection",
          "callee": "connect",
          "line": 69,
          "type": "attribute"
        },
        {
          "caller": "create_secure_ftp_connection",
          "callee": "print",
          "line": 72,
          "type": "direct"
        },
        {
          "caller": "create_secure_ftp_connection",
          "callee": "login",
          "line": 73,
          "type": "attribute"
        },
        {
          "caller": "create_secure_ftp_connection",
          "callee": "prot_p",
          "line": 76,
          "type": "attribute"
        },
        {
          "caller": "create_secure_ftp_connection",
          "callee": "print",
          "line": 78,
          "type": "direct"
        },
        {
          "caller": "create_secure_ftp_connection",
          "callee": "print",
          "line": 82,
          "type": "direct"
        },
        {
          "caller": "create_secure_ftp_connection",
          "callee": "print",
          "line": 85,
          "type": "direct"
        },
        {
          "caller": "create_secure_ftp_connection",
          "callee": "print",
          "line": 88,
          "type": "direct"
        },
        {
          "caller": "create_secure_ftp_connection",
          "callee": "print",
          "line": 89,
          "type": "direct"
        },
        {
          "caller": "create_secure_ftp_connection",
          "callee": "print",
          "line": 92,
          "type": "direct"
        },
        {
          "caller": "create_secure_ftp_connection",
          "callee": "print",
          "line": 93,
          "type": "direct"
        },
        {
          "caller": "create_secure_ftp_connection",
          "callee": "print",
          "line": 96,
          "type": "direct"
        },
        {
          "caller": "list_directory",
          "callee": "print",
          "line": 111,
          "type": "direct"
        },
        {
          "caller": "list_directory",
          "callee": "cwd",
          "line": 115,
          "type": "attribute"
        },
        {
          "caller": "list_directory",
          "callee": "pwd",
          "line": 116,
          "type": "attribute"
        },
        {
          "caller": "list_directory",
          "callee": "print",
          "line": 117,
          "type": "direct"
        },
        {
          "caller": "list_directory",
          "callee": "retrlines",
          "line": 124,
          "type": "attribute"
        },
        {
          "caller": "list_directory",
          "callee": "print",
          "line": 126,
          "type": "direct"
        },
        {
          "caller": "list_directory",
          "callee": "len",
          "line": 126,
          "type": "direct"
        },
        {
          "caller": "list_directory",
          "callee": "print",
          "line": 128,
          "type": "direct"
        },
        {
          "caller": "list_directory",
          "callee": "split",
          "line": 132,
          "type": "attribute"
        },
        {
          "caller": "list_directory",
          "callee": "len",
          "line": 133,
          "type": "direct"
        },
        {
          "caller": "list_directory",
          "callee": "isdigit",
          "line": 136,
          "type": "attribute"
        },
        {
          "caller": "list_directory",
          "callee": "join",
          "line": 138,
          "type": "attribute"
        },
        {
          "caller": "list_directory",
          "callee": "startswith",
          "line": 141,
          "type": "attribute"
        },
        {
          "caller": "list_directory",
          "callee": "isdigit",
          "line": 144,
          "type": "attribute"
        },
        {
          "caller": "list_directory",
          "callee": "str",
          "line": 144,
          "type": "direct"
        },
        {
          "caller": "list_directory",
          "callee": "int",
          "line": 144,
          "type": "direct"
        },
        {
          "caller": "list_directory",
          "callee": "append",
          "line": 148,
          "type": "attribute"
        },
        {
          "caller": "list_directory",
          "callee": "print",
          "line": 150,
          "type": "direct"
        },
        {
          "caller": "list_directory",
          "callee": "len",
          "line": 150,
          "type": "direct"
        },
        {
          "caller": "list_directory",
          "callee": "enumerate",
          "line": 151,
          "type": "direct"
        },
        {
          "caller": "list_directory",
          "callee": "print",
          "line": 153,
          "type": "direct"
        },
        {
          "caller": "list_directory",
          "callee": "str",
          "line": 158,
          "type": "direct"
        },
        {
          "caller": "list_directory",
          "callee": "print",
          "line": 159,
          "type": "direct"
        },
        {
          "caller": "list_directory",
          "callee": "print",
          "line": 160,
          "type": "direct"
        },
        {
          "caller": "list_directory",
          "callee": "print",
          "line": 162,
          "type": "direct"
        },
        {
          "caller": "list_directory",
          "callee": "print",
          "line": 165,
          "type": "direct"
        },
        {
          "caller": "download_file",
          "callee": "print",
          "line": 181,
          "type": "direct"
        },
        {
          "caller": "download_file",
          "callee": "print",
          "line": 182,
          "type": "direct"
        },
        {
          "caller": "download_file",
          "callee": "mkdir",
          "line": 186,
          "type": "attribute"
        },
        {
          "caller": "download_file",
          "callee": "Path",
          "line": 186,
          "type": "direct"
        },
        {
          "caller": "download_file",
          "callee": "open",
          "line": 189,
          "type": "direct"
        },
        {
          "caller": "progress_callback",
          "callee": "write",
          "line": 191,
          "type": "attribute"
        },
        {
          "caller": "progress_callback",
          "callee": "len",
          "line": 193,
          "type": "direct"
        },
        {
          "caller": "progress_callback",
          "callee": "print",
          "line": 194,
          "type": "direct"
        },
        {
          "caller": "download_file",
          "callee": "print",
          "line": 196,
          "type": "direct"
        },
        {
          "caller": "download_file",
          "callee": "retrbinary",
          "line": 197,
          "type": "attribute"
        },
        {
          "caller": "download_file",
          "callee": "print",
          "line": 198,
          "type": "direct"
        },
        {
          "caller": "download_file",
          "callee": "exists",
          "line": 201,
          "type": "attribute"
        },
        {
          "caller": "download_file",
          "callee": "Path",
          "line": 201,
          "type": "direct"
        },
        {
          "caller": "download_file",
          "callee": "stat",
          "line": 202,
          "type": "attribute"
        },
        {
          "caller": "download_file",
          "callee": "Path",
          "line": 202,
          "type": "direct"
        },
        {
          "caller": "download_file",
          "callee": "print",
          "line": 203,
          "type": "direct"
        },
        {
          "caller": "download_file",
          "callee": "print",
          "line": 206,
          "type": "direct"
        },
        {
          "caller": "download_file",
          "callee": "print",
          "line": 210,
          "type": "direct"
        },
        {
          "caller": "download_file",
          "callee": "print",
          "line": 213,
          "type": "direct"
        },
        {
          "caller": "test_bambu_ftp",
          "callee": "print",
          "line": 228,
          "type": "direct"
        },
        {
          "caller": "test_bambu_ftp",
          "callee": "print",
          "line": 229,
          "type": "direct"
        },
        {
          "caller": "test_bambu_ftp",
          "callee": "print",
          "line": 230,
          "type": "direct"
        },
        {
          "caller": "test_bambu_ftp",
          "callee": "print",
          "line": 231,
          "type": "direct"
        },
        {
          "caller": "test_bambu_ftp",
          "callee": "len",
          "line": 231,
          "type": "direct"
        },
        {
          "caller": "test_bambu_ftp",
          "callee": "print",
          "line": 232,
          "type": "direct"
        },
        {
          "caller": "test_bambu_ftp",
          "callee": "strftime",
          "line": 232,
          "type": "attribute"
        },
        {
          "caller": "test_bambu_ftp",
          "callee": "now",
          "line": 232,
          "type": "attribute"
        },
        {
          "caller": "test_bambu_ftp",
          "callee": "print",
          "line": 233,
          "type": "direct"
        },
        {
          "caller": "test_bambu_ftp",
          "callee": "create_secure_ftp_connection",
          "line": 238,
          "type": "direct"
        },
        {
          "caller": "test_bambu_ftp",
          "callee": "print",
          "line": 239,
          "type": "direct"
        },
        {
          "caller": "test_bambu_ftp",
          "callee": "list_directory",
          "line": 242,
          "type": "direct"
        },
        {
          "caller": "test_bambu_ftp",
          "callee": "print",
          "line": 243,
          "type": "direct"
        },
        {
          "caller": "test_bambu_ftp",
          "callee": "NamedTemporaryFile",
          "line": 252,
          "type": "attribute"
        },
        {
          "caller": "test_bambu_ftp",
          "callee": "download_file",
          "line": 255,
          "type": "direct"
        },
        {
          "caller": "test_bambu_ftp",
          "callee": "print",
          "line": 258,
          "type": "direct"
        },
        {
          "caller": "test_bambu_ftp",
          "callee": "unlink",
          "line": 261,
          "type": "attribute"
        },
        {
          "caller": "test_bambu_ftp",
          "callee": "Path",
          "line": 261,
          "type": "direct"
        },
        {
          "caller": "test_bambu_ftp",
          "callee": "print",
          "line": 262,
          "type": "direct"
        },
        {
          "caller": "test_bambu_ftp",
          "callee": "print",
          "line": 264,
          "type": "direct"
        },
        {
          "caller": "test_bambu_ftp",
          "callee": "print",
          "line": 266,
          "type": "direct"
        },
        {
          "caller": "test_bambu_ftp",
          "callee": "print",
          "line": 269,
          "type": "direct"
        },
        {
          "caller": "test_bambu_ftp",
          "callee": "print",
          "line": 270,
          "type": "direct"
        },
        {
          "caller": "test_bambu_ftp",
          "callee": "print",
          "line": 272,
          "type": "direct"
        },
        {
          "caller": "test_bambu_ftp",
          "callee": "print",
          "line": 273,
          "type": "direct"
        },
        {
          "caller": "test_bambu_ftp",
          "callee": "print",
          "line": 274,
          "type": "direct"
        },
        {
          "caller": "test_bambu_ftp",
          "callee": "print",
          "line": 278,
          "type": "direct"
        },
        {
          "caller": "test_bambu_ftp",
          "callee": "quit",
          "line": 285,
          "type": "attribute"
        },
        {
          "caller": "test_bambu_ftp",
          "callee": "print",
          "line": 286,
          "type": "direct"
        },
        {
          "caller": "test_bambu_ftp",
          "callee": "close",
          "line": 289,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "ArgumentParser",
          "line": 296,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "add_argument",
          "line": 297,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "getenv",
          "line": 297,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "add_argument",
          "line": 298,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "getenv",
          "line": 298,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "parse_args",
          "line": 300,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 303,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 304,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 305,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 306,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 307,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 308,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 309,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 310,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "test_bambu_ftp",
          "line": 314,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 316,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 317,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 319,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 320,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 321,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 323,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 324,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 325,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 330,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 333,
          "type": "direct"
        }
      ],
      "error": null
    },
    {
      "filepath": "scripts\\test_complete_bambu_ftp.py",
      "functions": [
        {
          "name": "__init__",
          "full_name": "BambuFTPTester.__init__",
          "class": "BambuFTPTester",
          "signature": "(self, ip_address: str, access_code: str)",
          "return_type": "",
          "decorators": [],
          "docstring": "Initialize tester with printer credentials.",
          "line_start": 49,
          "line_end": 53,
          "access_level": "dunder",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "run_all_tests",
          "full_name": "BambuFTPTester.run_all_tests",
          "class": "BambuFTPTester",
          "signature": "(self)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Run all tests and return comprehensive results.",
          "line_start": 55,
          "line_end": 99,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_test_ftp_service",
          "full_name": "BambuFTPTester._test_ftp_service",
          "class": "BambuFTPTester",
          "signature": "(self)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Test the BambuFTPService directly.",
          "line_start": 101,
          "line_end": 135,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_test_printer_class",
          "full_name": "BambuFTPTester._test_printer_class",
          "class": "BambuFTPTester",
          "signature": "(self)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Test the updated BambuLabPrinter class with FTP integration.",
          "line_start": 137,
          "line_end": 180,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_test_file_listing",
          "full_name": "BambuFTPTester._test_file_listing",
          "class": "BambuFTPTester",
          "signature": "(self)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Test file listing through the printer class.",
          "line_start": 182,
          "line_end": 222,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_test_file_download",
          "full_name": "BambuFTPTester._test_file_download",
          "class": "BambuFTPTester",
          "signature": "(self)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Test file download functionality.",
          "line_start": 224,
          "line_end": 286,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_test_error_handling",
          "full_name": "BambuFTPTester._test_error_handling",
          "class": "BambuFTPTester",
          "signature": "(self)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Test error handling with invalid scenarios.",
          "line_start": 288,
          "line_end": 319,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_generate_test_summary",
          "full_name": "BambuFTPTester._generate_test_summary",
          "class": "BambuFTPTester",
          "signature": "(self, all_passed: bool)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Generate comprehensive test summary.",
          "line_start": 321,
          "line_end": 331,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_print_summary",
          "full_name": "BambuFTPTester._print_summary",
          "class": "BambuFTPTester",
          "signature": "(self, summary: Dict[str, Any])",
          "return_type": "",
          "decorators": [],
          "docstring": "Print test summary.",
          "line_start": 333,
          "line_end": 358,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "main",
          "full_name": "main",
          "class": null,
          "signature": "()",
          "return_type": "",
          "decorators": [],
          "docstring": "Main function.",
          "line_start": 361,
          "line_end": 394,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "asyncio",
          "alias": null,
          "line": 22
        },
        {
          "type": "import",
          "module": "argparse",
          "alias": null,
          "line": 23
        },
        {
          "type": "import",
          "module": "os",
          "alias": null,
          "line": 24
        },
        {
          "type": "import",
          "module": "sys",
          "alias": null,
          "line": 25
        },
        {
          "type": "import",
          "module": "tempfile",
          "alias": null,
          "line": 26
        },
        {
          "type": "from_import",
          "module": "pathlib",
          "name": "Path",
          "alias": null,
          "line": 27
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 28
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Dict",
          "alias": null,
          "line": 29
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Any",
          "alias": null,
          "line": 29
        },
        {
          "type": "from_import",
          "module": "services.bambu_ftp_service",
          "name": "BambuFTPService",
          "alias": null,
          "line": 37
        },
        {
          "type": "from_import",
          "module": "services.bambu_ftp_service",
          "name": "create_bambu_ftp_service",
          "alias": null,
          "line": 37
        },
        {
          "type": "from_import",
          "module": "printers.bambu_lab",
          "name": "BambuLabPrinter",
          "alias": null,
          "line": 38
        }
      ],
      "function_calls": [
        {
          "caller": "BambuFTPTester.run_all_tests",
          "callee": "print",
          "line": 57,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester.run_all_tests",
          "callee": "print",
          "line": 58,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester.run_all_tests",
          "callee": "print",
          "line": 59,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester.run_all_tests",
          "callee": "print",
          "line": 60,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester.run_all_tests",
          "callee": "len",
          "line": 60,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester.run_all_tests",
          "callee": "print",
          "line": 61,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester.run_all_tests",
          "callee": "strftime",
          "line": 61,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPTester.run_all_tests",
          "callee": "now",
          "line": 61,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPTester.run_all_tests",
          "callee": "print",
          "line": 62,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester.run_all_tests",
          "callee": "print",
          "line": 75,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester.run_all_tests",
          "callee": "print",
          "line": 76,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester.run_all_tests",
          "callee": "test_func",
          "line": 79,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester.run_all_tests",
          "callee": "print",
          "line": 83,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester.run_all_tests",
          "callee": "print",
          "line": 85,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester.run_all_tests",
          "callee": "get",
          "line": 85,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPTester.run_all_tests",
          "callee": "print",
          "line": 89,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester.run_all_tests",
          "callee": "str",
          "line": 90,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester.run_all_tests",
          "callee": "print",
          "line": 93,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester.run_all_tests",
          "callee": "_generate_test_summary",
          "line": 96,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPTester.run_all_tests",
          "callee": "_print_summary",
          "line": 97,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPTester._test_ftp_service",
          "callee": "BambuFTPService",
          "line": 105,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._test_ftp_service",
          "callee": "print",
          "line": 106,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._test_ftp_service",
          "callee": "test_connection",
          "line": 109,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPTester._test_ftp_service",
          "callee": "print",
          "line": 113,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._test_ftp_service",
          "callee": "list_files",
          "line": 116,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPTester._test_ftp_service",
          "callee": "print",
          "line": 117,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._test_ftp_service",
          "callee": "len",
          "line": 117,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._test_ftp_service",
          "callee": "get_file_info",
          "line": 122,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPTester._test_ftp_service",
          "callee": "print",
          "line": 124,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._test_ftp_service",
          "callee": "print",
          "line": 126,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._test_ftp_service",
          "callee": "len",
          "line": 130,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._test_ftp_service",
          "callee": "str",
          "line": 135,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._test_printer_class",
          "callee": "BambuLabPrinter",
          "line": 141,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._test_printer_class",
          "callee": "print",
          "line": 149,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._test_printer_class",
          "callee": "connect",
          "line": 152,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPTester._test_printer_class",
          "callee": "print",
          "line": 156,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._test_printer_class",
          "callee": "print",
          "line": 160,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._test_printer_class",
          "callee": "get_status",
          "line": 164,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPTester._test_printer_class",
          "callee": "print",
          "line": 165,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._test_printer_class",
          "callee": "print",
          "line": 167,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._test_printer_class",
          "callee": "disconnect",
          "line": 170,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPTester._test_printer_class",
          "callee": "print",
          "line": 171,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._test_printer_class",
          "callee": "str",
          "line": 180,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._test_file_listing",
          "callee": "BambuLabPrinter",
          "line": 185,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._test_file_listing",
          "callee": "connect",
          "line": 193,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPTester._test_file_listing",
          "callee": "list_files",
          "line": 196,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPTester._test_file_listing",
          "callee": "print",
          "line": 197,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._test_file_listing",
          "callee": "len",
          "line": 197,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._test_file_listing",
          "callee": "getattr",
          "line": 202,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._test_file_listing",
          "callee": "get",
          "line": 203,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPTester._test_file_listing",
          "callee": "print",
          "line": 205,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._test_file_listing",
          "callee": "dict",
          "line": 205,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._test_file_listing",
          "callee": "enumerate",
          "line": 208,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._test_file_listing",
          "callee": "getattr",
          "line": 209,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._test_file_listing",
          "callee": "str",
          "line": 209,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._test_file_listing",
          "callee": "getattr",
          "line": 210,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._test_file_listing",
          "callee": "print",
          "line": 211,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._test_file_listing",
          "callee": "disconnect",
          "line": 213,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPTester._test_file_listing",
          "callee": "len",
          "line": 217,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._test_file_listing",
          "callee": "str",
          "line": 222,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._test_file_download",
          "callee": "BambuLabPrinter",
          "line": 227,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._test_file_download",
          "callee": "connect",
          "line": 235,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPTester._test_file_download",
          "callee": "list_files",
          "line": 238,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPTester._test_file_download",
          "callee": "disconnect",
          "line": 240,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPTester._test_file_download",
          "callee": "getattr",
          "line": 248,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._test_file_download",
          "callee": "str",
          "line": 248,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._test_file_download",
          "callee": "print",
          "line": 250,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._test_file_download",
          "callee": "NamedTemporaryFile",
          "line": 253,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPTester._test_file_download",
          "callee": "download_file",
          "line": 258,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPTester._test_file_download",
          "callee": "exists",
          "line": 260,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPTester._test_file_download",
          "callee": "Path",
          "line": 260,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._test_file_download",
          "callee": "stat",
          "line": 261,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPTester._test_file_download",
          "callee": "Path",
          "line": 261,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._test_file_download",
          "callee": "print",
          "line": 262,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._test_file_download",
          "callee": "unlink",
          "line": 265,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPTester._test_file_download",
          "callee": "Path",
          "line": 265,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._test_file_download",
          "callee": "disconnect",
          "line": 267,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPTester._test_file_download",
          "callee": "print",
          "line": 274,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._test_file_download",
          "callee": "disconnect",
          "line": 275,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPTester._test_file_download",
          "callee": "unlink",
          "line": 281,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPTester._test_file_download",
          "callee": "Path",
          "line": 281,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._test_file_download",
          "callee": "str",
          "line": 286,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._test_error_handling",
          "callee": "print",
          "line": 292,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._test_error_handling",
          "callee": "BambuFTPService",
          "line": 293,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._test_error_handling",
          "callee": "test_connection",
          "line": 294,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPTester._test_error_handling",
          "callee": "print",
          "line": 297,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._test_error_handling",
          "callee": "print",
          "line": 300,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._test_error_handling",
          "callee": "BambuFTPService",
          "line": 301,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._test_error_handling",
          "callee": "test_connection",
          "line": 302,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPTester._test_error_handling",
          "callee": "print",
          "line": 305,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._test_error_handling",
          "callee": "print",
          "line": 308,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._test_error_handling",
          "callee": "BambuFTPService",
          "line": 309,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._test_error_handling",
          "callee": "list_files",
          "line": 310,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPTester._test_error_handling",
          "callee": "print",
          "line": 311,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._test_error_handling",
          "callee": "len",
          "line": 311,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._test_error_handling",
          "callee": "str",
          "line": 319,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._generate_test_summary",
          "callee": "len",
          "line": 325,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._generate_test_summary",
          "callee": "sum",
          "line": 326,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._generate_test_summary",
          "callee": "values",
          "line": 326,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPTester._generate_test_summary",
          "callee": "get",
          "line": 326,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPTester._generate_test_summary",
          "callee": "sum",
          "line": 327,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._generate_test_summary",
          "callee": "values",
          "line": 327,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPTester._generate_test_summary",
          "callee": "get",
          "line": 327,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPTester._generate_test_summary",
          "callee": "isoformat",
          "line": 329,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPTester._generate_test_summary",
          "callee": "now",
          "line": 329,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPTester._print_summary",
          "callee": "print",
          "line": 335,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._print_summary",
          "callee": "print",
          "line": 336,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._print_summary",
          "callee": "print",
          "line": 337,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._print_summary",
          "callee": "print",
          "line": 338,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._print_summary",
          "callee": "print",
          "line": 339,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._print_summary",
          "callee": "print",
          "line": 340,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._print_summary",
          "callee": "print",
          "line": 343,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._print_summary",
          "callee": "print",
          "line": 344,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._print_summary",
          "callee": "print",
          "line": 345,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._print_summary",
          "callee": "print",
          "line": 347,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._print_summary",
          "callee": "print",
          "line": 348,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._print_summary",
          "callee": "print",
          "line": 349,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._print_summary",
          "callee": "print",
          "line": 351,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._print_summary",
          "callee": "print",
          "line": 352,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._print_summary",
          "callee": "print",
          "line": 353,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._print_summary",
          "callee": "print",
          "line": 354,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._print_summary",
          "callee": "print",
          "line": 355,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._print_summary",
          "callee": "print",
          "line": 356,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._print_summary",
          "callee": "print",
          "line": 357,
          "type": "direct"
        },
        {
          "caller": "BambuFTPTester._print_summary",
          "callee": "print",
          "line": 358,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "ArgumentParser",
          "line": 363,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "add_argument",
          "line": 364,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "getenv",
          "line": 364,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "add_argument",
          "line": 365,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "getenv",
          "line": 365,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "parse_args",
          "line": 367,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 373,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 374,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 375,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 376,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 377,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 378,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 379,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 380,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "BambuFTPTester",
          "line": 384,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "run_all_tests",
          "line": 385,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 390,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 393,
          "type": "direct"
        }
      ],
      "error": null
    },
    {
      "filepath": "scripts\\test_existing_bambu_api.py",
      "functions": [
        {
          "name": "test_bambu_api",
          "full_name": "test_bambu_api",
          "class": null,
          "signature": "()",
          "return_type": "",
          "decorators": [],
          "docstring": "Test the existing bambulabs-api library.",
          "line_start": 22,
          "line_end": 138,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "sys",
          "alias": null,
          "line": 6
        },
        {
          "type": "import",
          "module": "tempfile",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "pathlib",
          "name": "Path",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "bambulabs_api",
          "name": "Printer",
          "alias": "BambuClient",
          "line": 15
        },
        {
          "type": "from_import",
          "module": "bambu_credentials",
          "name": "get_bambu_credentials",
          "alias": null,
          "line": 27
        }
      ],
      "function_calls": [
        {
          "caller": "test_bambu_api",
          "callee": "print",
          "line": 32,
          "type": "direct"
        },
        {
          "caller": "test_bambu_api",
          "callee": "print",
          "line": 33,
          "type": "direct"
        },
        {
          "caller": "test_bambu_api",
          "callee": "print",
          "line": 34,
          "type": "direct"
        },
        {
          "caller": "test_bambu_api",
          "callee": "print",
          "line": 35,
          "type": "direct"
        },
        {
          "caller": "test_bambu_api",
          "callee": "get_bambu_credentials",
          "line": 38,
          "type": "direct"
        },
        {
          "caller": "test_bambu_api",
          "callee": "print",
          "line": 39,
          "type": "direct"
        },
        {
          "caller": "test_bambu_api",
          "callee": "len",
          "line": 39,
          "type": "direct"
        },
        {
          "caller": "test_bambu_api",
          "callee": "print",
          "line": 41,
          "type": "direct"
        },
        {
          "caller": "test_bambu_api",
          "callee": "print",
          "line": 46,
          "type": "direct"
        },
        {
          "caller": "test_bambu_api",
          "callee": "BambuClient",
          "line": 47,
          "type": "direct"
        },
        {
          "caller": "test_bambu_api",
          "callee": "print",
          "line": 54,
          "type": "direct"
        },
        {
          "caller": "test_bambu_api",
          "callee": "connect",
          "line": 55,
          "type": "attribute"
        },
        {
          "caller": "test_bambu_api",
          "callee": "print",
          "line": 56,
          "type": "direct"
        },
        {
          "caller": "test_bambu_api",
          "callee": "print",
          "line": 59,
          "type": "direct"
        },
        {
          "caller": "test_bambu_api",
          "callee": "get_current_state",
          "line": 61,
          "type": "attribute"
        },
        {
          "caller": "test_bambu_api",
          "callee": "print",
          "line": 63,
          "type": "direct"
        },
        {
          "caller": "test_bambu_api",
          "callee": "print",
          "line": 65,
          "type": "direct"
        },
        {
          "caller": "test_bambu_api",
          "callee": "print",
          "line": 67,
          "type": "direct"
        },
        {
          "caller": "test_bambu_api",
          "callee": "hasattr",
          "line": 70,
          "type": "direct"
        },
        {
          "caller": "test_bambu_api",
          "callee": "print",
          "line": 71,
          "type": "direct"
        },
        {
          "caller": "test_bambu_api",
          "callee": "print",
          "line": 75,
          "type": "direct"
        },
        {
          "caller": "test_bambu_api",
          "callee": "list_cache_dir",
          "line": 76,
          "type": "attribute"
        },
        {
          "caller": "test_bambu_api",
          "callee": "print",
          "line": 77,
          "type": "direct"
        },
        {
          "caller": "test_bambu_api",
          "callee": "print",
          "line": 78,
          "type": "direct"
        },
        {
          "caller": "test_bambu_api",
          "callee": "len",
          "line": 78,
          "type": "direct"
        },
        {
          "caller": "test_bambu_api",
          "callee": "enumerate",
          "line": 81,
          "type": "direct"
        },
        {
          "caller": "test_bambu_api",
          "callee": "print",
          "line": 82,
          "type": "direct"
        },
        {
          "caller": "test_bambu_api",
          "callee": "print",
          "line": 87,
          "type": "direct"
        },
        {
          "caller": "test_bambu_api",
          "callee": "isinstance",
          "line": 90,
          "type": "direct"
        },
        {
          "caller": "test_bambu_api",
          "callee": "split",
          "line": 92,
          "type": "attribute"
        },
        {
          "caller": "test_bambu_api",
          "callee": "strip",
          "line": 92,
          "type": "attribute"
        },
        {
          "caller": "test_bambu_api",
          "callee": "len",
          "line": 93,
          "type": "direct"
        },
        {
          "caller": "test_bambu_api",
          "callee": "join",
          "line": 94,
          "type": "attribute"
        },
        {
          "caller": "test_bambu_api",
          "callee": "str",
          "line": 98,
          "type": "direct"
        },
        {
          "caller": "test_bambu_api",
          "callee": "print",
          "line": 100,
          "type": "direct"
        },
        {
          "caller": "test_bambu_api",
          "callee": "download_file",
          "line": 104,
          "type": "attribute"
        },
        {
          "caller": "test_bambu_api",
          "callee": "getvalue",
          "line": 106,
          "type": "attribute"
        },
        {
          "caller": "test_bambu_api",
          "callee": "len",
          "line": 107,
          "type": "direct"
        },
        {
          "caller": "test_bambu_api",
          "callee": "Path",
          "line": 109,
          "type": "direct"
        },
        {
          "caller": "test_bambu_api",
          "callee": "mkdir",
          "line": 110,
          "type": "attribute"
        },
        {
          "caller": "test_bambu_api",
          "callee": "open",
          "line": 113,
          "type": "direct"
        },
        {
          "caller": "test_bambu_api",
          "callee": "write",
          "line": 114,
          "type": "attribute"
        },
        {
          "caller": "test_bambu_api",
          "callee": "print",
          "line": 116,
          "type": "direct"
        },
        {
          "caller": "test_bambu_api",
          "callee": "len",
          "line": 116,
          "type": "direct"
        },
        {
          "caller": "test_bambu_api",
          "callee": "print",
          "line": 119,
          "type": "direct"
        },
        {
          "caller": "test_bambu_api",
          "callee": "print",
          "line": 121,
          "type": "direct"
        },
        {
          "caller": "test_bambu_api",
          "callee": "print",
          "line": 123,
          "type": "direct"
        },
        {
          "caller": "test_bambu_api",
          "callee": "print",
          "line": 126,
          "type": "direct"
        },
        {
          "caller": "test_bambu_api",
          "callee": "print",
          "line": 129,
          "type": "direct"
        },
        {
          "caller": "test_bambu_api",
          "callee": "disconnect",
          "line": 132,
          "type": "attribute"
        },
        {
          "caller": "test_bambu_api",
          "callee": "print",
          "line": 135,
          "type": "direct"
        }
      ],
      "error": null
    },
    {
      "filepath": "scripts\\test_ssl_connection.py",
      "functions": [
        {
          "name": "test_ssl_connection",
          "full_name": "test_ssl_connection",
          "class": null,
          "signature": "()",
          "return_type": "",
          "decorators": [],
          "docstring": "Test raw SSL connection to see what's happening.",
          "line_start": 10,
          "line_end": 65,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "ssl",
          "alias": null,
          "line": 6
        },
        {
          "type": "import",
          "module": "socket",
          "alias": null,
          "line": 7
        },
        {
          "type": "import",
          "module": "sys",
          "alias": null,
          "line": 8
        }
      ],
      "function_calls": [
        {
          "caller": "test_ssl_connection",
          "callee": "print",
          "line": 15,
          "type": "direct"
        },
        {
          "caller": "test_ssl_connection",
          "callee": "print",
          "line": 16,
          "type": "direct"
        },
        {
          "caller": "test_ssl_connection",
          "callee": "print",
          "line": 17,
          "type": "direct"
        },
        {
          "caller": "test_ssl_connection",
          "callee": "print",
          "line": 18,
          "type": "direct"
        },
        {
          "caller": "test_ssl_connection",
          "callee": "print",
          "line": 19,
          "type": "direct"
        },
        {
          "caller": "test_ssl_connection",
          "callee": "print",
          "line": 23,
          "type": "direct"
        },
        {
          "caller": "test_ssl_connection",
          "callee": "socket",
          "line": 24,
          "type": "attribute"
        },
        {
          "caller": "test_ssl_connection",
          "callee": "settimeout",
          "line": 25,
          "type": "attribute"
        },
        {
          "caller": "test_ssl_connection",
          "callee": "connect",
          "line": 26,
          "type": "attribute"
        },
        {
          "caller": "test_ssl_connection",
          "callee": "print",
          "line": 27,
          "type": "direct"
        },
        {
          "caller": "test_ssl_connection",
          "callee": "close",
          "line": 28,
          "type": "attribute"
        },
        {
          "caller": "test_ssl_connection",
          "callee": "print",
          "line": 31,
          "type": "direct"
        },
        {
          "caller": "test_ssl_connection",
          "callee": "socket",
          "line": 32,
          "type": "attribute"
        },
        {
          "caller": "test_ssl_connection",
          "callee": "settimeout",
          "line": 33,
          "type": "attribute"
        },
        {
          "caller": "test_ssl_connection",
          "callee": "connect",
          "line": 34,
          "type": "attribute"
        },
        {
          "caller": "test_ssl_connection",
          "callee": "create_default_context",
          "line": 37,
          "type": "attribute"
        },
        {
          "caller": "test_ssl_connection",
          "callee": "wrap_socket",
          "line": 42,
          "type": "attribute"
        },
        {
          "caller": "test_ssl_connection",
          "callee": "print",
          "line": 43,
          "type": "direct"
        },
        {
          "caller": "test_ssl_connection",
          "callee": "getpeercert",
          "line": 46,
          "type": "attribute"
        },
        {
          "caller": "test_ssl_connection",
          "callee": "cipher",
          "line": 47,
          "type": "attribute"
        },
        {
          "caller": "test_ssl_connection",
          "callee": "print",
          "line": 48,
          "type": "direct"
        },
        {
          "caller": "test_ssl_connection",
          "callee": "print",
          "line": 49,
          "type": "direct"
        },
        {
          "caller": "test_ssl_connection",
          "callee": "version",
          "line": 49,
          "type": "attribute"
        },
        {
          "caller": "test_ssl_connection",
          "callee": "print",
          "line": 52,
          "type": "direct"
        },
        {
          "caller": "test_ssl_connection",
          "callee": "settimeout",
          "line": 53,
          "type": "attribute"
        },
        {
          "caller": "test_ssl_connection",
          "callee": "decode",
          "line": 55,
          "type": "attribute"
        },
        {
          "caller": "test_ssl_connection",
          "callee": "recv",
          "line": 55,
          "type": "attribute"
        },
        {
          "caller": "test_ssl_connection",
          "callee": "print",
          "line": 56,
          "type": "direct"
        },
        {
          "caller": "test_ssl_connection",
          "callee": "strip",
          "line": 56,
          "type": "attribute"
        },
        {
          "caller": "test_ssl_connection",
          "callee": "print",
          "line": 58,
          "type": "direct"
        },
        {
          "caller": "test_ssl_connection",
          "callee": "close",
          "line": 60,
          "type": "attribute"
        },
        {
          "caller": "test_ssl_connection",
          "callee": "print",
          "line": 64,
          "type": "direct"
        }
      ],
      "error": null
    },
    {
      "filepath": "scripts\\verify_bambu_download.py",
      "functions": [
        {
          "name": "verify_download",
          "full_name": "verify_download",
          "class": null,
          "signature": "(ip_address: str, access_code: str, serial_number: str, target_file: str | None)",
          "return_type": "",
          "decorators": [],
          "docstring": "Verify download functionality with real printer.",
          "line_start": 39,
          "line_end": 182,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "main",
          "full_name": "main",
          "class": null,
          "signature": "()",
          "return_type": "",
          "decorators": [],
          "docstring": "Main function.",
          "line_start": 185,
          "line_end": 227,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "asyncio",
          "alias": null,
          "line": 17
        },
        {
          "type": "import",
          "module": "argparse",
          "alias": null,
          "line": 18
        },
        {
          "type": "import",
          "module": "os",
          "alias": null,
          "line": 19
        },
        {
          "type": "import",
          "module": "sys",
          "alias": null,
          "line": 20
        },
        {
          "type": "from_import",
          "module": "pathlib",
          "name": "Path",
          "alias": null,
          "line": 21
        },
        {
          "type": "import",
          "module": "tempfile",
          "alias": null,
          "line": 22
        },
        {
          "type": "from_import",
          "module": "printers.bambu_lab",
          "name": "BambuLabPrinter",
          "alias": null,
          "line": 30
        },
        {
          "type": "from_import",
          "module": "services.bambu_ftp_service",
          "name": "BambuFTPService",
          "alias": null,
          "line": 31
        }
      ],
      "function_calls": [
        {
          "caller": "verify_download",
          "callee": "print",
          "line": 41,
          "type": "direct"
        },
        {
          "caller": "verify_download",
          "callee": "print",
          "line": 42,
          "type": "direct"
        },
        {
          "caller": "verify_download",
          "callee": "print",
          "line": 43,
          "type": "direct"
        },
        {
          "caller": "verify_download",
          "callee": "print",
          "line": 44,
          "type": "direct"
        },
        {
          "caller": "verify_download",
          "callee": "print",
          "line": 45,
          "type": "direct"
        },
        {
          "caller": "verify_download",
          "callee": "len",
          "line": 45,
          "type": "direct"
        },
        {
          "caller": "verify_download",
          "callee": "print",
          "line": 46,
          "type": "direct"
        },
        {
          "caller": "verify_download",
          "callee": "BambuLabPrinter",
          "line": 52,
          "type": "direct"
        },
        {
          "caller": "verify_download",
          "callee": "print",
          "line": 62,
          "type": "direct"
        },
        {
          "caller": "verify_download",
          "callee": "connect",
          "line": 63,
          "type": "attribute"
        },
        {
          "caller": "verify_download",
          "callee": "print",
          "line": 66,
          "type": "direct"
        },
        {
          "caller": "verify_download",
          "callee": "print",
          "line": 67,
          "type": "direct"
        },
        {
          "caller": "verify_download",
          "callee": "print",
          "line": 70,
          "type": "direct"
        },
        {
          "caller": "verify_download",
          "callee": "print",
          "line": 73,
          "type": "direct"
        },
        {
          "caller": "verify_download",
          "callee": "BambuFTPService",
          "line": 75,
          "type": "direct"
        },
        {
          "caller": "verify_download",
          "callee": "test_connection",
          "line": 76,
          "type": "attribute"
        },
        {
          "caller": "verify_download",
          "callee": "print",
          "line": 78,
          "type": "direct"
        },
        {
          "caller": "verify_download",
          "callee": "list_files",
          "line": 81,
          "type": "attribute"
        },
        {
          "caller": "verify_download",
          "callee": "print",
          "line": 82,
          "type": "direct"
        },
        {
          "caller": "verify_download",
          "callee": "len",
          "line": 82,
          "type": "direct"
        },
        {
          "caller": "verify_download",
          "callee": "print",
          "line": 84,
          "type": "direct"
        },
        {
          "caller": "verify_download",
          "callee": "print",
          "line": 86,
          "type": "direct"
        },
        {
          "caller": "verify_download",
          "callee": "print",
          "line": 89,
          "type": "direct"
        },
        {
          "caller": "verify_download",
          "callee": "get_status",
          "line": 91,
          "type": "attribute"
        },
        {
          "caller": "verify_download",
          "callee": "print",
          "line": 92,
          "type": "direct"
        },
        {
          "caller": "verify_download",
          "callee": "hasattr",
          "line": 92,
          "type": "direct"
        },
        {
          "caller": "verify_download",
          "callee": "print",
          "line": 94,
          "type": "direct"
        },
        {
          "caller": "verify_download",
          "callee": "print",
          "line": 97,
          "type": "direct"
        },
        {
          "caller": "verify_download",
          "callee": "list_files",
          "line": 99,
          "type": "attribute"
        },
        {
          "caller": "verify_download",
          "callee": "print",
          "line": 102,
          "type": "direct"
        },
        {
          "caller": "verify_download",
          "callee": "print",
          "line": 103,
          "type": "direct"
        },
        {
          "caller": "verify_download",
          "callee": "print",
          "line": 106,
          "type": "direct"
        },
        {
          "caller": "verify_download",
          "callee": "len",
          "line": 106,
          "type": "direct"
        },
        {
          "caller": "verify_download",
          "callee": "enumerate",
          "line": 107,
          "type": "direct"
        },
        {
          "caller": "verify_download",
          "callee": "getattr",
          "line": 108,
          "type": "direct"
        },
        {
          "caller": "verify_download",
          "callee": "str",
          "line": 108,
          "type": "direct"
        },
        {
          "caller": "verify_download",
          "callee": "getattr",
          "line": 109,
          "type": "direct"
        },
        {
          "caller": "verify_download",
          "callee": "print",
          "line": 110,
          "type": "direct"
        },
        {
          "caller": "verify_download",
          "callee": "len",
          "line": 112,
          "type": "direct"
        },
        {
          "caller": "verify_download",
          "callee": "print",
          "line": 113,
          "type": "direct"
        },
        {
          "caller": "verify_download",
          "callee": "len",
          "line": 113,
          "type": "direct"
        },
        {
          "caller": "verify_download",
          "callee": "print",
          "line": 116,
          "type": "direct"
        },
        {
          "caller": "verify_download",
          "callee": "lower",
          "line": 123,
          "type": "attribute"
        },
        {
          "caller": "verify_download",
          "callee": "next",
          "line": 124,
          "type": "direct"
        },
        {
          "caller": "verify_download",
          "callee": "lower",
          "line": 124,
          "type": "attribute"
        },
        {
          "caller": "verify_download",
          "callee": "getattr",
          "line": 124,
          "type": "direct"
        },
        {
          "caller": "verify_download",
          "callee": "str",
          "line": 124,
          "type": "direct"
        },
        {
          "caller": "verify_download",
          "callee": "getattr",
          "line": 126,
          "type": "direct"
        },
        {
          "caller": "verify_download",
          "callee": "str",
          "line": 126,
          "type": "direct"
        },
        {
          "caller": "verify_download",
          "callee": "split",
          "line": 128,
          "type": "attribute"
        },
        {
          "caller": "verify_download",
          "callee": "lower",
          "line": 128,
          "type": "attribute"
        },
        {
          "caller": "verify_download",
          "callee": "getattr",
          "line": 128,
          "type": "direct"
        },
        {
          "caller": "verify_download",
          "callee": "str",
          "line": 128,
          "type": "direct"
        },
        {
          "caller": "verify_download",
          "callee": "getattr",
          "line": 130,
          "type": "direct"
        },
        {
          "caller": "verify_download",
          "callee": "str",
          "line": 130,
          "type": "direct"
        },
        {
          "caller": "verify_download",
          "callee": "print",
          "line": 131,
          "type": "direct"
        },
        {
          "caller": "verify_download",
          "callee": "print",
          "line": 133,
          "type": "direct"
        },
        {
          "caller": "verify_download",
          "callee": "getattr",
          "line": 136,
          "type": "direct"
        },
        {
          "caller": "verify_download",
          "callee": "str",
          "line": 136,
          "type": "direct"
        },
        {
          "caller": "verify_download",
          "callee": "print",
          "line": 140,
          "type": "direct"
        },
        {
          "caller": "verify_download",
          "callee": "NamedTemporaryFile",
          "line": 142,
          "type": "attribute"
        },
        {
          "caller": "verify_download",
          "callee": "download_file",
          "line": 146,
          "type": "attribute"
        },
        {
          "caller": "verify_download",
          "callee": "exists",
          "line": 148,
          "type": "attribute"
        },
        {
          "caller": "verify_download",
          "callee": "Path",
          "line": 148,
          "type": "direct"
        },
        {
          "caller": "verify_download",
          "callee": "stat",
          "line": 149,
          "type": "attribute"
        },
        {
          "caller": "verify_download",
          "callee": "Path",
          "line": 149,
          "type": "direct"
        },
        {
          "caller": "verify_download",
          "callee": "print",
          "line": 150,
          "type": "direct"
        },
        {
          "caller": "verify_download",
          "callee": "print",
          "line": 151,
          "type": "direct"
        },
        {
          "caller": "verify_download",
          "callee": "print",
          "line": 152,
          "type": "direct"
        },
        {
          "caller": "verify_download",
          "callee": "unlink",
          "line": 155,
          "type": "attribute"
        },
        {
          "caller": "verify_download",
          "callee": "Path",
          "line": 155,
          "type": "direct"
        },
        {
          "caller": "verify_download",
          "callee": "print",
          "line": 158,
          "type": "direct"
        },
        {
          "caller": "verify_download",
          "callee": "print",
          "line": 162,
          "type": "direct"
        },
        {
          "caller": "verify_download",
          "callee": "unlink",
          "line": 167,
          "type": "attribute"
        },
        {
          "caller": "verify_download",
          "callee": "Path",
          "line": 167,
          "type": "direct"
        },
        {
          "caller": "verify_download",
          "callee": "print",
          "line": 174,
          "type": "direct"
        },
        {
          "caller": "verify_download",
          "callee": "disconnect",
          "line": 180,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "ArgumentParser",
          "line": 187,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "add_argument",
          "line": 188,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "getenv",
          "line": 188,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "add_argument",
          "line": 189,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "getenv",
          "line": 189,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "add_argument",
          "line": 190,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "getenv",
          "line": 190,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "add_argument",
          "line": 191,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "parse_args",
          "line": 193,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "all",
          "line": 195,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 196,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 197,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 198,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 199,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 200,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 201,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 202,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 203,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 204,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 205,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "run",
          "line": 209,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "verify_download",
          "line": 209,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 211,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 213,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 214,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 216,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 217,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 218,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 223,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 226,
          "type": "direct"
        }
      ],
      "error": null
    },
    {
      "filepath": "scripts\\working_bambu_ftp.py",
      "functions": [
        {
          "name": "__init__",
          "full_name": "BambuFTP.__init__",
          "class": "BambuFTP",
          "signature": "(self, host, port)",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 15,
          "line_end": 19,
          "access_level": "dunder",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "connect",
          "full_name": "BambuFTP.connect",
          "class": "BambuFTP",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Connect to FTP server with SSL.",
          "line_start": 21,
          "line_end": 40,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "login",
          "full_name": "BambuFTP.login",
          "class": "BambuFTP",
          "signature": "(self, username, password)",
          "return_type": "",
          "decorators": [],
          "docstring": "Login to FTP server.",
          "line_start": 42,
          "line_end": 58,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "cwd",
          "full_name": "BambuFTP.cwd",
          "class": "BambuFTP",
          "signature": "(self, directory)",
          "return_type": "",
          "decorators": [],
          "docstring": "Change working directory.",
          "line_start": 60,
          "line_end": 67,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "list_files",
          "full_name": "BambuFTP.list_files",
          "class": "BambuFTP",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "List files in current directory.",
          "line_start": 69,
          "line_end": 125,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "download_file",
          "full_name": "BambuFTP.download_file",
          "class": "BambuFTP",
          "signature": "(self, filename, local_path)",
          "return_type": "",
          "decorators": [],
          "docstring": "Download a file.",
          "line_start": 127,
          "line_end": 180,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "quit",
          "full_name": "BambuFTP.quit",
          "class": "BambuFTP",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Close connection.",
          "line_start": 182,
          "line_end": 191,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_send_command",
          "full_name": "BambuFTP._send_command",
          "class": "BambuFTP",
          "signature": "(self, command)",
          "return_type": "",
          "decorators": [],
          "docstring": "Send FTP command.",
          "line_start": 193,
          "line_end": 197,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_read_response",
          "full_name": "BambuFTP._read_response",
          "class": "BambuFTP",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Read FTP response.",
          "line_start": 199,
          "line_end": 210,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_working_ftp",
          "full_name": "test_working_ftp",
          "class": null,
          "signature": "()",
          "return_type": "",
          "decorators": [],
          "docstring": "Test the working FTP implementation.",
          "line_start": 212,
          "line_end": 292,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "ssl",
          "alias": null,
          "line": 6
        },
        {
          "type": "import",
          "module": "socket",
          "alias": null,
          "line": 7
        },
        {
          "type": "import",
          "module": "sys",
          "alias": null,
          "line": 8
        },
        {
          "type": "import",
          "module": "tempfile",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "pathlib",
          "name": "Path",
          "alias": null,
          "line": 10
        },
        {
          "type": "import",
          "module": "re",
          "alias": null,
          "line": 81
        },
        {
          "type": "import",
          "module": "re",
          "alias": null,
          "line": 137
        },
        {
          "type": "from_import",
          "module": "bambu_credentials",
          "name": "get_bambu_credentials",
          "alias": null,
          "line": 214
        }
      ],
      "function_calls": [
        {
          "caller": "BambuFTP.connect",
          "callee": "socket",
          "line": 24,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP.connect",
          "callee": "settimeout",
          "line": 25,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP.connect",
          "callee": "connect",
          "line": 26,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP.connect",
          "callee": "create_default_context",
          "line": 29,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP.connect",
          "callee": "wrap_socket",
          "line": 33,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP.connect",
          "callee": "_read_response",
          "line": 36,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP.connect",
          "callee": "print",
          "line": 37,
          "type": "direct"
        },
        {
          "caller": "BambuFTP.connect",
          "callee": "startswith",
          "line": 39,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP.connect",
          "callee": "Exception",
          "line": 40,
          "type": "direct"
        },
        {
          "caller": "BambuFTP.login",
          "callee": "_send_command",
          "line": 45,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP.login",
          "callee": "_read_response",
          "line": 46,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP.login",
          "callee": "print",
          "line": 47,
          "type": "direct"
        },
        {
          "caller": "BambuFTP.login",
          "callee": "startswith",
          "line": 49,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP.login",
          "callee": "_send_command",
          "line": 51,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP.login",
          "callee": "_read_response",
          "line": 52,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP.login",
          "callee": "print",
          "line": 53,
          "type": "direct"
        },
        {
          "caller": "BambuFTP.login",
          "callee": "startswith",
          "line": 55,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP.login",
          "callee": "Exception",
          "line": 56,
          "type": "direct"
        },
        {
          "caller": "BambuFTP.login",
          "callee": "startswith",
          "line": 57,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP.login",
          "callee": "Exception",
          "line": 58,
          "type": "direct"
        },
        {
          "caller": "BambuFTP.cwd",
          "callee": "_send_command",
          "line": 62,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP.cwd",
          "callee": "_read_response",
          "line": 63,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP.cwd",
          "callee": "print",
          "line": 64,
          "type": "direct"
        },
        {
          "caller": "BambuFTP.cwd",
          "callee": "startswith",
          "line": 66,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP.cwd",
          "callee": "Exception",
          "line": 67,
          "type": "direct"
        },
        {
          "caller": "BambuFTP.list_files",
          "callee": "_send_command",
          "line": 72,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP.list_files",
          "callee": "_read_response",
          "line": 73,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP.list_files",
          "callee": "print",
          "line": 74,
          "type": "direct"
        },
        {
          "caller": "BambuFTP.list_files",
          "callee": "startswith",
          "line": 76,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP.list_files",
          "callee": "Exception",
          "line": 77,
          "type": "direct"
        },
        {
          "caller": "BambuFTP.list_files",
          "callee": "search",
          "line": 82,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP.list_files",
          "callee": "Exception",
          "line": 84,
          "type": "direct"
        },
        {
          "caller": "BambuFTP.list_files",
          "callee": "split",
          "line": 86,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP.list_files",
          "callee": "group",
          "line": 86,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP.list_files",
          "callee": "join",
          "line": 87,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP.list_files",
          "callee": "int",
          "line": 88,
          "type": "direct"
        },
        {
          "caller": "BambuFTP.list_files",
          "callee": "int",
          "line": 88,
          "type": "direct"
        },
        {
          "caller": "BambuFTP.list_files",
          "callee": "print",
          "line": 90,
          "type": "direct"
        },
        {
          "caller": "BambuFTP.list_files",
          "callee": "socket",
          "line": 93,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP.list_files",
          "callee": "settimeout",
          "line": 94,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP.list_files",
          "callee": "connect",
          "line": 95,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP.list_files",
          "callee": "create_default_context",
          "line": 98,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP.list_files",
          "callee": "wrap_socket",
          "line": 101,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP.list_files",
          "callee": "_send_command",
          "line": 104,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP.list_files",
          "callee": "_read_response",
          "line": 105,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP.list_files",
          "callee": "print",
          "line": 106,
          "type": "direct"
        },
        {
          "caller": "BambuFTP.list_files",
          "callee": "recv",
          "line": 112,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP.list_files",
          "callee": "append",
          "line": 115,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP.list_files",
          "callee": "decode",
          "line": 115,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP.list_files",
          "callee": "close",
          "line": 119,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP.list_files",
          "callee": "_read_response",
          "line": 122,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP.list_files",
          "callee": "print",
          "line": 123,
          "type": "direct"
        },
        {
          "caller": "BambuFTP.list_files",
          "callee": "split",
          "line": 125,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP.list_files",
          "callee": "join",
          "line": 125,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP.download_file",
          "callee": "_send_command",
          "line": 130,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP.download_file",
          "callee": "_read_response",
          "line": 131,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP.download_file",
          "callee": "startswith",
          "line": 133,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP.download_file",
          "callee": "Exception",
          "line": 134,
          "type": "direct"
        },
        {
          "caller": "BambuFTP.download_file",
          "callee": "search",
          "line": 138,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP.download_file",
          "callee": "Exception",
          "line": 140,
          "type": "direct"
        },
        {
          "caller": "BambuFTP.download_file",
          "callee": "split",
          "line": 142,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP.download_file",
          "callee": "group",
          "line": 142,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP.download_file",
          "callee": "join",
          "line": 143,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP.download_file",
          "callee": "int",
          "line": 144,
          "type": "direct"
        },
        {
          "caller": "BambuFTP.download_file",
          "callee": "int",
          "line": 144,
          "type": "direct"
        },
        {
          "caller": "BambuFTP.download_file",
          "callee": "socket",
          "line": 147,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP.download_file",
          "callee": "settimeout",
          "line": 148,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP.download_file",
          "callee": "connect",
          "line": 149,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP.download_file",
          "callee": "create_default_context",
          "line": 152,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP.download_file",
          "callee": "wrap_socket",
          "line": 155,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP.download_file",
          "callee": "_send_command",
          "line": 158,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP.download_file",
          "callee": "_read_response",
          "line": 159,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP.download_file",
          "callee": "print",
          "line": 160,
          "type": "direct"
        },
        {
          "caller": "BambuFTP.download_file",
          "callee": "startswith",
          "line": 162,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP.download_file",
          "callee": "close",
          "line": 163,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP.download_file",
          "callee": "Exception",
          "line": 164,
          "type": "direct"
        },
        {
          "caller": "BambuFTP.download_file",
          "callee": "open",
          "line": 167,
          "type": "direct"
        },
        {
          "caller": "BambuFTP.download_file",
          "callee": "recv",
          "line": 169,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP.download_file",
          "callee": "write",
          "line": 172,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP.download_file",
          "callee": "close",
          "line": 174,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP.download_file",
          "callee": "_read_response",
          "line": 177,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP.download_file",
          "callee": "print",
          "line": 178,
          "type": "direct"
        },
        {
          "caller": "BambuFTP.quit",
          "callee": "_send_command",
          "line": 184,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP.quit",
          "callee": "_read_response",
          "line": 185,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP.quit",
          "callee": "print",
          "line": 186,
          "type": "direct"
        },
        {
          "caller": "BambuFTP.quit",
          "callee": "close",
          "line": 189,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP.quit",
          "callee": "close",
          "line": 191,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP._send_command",
          "callee": "encode",
          "line": 195,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP._send_command",
          "callee": "send",
          "line": 196,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP._send_command",
          "callee": "print",
          "line": 197,
          "type": "direct"
        },
        {
          "caller": "BambuFTP._read_response",
          "callee": "recv",
          "line": 203,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP._read_response",
          "callee": "strip",
          "line": 210,
          "type": "attribute"
        },
        {
          "caller": "BambuFTP._read_response",
          "callee": "decode",
          "line": 210,
          "type": "attribute"
        },
        {
          "caller": "test_working_ftp",
          "callee": "print",
          "line": 219,
          "type": "direct"
        },
        {
          "caller": "test_working_ftp",
          "callee": "print",
          "line": 220,
          "type": "direct"
        },
        {
          "caller": "test_working_ftp",
          "callee": "print",
          "line": 221,
          "type": "direct"
        },
        {
          "caller": "test_working_ftp",
          "callee": "print",
          "line": 222,
          "type": "direct"
        },
        {
          "caller": "test_working_ftp",
          "callee": "print",
          "line": 223,
          "type": "direct"
        },
        {
          "caller": "test_working_ftp",
          "callee": "get_bambu_credentials",
          "line": 226,
          "type": "direct"
        },
        {
          "caller": "test_working_ftp",
          "callee": "print",
          "line": 227,
          "type": "direct"
        },
        {
          "caller": "test_working_ftp",
          "callee": "print",
          "line": 229,
          "type": "direct"
        },
        {
          "caller": "test_working_ftp",
          "callee": "BambuFTP",
          "line": 234,
          "type": "direct"
        },
        {
          "caller": "test_working_ftp",
          "callee": "print",
          "line": 235,
          "type": "direct"
        },
        {
          "caller": "test_working_ftp",
          "callee": "connect",
          "line": 236,
          "type": "attribute"
        },
        {
          "caller": "test_working_ftp",
          "callee": "print",
          "line": 239,
          "type": "direct"
        },
        {
          "caller": "test_working_ftp",
          "callee": "login",
          "line": 240,
          "type": "attribute"
        },
        {
          "caller": "test_working_ftp",
          "callee": "print",
          "line": 243,
          "type": "direct"
        },
        {
          "caller": "test_working_ftp",
          "callee": "cwd",
          "line": 244,
          "type": "attribute"
        },
        {
          "caller": "test_working_ftp",
          "callee": "print",
          "line": 247,
          "type": "direct"
        },
        {
          "caller": "test_working_ftp",
          "callee": "list_files",
          "line": 248,
          "type": "attribute"
        },
        {
          "caller": "test_working_ftp",
          "callee": "print",
          "line": 250,
          "type": "direct"
        },
        {
          "caller": "test_working_ftp",
          "callee": "len",
          "line": 250,
          "type": "direct"
        },
        {
          "caller": "test_working_ftp",
          "callee": "strip",
          "line": 250,
          "type": "attribute"
        },
        {
          "caller": "test_working_ftp",
          "callee": "strip",
          "line": 251,
          "type": "attribute"
        },
        {
          "caller": "test_working_ftp",
          "callee": "startswith",
          "line": 251,
          "type": "attribute"
        },
        {
          "caller": "test_working_ftp",
          "callee": "enumerate",
          "line": 252,
          "type": "direct"
        },
        {
          "caller": "test_working_ftp",
          "callee": "print",
          "line": 253,
          "type": "direct"
        },
        {
          "caller": "test_working_ftp",
          "callee": "strip",
          "line": 253,
          "type": "attribute"
        },
        {
          "caller": "test_working_ftp",
          "callee": "lower",
          "line": 258,
          "type": "attribute"
        },
        {
          "caller": "test_working_ftp",
          "callee": "lower",
          "line": 258,
          "type": "attribute"
        },
        {
          "caller": "test_working_ftp",
          "callee": "strip",
          "line": 259,
          "type": "attribute"
        },
        {
          "caller": "test_working_ftp",
          "callee": "print",
          "line": 263,
          "type": "direct"
        },
        {
          "caller": "test_working_ftp",
          "callee": "split",
          "line": 266,
          "type": "attribute"
        },
        {
          "caller": "test_working_ftp",
          "callee": "Path",
          "line": 269,
          "type": "direct"
        },
        {
          "caller": "test_working_ftp",
          "callee": "mkdir",
          "line": 270,
          "type": "attribute"
        },
        {
          "caller": "test_working_ftp",
          "callee": "print",
          "line": 273,
          "type": "direct"
        },
        {
          "caller": "test_working_ftp",
          "callee": "download_file",
          "line": 274,
          "type": "attribute"
        },
        {
          "caller": "test_working_ftp",
          "callee": "str",
          "line": 274,
          "type": "direct"
        },
        {
          "caller": "test_working_ftp",
          "callee": "exists",
          "line": 276,
          "type": "attribute"
        },
        {
          "caller": "test_working_ftp",
          "callee": "stat",
          "line": 277,
          "type": "attribute"
        },
        {
          "caller": "test_working_ftp",
          "callee": "print",
          "line": 278,
          "type": "direct"
        },
        {
          "caller": "test_working_ftp",
          "callee": "print",
          "line": 281,
          "type": "direct"
        },
        {
          "caller": "test_working_ftp",
          "callee": "print",
          "line": 284,
          "type": "direct"
        },
        {
          "caller": "test_working_ftp",
          "callee": "quit",
          "line": 288,
          "type": "attribute"
        },
        {
          "caller": "test_working_ftp",
          "callee": "print",
          "line": 291,
          "type": "direct"
        }
      ],
      "error": null
    },
    {
      "filepath": "src\\api\\__init__.py",
      "functions": [],
      "imports": [],
      "function_calls": [],
      "error": null
    },
    {
      "filepath": "src\\api\\routers\\__init__.py",
      "functions": [],
      "imports": [
        {
          "type": "from_import",
          "module": "health",
          "name": "router",
          "alias": "health_router",
          "line": 3
        },
        {
          "type": "from_import",
          "module": "printers",
          "name": "router",
          "alias": "printers_router",
          "line": 4
        },
        {
          "type": "from_import",
          "module": "jobs",
          "name": "router",
          "alias": "jobs_router",
          "line": 5
        },
        {
          "type": "from_import",
          "module": "files",
          "name": "router",
          "alias": "files_router",
          "line": 6
        },
        {
          "type": "from_import",
          "module": "analytics",
          "name": "router",
          "alias": "analytics_router",
          "line": 7
        },
        {
          "type": "from_import",
          "module": "system",
          "name": "router",
          "alias": "system_router",
          "line": 8
        },
        {
          "type": "from_import",
          "module": "websocket",
          "name": "router",
          "alias": "websocket_router",
          "line": 9
        },
        {
          "type": "from_import",
          "module": "settings",
          "name": "router",
          "alias": "settings_router",
          "line": 10
        },
        {
          "type": "from_import",
          "module": "errors",
          "name": "router",
          "alias": "errors_router",
          "line": 11
        },
        {
          "type": "from_import",
          "module": "camera",
          "name": "router",
          "alias": "camera_router",
          "line": 12
        }
      ],
      "function_calls": [],
      "error": null
    },
    {
      "filepath": "src\\api\\routers\\analytics.py",
      "functions": [
        {
          "name": "get_analytics_summary",
          "full_name": "get_analytics_summary",
          "class": null,
          "signature": "(start_date: Optional[date], end_date: Optional[date], analytics_service: AnalyticsService)",
          "return_type": "",
          "decorators": [
            "router.get('/summary', response_model=AnalyticsResponse)"
          ],
          "docstring": "Get overall analytics summary.",
          "line_start": 48,
          "line_end": 62,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_business_analytics",
          "full_name": "get_business_analytics",
          "class": null,
          "signature": "(start_date: Optional[date], end_date: Optional[date], analytics_service: AnalyticsService)",
          "return_type": "",
          "decorators": [
            "router.get('/business', response_model=BusinessAnalyticsResponse)"
          ],
          "docstring": "Get business analytics for print operations.",
          "line_start": 66,
          "line_end": 80,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_analytics_overview",
          "full_name": "get_analytics_overview",
          "class": null,
          "signature": "(period: Optional[str], analytics_service: AnalyticsService)",
          "return_type": "",
          "decorators": [
            "router.get('/overview', response_model=OverviewResponse)"
          ],
          "docstring": "Get dashboard overview statistics.",
          "line_start": 84,
          "line_end": 97,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 3
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "date",
          "alias": null,
          "line": 3
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Optional",
          "alias": null,
          "line": 4
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "APIRouter",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "Depends",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "HTTPException",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "status",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "Query",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "pydantic",
          "name": "BaseModel",
          "alias": null,
          "line": 7
        },
        {
          "type": "import",
          "module": "structlog",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "src.services.analytics_service",
          "name": "AnalyticsService",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "src.utils.dependencies",
          "name": "get_analytics_service",
          "alias": null,
          "line": 11
        }
      ],
      "function_calls": [
        {
          "caller": "get_analytics_summary",
          "callee": "Query",
          "line": 49,
          "type": "direct"
        },
        {
          "caller": "get_analytics_summary",
          "callee": "Query",
          "line": 50,
          "type": "direct"
        },
        {
          "caller": "get_analytics_summary",
          "callee": "Depends",
          "line": 51,
          "type": "direct"
        },
        {
          "caller": "get_analytics_summary",
          "callee": "get_summary",
          "line": 55,
          "type": "attribute"
        },
        {
          "caller": "get_analytics_summary",
          "callee": "error",
          "line": 58,
          "type": "attribute"
        },
        {
          "caller": "get_analytics_summary",
          "callee": "str",
          "line": 58,
          "type": "direct"
        },
        {
          "caller": "get_analytics_summary",
          "callee": "HTTPException",
          "line": 59,
          "type": "direct"
        },
        {
          "caller": "get_analytics_summary",
          "callee": "get",
          "line": 47,
          "type": "attribute"
        },
        {
          "caller": "get_business_analytics",
          "callee": "Query",
          "line": 67,
          "type": "direct"
        },
        {
          "caller": "get_business_analytics",
          "callee": "Query",
          "line": 68,
          "type": "direct"
        },
        {
          "caller": "get_business_analytics",
          "callee": "Depends",
          "line": 69,
          "type": "direct"
        },
        {
          "caller": "get_business_analytics",
          "callee": "get_business_analytics",
          "line": 73,
          "type": "attribute"
        },
        {
          "caller": "get_business_analytics",
          "callee": "error",
          "line": 76,
          "type": "attribute"
        },
        {
          "caller": "get_business_analytics",
          "callee": "str",
          "line": 76,
          "type": "direct"
        },
        {
          "caller": "get_business_analytics",
          "callee": "HTTPException",
          "line": 77,
          "type": "direct"
        },
        {
          "caller": "get_business_analytics",
          "callee": "get",
          "line": 65,
          "type": "attribute"
        },
        {
          "caller": "get_analytics_overview",
          "callee": "Query",
          "line": 85,
          "type": "direct"
        },
        {
          "caller": "get_analytics_overview",
          "callee": "Depends",
          "line": 86,
          "type": "direct"
        },
        {
          "caller": "get_analytics_overview",
          "callee": "get_dashboard_overview",
          "line": 90,
          "type": "attribute"
        },
        {
          "caller": "get_analytics_overview",
          "callee": "error",
          "line": 93,
          "type": "attribute"
        },
        {
          "caller": "get_analytics_overview",
          "callee": "str",
          "line": 93,
          "type": "direct"
        },
        {
          "caller": "get_analytics_overview",
          "callee": "HTTPException",
          "line": 94,
          "type": "direct"
        },
        {
          "caller": "get_analytics_overview",
          "callee": "get",
          "line": 83,
          "type": "attribute"
        }
      ],
      "error": null
    },
    {
      "filepath": "src\\api\\routers\\camera.py",
      "functions": [
        {
          "name": "get_camera_status",
          "full_name": "get_camera_status",
          "class": null,
          "signature": "(printer_id: UUID, printer_service: PrinterService)",
          "return_type": "",
          "decorators": [
            "router.get('/{printer_id}/camera/status', response_model=CameraStatus)"
          ],
          "docstring": "Get camera status and availability for a printer.",
          "line_start": 24,
          "line_end": 68,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_camera_stream",
          "full_name": "get_camera_stream",
          "class": null,
          "signature": "(printer_id: UUID, printer_service: PrinterService)",
          "return_type": "",
          "decorators": [
            "router.get('/{printer_id}/camera/stream')"
          ],
          "docstring": "Proxy camera stream from printer.",
          "line_start": 72,
          "line_end": 115,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "take_snapshot",
          "full_name": "take_snapshot",
          "class": null,
          "signature": "(printer_id: UUID, snapshot_data: SnapshotCreate, printer_service: PrinterService)",
          "return_type": "",
          "decorators": [
            "router.post('/{printer_id}/camera/snapshot', response_model=SnapshotResponse)"
          ],
          "docstring": "Take a camera snapshot and save it.",
          "line_start": 119,
          "line_end": 194,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "list_snapshots",
          "full_name": "list_snapshots",
          "class": null,
          "signature": "(printer_id: UUID, limit: int, printer_service: PrinterService)",
          "return_type": "",
          "decorators": [
            "router.get('/{printer_id}/snapshots', response_model=List[SnapshotResponse])"
          ],
          "docstring": "List snapshots for a printer.",
          "line_start": 198,
          "line_end": 216,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "download_snapshot",
          "full_name": "download_snapshot",
          "class": null,
          "signature": "(snapshot_id: int, printer_service: PrinterService)",
          "return_type": "",
          "decorators": [
            "router.get('/snapshots/{snapshot_id}/download')"
          ],
          "docstring": "Download a snapshot file.",
          "line_start": 220,
          "line_end": 240,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "os",
          "alias": null,
          "line": 3
        },
        {
          "type": "from_import",
          "module": "uuid",
          "name": "UUID",
          "alias": null,
          "line": 4
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "List",
          "alias": null,
          "line": 5
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Optional",
          "alias": null,
          "line": 5
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "APIRouter",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "Depends",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "HTTPException",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "status",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "Response",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "fastapi.responses",
          "name": "StreamingResponse",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "pydantic",
          "name": "BaseModel",
          "alias": null,
          "line": 10
        },
        {
          "type": "import",
          "module": "structlog",
          "alias": null,
          "line": 11
        },
        {
          "type": "import",
          "module": "aiofiles",
          "alias": null,
          "line": 12
        },
        {
          "type": "import",
          "module": "aiofiles.os",
          "alias": null,
          "line": 13
        },
        {
          "type": "from_import",
          "module": "src.models.snapshot",
          "name": "Snapshot",
          "alias": null,
          "line": 15
        },
        {
          "type": "from_import",
          "module": "src.models.snapshot",
          "name": "SnapshotCreate",
          "alias": null,
          "line": 15
        },
        {
          "type": "from_import",
          "module": "src.models.snapshot",
          "name": "SnapshotResponse",
          "alias": null,
          "line": 15
        },
        {
          "type": "from_import",
          "module": "src.models.snapshot",
          "name": "CameraStatus",
          "alias": null,
          "line": 15
        },
        {
          "type": "from_import",
          "module": "src.models.snapshot",
          "name": "CameraTrigger",
          "alias": null,
          "line": 15
        },
        {
          "type": "from_import",
          "module": "src.services.printer_service",
          "name": "PrinterService",
          "alias": null,
          "line": 16
        },
        {
          "type": "from_import",
          "module": "src.utils.dependencies",
          "name": "get_printer_service",
          "alias": null,
          "line": 17
        }
      ],
      "function_calls": [
        {
          "caller": "get_camera_status",
          "callee": "Depends",
          "line": 26,
          "type": "direct"
        },
        {
          "caller": "get_camera_status",
          "callee": "str",
          "line": 30,
          "type": "direct"
        },
        {
          "caller": "get_camera_status",
          "callee": "get_printer_driver",
          "line": 31,
          "type": "attribute"
        },
        {
          "caller": "get_camera_status",
          "callee": "HTTPException",
          "line": 34,
          "type": "direct"
        },
        {
          "caller": "get_camera_status",
          "callee": "has_camera",
          "line": 39,
          "type": "attribute"
        },
        {
          "caller": "get_camera_status",
          "callee": "get_camera_stream_url",
          "line": 45,
          "type": "attribute"
        },
        {
          "caller": "get_camera_status",
          "callee": "str",
          "line": 49,
          "type": "direct"
        },
        {
          "caller": "get_camera_status",
          "callee": "CameraStatus",
          "line": 53,
          "type": "direct"
        },
        {
          "caller": "get_camera_status",
          "callee": "error",
          "line": 63,
          "type": "attribute"
        },
        {
          "caller": "get_camera_status",
          "callee": "str",
          "line": 64,
          "type": "direct"
        },
        {
          "caller": "get_camera_status",
          "callee": "str",
          "line": 64,
          "type": "direct"
        },
        {
          "caller": "get_camera_status",
          "callee": "HTTPException",
          "line": 65,
          "type": "direct"
        },
        {
          "caller": "get_camera_status",
          "callee": "get",
          "line": 23,
          "type": "attribute"
        },
        {
          "caller": "get_camera_stream",
          "callee": "Depends",
          "line": 74,
          "type": "direct"
        },
        {
          "caller": "get_camera_stream",
          "callee": "str",
          "line": 78,
          "type": "direct"
        },
        {
          "caller": "get_camera_stream",
          "callee": "get_printer_driver",
          "line": 79,
          "type": "attribute"
        },
        {
          "caller": "get_camera_stream",
          "callee": "HTTPException",
          "line": 82,
          "type": "direct"
        },
        {
          "caller": "get_camera_stream",
          "callee": "has_camera",
          "line": 87,
          "type": "attribute"
        },
        {
          "caller": "get_camera_stream",
          "callee": "HTTPException",
          "line": 88,
          "type": "direct"
        },
        {
          "caller": "get_camera_stream",
          "callee": "get_camera_stream_url",
          "line": 93,
          "type": "attribute"
        },
        {
          "caller": "get_camera_stream",
          "callee": "HTTPException",
          "line": 95,
          "type": "direct"
        },
        {
          "caller": "get_camera_stream",
          "callee": "Response",
          "line": 102,
          "type": "direct"
        },
        {
          "caller": "get_camera_stream",
          "callee": "error",
          "line": 110,
          "type": "attribute"
        },
        {
          "caller": "get_camera_stream",
          "callee": "str",
          "line": 111,
          "type": "direct"
        },
        {
          "caller": "get_camera_stream",
          "callee": "str",
          "line": 111,
          "type": "direct"
        },
        {
          "caller": "get_camera_stream",
          "callee": "HTTPException",
          "line": 112,
          "type": "direct"
        },
        {
          "caller": "get_camera_stream",
          "callee": "get",
          "line": 71,
          "type": "attribute"
        },
        {
          "caller": "take_snapshot",
          "callee": "Depends",
          "line": 122,
          "type": "direct"
        },
        {
          "caller": "take_snapshot",
          "callee": "str",
          "line": 126,
          "type": "direct"
        },
        {
          "caller": "take_snapshot",
          "callee": "get_printer_driver",
          "line": 127,
          "type": "attribute"
        },
        {
          "caller": "take_snapshot",
          "callee": "HTTPException",
          "line": 130,
          "type": "direct"
        },
        {
          "caller": "take_snapshot",
          "callee": "has_camera",
          "line": 135,
          "type": "attribute"
        },
        {
          "caller": "take_snapshot",
          "callee": "HTTPException",
          "line": 136,
          "type": "direct"
        },
        {
          "caller": "take_snapshot",
          "callee": "take_snapshot",
          "line": 142,
          "type": "attribute"
        },
        {
          "caller": "take_snapshot",
          "callee": "HTTPException",
          "line": 144,
          "type": "direct"
        },
        {
          "caller": "take_snapshot",
          "callee": "strftime",
          "line": 150,
          "type": "attribute"
        },
        {
          "caller": "take_snapshot",
          "callee": "now",
          "line": 150,
          "type": "attribute"
        },
        {
          "caller": "take_snapshot",
          "callee": "makedirs",
          "line": 155,
          "type": "attribute"
        },
        {
          "caller": "take_snapshot",
          "callee": "join",
          "line": 157,
          "type": "attribute"
        },
        {
          "caller": "take_snapshot",
          "callee": "open",
          "line": 160,
          "type": "attribute"
        },
        {
          "caller": "take_snapshot",
          "callee": "write",
          "line": 161,
          "type": "attribute"
        },
        {
          "caller": "take_snapshot",
          "callee": "SnapshotResponse",
          "line": 164,
          "type": "direct"
        },
        {
          "caller": "take_snapshot",
          "callee": "len",
          "line": 169,
          "type": "direct"
        },
        {
          "caller": "take_snapshot",
          "callee": "isoformat",
          "line": 171,
          "type": "attribute"
        },
        {
          "caller": "take_snapshot",
          "callee": "now",
          "line": 171,
          "type": "attribute"
        },
        {
          "caller": "take_snapshot",
          "callee": "info",
          "line": 179,
          "type": "attribute"
        },
        {
          "caller": "take_snapshot",
          "callee": "len",
          "line": 182,
          "type": "direct"
        },
        {
          "caller": "take_snapshot",
          "callee": "error",
          "line": 189,
          "type": "attribute"
        },
        {
          "caller": "take_snapshot",
          "callee": "str",
          "line": 190,
          "type": "direct"
        },
        {
          "caller": "take_snapshot",
          "callee": "str",
          "line": 190,
          "type": "direct"
        },
        {
          "caller": "take_snapshot",
          "callee": "HTTPException",
          "line": 191,
          "type": "direct"
        },
        {
          "caller": "take_snapshot",
          "callee": "post",
          "line": 118,
          "type": "attribute"
        },
        {
          "caller": "list_snapshots",
          "callee": "Depends",
          "line": 201,
          "type": "direct"
        },
        {
          "caller": "list_snapshots",
          "callee": "str",
          "line": 205,
          "type": "direct"
        },
        {
          "caller": "list_snapshots",
          "callee": "error",
          "line": 211,
          "type": "attribute"
        },
        {
          "caller": "list_snapshots",
          "callee": "str",
          "line": 212,
          "type": "direct"
        },
        {
          "caller": "list_snapshots",
          "callee": "str",
          "line": 212,
          "type": "direct"
        },
        {
          "caller": "list_snapshots",
          "callee": "HTTPException",
          "line": 213,
          "type": "direct"
        },
        {
          "caller": "list_snapshots",
          "callee": "get",
          "line": 197,
          "type": "attribute"
        },
        {
          "caller": "download_snapshot",
          "callee": "Depends",
          "line": 222,
          "type": "direct"
        },
        {
          "caller": "download_snapshot",
          "callee": "HTTPException",
          "line": 227,
          "type": "direct"
        },
        {
          "caller": "download_snapshot",
          "callee": "error",
          "line": 235,
          "type": "attribute"
        },
        {
          "caller": "download_snapshot",
          "callee": "str",
          "line": 236,
          "type": "direct"
        },
        {
          "caller": "download_snapshot",
          "callee": "HTTPException",
          "line": 237,
          "type": "direct"
        },
        {
          "caller": "download_snapshot",
          "callee": "get",
          "line": 219,
          "type": "attribute"
        }
      ],
      "error": null
    },
    {
      "filepath": "src\\api\\routers\\debug.py",
      "functions": [
        {
          "name": "debug_printer_thumbnail",
          "full_name": "debug_printer_thumbnail",
          "class": null,
          "signature": "(request: Request, printer_id: str, include_file_record: bool, include_base64_lengths: bool)",
          "return_type": "",
          "decorators": [
            "router.get('/printers/{printer_id}/thumbnail', tags=['Debug'], summary='Debug current printer thumbnail linkage')"
          ],
          "docstring": "Return raw status + file record & derived thumbnail info for a printer.\n\nHelps verify why a dashboard thumbnail might not be appearing.",
          "line_start": 16,
          "line_end": 74,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "debug_file",
          "full_name": "debug_file",
          "class": null,
          "signature": "(request: Request, file_id: str, include_base64_length: bool)",
          "return_type": "",
          "decorators": [
            "router.get('/files/{file_id}', tags=['Debug'], summary='Debug file record & thumbnail flags')"
          ],
          "docstring": "",
          "line_start": 78,
          "line_end": 94,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_thumbnail_processing_log",
          "full_name": "get_thumbnail_processing_log",
          "class": null,
          "signature": "(request: Request, limit: int)",
          "return_type": "",
          "decorators": [
            "router.get('/thumbnail-processing-log', tags=['Debug'], summary='Get thumbnail processing status log')"
          ],
          "docstring": "Return recent thumbnail processing attempts with status and details.\n\nHelps debug why thumbnail extraction might be failing for specific files.\nShows the last processing attempts with timestamps, file types, and error details.",
          "line_start": 98,
          "line_end": 154,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "from_import",
          "module": "typing",
          "name": "Optional",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "List",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "APIRouter",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "Request",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "Query",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "HTTPException",
          "alias": null,
          "line": 7
        },
        {
          "type": "import",
          "module": "structlog",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "pathlib",
          "name": "Path",
          "alias": null,
          "line": 107
        }
      ],
      "function_calls": [
        {
          "caller": "debug_printer_thumbnail",
          "callee": "Query",
          "line": 19,
          "type": "direct"
        },
        {
          "caller": "debug_printer_thumbnail",
          "callee": "Query",
          "line": 20,
          "type": "direct"
        },
        {
          "caller": "debug_printer_thumbnail",
          "callee": "getattr",
          "line": 27,
          "type": "direct"
        },
        {
          "caller": "debug_printer_thumbnail",
          "callee": "get",
          "line": 29,
          "type": "attribute"
        },
        {
          "caller": "debug_printer_thumbnail",
          "callee": "HTTPException",
          "line": 31,
          "type": "direct"
        },
        {
          "caller": "debug_printer_thumbnail",
          "callee": "getattr",
          "line": 33,
          "type": "direct"
        },
        {
          "caller": "debug_printer_thumbnail",
          "callee": "bool",
          "line": 37,
          "type": "direct"
        },
        {
          "caller": "debug_printer_thumbnail",
          "callee": "hasattr",
          "line": 43,
          "type": "direct"
        },
        {
          "caller": "debug_printer_thumbnail",
          "callee": "model_dump",
          "line": 43,
          "type": "attribute"
        },
        {
          "caller": "debug_printer_thumbnail",
          "callee": "get",
          "line": 45,
          "type": "attribute"
        },
        {
          "caller": "debug_printer_thumbnail",
          "callee": "get",
          "line": 47,
          "type": "attribute"
        },
        {
          "caller": "debug_printer_thumbnail",
          "callee": "get",
          "line": 48,
          "type": "attribute"
        },
        {
          "caller": "debug_printer_thumbnail",
          "callee": "get_file_by_id",
          "line": 51,
          "type": "attribute"
        },
        {
          "caller": "debug_printer_thumbnail",
          "callee": "append",
          "line": 53,
          "type": "attribute"
        },
        {
          "caller": "debug_printer_thumbnail",
          "callee": "get",
          "line": 55,
          "type": "attribute"
        },
        {
          "caller": "debug_printer_thumbnail",
          "callee": "get",
          "line": 56,
          "type": "attribute"
        },
        {
          "caller": "debug_printer_thumbnail",
          "callee": "append",
          "line": 57,
          "type": "attribute"
        },
        {
          "caller": "debug_printer_thumbnail",
          "callee": "get",
          "line": 58,
          "type": "attribute"
        },
        {
          "caller": "debug_printer_thumbnail",
          "callee": "len",
          "line": 60,
          "type": "direct"
        },
        {
          "caller": "debug_printer_thumbnail",
          "callee": "append",
          "line": 63,
          "type": "attribute"
        },
        {
          "caller": "debug_printer_thumbnail",
          "callee": "get",
          "line": 64,
          "type": "attribute"
        },
        {
          "caller": "debug_printer_thumbnail",
          "callee": "append",
          "line": 65,
          "type": "attribute"
        },
        {
          "caller": "debug_printer_thumbnail",
          "callee": "append",
          "line": 67,
          "type": "attribute"
        },
        {
          "caller": "debug_printer_thumbnail",
          "callee": "items",
          "line": 71,
          "type": "attribute"
        },
        {
          "caller": "debug_printer_thumbnail",
          "callee": "get",
          "line": 15,
          "type": "attribute"
        },
        {
          "caller": "debug_file",
          "callee": "Query",
          "line": 81,
          "type": "direct"
        },
        {
          "caller": "debug_file",
          "callee": "getattr",
          "line": 83,
          "type": "direct"
        },
        {
          "caller": "debug_file",
          "callee": "HTTPException",
          "line": 85,
          "type": "direct"
        },
        {
          "caller": "debug_file",
          "callee": "get_file_by_id",
          "line": 87,
          "type": "attribute"
        },
        {
          "caller": "debug_file",
          "callee": "HTTPException",
          "line": 89,
          "type": "direct"
        },
        {
          "caller": "debug_file",
          "callee": "items",
          "line": 91,
          "type": "attribute"
        },
        {
          "caller": "debug_file",
          "callee": "get",
          "line": 92,
          "type": "attribute"
        },
        {
          "caller": "debug_file",
          "callee": "len",
          "line": 93,
          "type": "direct"
        },
        {
          "caller": "debug_file",
          "callee": "get",
          "line": 77,
          "type": "attribute"
        },
        {
          "caller": "get_thumbnail_processing_log",
          "callee": "Query",
          "line": 100,
          "type": "direct"
        },
        {
          "caller": "get_thumbnail_processing_log",
          "callee": "getattr",
          "line": 109,
          "type": "direct"
        },
        {
          "caller": "get_thumbnail_processing_log",
          "callee": "HTTPException",
          "line": 111,
          "type": "direct"
        },
        {
          "caller": "get_thumbnail_processing_log",
          "callee": "get_thumbnail_processing_log",
          "line": 113,
          "type": "attribute"
        },
        {
          "caller": "get_thumbnail_processing_log",
          "callee": "get",
          "line": 118,
          "type": "attribute"
        },
        {
          "caller": "get_thumbnail_processing_log",
          "callee": "get",
          "line": 120,
          "type": "attribute"
        },
        {
          "caller": "get_thumbnail_processing_log",
          "callee": "Path",
          "line": 122,
          "type": "direct"
        },
        {
          "caller": "get_thumbnail_processing_log",
          "callee": "get",
          "line": 122,
          "type": "attribute"
        },
        {
          "caller": "get_thumbnail_processing_log",
          "callee": "get",
          "line": 123,
          "type": "attribute"
        },
        {
          "caller": "get_thumbnail_processing_log",
          "callee": "get",
          "line": 124,
          "type": "attribute"
        },
        {
          "caller": "get_thumbnail_processing_log",
          "callee": "get",
          "line": 128,
          "type": "attribute"
        },
        {
          "caller": "get_thumbnail_processing_log",
          "callee": "get",
          "line": 129,
          "type": "attribute"
        },
        {
          "caller": "get_thumbnail_processing_log",
          "callee": "append",
          "line": 131,
          "type": "attribute"
        },
        {
          "caller": "get_thumbnail_processing_log",
          "callee": "len",
          "line": 134,
          "type": "direct"
        },
        {
          "caller": "get_thumbnail_processing_log",
          "callee": "sum",
          "line": 135,
          "type": "direct"
        },
        {
          "caller": "get_thumbnail_processing_log",
          "callee": "get",
          "line": 135,
          "type": "attribute"
        },
        {
          "caller": "get_thumbnail_processing_log",
          "callee": "sum",
          "line": 136,
          "type": "direct"
        },
        {
          "caller": "get_thumbnail_processing_log",
          "callee": "get",
          "line": 136,
          "type": "attribute"
        },
        {
          "caller": "get_thumbnail_processing_log",
          "callee": "round",
          "line": 137,
          "type": "direct"
        },
        {
          "caller": "get_thumbnail_processing_log",
          "callee": "get",
          "line": 142,
          "type": "attribute"
        },
        {
          "caller": "get_thumbnail_processing_log",
          "callee": "get",
          "line": 143,
          "type": "attribute"
        },
        {
          "caller": "get_thumbnail_processing_log",
          "callee": "get",
          "line": 97,
          "type": "attribute"
        }
      ],
      "error": null
    },
    {
      "filepath": "src\\api\\routers\\errors.py",
      "functions": [
        {
          "name": "__init__",
          "full_name": "ErrorStoreService.__init__",
          "class": "ErrorStoreService",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 48,
          "line_end": 51,
          "access_level": "dunder",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "ensure_log_directory",
          "full_name": "ErrorStoreService.ensure_log_directory",
          "class": "ErrorStoreService",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Ensure the log directory exists.",
          "line_start": 53,
          "line_end": 55,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "store_errors",
          "full_name": "ErrorStoreService.store_errors",
          "class": "ErrorStoreService",
          "signature": "(self, errors: List[ErrorReport], session: SessionInfo)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Store error reports to file.",
          "line_start": 57,
          "line_end": 85,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_recent_errors",
          "full_name": "ErrorStoreService.get_recent_errors",
          "class": "ErrorStoreService",
          "signature": "(self, limit: int)",
          "return_type": "List[Dict[str, Any]]",
          "decorators": [],
          "docstring": "Get recent error reports.",
          "line_start": 87,
          "line_end": 109,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_error_statistics",
          "full_name": "ErrorStoreService.get_error_statistics",
          "class": "ErrorStoreService",
          "signature": "(self, hours: int)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Get error statistics for the specified time period.",
          "line_start": 111,
          "line_end": 162,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "report_errors",
          "full_name": "report_errors",
          "class": null,
          "signature": "(request: ErrorReportRequest, client_request: Request)",
          "return_type": "",
          "decorators": [
            "router.post('/report')"
          ],
          "docstring": "Receive and store frontend error reports.",
          "line_start": 170,
          "line_end": 216,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_recent_errors",
          "full_name": "get_recent_errors",
          "class": null,
          "signature": "(limit: int)",
          "return_type": "",
          "decorators": [
            "router.get('/recent')"
          ],
          "docstring": "Get recent error reports for monitoring.",
          "line_start": 220,
          "line_end": 234,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_error_statistics",
          "full_name": "get_error_statistics",
          "class": null,
          "signature": "(hours: int)",
          "return_type": "",
          "decorators": [
            "router.get('/statistics')"
          ],
          "docstring": "Get error statistics for monitoring dashboard.",
          "line_start": 238,
          "line_end": 251,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "error_system_health",
          "full_name": "error_system_health",
          "class": null,
          "signature": "()",
          "return_type": "",
          "decorators": [
            "router.get('/health')"
          ],
          "docstring": "Check error reporting system health.",
          "line_start": 255,
          "line_end": 279,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "from_import",
          "module": "typing",
          "name": "List",
          "alias": null,
          "line": 3
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Dict",
          "alias": null,
          "line": 3
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Any",
          "alias": null,
          "line": 3
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Optional",
          "alias": null,
          "line": 3
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 4
        },
        {
          "type": "import",
          "module": "json",
          "alias": null,
          "line": 5
        },
        {
          "type": "import",
          "module": "structlog",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "pathlib",
          "name": "Path",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "APIRouter",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "Request",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "HTTPException",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "status",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "pydantic",
          "name": "BaseModel",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "pydantic",
          "name": "Field",
          "alias": null,
          "line": 10
        }
      ],
      "function_calls": [
        {
          "caller": "ErrorStoreService.__init__",
          "callee": "Path",
          "line": 49,
          "type": "direct"
        },
        {
          "caller": "ErrorStoreService.__init__",
          "callee": "ensure_log_directory",
          "line": 51,
          "type": "attribute"
        },
        {
          "caller": "ErrorStoreService.ensure_log_directory",
          "callee": "mkdir",
          "line": 55,
          "type": "attribute"
        },
        {
          "caller": "ErrorStoreService.store_errors",
          "callee": "isoformat",
          "line": 62,
          "type": "attribute"
        },
        {
          "caller": "ErrorStoreService.store_errors",
          "callee": "now",
          "line": 62,
          "type": "attribute"
        },
        {
          "caller": "ErrorStoreService.store_errors",
          "callee": "dict",
          "line": 63,
          "type": "attribute"
        },
        {
          "caller": "ErrorStoreService.store_errors",
          "callee": "dict",
          "line": 64,
          "type": "attribute"
        },
        {
          "caller": "ErrorStoreService.store_errors",
          "callee": "len",
          "line": 65,
          "type": "direct"
        },
        {
          "caller": "ErrorStoreService.store_errors",
          "callee": "open",
          "line": 69,
          "type": "direct"
        },
        {
          "caller": "ErrorStoreService.store_errors",
          "callee": "write",
          "line": 70,
          "type": "attribute"
        },
        {
          "caller": "ErrorStoreService.store_errors",
          "callee": "dumps",
          "line": 70,
          "type": "attribute"
        },
        {
          "caller": "ErrorStoreService.store_errors",
          "callee": "info",
          "line": 73,
          "type": "attribute"
        },
        {
          "caller": "ErrorStoreService.store_errors",
          "callee": "len",
          "line": 76,
          "type": "direct"
        },
        {
          "caller": "ErrorStoreService.store_errors",
          "callee": "error",
          "line": 84,
          "type": "attribute"
        },
        {
          "caller": "ErrorStoreService.store_errors",
          "callee": "str",
          "line": 84,
          "type": "direct"
        },
        {
          "caller": "ErrorStoreService.get_recent_errors",
          "callee": "exists",
          "line": 90,
          "type": "attribute"
        },
        {
          "caller": "ErrorStoreService.get_recent_errors",
          "callee": "open",
          "line": 94,
          "type": "direct"
        },
        {
          "caller": "ErrorStoreService.get_recent_errors",
          "callee": "readlines",
          "line": 95,
          "type": "attribute"
        },
        {
          "caller": "ErrorStoreService.get_recent_errors",
          "callee": "loads",
          "line": 100,
          "type": "attribute"
        },
        {
          "caller": "ErrorStoreService.get_recent_errors",
          "callee": "strip",
          "line": 100,
          "type": "attribute"
        },
        {
          "caller": "ErrorStoreService.get_recent_errors",
          "callee": "append",
          "line": 101,
          "type": "attribute"
        },
        {
          "caller": "ErrorStoreService.get_recent_errors",
          "callee": "list",
          "line": 105,
          "type": "direct"
        },
        {
          "caller": "ErrorStoreService.get_recent_errors",
          "callee": "reversed",
          "line": 105,
          "type": "direct"
        },
        {
          "caller": "ErrorStoreService.get_recent_errors",
          "callee": "error",
          "line": 108,
          "type": "attribute"
        },
        {
          "caller": "ErrorStoreService.get_recent_errors",
          "callee": "str",
          "line": 108,
          "type": "direct"
        },
        {
          "caller": "ErrorStoreService.get_error_statistics",
          "callee": "timestamp",
          "line": 114,
          "type": "attribute"
        },
        {
          "caller": "ErrorStoreService.get_error_statistics",
          "callee": "now",
          "line": 114,
          "type": "attribute"
        },
        {
          "caller": "ErrorStoreService.get_error_statistics",
          "callee": "get_recent_errors",
          "line": 115,
          "type": "attribute"
        },
        {
          "caller": "ErrorStoreService.get_error_statistics",
          "callee": "timestamp",
          "line": 120,
          "type": "attribute"
        },
        {
          "caller": "ErrorStoreService.get_error_statistics",
          "callee": "fromisoformat",
          "line": 120,
          "type": "attribute"
        },
        {
          "caller": "ErrorStoreService.get_error_statistics",
          "callee": "extend",
          "line": 122,
          "type": "attribute"
        },
        {
          "caller": "ErrorStoreService.get_error_statistics",
          "callee": "len",
          "line": 125,
          "type": "direct"
        },
        {
          "caller": "ErrorStoreService.get_error_statistics",
          "callee": "set",
          "line": 128,
          "type": "direct"
        },
        {
          "caller": "ErrorStoreService.get_error_statistics",
          "callee": "get",
          "line": 132,
          "type": "attribute"
        },
        {
          "caller": "ErrorStoreService.get_error_statistics",
          "callee": "get",
          "line": 133,
          "type": "attribute"
        },
        {
          "caller": "ErrorStoreService.get_error_statistics",
          "callee": "get",
          "line": 136,
          "type": "attribute"
        },
        {
          "caller": "ErrorStoreService.get_error_statistics",
          "callee": "get",
          "line": 137,
          "type": "attribute"
        },
        {
          "caller": "ErrorStoreService.get_error_statistics",
          "callee": "timestamp",
          "line": 141,
          "type": "attribute"
        },
        {
          "caller": "ErrorStoreService.get_error_statistics",
          "callee": "fromisoformat",
          "line": 141,
          "type": "attribute"
        },
        {
          "caller": "ErrorStoreService.get_error_statistics",
          "callee": "add",
          "line": 142,
          "type": "attribute"
        },
        {
          "caller": "ErrorStoreService.get_error_statistics",
          "callee": "len",
          "line": 147,
          "type": "direct"
        },
        {
          "caller": "ErrorStoreService.get_error_statistics",
          "callee": "max",
          "line": 150,
          "type": "direct"
        },
        {
          "caller": "ErrorStoreService.get_error_statistics",
          "callee": "len",
          "line": 150,
          "type": "direct"
        },
        {
          "caller": "ErrorStoreService.get_error_statistics",
          "callee": "error",
          "line": 154,
          "type": "attribute"
        },
        {
          "caller": "ErrorStoreService.get_error_statistics",
          "callee": "str",
          "line": 154,
          "type": "direct"
        },
        {
          "caller": "report_errors",
          "callee": "store_errors",
          "line": 180,
          "type": "attribute"
        },
        {
          "caller": "report_errors",
          "callee": "HTTPException",
          "line": 183,
          "type": "direct"
        },
        {
          "caller": "report_errors",
          "callee": "warning",
          "line": 191,
          "type": "attribute"
        },
        {
          "caller": "report_errors",
          "callee": "len",
          "line": 195,
          "type": "direct"
        },
        {
          "caller": "report_errors",
          "callee": "len",
          "line": 205,
          "type": "direct"
        },
        {
          "caller": "report_errors",
          "callee": "isoformat",
          "line": 206,
          "type": "attribute"
        },
        {
          "caller": "report_errors",
          "callee": "now",
          "line": 206,
          "type": "attribute"
        },
        {
          "caller": "report_errors",
          "callee": "error",
          "line": 212,
          "type": "attribute"
        },
        {
          "caller": "report_errors",
          "callee": "str",
          "line": 212,
          "type": "direct"
        },
        {
          "caller": "report_errors",
          "callee": "HTTPException",
          "line": 213,
          "type": "direct"
        },
        {
          "caller": "report_errors",
          "callee": "post",
          "line": 169,
          "type": "attribute"
        },
        {
          "caller": "get_recent_errors",
          "callee": "get_recent_errors",
          "line": 223,
          "type": "attribute"
        },
        {
          "caller": "get_recent_errors",
          "callee": "len",
          "line": 226,
          "type": "direct"
        },
        {
          "caller": "get_recent_errors",
          "callee": "isoformat",
          "line": 227,
          "type": "attribute"
        },
        {
          "caller": "get_recent_errors",
          "callee": "now",
          "line": 227,
          "type": "attribute"
        },
        {
          "caller": "get_recent_errors",
          "callee": "error",
          "line": 230,
          "type": "attribute"
        },
        {
          "caller": "get_recent_errors",
          "callee": "str",
          "line": 230,
          "type": "direct"
        },
        {
          "caller": "get_recent_errors",
          "callee": "HTTPException",
          "line": 231,
          "type": "direct"
        },
        {
          "caller": "get_recent_errors",
          "callee": "get",
          "line": 219,
          "type": "attribute"
        },
        {
          "caller": "get_error_statistics",
          "callee": "get_error_statistics",
          "line": 241,
          "type": "attribute"
        },
        {
          "caller": "get_error_statistics",
          "callee": "isoformat",
          "line": 244,
          "type": "attribute"
        },
        {
          "caller": "get_error_statistics",
          "callee": "now",
          "line": 244,
          "type": "attribute"
        },
        {
          "caller": "get_error_statistics",
          "callee": "error",
          "line": 247,
          "type": "attribute"
        },
        {
          "caller": "get_error_statistics",
          "callee": "str",
          "line": 247,
          "type": "direct"
        },
        {
          "caller": "get_error_statistics",
          "callee": "HTTPException",
          "line": 248,
          "type": "direct"
        },
        {
          "caller": "get_error_statistics",
          "callee": "get",
          "line": 237,
          "type": "attribute"
        },
        {
          "caller": "error_system_health",
          "callee": "write_text",
          "line": 260,
          "type": "attribute"
        },
        {
          "caller": "error_system_health",
          "callee": "unlink",
          "line": 261,
          "type": "attribute"
        },
        {
          "caller": "error_system_health",
          "callee": "get_error_statistics",
          "line": 264,
          "type": "attribute"
        },
        {
          "caller": "error_system_health",
          "callee": "str",
          "line": 268,
          "type": "direct"
        },
        {
          "caller": "error_system_health",
          "callee": "isoformat",
          "line": 270,
          "type": "attribute"
        },
        {
          "caller": "error_system_health",
          "callee": "now",
          "line": 270,
          "type": "attribute"
        },
        {
          "caller": "error_system_health",
          "callee": "error",
          "line": 274,
          "type": "attribute"
        },
        {
          "caller": "error_system_health",
          "callee": "str",
          "line": 274,
          "type": "direct"
        },
        {
          "caller": "error_system_health",
          "callee": "str",
          "line": 277,
          "type": "direct"
        },
        {
          "caller": "error_system_health",
          "callee": "isoformat",
          "line": 278,
          "type": "attribute"
        },
        {
          "caller": "error_system_health",
          "callee": "now",
          "line": 278,
          "type": "attribute"
        },
        {
          "caller": "error_system_health",
          "callee": "get",
          "line": 254,
          "type": "attribute"
        }
      ],
      "error": null
    },
    {
      "filepath": "src\\api\\routers\\files.py",
      "functions": [
        {
          "name": "list_files",
          "full_name": "list_files",
          "class": null,
          "signature": "(printer_id: Optional[str], status: Optional[FileStatus], source: Optional[FileSource], has_thumbnail: Optional[bool], search: Optional[str], limit: Optional[int], order_by: Optional[str], order_dir: Optional[str], page: Optional[int], file_service: FileService)",
          "return_type": "",
          "decorators": [
            "router.get('/', response_model=FileListResponse)"
          ],
          "docstring": "List files from printers and local storage.",
          "line_start": 61,
          "line_end": 120,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_file_statistics",
          "full_name": "get_file_statistics",
          "class": null,
          "signature": "(file_service: FileService)",
          "return_type": "",
          "decorators": [
            "router.get('/statistics')"
          ],
          "docstring": "Get file management statistics.",
          "line_start": 124,
          "line_end": 139,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_file_by_id",
          "full_name": "get_file_by_id",
          "class": null,
          "signature": "(file_id: str, file_service: FileService)",
          "return_type": "",
          "decorators": [
            "router.get('/{file_id}', response_model=FileResponse)"
          ],
          "docstring": "Get file information by ID.",
          "line_start": 143,
          "line_end": 163,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "download_file",
          "full_name": "download_file",
          "class": null,
          "signature": "(file_id: str, file_service: FileService)",
          "return_type": "",
          "decorators": [
            "router.post('/{file_id}/download')"
          ],
          "docstring": "Download a file from printer to local storage.",
          "line_start": 167,
          "line_end": 204,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "sync_printer_files",
          "full_name": "sync_printer_files",
          "class": null,
          "signature": "(printer_id: Optional[str], file_service: FileService)",
          "return_type": "",
          "decorators": [
            "router.post('/sync')"
          ],
          "docstring": "Synchronize file list with printers.",
          "line_start": 208,
          "line_end": 221,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_file_thumbnail",
          "full_name": "get_file_thumbnail",
          "class": null,
          "signature": "(file_id: str, file_service: FileService)",
          "return_type": "",
          "decorators": [
            "router.get('/{file_id}/thumbnail')"
          ],
          "docstring": "Get thumbnail image for a file.",
          "line_start": 225,
          "line_end": 276,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_file_metadata",
          "full_name": "get_file_metadata",
          "class": null,
          "signature": "(file_id: str, file_service: FileService)",
          "return_type": "",
          "decorators": [
            "router.get('/{file_id}/metadata')"
          ],
          "docstring": "Get metadata for a file.",
          "line_start": 280,
          "line_end": 317,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "process_file_thumbnails",
          "full_name": "process_file_thumbnails",
          "class": null,
          "signature": "(file_id: str, file_service: FileService)",
          "return_type": "",
          "decorators": [
            "router.post('/{file_id}/process-thumbnails')"
          ],
          "docstring": "Manually trigger thumbnail processing for a file.",
          "line_start": 321,
          "line_end": 356,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_watch_folder_settings",
          "full_name": "get_watch_folder_settings",
          "class": null,
          "signature": "(config_service: ConfigService)",
          "return_type": "",
          "decorators": [
            "router.get('/watch-folders/settings', response_model=WatchFolderSettings)"
          ],
          "docstring": "Get watch folder settings.",
          "line_start": 363,
          "line_end": 378,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_watch_folder_status",
          "full_name": "get_watch_folder_status",
          "class": null,
          "signature": "(file_service: FileService, config_service: ConfigService)",
          "return_type": "",
          "decorators": [
            "router.get('/watch-folders/status')"
          ],
          "docstring": "Get watch folder status.",
          "line_start": 382,
          "line_end": 395,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "list_local_files",
          "full_name": "list_local_files",
          "class": null,
          "signature": "(watch_folder_path: Optional[str], file_service: FileService)",
          "return_type": "",
          "decorators": [
            "router.get('/local')"
          ],
          "docstring": "List local files from watch folders.",
          "line_start": 399,
          "line_end": 417,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "reload_watch_folders",
          "full_name": "reload_watch_folders",
          "class": null,
          "signature": "(file_service: FileService)",
          "return_type": "",
          "decorators": [
            "router.post('/watch-folders/reload')"
          ],
          "docstring": "Reload watch folders configuration.",
          "line_start": 421,
          "line_end": 433,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "validate_watch_folder",
          "full_name": "validate_watch_folder",
          "class": null,
          "signature": "(folder_path: str, config_service: ConfigService)",
          "return_type": "",
          "decorators": [
            "router.post('/watch-folders/validate')"
          ],
          "docstring": "Validate a watch folder path.",
          "line_start": 437,
          "line_end": 450,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "add_watch_folder",
          "full_name": "add_watch_folder",
          "class": null,
          "signature": "(folder_path: str, config_service: ConfigService, file_service: FileService)",
          "return_type": "",
          "decorators": [
            "router.post('/watch-folders/add')"
          ],
          "docstring": "Add a new watch folder.",
          "line_start": 454,
          "line_end": 488,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "remove_watch_folder",
          "full_name": "remove_watch_folder",
          "class": null,
          "signature": "(folder_path: str, config_service: ConfigService, file_service: FileService)",
          "return_type": "",
          "decorators": [
            "router.delete('/watch-folders/remove')"
          ],
          "docstring": "Remove a watch folder.",
          "line_start": 492,
          "line_end": 518,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "update_watch_folder",
          "full_name": "update_watch_folder",
          "class": null,
          "signature": "(folder_path: str, is_active: bool, config_service: ConfigService, file_service: FileService)",
          "return_type": "",
          "decorators": [
            "router.patch('/watch-folders/update')"
          ],
          "docstring": "Update watch folder activation status.",
          "line_start": 522,
          "line_end": 570,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "delete_file",
          "full_name": "delete_file",
          "class": null,
          "signature": "(file_id: str, file_service: FileService)",
          "return_type": "",
          "decorators": [
            "router.delete('/{file_id}')"
          ],
          "docstring": "Delete a file (for local files, also deletes physical file).",
          "line_start": 574,
          "line_end": 597,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_enhanced_metadata",
          "full_name": "get_enhanced_metadata",
          "class": null,
          "signature": "(file_id: str, force_refresh: bool, file_service: FileService)",
          "return_type": "",
          "decorators": [
            "router.get('/{file_id}/metadata/enhanced')"
          ],
          "docstring": "Get comprehensive enhanced metadata for a file.\n\nThis endpoint provides detailed information including:\n- Physical properties (dimensions, volume, objects)\n- Print settings (layer height, nozzle, infill)\n- Material requirements (filament weight, colors)\n- Cost analysis (material and energy costs)\n- Quality metrics (complexity score, difficulty level)\n- Compatibility information (printers, slicer info)",
          "line_start": 603,
          "line_end": 657,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "analyze_file",
          "full_name": "analyze_file",
          "class": null,
          "signature": "(file_id: str, include_recommendations: bool, file_service: FileService)",
          "return_type": "",
          "decorators": [
            "router.get('/{file_id}/analysis')"
          ],
          "docstring": "Get detailed file analysis with optimization recommendations.\n\nProvides actionable insights about:\n- Printability score and success probability\n- Risk factors and potential issues\n- Optimization suggestions for speed, quality, or cost\n- Printer compatibility recommendations",
          "line_start": 661,
          "line_end": 760,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "check_printer_compatibility",
          "full_name": "check_printer_compatibility",
          "class": null,
          "signature": "(file_id: str, printer_id: str, file_service: FileService)",
          "return_type": "",
          "decorators": [
            "router.get('/{file_id}/compatibility/{printer_id}')"
          ],
          "docstring": "Check if file is compatible with specific printer.\n\nAnalyzes:\n- Print bed size requirements\n- Material compatibility\n- Required printer features\n- Slicer profile compatibility",
          "line_start": 764,
          "line_end": 835,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "from_import",
          "module": "typing",
          "name": "List",
          "alias": null,
          "line": 3
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Optional",
          "alias": null,
          "line": 3
        },
        {
          "type": "from_import",
          "module": "uuid",
          "name": "UUID",
          "alias": null,
          "line": 4
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "APIRouter",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "Depends",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "HTTPException",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "status",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "Query",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "fastapi.responses",
          "name": "Response",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "pydantic",
          "name": "BaseModel",
          "alias": null,
          "line": 8
        },
        {
          "type": "import",
          "module": "structlog",
          "alias": null,
          "line": 9
        },
        {
          "type": "import",
          "module": "base64",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "src.models.file",
          "name": "File",
          "alias": null,
          "line": 12
        },
        {
          "type": "from_import",
          "module": "src.models.file",
          "name": "FileStatus",
          "alias": null,
          "line": 12
        },
        {
          "type": "from_import",
          "module": "src.models.file",
          "name": "FileSource",
          "alias": null,
          "line": 12
        },
        {
          "type": "from_import",
          "module": "src.models.file",
          "name": "WatchFolderSettings",
          "alias": null,
          "line": 12
        },
        {
          "type": "from_import",
          "module": "src.models.file",
          "name": "WatchFolderStatus",
          "alias": null,
          "line": 12
        },
        {
          "type": "from_import",
          "module": "src.models.file",
          "name": "WatchFolderItem",
          "alias": null,
          "line": 12
        },
        {
          "type": "from_import",
          "module": "src.services.file_service",
          "name": "FileService",
          "alias": null,
          "line": 13
        },
        {
          "type": "from_import",
          "module": "src.services.config_service",
          "name": "ConfigService",
          "alias": null,
          "line": 14
        },
        {
          "type": "from_import",
          "module": "src.utils.dependencies",
          "name": "get_file_service",
          "alias": null,
          "line": 15
        },
        {
          "type": "from_import",
          "module": "src.utils.dependencies",
          "name": "get_config_service",
          "alias": null,
          "line": 15
        },
        {
          "type": "from_import",
          "module": "src.models.file",
          "name": "EnhancedFileMetadata",
          "alias": null,
          "line": 620
        }
      ],
      "function_calls": [
        {
          "caller": "list_files",
          "callee": "Query",
          "line": 62,
          "type": "direct"
        },
        {
          "caller": "list_files",
          "callee": "Query",
          "line": 63,
          "type": "direct"
        },
        {
          "caller": "list_files",
          "callee": "Query",
          "line": 64,
          "type": "direct"
        },
        {
          "caller": "list_files",
          "callee": "Query",
          "line": 65,
          "type": "direct"
        },
        {
          "caller": "list_files",
          "callee": "Query",
          "line": 66,
          "type": "direct"
        },
        {
          "caller": "list_files",
          "callee": "Query",
          "line": 67,
          "type": "direct"
        },
        {
          "caller": "list_files",
          "callee": "Query",
          "line": 68,
          "type": "direct"
        },
        {
          "caller": "list_files",
          "callee": "Query",
          "line": 69,
          "type": "direct"
        },
        {
          "caller": "list_files",
          "callee": "Query",
          "line": 70,
          "type": "direct"
        },
        {
          "caller": "list_files",
          "callee": "Depends",
          "line": 71,
          "type": "direct"
        },
        {
          "caller": "list_files",
          "callee": "info",
          "line": 75,
          "type": "attribute"
        },
        {
          "caller": "list_files",
          "callee": "get_files",
          "line": 79,
          "type": "attribute"
        },
        {
          "caller": "list_files",
          "callee": "len",
          "line": 91,
          "type": "direct"
        },
        {
          "caller": "list_files",
          "callee": "max",
          "line": 92,
          "type": "direct"
        },
        {
          "caller": "list_files",
          "callee": "info",
          "line": 99,
          "type": "attribute"
        },
        {
          "caller": "list_files",
          "callee": "len",
          "line": 99,
          "type": "direct"
        },
        {
          "caller": "list_files",
          "callee": "model_validate",
          "line": 101,
          "type": "attribute"
        },
        {
          "caller": "list_files",
          "callee": "info",
          "line": 103,
          "type": "attribute"
        },
        {
          "caller": "list_files",
          "callee": "len",
          "line": 103,
          "type": "direct"
        },
        {
          "caller": "list_files",
          "callee": "error",
          "line": 116,
          "type": "attribute"
        },
        {
          "caller": "list_files",
          "callee": "str",
          "line": 116,
          "type": "direct"
        },
        {
          "caller": "list_files",
          "callee": "HTTPException",
          "line": 117,
          "type": "direct"
        },
        {
          "caller": "list_files",
          "callee": "str",
          "line": 119,
          "type": "direct"
        },
        {
          "caller": "list_files",
          "callee": "get",
          "line": 60,
          "type": "attribute"
        },
        {
          "caller": "get_file_statistics",
          "callee": "Depends",
          "line": 125,
          "type": "direct"
        },
        {
          "caller": "get_file_statistics",
          "callee": "get_file_statistics",
          "line": 129,
          "type": "attribute"
        },
        {
          "caller": "get_file_statistics",
          "callee": "error",
          "line": 135,
          "type": "attribute"
        },
        {
          "caller": "get_file_statistics",
          "callee": "str",
          "line": 135,
          "type": "direct"
        },
        {
          "caller": "get_file_statistics",
          "callee": "HTTPException",
          "line": 136,
          "type": "direct"
        },
        {
          "caller": "get_file_statistics",
          "callee": "get",
          "line": 123,
          "type": "attribute"
        },
        {
          "caller": "get_file_by_id",
          "callee": "Depends",
          "line": 145,
          "type": "direct"
        },
        {
          "caller": "get_file_by_id",
          "callee": "get_file_by_id",
          "line": 149,
          "type": "attribute"
        },
        {
          "caller": "get_file_by_id",
          "callee": "HTTPException",
          "line": 151,
          "type": "direct"
        },
        {
          "caller": "get_file_by_id",
          "callee": "model_validate",
          "line": 155,
          "type": "attribute"
        },
        {
          "caller": "get_file_by_id",
          "callee": "error",
          "line": 159,
          "type": "attribute"
        },
        {
          "caller": "get_file_by_id",
          "callee": "str",
          "line": 159,
          "type": "direct"
        },
        {
          "caller": "get_file_by_id",
          "callee": "HTTPException",
          "line": 160,
          "type": "direct"
        },
        {
          "caller": "get_file_by_id",
          "callee": "get",
          "line": 142,
          "type": "attribute"
        },
        {
          "caller": "download_file",
          "callee": "Depends",
          "line": 169,
          "type": "direct"
        },
        {
          "caller": "download_file",
          "callee": "HTTPException",
          "line": 176,
          "type": "direct"
        },
        {
          "caller": "download_file",
          "callee": "split",
          "line": 182,
          "type": "attribute"
        },
        {
          "caller": "download_file",
          "callee": "info",
          "line": 186,
          "type": "attribute"
        },
        {
          "caller": "download_file",
          "callee": "download_file",
          "line": 189,
          "type": "attribute"
        },
        {
          "caller": "download_file",
          "callee": "get",
          "line": 191,
          "type": "attribute"
        },
        {
          "caller": "download_file",
          "callee": "HTTPException",
          "line": 192,
          "type": "direct"
        },
        {
          "caller": "download_file",
          "callee": "error",
          "line": 200,
          "type": "attribute"
        },
        {
          "caller": "download_file",
          "callee": "str",
          "line": 200,
          "type": "direct"
        },
        {
          "caller": "download_file",
          "callee": "str",
          "line": 200,
          "type": "direct"
        },
        {
          "caller": "download_file",
          "callee": "HTTPException",
          "line": 201,
          "type": "direct"
        },
        {
          "caller": "download_file",
          "callee": "post",
          "line": 166,
          "type": "attribute"
        },
        {
          "caller": "sync_printer_files",
          "callee": "Query",
          "line": 209,
          "type": "direct"
        },
        {
          "caller": "sync_printer_files",
          "callee": "Depends",
          "line": 210,
          "type": "direct"
        },
        {
          "caller": "sync_printer_files",
          "callee": "sync_printer_files",
          "line": 214,
          "type": "attribute"
        },
        {
          "caller": "sync_printer_files",
          "callee": "error",
          "line": 217,
          "type": "attribute"
        },
        {
          "caller": "sync_printer_files",
          "callee": "str",
          "line": 217,
          "type": "direct"
        },
        {
          "caller": "sync_printer_files",
          "callee": "str",
          "line": 217,
          "type": "direct"
        },
        {
          "caller": "sync_printer_files",
          "callee": "HTTPException",
          "line": 218,
          "type": "direct"
        },
        {
          "caller": "sync_printer_files",
          "callee": "post",
          "line": 207,
          "type": "attribute"
        },
        {
          "caller": "get_file_thumbnail",
          "callee": "Depends",
          "line": 227,
          "type": "direct"
        },
        {
          "caller": "get_file_thumbnail",
          "callee": "get_file_by_id",
          "line": 231,
          "type": "attribute"
        },
        {
          "caller": "get_file_thumbnail",
          "callee": "HTTPException",
          "line": 234,
          "type": "direct"
        },
        {
          "caller": "get_file_thumbnail",
          "callee": "get",
          "line": 239,
          "type": "attribute"
        },
        {
          "caller": "get_file_thumbnail",
          "callee": "get",
          "line": 239,
          "type": "attribute"
        },
        {
          "caller": "get_file_thumbnail",
          "callee": "HTTPException",
          "line": 240,
          "type": "direct"
        },
        {
          "caller": "get_file_thumbnail",
          "callee": "b64decode",
          "line": 247,
          "type": "attribute"
        },
        {
          "caller": "get_file_thumbnail",
          "callee": "error",
          "line": 249,
          "type": "attribute"
        },
        {
          "caller": "get_file_thumbnail",
          "callee": "str",
          "line": 249,
          "type": "direct"
        },
        {
          "caller": "get_file_thumbnail",
          "callee": "HTTPException",
          "line": 250,
          "type": "direct"
        },
        {
          "caller": "get_file_thumbnail",
          "callee": "get",
          "line": 256,
          "type": "attribute"
        },
        {
          "caller": "get_file_thumbnail",
          "callee": "Response",
          "line": 260,
          "type": "direct"
        },
        {
          "caller": "get_file_thumbnail",
          "callee": "error",
          "line": 272,
          "type": "attribute"
        },
        {
          "caller": "get_file_thumbnail",
          "callee": "str",
          "line": 272,
          "type": "direct"
        },
        {
          "caller": "get_file_thumbnail",
          "callee": "HTTPException",
          "line": 273,
          "type": "direct"
        },
        {
          "caller": "get_file_thumbnail",
          "callee": "get",
          "line": 224,
          "type": "attribute"
        },
        {
          "caller": "get_file_metadata",
          "callee": "Depends",
          "line": 282,
          "type": "direct"
        },
        {
          "caller": "get_file_metadata",
          "callee": "get_file_by_id",
          "line": 286,
          "type": "attribute"
        },
        {
          "caller": "get_file_metadata",
          "callee": "HTTPException",
          "line": 289,
          "type": "direct"
        },
        {
          "caller": "get_file_metadata",
          "callee": "get",
          "line": 295,
          "type": "attribute"
        },
        {
          "caller": "get_file_metadata",
          "callee": "get",
          "line": 300,
          "type": "attribute"
        },
        {
          "caller": "get_file_metadata",
          "callee": "get",
          "line": 301,
          "type": "attribute"
        },
        {
          "caller": "get_file_metadata",
          "callee": "get",
          "line": 302,
          "type": "attribute"
        },
        {
          "caller": "get_file_metadata",
          "callee": "get",
          "line": 303,
          "type": "attribute"
        },
        {
          "caller": "get_file_metadata",
          "callee": "get",
          "line": 304,
          "type": "attribute"
        },
        {
          "caller": "get_file_metadata",
          "callee": "error",
          "line": 313,
          "type": "attribute"
        },
        {
          "caller": "get_file_metadata",
          "callee": "str",
          "line": 313,
          "type": "direct"
        },
        {
          "caller": "get_file_metadata",
          "callee": "HTTPException",
          "line": 314,
          "type": "direct"
        },
        {
          "caller": "get_file_metadata",
          "callee": "get",
          "line": 279,
          "type": "attribute"
        },
        {
          "caller": "process_file_thumbnails",
          "callee": "Depends",
          "line": 323,
          "type": "direct"
        },
        {
          "caller": "process_file_thumbnails",
          "callee": "get_file_by_id",
          "line": 327,
          "type": "attribute"
        },
        {
          "caller": "process_file_thumbnails",
          "callee": "HTTPException",
          "line": 330,
          "type": "direct"
        },
        {
          "caller": "process_file_thumbnails",
          "callee": "get",
          "line": 335,
          "type": "attribute"
        },
        {
          "caller": "process_file_thumbnails",
          "callee": "HTTPException",
          "line": 337,
          "type": "direct"
        },
        {
          "caller": "process_file_thumbnails",
          "callee": "process_file_thumbnails",
          "line": 342,
          "type": "attribute"
        },
        {
          "caller": "process_file_thumbnails",
          "callee": "error",
          "line": 352,
          "type": "attribute"
        },
        {
          "caller": "process_file_thumbnails",
          "callee": "str",
          "line": 352,
          "type": "direct"
        },
        {
          "caller": "process_file_thumbnails",
          "callee": "HTTPException",
          "line": 353,
          "type": "direct"
        },
        {
          "caller": "process_file_thumbnails",
          "callee": "post",
          "line": 320,
          "type": "attribute"
        },
        {
          "caller": "get_watch_folder_settings",
          "callee": "Depends",
          "line": 364,
          "type": "direct"
        },
        {
          "caller": "get_watch_folder_settings",
          "callee": "get_watch_folder_settings",
          "line": 368,
          "type": "attribute"
        },
        {
          "caller": "get_watch_folder_settings",
          "callee": "get_all_watch_folders",
          "line": 370,
          "type": "attribute"
        },
        {
          "caller": "get_watch_folder_settings",
          "callee": "to_dict",
          "line": 371,
          "type": "attribute"
        },
        {
          "caller": "get_watch_folder_settings",
          "callee": "WatchFolderSettings",
          "line": 372,
          "type": "direct"
        },
        {
          "caller": "get_watch_folder_settings",
          "callee": "error",
          "line": 374,
          "type": "attribute"
        },
        {
          "caller": "get_watch_folder_settings",
          "callee": "str",
          "line": 374,
          "type": "direct"
        },
        {
          "caller": "get_watch_folder_settings",
          "callee": "HTTPException",
          "line": 375,
          "type": "direct"
        },
        {
          "caller": "get_watch_folder_settings",
          "callee": "get",
          "line": 362,
          "type": "attribute"
        },
        {
          "caller": "get_watch_folder_status",
          "callee": "Depends",
          "line": 383,
          "type": "direct"
        },
        {
          "caller": "get_watch_folder_status",
          "callee": "Depends",
          "line": 384,
          "type": "direct"
        },
        {
          "caller": "get_watch_folder_status",
          "callee": "get_watch_status",
          "line": 388,
          "type": "attribute"
        },
        {
          "caller": "get_watch_folder_status",
          "callee": "error",
          "line": 391,
          "type": "attribute"
        },
        {
          "caller": "get_watch_folder_status",
          "callee": "str",
          "line": 391,
          "type": "direct"
        },
        {
          "caller": "get_watch_folder_status",
          "callee": "HTTPException",
          "line": 392,
          "type": "direct"
        },
        {
          "caller": "get_watch_folder_status",
          "callee": "get",
          "line": 381,
          "type": "attribute"
        },
        {
          "caller": "list_local_files",
          "callee": "Query",
          "line": 400,
          "type": "direct"
        },
        {
          "caller": "list_local_files",
          "callee": "Depends",
          "line": 401,
          "type": "direct"
        },
        {
          "caller": "list_local_files",
          "callee": "get_local_files",
          "line": 405,
          "type": "attribute"
        },
        {
          "caller": "list_local_files",
          "callee": "get",
          "line": 409,
          "type": "attribute"
        },
        {
          "caller": "list_local_files",
          "callee": "error",
          "line": 413,
          "type": "attribute"
        },
        {
          "caller": "list_local_files",
          "callee": "str",
          "line": 413,
          "type": "direct"
        },
        {
          "caller": "list_local_files",
          "callee": "HTTPException",
          "line": 414,
          "type": "direct"
        },
        {
          "caller": "list_local_files",
          "callee": "get",
          "line": 398,
          "type": "attribute"
        },
        {
          "caller": "reload_watch_folders",
          "callee": "Depends",
          "line": 422,
          "type": "direct"
        },
        {
          "caller": "reload_watch_folders",
          "callee": "reload_watch_folders",
          "line": 426,
          "type": "attribute"
        },
        {
          "caller": "reload_watch_folders",
          "callee": "error",
          "line": 429,
          "type": "attribute"
        },
        {
          "caller": "reload_watch_folders",
          "callee": "str",
          "line": 429,
          "type": "direct"
        },
        {
          "caller": "reload_watch_folders",
          "callee": "HTTPException",
          "line": 430,
          "type": "direct"
        },
        {
          "caller": "reload_watch_folders",
          "callee": "post",
          "line": 420,
          "type": "attribute"
        },
        {
          "caller": "validate_watch_folder",
          "callee": "Query",
          "line": 438,
          "type": "direct"
        },
        {
          "caller": "validate_watch_folder",
          "callee": "Depends",
          "line": 439,
          "type": "direct"
        },
        {
          "caller": "validate_watch_folder",
          "callee": "validate_watch_folder",
          "line": 443,
          "type": "attribute"
        },
        {
          "caller": "validate_watch_folder",
          "callee": "error",
          "line": 446,
          "type": "attribute"
        },
        {
          "caller": "validate_watch_folder",
          "callee": "str",
          "line": 446,
          "type": "direct"
        },
        {
          "caller": "validate_watch_folder",
          "callee": "HTTPException",
          "line": 447,
          "type": "direct"
        },
        {
          "caller": "validate_watch_folder",
          "callee": "post",
          "line": 436,
          "type": "attribute"
        },
        {
          "caller": "add_watch_folder",
          "callee": "Query",
          "line": 455,
          "type": "direct"
        },
        {
          "caller": "add_watch_folder",
          "callee": "Depends",
          "line": 456,
          "type": "direct"
        },
        {
          "caller": "add_watch_folder",
          "callee": "Depends",
          "line": 457,
          "type": "direct"
        },
        {
          "caller": "add_watch_folder",
          "callee": "validate_watch_folder",
          "line": 462,
          "type": "attribute"
        },
        {
          "caller": "add_watch_folder",
          "callee": "HTTPException",
          "line": 464,
          "type": "direct"
        },
        {
          "caller": "add_watch_folder",
          "callee": "add_watch_folder",
          "line": 470,
          "type": "attribute"
        },
        {
          "caller": "add_watch_folder",
          "callee": "HTTPException",
          "line": 472,
          "type": "direct"
        },
        {
          "caller": "add_watch_folder",
          "callee": "reload_watch_folders",
          "line": 478,
          "type": "attribute"
        },
        {
          "caller": "add_watch_folder",
          "callee": "error",
          "line": 484,
          "type": "attribute"
        },
        {
          "caller": "add_watch_folder",
          "callee": "str",
          "line": 484,
          "type": "direct"
        },
        {
          "caller": "add_watch_folder",
          "callee": "HTTPException",
          "line": 485,
          "type": "direct"
        },
        {
          "caller": "add_watch_folder",
          "callee": "post",
          "line": 453,
          "type": "attribute"
        },
        {
          "caller": "remove_watch_folder",
          "callee": "Query",
          "line": 493,
          "type": "direct"
        },
        {
          "caller": "remove_watch_folder",
          "callee": "Depends",
          "line": 494,
          "type": "direct"
        },
        {
          "caller": "remove_watch_folder",
          "callee": "Depends",
          "line": 495,
          "type": "direct"
        },
        {
          "caller": "remove_watch_folder",
          "callee": "remove_watch_folder",
          "line": 500,
          "type": "attribute"
        },
        {
          "caller": "remove_watch_folder",
          "callee": "HTTPException",
          "line": 502,
          "type": "direct"
        },
        {
          "caller": "remove_watch_folder",
          "callee": "reload_watch_folders",
          "line": 508,
          "type": "attribute"
        },
        {
          "caller": "remove_watch_folder",
          "callee": "error",
          "line": 514,
          "type": "attribute"
        },
        {
          "caller": "remove_watch_folder",
          "callee": "str",
          "line": 514,
          "type": "direct"
        },
        {
          "caller": "remove_watch_folder",
          "callee": "HTTPException",
          "line": 515,
          "type": "direct"
        },
        {
          "caller": "remove_watch_folder",
          "callee": "delete",
          "line": 491,
          "type": "attribute"
        },
        {
          "caller": "update_watch_folder",
          "callee": "Query",
          "line": 523,
          "type": "direct"
        },
        {
          "caller": "update_watch_folder",
          "callee": "Query",
          "line": 524,
          "type": "direct"
        },
        {
          "caller": "update_watch_folder",
          "callee": "Depends",
          "line": 525,
          "type": "direct"
        },
        {
          "caller": "update_watch_folder",
          "callee": "Depends",
          "line": 526,
          "type": "direct"
        },
        {
          "caller": "update_watch_folder",
          "callee": "_ensure_env_migration",
          "line": 531,
          "type": "attribute"
        },
        {
          "caller": "update_watch_folder",
          "callee": "get_watch_folder_by_path",
          "line": 532,
          "type": "attribute"
        },
        {
          "caller": "update_watch_folder",
          "callee": "HTTPException",
          "line": 535,
          "type": "direct"
        },
        {
          "caller": "update_watch_folder",
          "callee": "update_watch_folder",
          "line": 541,
          "type": "attribute"
        },
        {
          "caller": "update_watch_folder",
          "callee": "HTTPException",
          "line": 547,
          "type": "direct"
        },
        {
          "caller": "update_watch_folder",
          "callee": "reload_watch_folders",
          "line": 553,
          "type": "attribute"
        },
        {
          "caller": "update_watch_folder",
          "callee": "error",
          "line": 566,
          "type": "attribute"
        },
        {
          "caller": "update_watch_folder",
          "callee": "str",
          "line": 566,
          "type": "direct"
        },
        {
          "caller": "update_watch_folder",
          "callee": "HTTPException",
          "line": 567,
          "type": "direct"
        },
        {
          "caller": "update_watch_folder",
          "callee": "patch",
          "line": 521,
          "type": "attribute"
        },
        {
          "caller": "delete_file",
          "callee": "Depends",
          "line": 576,
          "type": "direct"
        },
        {
          "caller": "delete_file",
          "callee": "delete_file",
          "line": 580,
          "type": "attribute"
        },
        {
          "caller": "delete_file",
          "callee": "HTTPException",
          "line": 583,
          "type": "direct"
        },
        {
          "caller": "delete_file",
          "callee": "error",
          "line": 593,
          "type": "attribute"
        },
        {
          "caller": "delete_file",
          "callee": "str",
          "line": 593,
          "type": "direct"
        },
        {
          "caller": "delete_file",
          "callee": "HTTPException",
          "line": 594,
          "type": "direct"
        },
        {
          "caller": "delete_file",
          "callee": "str",
          "line": 596,
          "type": "direct"
        },
        {
          "caller": "delete_file",
          "callee": "delete",
          "line": 573,
          "type": "attribute"
        },
        {
          "caller": "get_enhanced_metadata",
          "callee": "Query",
          "line": 605,
          "type": "direct"
        },
        {
          "caller": "get_enhanced_metadata",
          "callee": "Depends",
          "line": 606,
          "type": "direct"
        },
        {
          "caller": "get_enhanced_metadata",
          "callee": "info",
          "line": 622,
          "type": "attribute"
        },
        {
          "caller": "get_enhanced_metadata",
          "callee": "get_file",
          "line": 625,
          "type": "attribute"
        },
        {
          "caller": "get_enhanced_metadata",
          "callee": "HTTPException",
          "line": 627,
          "type": "direct"
        },
        {
          "caller": "get_enhanced_metadata",
          "callee": "extract_enhanced_metadata",
          "line": 637,
          "type": "attribute"
        },
        {
          "caller": "get_enhanced_metadata",
          "callee": "warning",
          "line": 639,
          "type": "attribute"
        },
        {
          "caller": "get_enhanced_metadata",
          "callee": "EnhancedFileMetadata",
          "line": 641,
          "type": "direct"
        },
        {
          "caller": "get_enhanced_metadata",
          "callee": "EnhancedFileMetadata",
          "line": 648,
          "type": "direct"
        },
        {
          "caller": "get_enhanced_metadata",
          "callee": "error",
          "line": 653,
          "type": "attribute"
        },
        {
          "caller": "get_enhanced_metadata",
          "callee": "str",
          "line": 653,
          "type": "direct"
        },
        {
          "caller": "get_enhanced_metadata",
          "callee": "HTTPException",
          "line": 654,
          "type": "direct"
        },
        {
          "caller": "get_enhanced_metadata",
          "callee": "str",
          "line": 656,
          "type": "direct"
        },
        {
          "caller": "get_enhanced_metadata",
          "callee": "get",
          "line": 602,
          "type": "attribute"
        },
        {
          "caller": "analyze_file",
          "callee": "Query",
          "line": 663,
          "type": "direct"
        },
        {
          "caller": "analyze_file",
          "callee": "Depends",
          "line": 664,
          "type": "direct"
        },
        {
          "caller": "analyze_file",
          "callee": "info",
          "line": 676,
          "type": "attribute"
        },
        {
          "caller": "analyze_file",
          "callee": "get_enhanced_metadata",
          "line": 679,
          "type": "direct"
        },
        {
          "caller": "analyze_file",
          "callee": "append",
          "line": 703,
          "type": "attribute"
        },
        {
          "caller": "analyze_file",
          "callee": "append",
          "line": 710,
          "type": "attribute"
        },
        {
          "caller": "analyze_file",
          "callee": "append",
          "line": 719,
          "type": "attribute"
        },
        {
          "caller": "analyze_file",
          "callee": "append",
          "line": 727,
          "type": "attribute"
        },
        {
          "caller": "analyze_file",
          "callee": "append",
          "line": 735,
          "type": "attribute"
        },
        {
          "caller": "analyze_file",
          "callee": "append",
          "line": 742,
          "type": "attribute"
        },
        {
          "caller": "analyze_file",
          "callee": "error",
          "line": 756,
          "type": "attribute"
        },
        {
          "caller": "analyze_file",
          "callee": "str",
          "line": 756,
          "type": "direct"
        },
        {
          "caller": "analyze_file",
          "callee": "HTTPException",
          "line": 757,
          "type": "direct"
        },
        {
          "caller": "analyze_file",
          "callee": "str",
          "line": 759,
          "type": "direct"
        },
        {
          "caller": "analyze_file",
          "callee": "get",
          "line": 660,
          "type": "attribute"
        },
        {
          "caller": "check_printer_compatibility",
          "callee": "Depends",
          "line": 767,
          "type": "direct"
        },
        {
          "caller": "check_printer_compatibility",
          "callee": "info",
          "line": 779,
          "type": "attribute"
        },
        {
          "caller": "check_printer_compatibility",
          "callee": "get_enhanced_metadata",
          "line": 782,
          "type": "direct"
        },
        {
          "caller": "check_printer_compatibility",
          "callee": "append",
          "line": 804,
          "type": "attribute"
        },
        {
          "caller": "check_printer_compatibility",
          "callee": "append",
          "line": 811,
          "type": "attribute"
        },
        {
          "caller": "check_printer_compatibility",
          "callee": "lower",
          "line": 818,
          "type": "attribute"
        },
        {
          "caller": "check_printer_compatibility",
          "callee": "any",
          "line": 820,
          "type": "direct"
        },
        {
          "caller": "check_printer_compatibility",
          "callee": "lower",
          "line": 820,
          "type": "attribute"
        },
        {
          "caller": "check_printer_compatibility",
          "callee": "append",
          "line": 821,
          "type": "attribute"
        },
        {
          "caller": "check_printer_compatibility",
          "callee": "error",
          "line": 831,
          "type": "attribute"
        },
        {
          "caller": "check_printer_compatibility",
          "callee": "str",
          "line": 831,
          "type": "direct"
        },
        {
          "caller": "check_printer_compatibility",
          "callee": "HTTPException",
          "line": 832,
          "type": "direct"
        },
        {
          "caller": "check_printer_compatibility",
          "callee": "str",
          "line": 834,
          "type": "direct"
        },
        {
          "caller": "check_printer_compatibility",
          "callee": "get",
          "line": 763,
          "type": "attribute"
        }
      ],
      "error": null
    },
    {
      "filepath": "src\\api\\routers\\health.py",
      "functions": [
        {
          "name": "health_check",
          "full_name": "health_check",
          "class": null,
          "signature": "(request: Request, config: ConfigService, db: Database)",
          "return_type": "",
          "decorators": [
            "router.get('/health', response_model=HealthResponse)"
          ],
          "docstring": "Enhanced health check endpoint with detailed service status.\nReturns system status and comprehensive information about all services.",
          "line_start": 38,
          "line_end": 158,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "readiness_check",
          "full_name": "readiness_check",
          "class": null,
          "signature": "()",
          "return_type": "",
          "decorators": [
            "router.get('/readiness')"
          ],
          "docstring": "Kubernetes readiness probe endpoint.\nReturns 200 when application is ready to serve requests.",
          "line_start": 162,
          "line_end": 167,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "liveness_check",
          "full_name": "liveness_check",
          "class": null,
          "signature": "()",
          "return_type": "",
          "decorators": [
            "router.get('/liveness')"
          ],
          "docstring": "Kubernetes liveness probe endpoint.\nReturns 200 when application is alive.",
          "line_start": 171,
          "line_end": 176,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 3
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Dict",
          "alias": null,
          "line": 4
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Any",
          "alias": null,
          "line": 4
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Optional",
          "alias": null,
          "line": 4
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "APIRouter",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "Depends",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "Request",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "pydantic",
          "name": "BaseModel",
          "alias": null,
          "line": 7
        },
        {
          "type": "import",
          "module": "structlog",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "src.services.config_service",
          "name": "ConfigService",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "src.database.database",
          "name": "Database",
          "alias": null,
          "line": 11
        },
        {
          "type": "from_import",
          "module": "src.utils.dependencies",
          "name": "get_config_service",
          "alias": null,
          "line": 12
        },
        {
          "type": "from_import",
          "module": "src.utils.dependencies",
          "name": "get_database",
          "alias": null,
          "line": 12
        },
        {
          "type": "from_import",
          "module": "src.main",
          "name": "APP_VERSION",
          "alias": null,
          "line": 130
        },
        {
          "type": "from_import",
          "module": "src.main",
          "name": "APP_VERSION",
          "alias": null,
          "line": 149
        }
      ],
      "function_calls": [
        {
          "caller": "health_check",
          "callee": "Depends",
          "line": 40,
          "type": "direct"
        },
        {
          "caller": "health_check",
          "callee": "Depends",
          "line": 41,
          "type": "direct"
        },
        {
          "caller": "health_check",
          "callee": "health_check",
          "line": 49,
          "type": "attribute"
        },
        {
          "caller": "health_check",
          "callee": "getattr",
          "line": 52,
          "type": "direct"
        },
        {
          "caller": "health_check",
          "callee": "getattr",
          "line": 53,
          "type": "direct"
        },
        {
          "caller": "health_check",
          "callee": "getattr",
          "line": 54,
          "type": "direct"
        },
        {
          "caller": "health_check",
          "callee": "getattr",
          "line": 55,
          "type": "direct"
        },
        {
          "caller": "health_check",
          "callee": "hasattr",
          "line": 70,
          "type": "direct"
        },
        {
          "caller": "health_check",
          "callee": "len",
          "line": 70,
          "type": "direct"
        },
        {
          "caller": "health_check",
          "callee": "hasattr",
          "line": 75,
          "type": "direct"
        },
        {
          "caller": "health_check",
          "callee": "str",
          "line": 81,
          "type": "direct"
        },
        {
          "caller": "health_check",
          "callee": "str",
          "line": 106,
          "type": "direct"
        },
        {
          "caller": "health_check",
          "callee": "values",
          "line": 121,
          "type": "attribute"
        },
        {
          "caller": "health_check",
          "callee": "all",
          "line": 122,
          "type": "direct"
        },
        {
          "caller": "health_check",
          "callee": "any",
          "line": 124,
          "type": "direct"
        },
        {
          "caller": "health_check",
          "callee": "HealthResponse",
          "line": 132,
          "type": "direct"
        },
        {
          "caller": "health_check",
          "callee": "now",
          "line": 134,
          "type": "attribute"
        },
        {
          "caller": "health_check",
          "callee": "getattr",
          "line": 136,
          "type": "direct"
        },
        {
          "caller": "health_check",
          "callee": "error",
          "line": 147,
          "type": "attribute"
        },
        {
          "caller": "health_check",
          "callee": "str",
          "line": 147,
          "type": "direct"
        },
        {
          "caller": "health_check",
          "callee": "HealthResponse",
          "line": 151,
          "type": "direct"
        },
        {
          "caller": "health_check",
          "callee": "now",
          "line": 153,
          "type": "attribute"
        },
        {
          "caller": "health_check",
          "callee": "getattr",
          "line": 155,
          "type": "direct"
        },
        {
          "caller": "health_check",
          "callee": "str",
          "line": 157,
          "type": "direct"
        },
        {
          "caller": "health_check",
          "callee": "get",
          "line": 37,
          "type": "attribute"
        },
        {
          "caller": "readiness_check",
          "callee": "get",
          "line": 161,
          "type": "attribute"
        },
        {
          "caller": "liveness_check",
          "callee": "get",
          "line": 170,
          "type": "attribute"
        }
      ],
      "error": null
    },
    {
      "filepath": "src\\api\\routers\\idea_url.py",
      "functions": [
        {
          "name": "validate_url",
          "full_name": "validate_url",
          "class": null,
          "signature": "(url: str, idea_service: IdeaService)",
          "return_type": "",
          "decorators": [
            "router.get('/validate', response_model=Dict[str, Any])"
          ],
          "docstring": "Validate if URL is from a supported platform.",
          "line_start": 20,
          "line_end": 39,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "preview_url",
          "full_name": "preview_url",
          "class": null,
          "signature": "(url_data: UrlPreviewRequest, idea_service: IdeaService)",
          "return_type": "",
          "decorators": [
            "router.post('/preview', response_model=Dict[str, Any])"
          ],
          "docstring": "Preview metadata that would be extracted from URL without saving.",
          "line_start": 43,
          "line_end": 73,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_supported_platforms",
          "full_name": "get_supported_platforms",
          "class": null,
          "signature": "(idea_service: IdeaService)",
          "return_type": "",
          "decorators": [
            "router.get('/platforms', response_model=List[Dict[str, Any]])"
          ],
          "docstring": "Get information about supported platforms.",
          "line_start": 77,
          "line_end": 98,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "APIRouter",
          "alias": null,
          "line": 4
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "HTTPException",
          "alias": null,
          "line": 4
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "Depends",
          "alias": null,
          "line": 4
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "status",
          "alias": null,
          "line": 4
        },
        {
          "type": "from_import",
          "module": "pydantic",
          "name": "BaseModel",
          "alias": null,
          "line": 5
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Dict",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Any",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "List",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "src.utils.dependencies",
          "name": "get_idea_service",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "src.services.idea_service",
          "name": "IdeaService",
          "alias": null,
          "line": 9
        }
      ],
      "function_calls": [
        {
          "caller": "validate_url",
          "callee": "Depends",
          "line": 22,
          "type": "direct"
        },
        {
          "caller": "validate_url",
          "callee": "validate_url",
          "line": 26,
          "type": "attribute"
        },
        {
          "caller": "validate_url",
          "callee": "detect_platform",
          "line": 27,
          "type": "attribute"
        },
        {
          "caller": "validate_url",
          "callee": "get_supported_platforms",
          "line": 32,
          "type": "attribute"
        },
        {
          "caller": "validate_url",
          "callee": "HTTPException",
          "line": 36,
          "type": "direct"
        },
        {
          "caller": "validate_url",
          "callee": "get",
          "line": 19,
          "type": "attribute"
        },
        {
          "caller": "preview_url",
          "callee": "Depends",
          "line": 45,
          "type": "direct"
        },
        {
          "caller": "preview_url",
          "callee": "_extract_url_metadata",
          "line": 49,
          "type": "attribute"
        },
        {
          "caller": "preview_url",
          "callee": "HTTPException",
          "line": 51,
          "type": "direct"
        },
        {
          "caller": "preview_url",
          "callee": "get",
          "line": 60,
          "type": "attribute"
        },
        {
          "caller": "preview_url",
          "callee": "get",
          "line": 61,
          "type": "attribute"
        },
        {
          "caller": "preview_url",
          "callee": "get",
          "line": 62,
          "type": "attribute"
        },
        {
          "caller": "preview_url",
          "callee": "get",
          "line": 63,
          "type": "attribute"
        },
        {
          "caller": "preview_url",
          "callee": "HTTPException",
          "line": 70,
          "type": "direct"
        },
        {
          "caller": "preview_url",
          "callee": "post",
          "line": 42,
          "type": "attribute"
        },
        {
          "caller": "get_supported_platforms",
          "callee": "Depends",
          "line": 78,
          "type": "direct"
        },
        {
          "caller": "get_supported_platforms",
          "callee": "get_supported_platforms",
          "line": 82,
          "type": "attribute"
        },
        {
          "caller": "get_supported_platforms",
          "callee": "get_platform_info",
          "line": 86,
          "type": "attribute"
        },
        {
          "caller": "get_supported_platforms",
          "callee": "append",
          "line": 87,
          "type": "attribute"
        },
        {
          "caller": "get_supported_platforms",
          "callee": "HTTPException",
          "line": 95,
          "type": "direct"
        },
        {
          "caller": "get_supported_platforms",
          "callee": "get",
          "line": 76,
          "type": "attribute"
        }
      ],
      "error": null
    },
    {
      "filepath": "src\\api\\routers\\ideas.py",
      "functions": [
        {
          "name": "create_idea",
          "full_name": "create_idea",
          "class": null,
          "signature": "(idea_data: IdeaCreate, idea_service: IdeaService)",
          "return_type": "",
          "decorators": [
            "router.post('/', response_model=Dict[str, str])"
          ],
          "docstring": "Create a new idea.",
          "line_start": 71,
          "line_end": 95,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "list_ideas",
          "full_name": "list_ideas",
          "class": null,
          "signature": "(status: Optional[str], is_business: Optional[bool], category: Optional[str], source_type: Optional[str], page: int, page_size: int, idea_service: IdeaService)",
          "return_type": "",
          "decorators": [
            "router.get('/', response_model=Dict[str, Any])"
          ],
          "docstring": "List ideas with filtering and pagination.",
          "line_start": 99,
          "line_end": 127,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_idea",
          "full_name": "get_idea",
          "class": null,
          "signature": "(idea_id: str, idea_service: IdeaService)",
          "return_type": "",
          "decorators": [
            "router.get('/{idea_id}', response_model=Dict[str, Any])"
          ],
          "docstring": "Get a specific idea by ID.",
          "line_start": 131,
          "line_end": 152,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "update_idea",
          "full_name": "update_idea",
          "class": null,
          "signature": "(idea_id: str, idea_data: IdeaUpdate, idea_service: IdeaService)",
          "return_type": "",
          "decorators": [
            "router.put('/{idea_id}', response_model=Dict[str, str])"
          ],
          "docstring": "Update an existing idea.",
          "line_start": 156,
          "line_end": 189,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "delete_idea",
          "full_name": "delete_idea",
          "class": null,
          "signature": "(idea_id: str, idea_service: IdeaService)",
          "return_type": "",
          "decorators": [
            "router.delete('/{idea_id}', response_model=Dict[str, str])"
          ],
          "docstring": "Delete an idea.",
          "line_start": 193,
          "line_end": 222,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "update_idea_status",
          "full_name": "update_idea_status",
          "class": null,
          "signature": "(idea_id: str, status_data: IdeaStatusUpdate, idea_service: IdeaService)",
          "return_type": "",
          "decorators": [
            "router.patch('/{idea_id}/status', response_model=Dict[str, str])"
          ],
          "docstring": "Update idea status.",
          "line_start": 226,
          "line_end": 256,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "import_idea_from_url",
          "full_name": "import_idea_from_url",
          "class": null,
          "signature": "(import_data: IdeaImport, idea_service: IdeaService)",
          "return_type": "",
          "decorators": [
            "router.post('/import', response_model=Dict[str, str])"
          ],
          "docstring": "Import an idea from external platform URL.",
          "line_start": 260,
          "line_end": 283,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_all_tags",
          "full_name": "get_all_tags",
          "class": null,
          "signature": "(idea_service: IdeaService)",
          "return_type": "",
          "decorators": [
            "router.get('/tags/all', response_model=List[Dict[str, Any]])"
          ],
          "docstring": "Get all available tags with usage counts.",
          "line_start": 287,
          "line_end": 297,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_idea_statistics",
          "full_name": "get_idea_statistics",
          "class": null,
          "signature": "(idea_service: IdeaService)",
          "return_type": "",
          "decorators": [
            "router.get('/stats/overview', response_model=Dict[str, Any])"
          ],
          "docstring": "Get idea statistics.",
          "line_start": 301,
          "line_end": 311,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "search_ideas",
          "full_name": "search_ideas",
          "class": null,
          "signature": "(q: str, status: Optional[str], is_business: Optional[bool], category: Optional[str], idea_service: IdeaService)",
          "return_type": "",
          "decorators": [
            "router.get('/search', response_model=List[Dict[str, Any]])"
          ],
          "docstring": "Search ideas by title, description, and tags.",
          "line_start": 315,
          "line_end": 337,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_trending_models",
          "full_name": "get_trending_models",
          "class": null,
          "signature": "(platform: str, category: Optional[str], idea_service: IdeaService)",
          "return_type": "",
          "decorators": [
            "router.get('/trending/{platform}', response_model=List[Dict[str, Any]])"
          ],
          "docstring": "Get trending models from external platforms.",
          "line_start": 342,
          "line_end": 364,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "save_trending_as_idea",
          "full_name": "save_trending_as_idea",
          "class": null,
          "signature": "(trending_id: str, save_data: TrendingSave, idea_service: IdeaService)",
          "return_type": "",
          "decorators": [
            "router.post('/trending/{trending_id}/save', response_model=Dict[str, str])"
          ],
          "docstring": "Save a trending model as a personal idea.",
          "line_start": 368,
          "line_end": 391,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "refresh_trending_cache",
          "full_name": "refresh_trending_cache",
          "class": null,
          "signature": "(idea_service: IdeaService)",
          "return_type": "",
          "decorators": [
            "router.post('/trending/refresh', response_model=Dict[str, str])"
          ],
          "docstring": "Force refresh of trending cache (admin endpoint).",
          "line_start": 395,
          "line_end": 418,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "APIRouter",
          "alias": null,
          "line": 4
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "HTTPException",
          "alias": null,
          "line": 4
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "Depends",
          "alias": null,
          "line": 4
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "Query",
          "alias": null,
          "line": 4
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "status",
          "alias": null,
          "line": 4
        },
        {
          "type": "from_import",
          "module": "pydantic",
          "name": "BaseModel",
          "alias": null,
          "line": 5
        },
        {
          "type": "from_import",
          "module": "pydantic",
          "name": "Field",
          "alias": null,
          "line": 5
        },
        {
          "type": "from_import",
          "module": "pydantic",
          "name": "HttpUrl",
          "alias": null,
          "line": 5
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Optional",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "List",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Dict",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Any",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Union",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "src.utils.dependencies",
          "name": "get_database",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "src.utils.dependencies",
          "name": "get_idea_service",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "src.services.idea_service",
          "name": "IdeaService",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "src.services.url_parser_service",
          "name": "UrlParserService",
          "alias": null,
          "line": 11
        },
        {
          "type": "from_import",
          "module": "src.models.idea",
          "name": "IdeaStatus",
          "alias": null,
          "line": 12
        },
        {
          "type": "from_import",
          "module": "src.models.idea",
          "name": "IdeaSourceType",
          "alias": null,
          "line": 12
        }
      ],
      "function_calls": [
        {
          "caller": "create_idea",
          "callee": "Depends",
          "line": 73,
          "type": "direct"
        },
        {
          "caller": "create_idea",
          "callee": "create_idea",
          "line": 77,
          "type": "attribute"
        },
        {
          "caller": "create_idea",
          "callee": "dict",
          "line": 77,
          "type": "attribute"
        },
        {
          "caller": "create_idea",
          "callee": "HTTPException",
          "line": 79,
          "type": "direct"
        },
        {
          "caller": "create_idea",
          "callee": "HTTPException",
          "line": 87,
          "type": "direct"
        },
        {
          "caller": "create_idea",
          "callee": "str",
          "line": 89,
          "type": "direct"
        },
        {
          "caller": "create_idea",
          "callee": "HTTPException",
          "line": 92,
          "type": "direct"
        },
        {
          "caller": "create_idea",
          "callee": "post",
          "line": 70,
          "type": "attribute"
        },
        {
          "caller": "list_ideas",
          "callee": "Query",
          "line": 100,
          "type": "direct"
        },
        {
          "caller": "list_ideas",
          "callee": "Query",
          "line": 101,
          "type": "direct"
        },
        {
          "caller": "list_ideas",
          "callee": "Query",
          "line": 102,
          "type": "direct"
        },
        {
          "caller": "list_ideas",
          "callee": "Query",
          "line": 103,
          "type": "direct"
        },
        {
          "caller": "list_ideas",
          "callee": "Query",
          "line": 104,
          "type": "direct"
        },
        {
          "caller": "list_ideas",
          "callee": "Query",
          "line": 105,
          "type": "direct"
        },
        {
          "caller": "list_ideas",
          "callee": "Depends",
          "line": 106,
          "type": "direct"
        },
        {
          "caller": "list_ideas",
          "callee": "list_ideas",
          "line": 120,
          "type": "attribute"
        },
        {
          "caller": "list_ideas",
          "callee": "HTTPException",
          "line": 124,
          "type": "direct"
        },
        {
          "caller": "list_ideas",
          "callee": "get",
          "line": 98,
          "type": "attribute"
        },
        {
          "caller": "get_idea",
          "callee": "Depends",
          "line": 133,
          "type": "direct"
        },
        {
          "caller": "get_idea",
          "callee": "get_idea",
          "line": 137,
          "type": "attribute"
        },
        {
          "caller": "get_idea",
          "callee": "HTTPException",
          "line": 139,
          "type": "direct"
        },
        {
          "caller": "get_idea",
          "callee": "to_dict",
          "line": 144,
          "type": "attribute"
        },
        {
          "caller": "get_idea",
          "callee": "HTTPException",
          "line": 149,
          "type": "direct"
        },
        {
          "caller": "get_idea",
          "callee": "get",
          "line": 130,
          "type": "attribute"
        },
        {
          "caller": "update_idea",
          "callee": "Depends",
          "line": 159,
          "type": "direct"
        },
        {
          "caller": "update_idea",
          "callee": "get_idea",
          "line": 164,
          "type": "attribute"
        },
        {
          "caller": "update_idea",
          "callee": "HTTPException",
          "line": 166,
          "type": "direct"
        },
        {
          "caller": "update_idea",
          "callee": "dict",
          "line": 172,
          "type": "attribute"
        },
        {
          "caller": "update_idea",
          "callee": "update_idea",
          "line": 173,
          "type": "attribute"
        },
        {
          "caller": "update_idea",
          "callee": "HTTPException",
          "line": 176,
          "type": "direct"
        },
        {
          "caller": "update_idea",
          "callee": "HTTPException",
          "line": 186,
          "type": "direct"
        },
        {
          "caller": "update_idea",
          "callee": "put",
          "line": 155,
          "type": "attribute"
        },
        {
          "caller": "delete_idea",
          "callee": "Depends",
          "line": 195,
          "type": "direct"
        },
        {
          "caller": "delete_idea",
          "callee": "get_idea",
          "line": 200,
          "type": "attribute"
        },
        {
          "caller": "delete_idea",
          "callee": "HTTPException",
          "line": 202,
          "type": "direct"
        },
        {
          "caller": "delete_idea",
          "callee": "delete_idea",
          "line": 207,
          "type": "attribute"
        },
        {
          "caller": "delete_idea",
          "callee": "HTTPException",
          "line": 209,
          "type": "direct"
        },
        {
          "caller": "delete_idea",
          "callee": "HTTPException",
          "line": 219,
          "type": "direct"
        },
        {
          "caller": "delete_idea",
          "callee": "delete",
          "line": 192,
          "type": "attribute"
        },
        {
          "caller": "update_idea_status",
          "callee": "Depends",
          "line": 229,
          "type": "direct"
        },
        {
          "caller": "update_idea_status",
          "callee": "get_idea",
          "line": 234,
          "type": "attribute"
        },
        {
          "caller": "update_idea_status",
          "callee": "HTTPException",
          "line": 236,
          "type": "direct"
        },
        {
          "caller": "update_idea_status",
          "callee": "update_idea_status",
          "line": 241,
          "type": "attribute"
        },
        {
          "caller": "update_idea_status",
          "callee": "HTTPException",
          "line": 243,
          "type": "direct"
        },
        {
          "caller": "update_idea_status",
          "callee": "HTTPException",
          "line": 253,
          "type": "direct"
        },
        {
          "caller": "update_idea_status",
          "callee": "patch",
          "line": 225,
          "type": "attribute"
        },
        {
          "caller": "import_idea_from_url",
          "callee": "Depends",
          "line": 262,
          "type": "direct"
        },
        {
          "caller": "import_idea_from_url",
          "callee": "dict",
          "line": 266,
          "type": "attribute"
        },
        {
          "caller": "import_idea_from_url",
          "callee": "import_from_url",
          "line": 267,
          "type": "attribute"
        },
        {
          "caller": "import_idea_from_url",
          "callee": "str",
          "line": 267,
          "type": "direct"
        },
        {
          "caller": "import_idea_from_url",
          "callee": "HTTPException",
          "line": 270,
          "type": "direct"
        },
        {
          "caller": "import_idea_from_url",
          "callee": "HTTPException",
          "line": 280,
          "type": "direct"
        },
        {
          "caller": "import_idea_from_url",
          "callee": "post",
          "line": 259,
          "type": "attribute"
        },
        {
          "caller": "get_all_tags",
          "callee": "Depends",
          "line": 288,
          "type": "direct"
        },
        {
          "caller": "get_all_tags",
          "callee": "get_all_tags",
          "line": 292,
          "type": "attribute"
        },
        {
          "caller": "get_all_tags",
          "callee": "HTTPException",
          "line": 294,
          "type": "direct"
        },
        {
          "caller": "get_all_tags",
          "callee": "get",
          "line": 286,
          "type": "attribute"
        },
        {
          "caller": "get_idea_statistics",
          "callee": "Depends",
          "line": 302,
          "type": "direct"
        },
        {
          "caller": "get_idea_statistics",
          "callee": "get_statistics",
          "line": 306,
          "type": "attribute"
        },
        {
          "caller": "get_idea_statistics",
          "callee": "HTTPException",
          "line": 308,
          "type": "direct"
        },
        {
          "caller": "get_idea_statistics",
          "callee": "get",
          "line": 300,
          "type": "attribute"
        },
        {
          "caller": "search_ideas",
          "callee": "Query",
          "line": 316,
          "type": "direct"
        },
        {
          "caller": "search_ideas",
          "callee": "Query",
          "line": 317,
          "type": "direct"
        },
        {
          "caller": "search_ideas",
          "callee": "Query",
          "line": 318,
          "type": "direct"
        },
        {
          "caller": "search_ideas",
          "callee": "Query",
          "line": 319,
          "type": "direct"
        },
        {
          "caller": "search_ideas",
          "callee": "Depends",
          "line": 320,
          "type": "direct"
        },
        {
          "caller": "search_ideas",
          "callee": "search_ideas",
          "line": 332,
          "type": "attribute"
        },
        {
          "caller": "search_ideas",
          "callee": "HTTPException",
          "line": 334,
          "type": "direct"
        },
        {
          "caller": "search_ideas",
          "callee": "get",
          "line": 314,
          "type": "attribute"
        },
        {
          "caller": "get_trending_models",
          "callee": "Query",
          "line": 344,
          "type": "direct"
        },
        {
          "caller": "get_trending_models",
          "callee": "Depends",
          "line": 345,
          "type": "direct"
        },
        {
          "caller": "get_trending_models",
          "callee": "HTTPException",
          "line": 350,
          "type": "direct"
        },
        {
          "caller": "get_trending_models",
          "callee": "get_trending",
          "line": 356,
          "type": "attribute"
        },
        {
          "caller": "get_trending_models",
          "callee": "HTTPException",
          "line": 361,
          "type": "direct"
        },
        {
          "caller": "get_trending_models",
          "callee": "get",
          "line": 341,
          "type": "attribute"
        },
        {
          "caller": "save_trending_as_idea",
          "callee": "Depends",
          "line": 371,
          "type": "direct"
        },
        {
          "caller": "save_trending_as_idea",
          "callee": "save_trending_as_idea",
          "line": 375,
          "type": "attribute"
        },
        {
          "caller": "save_trending_as_idea",
          "callee": "dict",
          "line": 375,
          "type": "attribute"
        },
        {
          "caller": "save_trending_as_idea",
          "callee": "HTTPException",
          "line": 378,
          "type": "direct"
        },
        {
          "caller": "save_trending_as_idea",
          "callee": "HTTPException",
          "line": 388,
          "type": "direct"
        },
        {
          "caller": "save_trending_as_idea",
          "callee": "post",
          "line": 367,
          "type": "attribute"
        },
        {
          "caller": "refresh_trending_cache",
          "callee": "Depends",
          "line": 396,
          "type": "direct"
        },
        {
          "caller": "refresh_trending_cache",
          "callee": "cleanup_expired_trending",
          "line": 402,
          "type": "attribute"
        },
        {
          "caller": "refresh_trending_cache",
          "callee": "HTTPException",
          "line": 407,
          "type": "direct"
        },
        {
          "caller": "refresh_trending_cache",
          "callee": "HTTPException",
          "line": 415,
          "type": "direct"
        },
        {
          "caller": "refresh_trending_cache",
          "callee": "post",
          "line": 394,
          "type": "attribute"
        }
      ],
      "error": null
    },
    {
      "filepath": "src\\api\\routers\\jobs.py",
      "functions": [
        {
          "name": "_transform_job_to_response",
          "full_name": "_transform_job_to_response",
          "class": null,
          "signature": "(job_data: dict)",
          "return_type": "dict",
          "decorators": [],
          "docstring": "Transform job data to response format.",
          "line_start": 53,
          "line_end": 74,
          "access_level": "private",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "list_jobs",
          "full_name": "list_jobs",
          "class": null,
          "signature": "(printer_id: Optional[str], job_status: Optional[str], is_business: Optional[bool], limit: int, offset: int, job_service: JobService)",
          "return_type": "",
          "decorators": [
            "router.get('/', response_model=List[JobResponse])"
          ],
          "docstring": "List jobs with optional filtering.",
          "line_start": 78,
          "line_end": 101,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_job",
          "full_name": "get_job",
          "class": null,
          "signature": "(job_id: str, job_service: JobService)",
          "return_type": "",
          "decorators": [
            "router.get('/{job_id}', response_model=JobResponse)"
          ],
          "docstring": "Get job details by ID.",
          "line_start": 105,
          "line_end": 125,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "delete_job",
          "full_name": "delete_job",
          "class": null,
          "signature": "(job_id: UUID, job_service: JobService)",
          "return_type": "",
          "decorators": [
            "router.delete('/{job_id}', status_code=status.HTTP_204_NO_CONTENT)"
          ],
          "docstring": "Delete a job record.",
          "line_start": 129,
          "line_end": 148,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "from_import",
          "module": "typing",
          "name": "List",
          "alias": null,
          "line": 3
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Optional",
          "alias": null,
          "line": 3
        },
        {
          "type": "from_import",
          "module": "uuid",
          "name": "UUID",
          "alias": null,
          "line": 4
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 5
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "APIRouter",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "Depends",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "HTTPException",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "status",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "Query",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "pydantic",
          "name": "BaseModel",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "pydantic",
          "name": "Field",
          "alias": null,
          "line": 8
        },
        {
          "type": "import",
          "module": "structlog",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "src.models.job",
          "name": "Job",
          "alias": null,
          "line": 11
        },
        {
          "type": "from_import",
          "module": "src.models.job",
          "name": "JobStatus",
          "alias": null,
          "line": 11
        },
        {
          "type": "from_import",
          "module": "src.services.job_service",
          "name": "JobService",
          "alias": null,
          "line": 12
        },
        {
          "type": "from_import",
          "module": "src.utils.dependencies",
          "name": "get_job_service",
          "alias": null,
          "line": 13
        }
      ],
      "function_calls": [
        {
          "caller": "_transform_job_to_response",
          "callee": "copy",
          "line": 56,
          "type": "attribute"
        },
        {
          "caller": "_transform_job_to_response",
          "callee": "get",
          "line": 63,
          "type": "attribute"
        },
        {
          "caller": "_transform_job_to_response",
          "callee": "get",
          "line": 64,
          "type": "attribute"
        },
        {
          "caller": "_transform_job_to_response",
          "callee": "get",
          "line": 68,
          "type": "attribute"
        },
        {
          "caller": "_transform_job_to_response",
          "callee": "isinstance",
          "line": 69,
          "type": "direct"
        },
        {
          "caller": "_transform_job_to_response",
          "callee": "isoformat",
          "line": 69,
          "type": "attribute"
        },
        {
          "caller": "_transform_job_to_response",
          "callee": "str",
          "line": 69,
          "type": "direct"
        },
        {
          "caller": "_transform_job_to_response",
          "callee": "get",
          "line": 71,
          "type": "attribute"
        },
        {
          "caller": "_transform_job_to_response",
          "callee": "isinstance",
          "line": 72,
          "type": "direct"
        },
        {
          "caller": "_transform_job_to_response",
          "callee": "isoformat",
          "line": 72,
          "type": "attribute"
        },
        {
          "caller": "_transform_job_to_response",
          "callee": "str",
          "line": 72,
          "type": "direct"
        },
        {
          "caller": "list_jobs",
          "callee": "Query",
          "line": 79,
          "type": "direct"
        },
        {
          "caller": "list_jobs",
          "callee": "Query",
          "line": 80,
          "type": "direct"
        },
        {
          "caller": "list_jobs",
          "callee": "Query",
          "line": 81,
          "type": "direct"
        },
        {
          "caller": "list_jobs",
          "callee": "Query",
          "line": 82,
          "type": "direct"
        },
        {
          "caller": "list_jobs",
          "callee": "Query",
          "line": 83,
          "type": "direct"
        },
        {
          "caller": "list_jobs",
          "callee": "Depends",
          "line": 84,
          "type": "direct"
        },
        {
          "caller": "list_jobs",
          "callee": "list_jobs",
          "line": 88,
          "type": "attribute"
        },
        {
          "caller": "list_jobs",
          "callee": "model_validate",
          "line": 95,
          "type": "attribute"
        },
        {
          "caller": "list_jobs",
          "callee": "_transform_job_to_response",
          "line": 95,
          "type": "direct"
        },
        {
          "caller": "list_jobs",
          "callee": "error",
          "line": 97,
          "type": "attribute"
        },
        {
          "caller": "list_jobs",
          "callee": "str",
          "line": 97,
          "type": "direct"
        },
        {
          "caller": "list_jobs",
          "callee": "HTTPException",
          "line": 98,
          "type": "direct"
        },
        {
          "caller": "list_jobs",
          "callee": "get",
          "line": 77,
          "type": "attribute"
        },
        {
          "caller": "get_job",
          "callee": "Depends",
          "line": 107,
          "type": "direct"
        },
        {
          "caller": "get_job",
          "callee": "get_job",
          "line": 111,
          "type": "attribute"
        },
        {
          "caller": "get_job",
          "callee": "HTTPException",
          "line": 113,
          "type": "direct"
        },
        {
          "caller": "get_job",
          "callee": "model_validate",
          "line": 117,
          "type": "attribute"
        },
        {
          "caller": "get_job",
          "callee": "_transform_job_to_response",
          "line": 117,
          "type": "direct"
        },
        {
          "caller": "get_job",
          "callee": "error",
          "line": 121,
          "type": "attribute"
        },
        {
          "caller": "get_job",
          "callee": "str",
          "line": 121,
          "type": "direct"
        },
        {
          "caller": "get_job",
          "callee": "str",
          "line": 121,
          "type": "direct"
        },
        {
          "caller": "get_job",
          "callee": "HTTPException",
          "line": 122,
          "type": "direct"
        },
        {
          "caller": "get_job",
          "callee": "get",
          "line": 104,
          "type": "attribute"
        },
        {
          "caller": "delete_job",
          "callee": "Depends",
          "line": 131,
          "type": "direct"
        },
        {
          "caller": "delete_job",
          "callee": "delete_job",
          "line": 135,
          "type": "attribute"
        },
        {
          "caller": "delete_job",
          "callee": "HTTPException",
          "line": 137,
          "type": "direct"
        },
        {
          "caller": "delete_job",
          "callee": "error",
          "line": 144,
          "type": "attribute"
        },
        {
          "caller": "delete_job",
          "callee": "str",
          "line": 144,
          "type": "direct"
        },
        {
          "caller": "delete_job",
          "callee": "str",
          "line": 144,
          "type": "direct"
        },
        {
          "caller": "delete_job",
          "callee": "HTTPException",
          "line": 145,
          "type": "direct"
        },
        {
          "caller": "delete_job",
          "callee": "delete",
          "line": 128,
          "type": "attribute"
        }
      ],
      "error": null
    },
    {
      "filepath": "src\\api\\routers\\library.py",
      "functions": [
        {
          "name": "get_library_service",
          "full_name": "get_library_service",
          "class": null,
          "signature": "()",
          "return_type": "",
          "decorators": [],
          "docstring": "Get library service from application state.",
          "line_start": 82,
          "line_end": 87,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "list_library_files",
          "full_name": "list_library_files",
          "class": null,
          "signature": "(page: int, limit: int, source_type: Optional[str], file_type: Optional[str], status: Optional[str], search: Optional[str], has_thumbnail: Optional[bool], has_metadata: Optional[bool], manufacturer: Optional[str], printer_model: Optional[str], show_duplicates: Optional[bool], only_duplicates: Optional[bool], library_service)",
          "return_type": "",
          "decorators": [
            "router.get('/files', response_model=LibraryFileListResponse)"
          ],
          "docstring": "List library files with filters and pagination.\n\n**Filters:**\n- `source_type`: Filter by where file came from (printer/watch_folder/upload)\n- `file_type`: Filter by file extension (.3mf, .stl, etc.)\n- `status`: Filter by processing status\n- `search`: Search in filename (case-insensitive)\n- `has_thumbnail`: Only files with/without thumbnails\n- `has_metadata`: Only files with/without extracted metadata\n- `manufacturer`: Filter by printer manufacturer (bambu_lab, prusa_research)\n- `printer_model`: Filter by printer model (A1, P1P, Core One, MK4, etc.)\n\n**Pagination:**\n- `page`: Page number (starts at 1)\n- `limit`: Items per page (default 50, max 200)\n\n**Sorting:**\n- Files are sorted by date added (newest first)\n\n**Returns:**\n- `files`: Array of file objects\n- `pagination`: Pagination metadata (page, limit, total_items, total_pages)",
          "line_start": 91,
          "line_end": 164,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_library_file",
          "full_name": "get_library_file",
          "class": null,
          "signature": "(checksum: str, library_service)",
          "return_type": "",
          "decorators": [
            "router.get('/files/{checksum}', response_model=LibraryFileResponse)"
          ],
          "docstring": "Get library file details by checksum.\n\n**Parameters:**\n- `checksum`: File SHA-256 checksum (hexadecimal)\n\n**Returns:**\n- Complete file record with all metadata\n- Sources (where file was discovered)\n- Enhanced metadata (dimensions, materials, costs)\n\n**Error Responses:**\n- `404`: File not found in library\n- `500`: Internal server error",
          "line_start": 168,
          "line_end": 202,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "reprocess_library_file",
          "full_name": "reprocess_library_file",
          "class": null,
          "signature": "(checksum: str, library_service)",
          "return_type": "",
          "decorators": [
            "router.post('/files/{checksum}/reprocess', response_model=ReprocessResponse)"
          ],
          "docstring": "Reprocess file metadata extraction.\n\nTriggers metadata re-extraction for a file. Useful when:\n- Metadata extraction failed previously\n- New metadata extractors are available\n- File was updated but metadata is stale\n\n**Parameters:**\n- `checksum`: File SHA-256 checksum\n\n**Process:**\n1. File status set to 'processing'\n2. Metadata extraction scheduled asynchronously\n3. Thumbnails regenerated\n4. Status updated to 'ready' or 'error'\n\n**Returns:**\n- `success`: Whether reprocessing was scheduled\n- `checksum`: File checksum\n- `message`: Status message\n\n**Error Responses:**\n- `404`: File not found\n- `500`: Failed to schedule reprocessing",
          "line_start": 206,
          "line_end": 264,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "delete_library_file",
          "full_name": "delete_library_file",
          "class": null,
          "signature": "(checksum: str, delete_physical: bool, library_service)",
          "return_type": "",
          "decorators": [
            "router.delete('/files/{checksum}', response_model=DeleteResponse)"
          ],
          "docstring": "Delete file from library.\n\n**Parameters:**\n- `checksum`: File SHA-256 checksum\n- `delete_physical`: Whether to delete physical file (default: true)\n\n**Warning:** This operation cannot be undone!\n\n**Process:**\n1. Remove file record from database\n2. Remove all source associations\n3. Optionally delete physical file from library folder\n4. Delete thumbnails and previews\n\n**Returns:**\n- `success`: Whether deletion succeeded\n- `checksum`: File checksum\n- `message`: Status message\n\n**Error Responses:**\n- `404`: File not found\n- `500`: Deletion failed",
          "line_start": 268,
          "line_end": 325,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_library_statistics",
          "full_name": "get_library_statistics",
          "class": null,
          "signature": "(library_service)",
          "return_type": "",
          "decorators": [
            "router.get('/statistics', response_model=LibraryStatsResponse)"
          ],
          "docstring": "Get library statistics.\n\n**Returns:**\n- `total_files`: Total number of files in library\n- `total_size`: Total size of all files (bytes)\n- `files_with_thumbnails`: Files with generated thumbnails\n- `files_analyzed`: Files with extracted metadata\n- `available_files`: Files ready for use\n- `processing_files`: Files being processed\n- `error_files`: Files with errors\n- `unique_file_types`: Number of different file types\n- `avg_file_size`: Average file size (bytes)\n- `total_material_cost`: Sum of all material costs (EUR)\n\n**Use Cases:**\n- Dashboard widgets\n- Storage management\n- Library health monitoring",
          "line_start": 329,
          "line_end": 371,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "library_health_check",
          "full_name": "library_health_check",
          "class": null,
          "signature": "(library_service)",
          "return_type": "",
          "decorators": [
            "router.get('/health')"
          ],
          "docstring": "Library service health check.\n\n**Returns:**\n- `status`: Service status (healthy/degraded/unhealthy)\n- `enabled`: Whether library is enabled\n- `library_path`: Configured library path\n- `message`: Status message\n\n**Status Codes:**\n- `healthy`: Library operational\n- `degraded`: Library has issues but functional\n- `unhealthy`: Library not operational",
          "line_start": 375,
          "line_end": 427,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "from_import",
          "module": "typing",
          "name": "Optional",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Dict",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Any",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "APIRouter",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "HTTPException",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "Query",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "Path",
          "alias": "PathParam",
          "line": 7
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "Depends",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "pydantic",
          "name": "BaseModel",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "pydantic",
          "name": "Field",
          "alias": null,
          "line": 8
        },
        {
          "type": "import",
          "module": "structlog",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "src.main",
          "name": "app",
          "alias": null,
          "line": 84
        }
      ],
      "function_calls": [
        {
          "caller": "get_library_service",
          "callee": "hasattr",
          "line": 85,
          "type": "direct"
        },
        {
          "caller": "get_library_service",
          "callee": "HTTPException",
          "line": 86,
          "type": "direct"
        },
        {
          "caller": "list_library_files",
          "callee": "Query",
          "line": 92,
          "type": "direct"
        },
        {
          "caller": "list_library_files",
          "callee": "Query",
          "line": 93,
          "type": "direct"
        },
        {
          "caller": "list_library_files",
          "callee": "Query",
          "line": 94,
          "type": "direct"
        },
        {
          "caller": "list_library_files",
          "callee": "Query",
          "line": 95,
          "type": "direct"
        },
        {
          "caller": "list_library_files",
          "callee": "Query",
          "line": 96,
          "type": "direct"
        },
        {
          "caller": "list_library_files",
          "callee": "Query",
          "line": 97,
          "type": "direct"
        },
        {
          "caller": "list_library_files",
          "callee": "Query",
          "line": 98,
          "type": "direct"
        },
        {
          "caller": "list_library_files",
          "callee": "Query",
          "line": 99,
          "type": "direct"
        },
        {
          "caller": "list_library_files",
          "callee": "Query",
          "line": 100,
          "type": "direct"
        },
        {
          "caller": "list_library_files",
          "callee": "Query",
          "line": 101,
          "type": "direct"
        },
        {
          "caller": "list_library_files",
          "callee": "Query",
          "line": 102,
          "type": "direct"
        },
        {
          "caller": "list_library_files",
          "callee": "Query",
          "line": 103,
          "type": "direct"
        },
        {
          "caller": "list_library_files",
          "callee": "Depends",
          "line": 104,
          "type": "direct"
        },
        {
          "caller": "list_library_files",
          "callee": "list_files",
          "line": 155,
          "type": "attribute"
        },
        {
          "caller": "list_library_files",
          "callee": "error",
          "line": 163,
          "type": "attribute"
        },
        {
          "caller": "list_library_files",
          "callee": "str",
          "line": 163,
          "type": "direct"
        },
        {
          "caller": "list_library_files",
          "callee": "HTTPException",
          "line": 164,
          "type": "direct"
        },
        {
          "caller": "list_library_files",
          "callee": "str",
          "line": 164,
          "type": "direct"
        },
        {
          "caller": "list_library_files",
          "callee": "get",
          "line": 90,
          "type": "attribute"
        },
        {
          "caller": "get_library_file",
          "callee": "PathParam",
          "line": 169,
          "type": "direct"
        },
        {
          "caller": "get_library_file",
          "callee": "Depends",
          "line": 170,
          "type": "direct"
        },
        {
          "caller": "get_library_file",
          "callee": "get_file_by_checksum",
          "line": 188,
          "type": "attribute"
        },
        {
          "caller": "get_library_file",
          "callee": "HTTPException",
          "line": 191,
          "type": "direct"
        },
        {
          "caller": "get_library_file",
          "callee": "error",
          "line": 201,
          "type": "attribute"
        },
        {
          "caller": "get_library_file",
          "callee": "str",
          "line": 201,
          "type": "direct"
        },
        {
          "caller": "get_library_file",
          "callee": "HTTPException",
          "line": 202,
          "type": "direct"
        },
        {
          "caller": "get_library_file",
          "callee": "str",
          "line": 202,
          "type": "direct"
        },
        {
          "caller": "get_library_file",
          "callee": "get",
          "line": 167,
          "type": "attribute"
        },
        {
          "caller": "reprocess_library_file",
          "callee": "PathParam",
          "line": 207,
          "type": "direct"
        },
        {
          "caller": "reprocess_library_file",
          "callee": "Depends",
          "line": 208,
          "type": "direct"
        },
        {
          "caller": "reprocess_library_file",
          "callee": "get_file_by_checksum",
          "line": 238,
          "type": "attribute"
        },
        {
          "caller": "reprocess_library_file",
          "callee": "HTTPException",
          "line": 240,
          "type": "direct"
        },
        {
          "caller": "reprocess_library_file",
          "callee": "reprocess_file",
          "line": 246,
          "type": "attribute"
        },
        {
          "caller": "reprocess_library_file",
          "callee": "HTTPException",
          "line": 249,
          "type": "direct"
        },
        {
          "caller": "reprocess_library_file",
          "callee": "error",
          "line": 263,
          "type": "attribute"
        },
        {
          "caller": "reprocess_library_file",
          "callee": "str",
          "line": 263,
          "type": "direct"
        },
        {
          "caller": "reprocess_library_file",
          "callee": "HTTPException",
          "line": 264,
          "type": "direct"
        },
        {
          "caller": "reprocess_library_file",
          "callee": "str",
          "line": 264,
          "type": "direct"
        },
        {
          "caller": "reprocess_library_file",
          "callee": "post",
          "line": 205,
          "type": "attribute"
        },
        {
          "caller": "delete_library_file",
          "callee": "PathParam",
          "line": 269,
          "type": "direct"
        },
        {
          "caller": "delete_library_file",
          "callee": "Query",
          "line": 270,
          "type": "direct"
        },
        {
          "caller": "delete_library_file",
          "callee": "Depends",
          "line": 271,
          "type": "direct"
        },
        {
          "caller": "delete_library_file",
          "callee": "get_file_by_checksum",
          "line": 299,
          "type": "attribute"
        },
        {
          "caller": "delete_library_file",
          "callee": "HTTPException",
          "line": 301,
          "type": "direct"
        },
        {
          "caller": "delete_library_file",
          "callee": "delete_file",
          "line": 307,
          "type": "attribute"
        },
        {
          "caller": "delete_library_file",
          "callee": "HTTPException",
          "line": 310,
          "type": "direct"
        },
        {
          "caller": "delete_library_file",
          "callee": "error",
          "line": 324,
          "type": "attribute"
        },
        {
          "caller": "delete_library_file",
          "callee": "str",
          "line": 324,
          "type": "direct"
        },
        {
          "caller": "delete_library_file",
          "callee": "HTTPException",
          "line": 325,
          "type": "direct"
        },
        {
          "caller": "delete_library_file",
          "callee": "str",
          "line": 325,
          "type": "direct"
        },
        {
          "caller": "delete_library_file",
          "callee": "delete",
          "line": 267,
          "type": "attribute"
        },
        {
          "caller": "get_library_statistics",
          "callee": "Depends",
          "line": 330,
          "type": "direct"
        },
        {
          "caller": "get_library_statistics",
          "callee": "get_library_statistics",
          "line": 353,
          "type": "attribute"
        },
        {
          "caller": "get_library_statistics",
          "callee": "LibraryStatsResponse",
          "line": 356,
          "type": "direct"
        },
        {
          "caller": "get_library_statistics",
          "callee": "get",
          "line": 357,
          "type": "attribute"
        },
        {
          "caller": "get_library_statistics",
          "callee": "get",
          "line": 358,
          "type": "attribute"
        },
        {
          "caller": "get_library_statistics",
          "callee": "get",
          "line": 359,
          "type": "attribute"
        },
        {
          "caller": "get_library_statistics",
          "callee": "get",
          "line": 360,
          "type": "attribute"
        },
        {
          "caller": "get_library_statistics",
          "callee": "get",
          "line": 361,
          "type": "attribute"
        },
        {
          "caller": "get_library_statistics",
          "callee": "get",
          "line": 362,
          "type": "attribute"
        },
        {
          "caller": "get_library_statistics",
          "callee": "get",
          "line": 363,
          "type": "attribute"
        },
        {
          "caller": "get_library_statistics",
          "callee": "get",
          "line": 364,
          "type": "attribute"
        },
        {
          "caller": "get_library_statistics",
          "callee": "get",
          "line": 365,
          "type": "attribute"
        },
        {
          "caller": "get_library_statistics",
          "callee": "get",
          "line": 366,
          "type": "attribute"
        },
        {
          "caller": "get_library_statistics",
          "callee": "error",
          "line": 370,
          "type": "attribute"
        },
        {
          "caller": "get_library_statistics",
          "callee": "str",
          "line": 370,
          "type": "direct"
        },
        {
          "caller": "get_library_statistics",
          "callee": "HTTPException",
          "line": 371,
          "type": "direct"
        },
        {
          "caller": "get_library_statistics",
          "callee": "str",
          "line": 371,
          "type": "direct"
        },
        {
          "caller": "get_library_statistics",
          "callee": "get",
          "line": 328,
          "type": "attribute"
        },
        {
          "caller": "library_health_check",
          "callee": "Depends",
          "line": 375,
          "type": "direct"
        },
        {
          "caller": "library_health_check",
          "callee": "str",
          "line": 396,
          "type": "direct"
        },
        {
          "caller": "library_health_check",
          "callee": "exists",
          "line": 401,
          "type": "attribute"
        },
        {
          "caller": "library_health_check",
          "callee": "str",
          "line": 405,
          "type": "direct"
        },
        {
          "caller": "library_health_check",
          "callee": "get_library_statistics",
          "line": 410,
          "type": "attribute"
        },
        {
          "caller": "library_health_check",
          "callee": "str",
          "line": 415,
          "type": "direct"
        },
        {
          "caller": "library_health_check",
          "callee": "get",
          "line": 416,
          "type": "attribute"
        },
        {
          "caller": "library_health_check",
          "callee": "error",
          "line": 421,
          "type": "attribute"
        },
        {
          "caller": "library_health_check",
          "callee": "str",
          "line": 421,
          "type": "direct"
        },
        {
          "caller": "library_health_check",
          "callee": "str",
          "line": 425,
          "type": "direct"
        },
        {
          "caller": "library_health_check",
          "callee": "str",
          "line": 426,
          "type": "direct"
        },
        {
          "caller": "library_health_check",
          "callee": "get",
          "line": 374,
          "type": "attribute"
        }
      ],
      "error": null
    },
    {
      "filepath": "src\\api\\routers\\materials.py",
      "functions": [
        {
          "name": "get_materials",
          "full_name": "get_materials",
          "class": null,
          "signature": "(material_type: Optional[MaterialType], brand: Optional[MaterialBrand], color: Optional[MaterialColor], low_stock: bool, printer_id: Optional[str], material_service: MaterialService)",
          "return_type": "",
          "decorators": [
            "router.get('/', response_model=List[MaterialResponse])"
          ],
          "docstring": "Get all materials with optional filters.",
          "line_start": 64,
          "line_end": 110,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_material_stats",
          "full_name": "get_material_stats",
          "class": null,
          "signature": "(material_service: MaterialService)",
          "return_type": "",
          "decorators": [
            "router.get('/stats', response_model=MaterialStats)"
          ],
          "docstring": "Get material inventory statistics.",
          "line_start": 114,
          "line_end": 121,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_material_types",
          "full_name": "get_material_types",
          "class": null,
          "signature": "()",
          "return_type": "",
          "decorators": [
            "router.get('/types')"
          ],
          "docstring": "Get available material types.",
          "line_start": 125,
          "line_end": 131,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_consumption_report",
          "full_name": "get_consumption_report",
          "class": null,
          "signature": "(start_date: datetime, end_date: datetime, material_service: MaterialService)",
          "return_type": "",
          "decorators": [
            "router.get('/report', response_model=MaterialReport)"
          ],
          "docstring": "Generate material consumption report for a date range.",
          "line_start": 135,
          "line_end": 149,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "export_inventory",
          "full_name": "export_inventory",
          "class": null,
          "signature": "(format: str, material_service: MaterialService)",
          "return_type": "",
          "decorators": [
            "router.get('/export')"
          ],
          "docstring": "Export material inventory to file.",
          "line_start": 153,
          "line_end": 178,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_material",
          "full_name": "get_material",
          "class": null,
          "signature": "(material_id: str, material_service: MaterialService)",
          "return_type": "",
          "decorators": [
            "router.get('/{material_id}', response_model=MaterialResponse)"
          ],
          "docstring": "Get a specific material by ID.",
          "line_start": 182,
          "line_end": 213,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "create_material",
          "full_name": "create_material",
          "class": null,
          "signature": "(material_data: MaterialCreate, material_service: MaterialService)",
          "return_type": "",
          "decorators": [
            "router.post('/', response_model=MaterialResponse, status_code=201)"
          ],
          "docstring": "Create a new material spool.",
          "line_start": 217,
          "line_end": 246,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "update_material",
          "full_name": "update_material",
          "class": null,
          "signature": "(material_id: str, update_data: MaterialUpdate, material_service: MaterialService)",
          "return_type": "",
          "decorators": [
            "router.patch('/{material_id}', response_model=MaterialResponse)"
          ],
          "docstring": "Update material information.",
          "line_start": 250,
          "line_end": 282,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "record_consumption",
          "full_name": "record_consumption",
          "class": null,
          "signature": "(consumption_data: ConsumptionRequest, material_service: MaterialService)",
          "return_type": "",
          "decorators": [
            "router.post('/consumption', response_model=dict, status_code=201)"
          ],
          "docstring": "Record material consumption for a job.",
          "line_start": 286,
          "line_end": 315,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "delete_material",
          "full_name": "delete_material",
          "class": null,
          "signature": "(material_id: str, material_service: MaterialService)",
          "return_type": "",
          "decorators": [
            "router.delete('/{material_id}', status_code=204)"
          ],
          "docstring": "Delete a material spool (soft delete).",
          "line_start": 319,
          "line_end": 325,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_consumption_history",
          "full_name": "get_consumption_history",
          "class": null,
          "signature": "(material_id: Optional[str], job_id: Optional[str], printer_id: Optional[str], days: int, material_service: MaterialService)",
          "return_type": "",
          "decorators": [
            "router.get('/consumption/history')"
          ],
          "docstring": "Get material consumption history.",
          "line_start": 329,
          "line_end": 338,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "timedelta",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "decimal",
          "name": "Decimal",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "pathlib",
          "name": "Path",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "List",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Optional",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "APIRouter",
          "alias": null,
          "line": 11
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "Depends",
          "alias": null,
          "line": 11
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "HTTPException",
          "alias": null,
          "line": 11
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "Query",
          "alias": null,
          "line": 11
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "Body",
          "alias": null,
          "line": 11
        },
        {
          "type": "from_import",
          "module": "fastapi.responses",
          "name": "FileResponse",
          "alias": null,
          "line": 12
        },
        {
          "type": "from_import",
          "module": "pydantic",
          "name": "BaseModel",
          "alias": null,
          "line": 13
        },
        {
          "type": "from_import",
          "module": "pydantic",
          "name": "Field",
          "alias": null,
          "line": 13
        },
        {
          "type": "from_import",
          "module": "src.models.material",
          "name": "MaterialCreate",
          "alias": null,
          "line": 15
        },
        {
          "type": "from_import",
          "module": "src.models.material",
          "name": "MaterialUpdate",
          "alias": null,
          "line": 15
        },
        {
          "type": "from_import",
          "module": "src.models.material",
          "name": "MaterialSpool",
          "alias": null,
          "line": 15
        },
        {
          "type": "from_import",
          "module": "src.models.material",
          "name": "MaterialStats",
          "alias": null,
          "line": 15
        },
        {
          "type": "from_import",
          "module": "src.models.material",
          "name": "MaterialReport",
          "alias": null,
          "line": 15
        },
        {
          "type": "from_import",
          "module": "src.models.material",
          "name": "MaterialConsumption",
          "alias": null,
          "line": 15
        },
        {
          "type": "from_import",
          "module": "src.models.material",
          "name": "MaterialType",
          "alias": null,
          "line": 15
        },
        {
          "type": "from_import",
          "module": "src.models.material",
          "name": "MaterialBrand",
          "alias": null,
          "line": 15
        },
        {
          "type": "from_import",
          "module": "src.models.material",
          "name": "MaterialColor",
          "alias": null,
          "line": 15
        },
        {
          "type": "from_import",
          "module": "src.services.material_service",
          "name": "MaterialService",
          "alias": null,
          "line": 26
        },
        {
          "type": "from_import",
          "module": "src.utils.dependencies",
          "name": "get_material_service",
          "alias": null,
          "line": 27
        }
      ],
      "function_calls": [
        {
          "caller": "get_materials",
          "callee": "Depends",
          "line": 70,
          "type": "direct"
        },
        {
          "caller": "get_materials",
          "callee": "get_all_materials",
          "line": 74,
          "type": "attribute"
        },
        {
          "caller": "get_materials",
          "callee": "MaterialResponse",
          "line": 89,
          "type": "direct"
        },
        {
          "caller": "get_materials",
          "callee": "HTTPException",
          "line": 110,
          "type": "direct"
        },
        {
          "caller": "get_materials",
          "callee": "str",
          "line": 110,
          "type": "direct"
        },
        {
          "caller": "get_materials",
          "callee": "get",
          "line": 63,
          "type": "attribute"
        },
        {
          "caller": "get_material_stats",
          "callee": "Depends",
          "line": 115,
          "type": "direct"
        },
        {
          "caller": "get_material_stats",
          "callee": "get_statistics",
          "line": 119,
          "type": "attribute"
        },
        {
          "caller": "get_material_stats",
          "callee": "HTTPException",
          "line": 121,
          "type": "direct"
        },
        {
          "caller": "get_material_stats",
          "callee": "str",
          "line": 121,
          "type": "direct"
        },
        {
          "caller": "get_material_stats",
          "callee": "get",
          "line": 113,
          "type": "attribute"
        },
        {
          "caller": "get_material_types",
          "callee": "get",
          "line": 124,
          "type": "attribute"
        },
        {
          "caller": "get_consumption_report",
          "callee": "Query",
          "line": 136,
          "type": "direct"
        },
        {
          "caller": "get_consumption_report",
          "callee": "Query",
          "line": 137,
          "type": "direct"
        },
        {
          "caller": "get_consumption_report",
          "callee": "Depends",
          "line": 138,
          "type": "direct"
        },
        {
          "caller": "get_consumption_report",
          "callee": "HTTPException",
          "line": 143,
          "type": "direct"
        },
        {
          "caller": "get_consumption_report",
          "callee": "generate_report",
          "line": 145,
          "type": "attribute"
        },
        {
          "caller": "get_consumption_report",
          "callee": "HTTPException",
          "line": 149,
          "type": "direct"
        },
        {
          "caller": "get_consumption_report",
          "callee": "str",
          "line": 149,
          "type": "direct"
        },
        {
          "caller": "get_consumption_report",
          "callee": "get",
          "line": 134,
          "type": "attribute"
        },
        {
          "caller": "export_inventory",
          "callee": "Query",
          "line": 154,
          "type": "direct"
        },
        {
          "caller": "export_inventory",
          "callee": "Depends",
          "line": 155,
          "type": "direct"
        },
        {
          "caller": "export_inventory",
          "callee": "Path",
          "line": 159,
          "type": "direct"
        },
        {
          "caller": "export_inventory",
          "callee": "now",
          "line": 159,
          "type": "attribute"
        },
        {
          "caller": "export_inventory",
          "callee": "mkdir",
          "line": 160,
          "type": "attribute"
        },
        {
          "caller": "export_inventory",
          "callee": "export_inventory",
          "line": 163,
          "type": "attribute"
        },
        {
          "caller": "export_inventory",
          "callee": "FileResponse",
          "line": 165,
          "type": "direct"
        },
        {
          "caller": "export_inventory",
          "callee": "str",
          "line": 166,
          "type": "direct"
        },
        {
          "caller": "export_inventory",
          "callee": "HTTPException",
          "line": 172,
          "type": "direct"
        },
        {
          "caller": "export_inventory",
          "callee": "HTTPException",
          "line": 174,
          "type": "direct"
        },
        {
          "caller": "export_inventory",
          "callee": "HTTPException",
          "line": 178,
          "type": "direct"
        },
        {
          "caller": "export_inventory",
          "callee": "str",
          "line": 178,
          "type": "direct"
        },
        {
          "caller": "export_inventory",
          "callee": "get",
          "line": 152,
          "type": "attribute"
        },
        {
          "caller": "get_material",
          "callee": "Depends",
          "line": 184,
          "type": "direct"
        },
        {
          "caller": "get_material",
          "callee": "get_material",
          "line": 188,
          "type": "attribute"
        },
        {
          "caller": "get_material",
          "callee": "HTTPException",
          "line": 190,
          "type": "direct"
        },
        {
          "caller": "get_material",
          "callee": "MaterialResponse",
          "line": 192,
          "type": "direct"
        },
        {
          "caller": "get_material",
          "callee": "HTTPException",
          "line": 213,
          "type": "direct"
        },
        {
          "caller": "get_material",
          "callee": "str",
          "line": 213,
          "type": "direct"
        },
        {
          "caller": "get_material",
          "callee": "get",
          "line": 181,
          "type": "attribute"
        },
        {
          "caller": "create_material",
          "callee": "Depends",
          "line": 219,
          "type": "direct"
        },
        {
          "caller": "create_material",
          "callee": "create_material",
          "line": 223,
          "type": "attribute"
        },
        {
          "caller": "create_material",
          "callee": "MaterialResponse",
          "line": 225,
          "type": "direct"
        },
        {
          "caller": "create_material",
          "callee": "HTTPException",
          "line": 244,
          "type": "direct"
        },
        {
          "caller": "create_material",
          "callee": "str",
          "line": 244,
          "type": "direct"
        },
        {
          "caller": "create_material",
          "callee": "HTTPException",
          "line": 246,
          "type": "direct"
        },
        {
          "caller": "create_material",
          "callee": "str",
          "line": 246,
          "type": "direct"
        },
        {
          "caller": "create_material",
          "callee": "post",
          "line": 216,
          "type": "attribute"
        },
        {
          "caller": "update_material",
          "callee": "Depends",
          "line": 253,
          "type": "direct"
        },
        {
          "caller": "update_material",
          "callee": "update_material",
          "line": 257,
          "type": "attribute"
        },
        {
          "caller": "update_material",
          "callee": "HTTPException",
          "line": 259,
          "type": "direct"
        },
        {
          "caller": "update_material",
          "callee": "MaterialResponse",
          "line": 261,
          "type": "direct"
        },
        {
          "caller": "update_material",
          "callee": "HTTPException",
          "line": 282,
          "type": "direct"
        },
        {
          "caller": "update_material",
          "callee": "str",
          "line": 282,
          "type": "direct"
        },
        {
          "caller": "update_material",
          "callee": "patch",
          "line": 249,
          "type": "attribute"
        },
        {
          "caller": "record_consumption",
          "callee": "Depends",
          "line": 288,
          "type": "direct"
        },
        {
          "caller": "record_consumption",
          "callee": "record_consumption",
          "line": 292,
          "type": "attribute"
        },
        {
          "caller": "record_consumption",
          "callee": "float",
          "line": 308,
          "type": "direct"
        },
        {
          "caller": "record_consumption",
          "callee": "HTTPException",
          "line": 313,
          "type": "direct"
        },
        {
          "caller": "record_consumption",
          "callee": "str",
          "line": 313,
          "type": "direct"
        },
        {
          "caller": "record_consumption",
          "callee": "HTTPException",
          "line": 315,
          "type": "direct"
        },
        {
          "caller": "record_consumption",
          "callee": "str",
          "line": 315,
          "type": "direct"
        },
        {
          "caller": "record_consumption",
          "callee": "post",
          "line": 285,
          "type": "attribute"
        },
        {
          "caller": "delete_material",
          "callee": "Depends",
          "line": 321,
          "type": "direct"
        },
        {
          "caller": "delete_material",
          "callee": "HTTPException",
          "line": 325,
          "type": "direct"
        },
        {
          "caller": "delete_material",
          "callee": "delete",
          "line": 318,
          "type": "attribute"
        },
        {
          "caller": "get_consumption_history",
          "callee": "Query",
          "line": 333,
          "type": "direct"
        },
        {
          "caller": "get_consumption_history",
          "callee": "Depends",
          "line": 334,
          "type": "direct"
        },
        {
          "caller": "get_consumption_history",
          "callee": "HTTPException",
          "line": 338,
          "type": "direct"
        },
        {
          "caller": "get_consumption_history",
          "callee": "get",
          "line": 328,
          "type": "attribute"
        }
      ],
      "error": null
    },
    {
      "filepath": "src\\api\\routers\\printers.py",
      "functions": [
        {
          "name": "_printer_to_response",
          "full_name": "_printer_to_response",
          "class": null,
          "signature": "(printer: Printer, printer_service: PrinterService)",
          "return_type": "PrinterResponse",
          "decorators": [],
          "docstring": "Convert a Printer model to PrinterResponse.",
          "line_start": 70,
          "line_end": 126,
          "access_level": "private",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "list_printers",
          "full_name": "list_printers",
          "class": null,
          "signature": "(printer_service: PrinterService)",
          "return_type": "",
          "decorators": [
            "router.get('/', response_model=List[PrinterResponse])"
          ],
          "docstring": "List all configured printers.",
          "line_start": 130,
          "line_end": 142,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "create_printer",
          "full_name": "create_printer",
          "class": null,
          "signature": "(printer_data: PrinterCreateRequest, printer_service: PrinterService)",
          "return_type": "",
          "decorators": [
            "router.post('/', response_model=PrinterResponse, status_code=status.HTTP_201_CREATED)"
          ],
          "docstring": "Create a new printer configuration.",
          "line_start": 146,
          "line_end": 173,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_printer",
          "full_name": "get_printer",
          "class": null,
          "signature": "(printer_id: UUID, printer_service: PrinterService)",
          "return_type": "",
          "decorators": [
            "router.get('/{printer_id}', response_model=PrinterResponse)"
          ],
          "docstring": "Get printer details by ID.",
          "line_start": 177,
          "line_end": 197,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "update_printer",
          "full_name": "update_printer",
          "class": null,
          "signature": "(printer_id: UUID, printer_data: PrinterUpdateRequest, printer_service: PrinterService)",
          "return_type": "",
          "decorators": [
            "router.put('/{printer_id}', response_model=PrinterResponse)"
          ],
          "docstring": "Update printer configuration.",
          "line_start": 201,
          "line_end": 227,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "delete_printer",
          "full_name": "delete_printer",
          "class": null,
          "signature": "(printer_id: UUID, printer_service: PrinterService)",
          "return_type": "",
          "decorators": [
            "router.delete('/{printer_id}', status_code=status.HTTP_204_NO_CONTENT)"
          ],
          "docstring": "Delete a printer configuration.",
          "line_start": 231,
          "line_end": 250,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "connect_printer",
          "full_name": "connect_printer",
          "class": null,
          "signature": "(printer_id: UUID, printer_service: PrinterService)",
          "return_type": "",
          "decorators": [
            "router.post('/{printer_id}/connect')"
          ],
          "docstring": "Connect to printer.",
          "line_start": 254,
          "line_end": 274,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "disconnect_printer",
          "full_name": "disconnect_printer",
          "class": null,
          "signature": "(printer_id: UUID, printer_service: PrinterService)",
          "return_type": "",
          "decorators": [
            "router.post('/{printer_id}/disconnect')"
          ],
          "docstring": "Disconnect from printer.",
          "line_start": 278,
          "line_end": 291,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "pause_printer",
          "full_name": "pause_printer",
          "class": null,
          "signature": "(printer_id: UUID, printer_service: PrinterService)",
          "return_type": "",
          "decorators": [
            "router.post('/{printer_id}/pause')"
          ],
          "docstring": "Pause the current print job.",
          "line_start": 295,
          "line_end": 316,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "resume_printer",
          "full_name": "resume_printer",
          "class": null,
          "signature": "(printer_id: UUID, printer_service: PrinterService)",
          "return_type": "",
          "decorators": [
            "router.post('/{printer_id}/resume')"
          ],
          "docstring": "Resume the paused print job.",
          "line_start": 320,
          "line_end": 341,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "stop_printer",
          "full_name": "stop_printer",
          "class": null,
          "signature": "(printer_id: UUID, printer_service: PrinterService)",
          "return_type": "",
          "decorators": [
            "router.post('/{printer_id}/stop')"
          ],
          "docstring": "Stop/cancel the current print job.",
          "line_start": 345,
          "line_end": 366,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "download_current_job_file",
          "full_name": "download_current_job_file",
          "class": null,
          "signature": "(printer_id: UUID, printer_service: PrinterService)",
          "return_type": "",
          "decorators": [
            "router.post('/{printer_id}/download-current-job')"
          ],
          "docstring": "Explicitly trigger download + processing of the currently printing job file.\n\nReturns a JSON dict with a status field describing the outcome:\n- success: File downloaded (or already local) and thumbnail processing triggered/completed\n- exists_with_thumbnail: File already present locally with thumbnail\n- exists_no_thumbnail: File present but had no thumbnail extracted (non-print file or parsing failed)\n- not_printing: Printer not currently printing / no active job\n- printer_not_found: Unknown printer id\n- error: Unexpected failure (see message)",
          "line_start": 370,
          "line_end": 394,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_printer_files",
          "full_name": "get_printer_files",
          "class": null,
          "signature": "(printer_id: UUID, printer_service: PrinterService)",
          "return_type": "",
          "decorators": [
            "router.get('/{printer_id}/files')"
          ],
          "docstring": "Get files from a specific printer.",
          "line_start": 398,
          "line_end": 414,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "start_printer_monitoring",
          "full_name": "start_printer_monitoring",
          "class": null,
          "signature": "(printer_id: UUID, printer_service: PrinterService)",
          "return_type": "",
          "decorators": [
            "router.post('/{printer_id}/monitoring/start')"
          ],
          "docstring": "Start monitoring for a specific printer.",
          "line_start": 418,
          "line_end": 439,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "stop_printer_monitoring",
          "full_name": "stop_printer_monitoring",
          "class": null,
          "signature": "(printer_id: UUID, printer_service: PrinterService)",
          "return_type": "",
          "decorators": [
            "router.post('/{printer_id}/monitoring/stop')"
          ],
          "docstring": "Stop monitoring for a specific printer.",
          "line_start": 443,
          "line_end": 464,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "download_printer_file",
          "full_name": "download_printer_file",
          "class": null,
          "signature": "(printer_id: UUID, filename: str, printer_service: PrinterService)",
          "return_type": "",
          "decorators": [
            "router.post('/{printer_id}/files/{filename}/download')"
          ],
          "docstring": "Download a specific file from printer to local storage.",
          "line_start": 468,
          "line_end": 490,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_printer_current_thumbnail",
          "full_name": "get_printer_current_thumbnail",
          "class": null,
          "signature": "(printer_id: UUID, printer_service: PrinterService)",
          "return_type": "",
          "decorators": [
            "router.get('/{printer_id}/thumbnail')"
          ],
          "docstring": "Return the current job thumbnail image for a printer (if available).\n\nThis is a convenience wrapper so clients can simply hit a printer-specific\nendpoint instead of first resolving the file_id. If a thumbnail exists it\nreturns the raw image bytes with proper content type. 404 if not present.",
          "line_start": 494,
          "line_end": 550,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "from_import",
          "module": "typing",
          "name": "List",
          "alias": null,
          "line": 3
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Optional",
          "alias": null,
          "line": 3
        },
        {
          "type": "from_import",
          "module": "uuid",
          "name": "UUID",
          "alias": null,
          "line": 4
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 5
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "APIRouter",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "Depends",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "HTTPException",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "status",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "Response",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "fastapi.responses",
          "name": "RedirectResponse",
          "alias": null,
          "line": 8
        },
        {
          "type": "import",
          "module": "base64",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "pydantic",
          "name": "BaseModel",
          "alias": null,
          "line": 10
        },
        {
          "type": "import",
          "module": "structlog",
          "alias": null,
          "line": 11
        },
        {
          "type": "from_import",
          "module": "src.models.printer",
          "name": "Printer",
          "alias": null,
          "line": 13
        },
        {
          "type": "from_import",
          "module": "src.models.printer",
          "name": "PrinterType",
          "alias": null,
          "line": 13
        },
        {
          "type": "from_import",
          "module": "src.models.printer",
          "name": "PrinterStatus",
          "alias": null,
          "line": 13
        },
        {
          "type": "from_import",
          "module": "src.services.printer_service",
          "name": "PrinterService",
          "alias": null,
          "line": 14
        },
        {
          "type": "from_import",
          "module": "src.utils.dependencies",
          "name": "get_printer_service",
          "alias": null,
          "line": 15
        }
      ],
      "function_calls": [
        {
          "caller": "_printer_to_response",
          "callee": "get",
          "line": 80,
          "type": "attribute"
        },
        {
          "caller": "_printer_to_response",
          "callee": "isinstance",
          "line": 86,
          "type": "direct"
        },
        {
          "caller": "_printer_to_response",
          "callee": "strip",
          "line": 86,
          "type": "attribute"
        },
        {
          "caller": "_printer_to_response",
          "callee": "CurrentJobInfo",
          "line": 87,
          "type": "direct"
        },
        {
          "caller": "_printer_to_response",
          "callee": "strip",
          "line": 88,
          "type": "attribute"
        },
        {
          "caller": "_printer_to_response",
          "callee": "warning",
          "line": 103,
          "type": "attribute"
        },
        {
          "caller": "_printer_to_response",
          "callee": "str",
          "line": 104,
          "type": "direct"
        },
        {
          "caller": "_printer_to_response",
          "callee": "PrinterResponse",
          "line": 106,
          "type": "direct"
        },
        {
          "caller": "_printer_to_response",
          "callee": "getattr",
          "line": 114,
          "type": "direct"
        },
        {
          "caller": "_printer_to_response",
          "callee": "getattr",
          "line": 115,
          "type": "direct"
        },
        {
          "caller": "_printer_to_response",
          "callee": "getattr",
          "line": 116,
          "type": "direct"
        },
        {
          "caller": "_printer_to_response",
          "callee": "getattr",
          "line": 118,
          "type": "direct"
        },
        {
          "caller": "_printer_to_response",
          "callee": "getattr",
          "line": 119,
          "type": "direct"
        },
        {
          "caller": "_printer_to_response",
          "callee": "isoformat",
          "line": 121,
          "type": "attribute"
        },
        {
          "caller": "_printer_to_response",
          "callee": "isoformat",
          "line": 124,
          "type": "attribute"
        },
        {
          "caller": "_printer_to_response",
          "callee": "isoformat",
          "line": 125,
          "type": "attribute"
        },
        {
          "caller": "list_printers",
          "callee": "Depends",
          "line": 131,
          "type": "direct"
        },
        {
          "caller": "list_printers",
          "callee": "list_printers",
          "line": 135,
          "type": "attribute"
        },
        {
          "caller": "list_printers",
          "callee": "_printer_to_response",
          "line": 136,
          "type": "direct"
        },
        {
          "caller": "list_printers",
          "callee": "error",
          "line": 138,
          "type": "attribute"
        },
        {
          "caller": "list_printers",
          "callee": "str",
          "line": 138,
          "type": "direct"
        },
        {
          "caller": "list_printers",
          "callee": "HTTPException",
          "line": 139,
          "type": "direct"
        },
        {
          "caller": "list_printers",
          "callee": "get",
          "line": 129,
          "type": "attribute"
        },
        {
          "caller": "create_printer",
          "callee": "Depends",
          "line": 148,
          "type": "direct"
        },
        {
          "caller": "create_printer",
          "callee": "create_printer",
          "line": 152,
          "type": "attribute"
        },
        {
          "caller": "create_printer",
          "callee": "info",
          "line": 159,
          "type": "attribute"
        },
        {
          "caller": "create_printer",
          "callee": "type",
          "line": 159,
          "type": "direct"
        },
        {
          "caller": "create_printer",
          "callee": "_printer_to_response",
          "line": 160,
          "type": "direct"
        },
        {
          "caller": "create_printer",
          "callee": "info",
          "line": 161,
          "type": "attribute"
        },
        {
          "caller": "create_printer",
          "callee": "model_dump",
          "line": 161,
          "type": "attribute"
        },
        {
          "caller": "create_printer",
          "callee": "HTTPException",
          "line": 164,
          "type": "direct"
        },
        {
          "caller": "create_printer",
          "callee": "str",
          "line": 166,
          "type": "direct"
        },
        {
          "caller": "create_printer",
          "callee": "error",
          "line": 169,
          "type": "attribute"
        },
        {
          "caller": "create_printer",
          "callee": "str",
          "line": 169,
          "type": "direct"
        },
        {
          "caller": "create_printer",
          "callee": "HTTPException",
          "line": 170,
          "type": "direct"
        },
        {
          "caller": "create_printer",
          "callee": "post",
          "line": 145,
          "type": "attribute"
        },
        {
          "caller": "get_printer",
          "callee": "Depends",
          "line": 179,
          "type": "direct"
        },
        {
          "caller": "get_printer",
          "callee": "get_printer",
          "line": 183,
          "type": "attribute"
        },
        {
          "caller": "get_printer",
          "callee": "str",
          "line": 183,
          "type": "direct"
        },
        {
          "caller": "get_printer",
          "callee": "HTTPException",
          "line": 185,
          "type": "direct"
        },
        {
          "caller": "get_printer",
          "callee": "_printer_to_response",
          "line": 189,
          "type": "direct"
        },
        {
          "caller": "get_printer",
          "callee": "error",
          "line": 193,
          "type": "attribute"
        },
        {
          "caller": "get_printer",
          "callee": "str",
          "line": 193,
          "type": "direct"
        },
        {
          "caller": "get_printer",
          "callee": "str",
          "line": 193,
          "type": "direct"
        },
        {
          "caller": "get_printer",
          "callee": "HTTPException",
          "line": 194,
          "type": "direct"
        },
        {
          "caller": "get_printer",
          "callee": "get",
          "line": 176,
          "type": "attribute"
        },
        {
          "caller": "update_printer",
          "callee": "Depends",
          "line": 204,
          "type": "direct"
        },
        {
          "caller": "update_printer",
          "callee": "update_printer",
          "line": 208,
          "type": "attribute"
        },
        {
          "caller": "update_printer",
          "callee": "model_dump",
          "line": 208,
          "type": "attribute"
        },
        {
          "caller": "update_printer",
          "callee": "HTTPException",
          "line": 210,
          "type": "direct"
        },
        {
          "caller": "update_printer",
          "callee": "_printer_to_response",
          "line": 214,
          "type": "direct"
        },
        {
          "caller": "update_printer",
          "callee": "HTTPException",
          "line": 218,
          "type": "direct"
        },
        {
          "caller": "update_printer",
          "callee": "str",
          "line": 220,
          "type": "direct"
        },
        {
          "caller": "update_printer",
          "callee": "error",
          "line": 223,
          "type": "attribute"
        },
        {
          "caller": "update_printer",
          "callee": "str",
          "line": 223,
          "type": "direct"
        },
        {
          "caller": "update_printer",
          "callee": "str",
          "line": 223,
          "type": "direct"
        },
        {
          "caller": "update_printer",
          "callee": "HTTPException",
          "line": 224,
          "type": "direct"
        },
        {
          "caller": "update_printer",
          "callee": "put",
          "line": 200,
          "type": "attribute"
        },
        {
          "caller": "delete_printer",
          "callee": "Depends",
          "line": 233,
          "type": "direct"
        },
        {
          "caller": "delete_printer",
          "callee": "delete_printer",
          "line": 237,
          "type": "attribute"
        },
        {
          "caller": "delete_printer",
          "callee": "HTTPException",
          "line": 239,
          "type": "direct"
        },
        {
          "caller": "delete_printer",
          "callee": "error",
          "line": 246,
          "type": "attribute"
        },
        {
          "caller": "delete_printer",
          "callee": "str",
          "line": 246,
          "type": "direct"
        },
        {
          "caller": "delete_printer",
          "callee": "str",
          "line": 246,
          "type": "direct"
        },
        {
          "caller": "delete_printer",
          "callee": "HTTPException",
          "line": 247,
          "type": "direct"
        },
        {
          "caller": "delete_printer",
          "callee": "delete",
          "line": 230,
          "type": "attribute"
        },
        {
          "caller": "connect_printer",
          "callee": "Depends",
          "line": 256,
          "type": "direct"
        },
        {
          "caller": "connect_printer",
          "callee": "connect_printer",
          "line": 260,
          "type": "attribute"
        },
        {
          "caller": "connect_printer",
          "callee": "HTTPException",
          "line": 262,
          "type": "direct"
        },
        {
          "caller": "connect_printer",
          "callee": "error",
          "line": 270,
          "type": "attribute"
        },
        {
          "caller": "connect_printer",
          "callee": "str",
          "line": 270,
          "type": "direct"
        },
        {
          "caller": "connect_printer",
          "callee": "str",
          "line": 270,
          "type": "direct"
        },
        {
          "caller": "connect_printer",
          "callee": "HTTPException",
          "line": 271,
          "type": "direct"
        },
        {
          "caller": "connect_printer",
          "callee": "post",
          "line": 253,
          "type": "attribute"
        },
        {
          "caller": "disconnect_printer",
          "callee": "Depends",
          "line": 280,
          "type": "direct"
        },
        {
          "caller": "disconnect_printer",
          "callee": "disconnect_printer",
          "line": 284,
          "type": "attribute"
        },
        {
          "caller": "disconnect_printer",
          "callee": "error",
          "line": 287,
          "type": "attribute"
        },
        {
          "caller": "disconnect_printer",
          "callee": "str",
          "line": 287,
          "type": "direct"
        },
        {
          "caller": "disconnect_printer",
          "callee": "str",
          "line": 287,
          "type": "direct"
        },
        {
          "caller": "disconnect_printer",
          "callee": "HTTPException",
          "line": 288,
          "type": "direct"
        },
        {
          "caller": "disconnect_printer",
          "callee": "post",
          "line": 277,
          "type": "attribute"
        },
        {
          "caller": "pause_printer",
          "callee": "Depends",
          "line": 297,
          "type": "direct"
        },
        {
          "caller": "pause_printer",
          "callee": "str",
          "line": 301,
          "type": "direct"
        },
        {
          "caller": "pause_printer",
          "callee": "pause_printer",
          "line": 302,
          "type": "attribute"
        },
        {
          "caller": "pause_printer",
          "callee": "HTTPException",
          "line": 304,
          "type": "direct"
        },
        {
          "caller": "pause_printer",
          "callee": "error",
          "line": 312,
          "type": "attribute"
        },
        {
          "caller": "pause_printer",
          "callee": "str",
          "line": 312,
          "type": "direct"
        },
        {
          "caller": "pause_printer",
          "callee": "str",
          "line": 312,
          "type": "direct"
        },
        {
          "caller": "pause_printer",
          "callee": "HTTPException",
          "line": 313,
          "type": "direct"
        },
        {
          "caller": "pause_printer",
          "callee": "post",
          "line": 294,
          "type": "attribute"
        },
        {
          "caller": "resume_printer",
          "callee": "Depends",
          "line": 322,
          "type": "direct"
        },
        {
          "caller": "resume_printer",
          "callee": "str",
          "line": 326,
          "type": "direct"
        },
        {
          "caller": "resume_printer",
          "callee": "resume_printer",
          "line": 327,
          "type": "attribute"
        },
        {
          "caller": "resume_printer",
          "callee": "HTTPException",
          "line": 329,
          "type": "direct"
        },
        {
          "caller": "resume_printer",
          "callee": "error",
          "line": 337,
          "type": "attribute"
        },
        {
          "caller": "resume_printer",
          "callee": "str",
          "line": 337,
          "type": "direct"
        },
        {
          "caller": "resume_printer",
          "callee": "str",
          "line": 337,
          "type": "direct"
        },
        {
          "caller": "resume_printer",
          "callee": "HTTPException",
          "line": 338,
          "type": "direct"
        },
        {
          "caller": "resume_printer",
          "callee": "post",
          "line": 319,
          "type": "attribute"
        },
        {
          "caller": "stop_printer",
          "callee": "Depends",
          "line": 347,
          "type": "direct"
        },
        {
          "caller": "stop_printer",
          "callee": "str",
          "line": 351,
          "type": "direct"
        },
        {
          "caller": "stop_printer",
          "callee": "stop_printer",
          "line": 352,
          "type": "attribute"
        },
        {
          "caller": "stop_printer",
          "callee": "HTTPException",
          "line": 354,
          "type": "direct"
        },
        {
          "caller": "stop_printer",
          "callee": "error",
          "line": 362,
          "type": "attribute"
        },
        {
          "caller": "stop_printer",
          "callee": "str",
          "line": 362,
          "type": "direct"
        },
        {
          "caller": "stop_printer",
          "callee": "str",
          "line": 362,
          "type": "direct"
        },
        {
          "caller": "stop_printer",
          "callee": "HTTPException",
          "line": 363,
          "type": "direct"
        },
        {
          "caller": "stop_printer",
          "callee": "post",
          "line": 344,
          "type": "attribute"
        },
        {
          "caller": "download_current_job_file",
          "callee": "Depends",
          "line": 372,
          "type": "direct"
        },
        {
          "caller": "download_current_job_file",
          "callee": "download_current_job_file",
          "line": 385,
          "type": "attribute"
        },
        {
          "caller": "download_current_job_file",
          "callee": "str",
          "line": 385,
          "type": "direct"
        },
        {
          "caller": "download_current_job_file",
          "callee": "isinstance",
          "line": 387,
          "type": "direct"
        },
        {
          "caller": "download_current_job_file",
          "callee": "error",
          "line": 393,
          "type": "attribute"
        },
        {
          "caller": "download_current_job_file",
          "callee": "str",
          "line": 393,
          "type": "direct"
        },
        {
          "caller": "download_current_job_file",
          "callee": "str",
          "line": 393,
          "type": "direct"
        },
        {
          "caller": "download_current_job_file",
          "callee": "HTTPException",
          "line": 394,
          "type": "direct"
        },
        {
          "caller": "download_current_job_file",
          "callee": "post",
          "line": 369,
          "type": "attribute"
        },
        {
          "caller": "get_printer_files",
          "callee": "Depends",
          "line": 400,
          "type": "direct"
        },
        {
          "caller": "get_printer_files",
          "callee": "str",
          "line": 404,
          "type": "direct"
        },
        {
          "caller": "get_printer_files",
          "callee": "get_printer_files",
          "line": 405,
          "type": "attribute"
        },
        {
          "caller": "get_printer_files",
          "callee": "error",
          "line": 410,
          "type": "attribute"
        },
        {
          "caller": "get_printer_files",
          "callee": "str",
          "line": 410,
          "type": "direct"
        },
        {
          "caller": "get_printer_files",
          "callee": "str",
          "line": 410,
          "type": "direct"
        },
        {
          "caller": "get_printer_files",
          "callee": "HTTPException",
          "line": 411,
          "type": "direct"
        },
        {
          "caller": "get_printer_files",
          "callee": "get",
          "line": 397,
          "type": "attribute"
        },
        {
          "caller": "start_printer_monitoring",
          "callee": "Depends",
          "line": 420,
          "type": "direct"
        },
        {
          "caller": "start_printer_monitoring",
          "callee": "str",
          "line": 424,
          "type": "direct"
        },
        {
          "caller": "start_printer_monitoring",
          "callee": "start_printer_monitoring",
          "line": 425,
          "type": "attribute"
        },
        {
          "caller": "start_printer_monitoring",
          "callee": "HTTPException",
          "line": 427,
          "type": "direct"
        },
        {
          "caller": "start_printer_monitoring",
          "callee": "error",
          "line": 435,
          "type": "attribute"
        },
        {
          "caller": "start_printer_monitoring",
          "callee": "str",
          "line": 435,
          "type": "direct"
        },
        {
          "caller": "start_printer_monitoring",
          "callee": "str",
          "line": 435,
          "type": "direct"
        },
        {
          "caller": "start_printer_monitoring",
          "callee": "HTTPException",
          "line": 436,
          "type": "direct"
        },
        {
          "caller": "start_printer_monitoring",
          "callee": "post",
          "line": 417,
          "type": "attribute"
        },
        {
          "caller": "stop_printer_monitoring",
          "callee": "Depends",
          "line": 445,
          "type": "direct"
        },
        {
          "caller": "stop_printer_monitoring",
          "callee": "str",
          "line": 449,
          "type": "direct"
        },
        {
          "caller": "stop_printer_monitoring",
          "callee": "stop_printer_monitoring",
          "line": 450,
          "type": "attribute"
        },
        {
          "caller": "stop_printer_monitoring",
          "callee": "HTTPException",
          "line": 452,
          "type": "direct"
        },
        {
          "caller": "stop_printer_monitoring",
          "callee": "error",
          "line": 460,
          "type": "attribute"
        },
        {
          "caller": "stop_printer_monitoring",
          "callee": "str",
          "line": 460,
          "type": "direct"
        },
        {
          "caller": "stop_printer_monitoring",
          "callee": "str",
          "line": 460,
          "type": "direct"
        },
        {
          "caller": "stop_printer_monitoring",
          "callee": "HTTPException",
          "line": 461,
          "type": "direct"
        },
        {
          "caller": "stop_printer_monitoring",
          "callee": "post",
          "line": 442,
          "type": "attribute"
        },
        {
          "caller": "download_printer_file",
          "callee": "Depends",
          "line": 471,
          "type": "direct"
        },
        {
          "caller": "download_printer_file",
          "callee": "str",
          "line": 475,
          "type": "direct"
        },
        {
          "caller": "download_printer_file",
          "callee": "download_printer_file",
          "line": 476,
          "type": "attribute"
        },
        {
          "caller": "download_printer_file",
          "callee": "HTTPException",
          "line": 478,
          "type": "direct"
        },
        {
          "caller": "download_printer_file",
          "callee": "error",
          "line": 486,
          "type": "attribute"
        },
        {
          "caller": "download_printer_file",
          "callee": "str",
          "line": 486,
          "type": "direct"
        },
        {
          "caller": "download_printer_file",
          "callee": "str",
          "line": 486,
          "type": "direct"
        },
        {
          "caller": "download_printer_file",
          "callee": "HTTPException",
          "line": 487,
          "type": "direct"
        },
        {
          "caller": "download_printer_file",
          "callee": "post",
          "line": 467,
          "type": "attribute"
        },
        {
          "caller": "get_printer_current_thumbnail",
          "callee": "Depends",
          "line": 496,
          "type": "direct"
        },
        {
          "caller": "get_printer_current_thumbnail",
          "callee": "get_printer",
          "line": 505,
          "type": "attribute"
        },
        {
          "caller": "get_printer_current_thumbnail",
          "callee": "str",
          "line": 505,
          "type": "direct"
        },
        {
          "caller": "get_printer_current_thumbnail",
          "callee": "HTTPException",
          "line": 507,
          "type": "direct"
        },
        {
          "caller": "get_printer_current_thumbnail",
          "callee": "get",
          "line": 509,
          "type": "attribute"
        },
        {
          "caller": "get_printer_current_thumbnail",
          "callee": "getattr",
          "line": 510,
          "type": "direct"
        },
        {
          "caller": "get_printer_current_thumbnail",
          "callee": "HTTPException",
          "line": 511,
          "type": "direct"
        },
        {
          "caller": "get_printer_current_thumbnail",
          "callee": "getattr",
          "line": 514,
          "type": "direct"
        },
        {
          "caller": "get_printer_current_thumbnail",
          "callee": "getattr",
          "line": 515,
          "type": "direct"
        },
        {
          "caller": "get_printer_current_thumbnail",
          "callee": "HTTPException",
          "line": 517,
          "type": "direct"
        },
        {
          "caller": "get_printer_current_thumbnail",
          "callee": "getattr",
          "line": 520,
          "type": "direct"
        },
        {
          "caller": "get_printer_current_thumbnail",
          "callee": "HTTPException",
          "line": 522,
          "type": "direct"
        },
        {
          "caller": "get_printer_current_thumbnail",
          "callee": "get_file_by_id",
          "line": 524,
          "type": "attribute"
        },
        {
          "caller": "get_printer_current_thumbnail",
          "callee": "HTTPException",
          "line": 526,
          "type": "direct"
        },
        {
          "caller": "get_printer_current_thumbnail",
          "callee": "get",
          "line": 528,
          "type": "attribute"
        },
        {
          "caller": "get_printer_current_thumbnail",
          "callee": "get",
          "line": 528,
          "type": "attribute"
        },
        {
          "caller": "get_printer_current_thumbnail",
          "callee": "HTTPException",
          "line": 529,
          "type": "direct"
        },
        {
          "caller": "get_printer_current_thumbnail",
          "callee": "b64decode",
          "line": 533,
          "type": "attribute"
        },
        {
          "caller": "get_printer_current_thumbnail",
          "callee": "HTTPException",
          "line": 535,
          "type": "direct"
        },
        {
          "caller": "get_printer_current_thumbnail",
          "callee": "get",
          "line": 537,
          "type": "attribute"
        },
        {
          "caller": "get_printer_current_thumbnail",
          "callee": "Response",
          "line": 538,
          "type": "direct"
        },
        {
          "caller": "get_printer_current_thumbnail",
          "callee": "error",
          "line": 549,
          "type": "attribute"
        },
        {
          "caller": "get_printer_current_thumbnail",
          "callee": "str",
          "line": 549,
          "type": "direct"
        },
        {
          "caller": "get_printer_current_thumbnail",
          "callee": "str",
          "line": 549,
          "type": "direct"
        },
        {
          "caller": "get_printer_current_thumbnail",
          "callee": "HTTPException",
          "line": 550,
          "type": "direct"
        },
        {
          "caller": "get_printer_current_thumbnail",
          "callee": "get",
          "line": 493,
          "type": "attribute"
        }
      ],
      "error": null
    },
    {
      "filepath": "src\\api\\routers\\settings.py",
      "functions": [
        {
          "name": "get_application_settings",
          "full_name": "get_application_settings",
          "class": null,
          "signature": "(config_service: ConfigService)",
          "return_type": "",
          "decorators": [
            "router.get('/application', response_model=ApplicationSettingsResponse)"
          ],
          "docstring": "Get all application settings.",
          "line_start": 97,
          "line_end": 109,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "update_application_settings",
          "full_name": "update_application_settings",
          "class": null,
          "signature": "(settings: ApplicationSettingsUpdate, config_service: ConfigService)",
          "return_type": "",
          "decorators": [
            "router.put('/application')"
          ],
          "docstring": "Update application settings (runtime-updatable only).",
          "line_start": 113,
          "line_end": 137,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_printer_configurations",
          "full_name": "get_printer_configurations",
          "class": null,
          "signature": "(config_service: ConfigService)",
          "return_type": "",
          "decorators": [
            "router.get('/printers')"
          ],
          "docstring": "Get all printer configurations.",
          "line_start": 141,
          "line_end": 162,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "add_or_update_printer",
          "full_name": "add_or_update_printer",
          "class": null,
          "signature": "(printer_id: str, printer_config: PrinterConfigRequest, config_service: ConfigService)",
          "return_type": "",
          "decorators": [
            "router.post('/printers/{printer_id}')"
          ],
          "docstring": "Add or update a printer configuration.",
          "line_start": 166,
          "line_end": 188,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "remove_printer",
          "full_name": "remove_printer",
          "class": null,
          "signature": "(printer_id: str, config_service: ConfigService)",
          "return_type": "",
          "decorators": [
            "router.delete('/printers/{printer_id}')"
          ],
          "docstring": "Remove a printer configuration.",
          "line_start": 192,
          "line_end": 213,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "validate_printer_connection",
          "full_name": "validate_printer_connection",
          "class": null,
          "signature": "(printer_id: str, config_service: ConfigService)",
          "return_type": "",
          "decorators": [
            "router.post('/printers/{printer_id}/validate')"
          ],
          "docstring": "Validate printer connection configuration.",
          "line_start": 217,
          "line_end": 230,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_watch_folder_settings",
          "full_name": "get_watch_folder_settings",
          "class": null,
          "signature": "(config_service: ConfigService)",
          "return_type": "",
          "decorators": [
            "router.get('/watch-folders', response_model=WatchFolderSettings)"
          ],
          "docstring": "Get watch folder settings.",
          "line_start": 234,
          "line_end": 246,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "validate_watch_folder",
          "full_name": "validate_watch_folder",
          "class": null,
          "signature": "(folder_path: str, config_service: ConfigService)",
          "return_type": "",
          "decorators": [
            "router.post('/watch-folders/validate')"
          ],
          "docstring": "Validate a watch folder path.",
          "line_start": 250,
          "line_end": 263,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_gcode_optimization_settings",
          "full_name": "get_gcode_optimization_settings",
          "class": null,
          "signature": "(config_service: ConfigService)",
          "return_type": "",
          "decorators": [
            "router.get('/gcode-optimization')"
          ],
          "docstring": "Get G-code optimization settings.",
          "line_start": 274,
          "line_end": 292,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "update_gcode_optimization_settings",
          "full_name": "update_gcode_optimization_settings",
          "class": null,
          "signature": "(settings: GcodeOptimizationSettings, config_service: ConfigService)",
          "return_type": "",
          "decorators": [
            "router.put('/gcode-optimization')"
          ],
          "docstring": "Update G-code optimization settings.",
          "line_start": 296,
          "line_end": 318,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "reload_configuration",
          "full_name": "reload_configuration",
          "class": null,
          "signature": "(config_service: ConfigService)",
          "return_type": "",
          "decorators": [
            "router.post('/reload')"
          ],
          "docstring": "Reload configuration from files and environment variables.",
          "line_start": 322,
          "line_end": 342,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "from_import",
          "module": "typing",
          "name": "Dict",
          "alias": null,
          "line": 3
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Any",
          "alias": null,
          "line": 3
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "List",
          "alias": null,
          "line": 3
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Optional",
          "alias": null,
          "line": 3
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "APIRouter",
          "alias": null,
          "line": 4
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "Depends",
          "alias": null,
          "line": 4
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "HTTPException",
          "alias": null,
          "line": 4
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "status",
          "alias": null,
          "line": 4
        },
        {
          "type": "from_import",
          "module": "pydantic",
          "name": "BaseModel",
          "alias": null,
          "line": 5
        },
        {
          "type": "import",
          "module": "structlog",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "src.services.config_service",
          "name": "ConfigService",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "src.services.config_service",
          "name": "PrinterConfig",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "src.utils.dependencies",
          "name": "get_config_service",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "src.utils.config",
          "name": "get_settings",
          "alias": null,
          "line": 279
        }
      ],
      "function_calls": [
        {
          "caller": "get_application_settings",
          "callee": "Depends",
          "line": 98,
          "type": "direct"
        },
        {
          "caller": "get_application_settings",
          "callee": "get_application_settings",
          "line": 102,
          "type": "attribute"
        },
        {
          "caller": "get_application_settings",
          "callee": "ApplicationSettingsResponse",
          "line": 103,
          "type": "direct"
        },
        {
          "caller": "get_application_settings",
          "callee": "error",
          "line": 105,
          "type": "attribute"
        },
        {
          "caller": "get_application_settings",
          "callee": "str",
          "line": 105,
          "type": "direct"
        },
        {
          "caller": "get_application_settings",
          "callee": "HTTPException",
          "line": 106,
          "type": "direct"
        },
        {
          "caller": "get_application_settings",
          "callee": "get",
          "line": 96,
          "type": "attribute"
        },
        {
          "caller": "update_application_settings",
          "callee": "Depends",
          "line": 115,
          "type": "direct"
        },
        {
          "caller": "update_application_settings",
          "callee": "dict",
          "line": 120,
          "type": "attribute"
        },
        {
          "caller": "update_application_settings",
          "callee": "info",
          "line": 121,
          "type": "attribute"
        },
        {
          "caller": "update_application_settings",
          "callee": "items",
          "line": 122,
          "type": "attribute"
        },
        {
          "caller": "update_application_settings",
          "callee": "info",
          "line": 123,
          "type": "attribute"
        },
        {
          "caller": "update_application_settings",
          "callee": "update_application_settings",
          "line": 125,
          "type": "attribute"
        },
        {
          "caller": "update_application_settings",
          "callee": "list",
          "line": 128,
          "type": "direct"
        },
        {
          "caller": "update_application_settings",
          "callee": "keys",
          "line": 128,
          "type": "attribute"
        },
        {
          "caller": "update_application_settings",
          "callee": "error",
          "line": 133,
          "type": "attribute"
        },
        {
          "caller": "update_application_settings",
          "callee": "str",
          "line": 133,
          "type": "direct"
        },
        {
          "caller": "update_application_settings",
          "callee": "HTTPException",
          "line": 134,
          "type": "direct"
        },
        {
          "caller": "update_application_settings",
          "callee": "put",
          "line": 112,
          "type": "attribute"
        },
        {
          "caller": "get_printer_configurations",
          "callee": "Depends",
          "line": 142,
          "type": "direct"
        },
        {
          "caller": "get_printer_configurations",
          "callee": "get_printers",
          "line": 146,
          "type": "attribute"
        },
        {
          "caller": "get_printer_configurations",
          "callee": "dict",
          "line": 148,
          "type": "attribute"
        },
        {
          "caller": "get_printer_configurations",
          "callee": "PrinterConfigResponse",
          "line": 148,
          "type": "direct"
        },
        {
          "caller": "get_printer_configurations",
          "callee": "items",
          "line": 155,
          "type": "attribute"
        },
        {
          "caller": "get_printer_configurations",
          "callee": "error",
          "line": 158,
          "type": "attribute"
        },
        {
          "caller": "get_printer_configurations",
          "callee": "str",
          "line": 158,
          "type": "direct"
        },
        {
          "caller": "get_printer_configurations",
          "callee": "HTTPException",
          "line": 159,
          "type": "direct"
        },
        {
          "caller": "get_printer_configurations",
          "callee": "get",
          "line": 140,
          "type": "attribute"
        },
        {
          "caller": "add_or_update_printer",
          "callee": "Depends",
          "line": 169,
          "type": "direct"
        },
        {
          "caller": "add_or_update_printer",
          "callee": "add_printer",
          "line": 173,
          "type": "attribute"
        },
        {
          "caller": "add_or_update_printer",
          "callee": "dict",
          "line": 173,
          "type": "attribute"
        },
        {
          "caller": "add_or_update_printer",
          "callee": "HTTPException",
          "line": 178,
          "type": "direct"
        },
        {
          "caller": "add_or_update_printer",
          "callee": "error",
          "line": 184,
          "type": "attribute"
        },
        {
          "caller": "add_or_update_printer",
          "callee": "str",
          "line": 184,
          "type": "direct"
        },
        {
          "caller": "add_or_update_printer",
          "callee": "HTTPException",
          "line": 185,
          "type": "direct"
        },
        {
          "caller": "add_or_update_printer",
          "callee": "post",
          "line": 165,
          "type": "attribute"
        },
        {
          "caller": "remove_printer",
          "callee": "Depends",
          "line": 194,
          "type": "direct"
        },
        {
          "caller": "remove_printer",
          "callee": "remove_printer",
          "line": 198,
          "type": "attribute"
        },
        {
          "caller": "remove_printer",
          "callee": "HTTPException",
          "line": 203,
          "type": "direct"
        },
        {
          "caller": "remove_printer",
          "callee": "error",
          "line": 209,
          "type": "attribute"
        },
        {
          "caller": "remove_printer",
          "callee": "str",
          "line": 209,
          "type": "direct"
        },
        {
          "caller": "remove_printer",
          "callee": "HTTPException",
          "line": 210,
          "type": "direct"
        },
        {
          "caller": "remove_printer",
          "callee": "delete",
          "line": 191,
          "type": "attribute"
        },
        {
          "caller": "validate_printer_connection",
          "callee": "Depends",
          "line": 219,
          "type": "direct"
        },
        {
          "caller": "validate_printer_connection",
          "callee": "validate_printer_connection",
          "line": 223,
          "type": "attribute"
        },
        {
          "caller": "validate_printer_connection",
          "callee": "error",
          "line": 226,
          "type": "attribute"
        },
        {
          "caller": "validate_printer_connection",
          "callee": "str",
          "line": 226,
          "type": "direct"
        },
        {
          "caller": "validate_printer_connection",
          "callee": "HTTPException",
          "line": 227,
          "type": "direct"
        },
        {
          "caller": "validate_printer_connection",
          "callee": "post",
          "line": 216,
          "type": "attribute"
        },
        {
          "caller": "get_watch_folder_settings",
          "callee": "Depends",
          "line": 235,
          "type": "direct"
        },
        {
          "caller": "get_watch_folder_settings",
          "callee": "get_watch_folder_settings",
          "line": 239,
          "type": "attribute"
        },
        {
          "caller": "get_watch_folder_settings",
          "callee": "WatchFolderSettings",
          "line": 240,
          "type": "direct"
        },
        {
          "caller": "get_watch_folder_settings",
          "callee": "error",
          "line": 242,
          "type": "attribute"
        },
        {
          "caller": "get_watch_folder_settings",
          "callee": "str",
          "line": 242,
          "type": "direct"
        },
        {
          "caller": "get_watch_folder_settings",
          "callee": "HTTPException",
          "line": 243,
          "type": "direct"
        },
        {
          "caller": "get_watch_folder_settings",
          "callee": "get",
          "line": 233,
          "type": "attribute"
        },
        {
          "caller": "validate_watch_folder",
          "callee": "Depends",
          "line": 252,
          "type": "direct"
        },
        {
          "caller": "validate_watch_folder",
          "callee": "validate_watch_folder",
          "line": 256,
          "type": "attribute"
        },
        {
          "caller": "validate_watch_folder",
          "callee": "error",
          "line": 259,
          "type": "attribute"
        },
        {
          "caller": "validate_watch_folder",
          "callee": "str",
          "line": 259,
          "type": "direct"
        },
        {
          "caller": "validate_watch_folder",
          "callee": "HTTPException",
          "line": 260,
          "type": "direct"
        },
        {
          "caller": "validate_watch_folder",
          "callee": "post",
          "line": 249,
          "type": "attribute"
        },
        {
          "caller": "get_gcode_optimization_settings",
          "callee": "Depends",
          "line": 275,
          "type": "direct"
        },
        {
          "caller": "get_gcode_optimization_settings",
          "callee": "get_settings",
          "line": 280,
          "type": "direct"
        },
        {
          "caller": "get_gcode_optimization_settings",
          "callee": "GcodeOptimizationSettings",
          "line": 282,
          "type": "direct"
        },
        {
          "caller": "get_gcode_optimization_settings",
          "callee": "error",
          "line": 288,
          "type": "attribute"
        },
        {
          "caller": "get_gcode_optimization_settings",
          "callee": "str",
          "line": 288,
          "type": "direct"
        },
        {
          "caller": "get_gcode_optimization_settings",
          "callee": "HTTPException",
          "line": 289,
          "type": "direct"
        },
        {
          "caller": "get_gcode_optimization_settings",
          "callee": "str",
          "line": 291,
          "type": "direct"
        },
        {
          "caller": "get_gcode_optimization_settings",
          "callee": "get",
          "line": 273,
          "type": "attribute"
        },
        {
          "caller": "update_gcode_optimization_settings",
          "callee": "Depends",
          "line": 298,
          "type": "direct"
        },
        {
          "caller": "update_gcode_optimization_settings",
          "callee": "info",
          "line": 304,
          "type": "attribute"
        },
        {
          "caller": "update_gcode_optimization_settings",
          "callee": "error",
          "line": 314,
          "type": "attribute"
        },
        {
          "caller": "update_gcode_optimization_settings",
          "callee": "str",
          "line": 314,
          "type": "direct"
        },
        {
          "caller": "update_gcode_optimization_settings",
          "callee": "HTTPException",
          "line": 315,
          "type": "direct"
        },
        {
          "caller": "update_gcode_optimization_settings",
          "callee": "str",
          "line": 317,
          "type": "direct"
        },
        {
          "caller": "update_gcode_optimization_settings",
          "callee": "put",
          "line": 295,
          "type": "attribute"
        },
        {
          "caller": "reload_configuration",
          "callee": "Depends",
          "line": 323,
          "type": "direct"
        },
        {
          "caller": "reload_configuration",
          "callee": "reload_config",
          "line": 327,
          "type": "attribute"
        },
        {
          "caller": "reload_configuration",
          "callee": "HTTPException",
          "line": 332,
          "type": "direct"
        },
        {
          "caller": "reload_configuration",
          "callee": "error",
          "line": 338,
          "type": "attribute"
        },
        {
          "caller": "reload_configuration",
          "callee": "str",
          "line": 338,
          "type": "direct"
        },
        {
          "caller": "reload_configuration",
          "callee": "HTTPException",
          "line": 339,
          "type": "direct"
        },
        {
          "caller": "reload_configuration",
          "callee": "post",
          "line": 321,
          "type": "attribute"
        }
      ],
      "error": null
    },
    {
      "filepath": "src\\api\\routers\\system.py",
      "functions": [
        {
          "name": "get_system_info",
          "full_name": "get_system_info",
          "class": null,
          "signature": "(config_service: ConfigService)",
          "return_type": "",
          "decorators": [
            "router.get('/info', response_model=SystemInfoResponse)"
          ],
          "docstring": "Get system information.",
          "line_start": 25,
          "line_end": 37,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "create_backup",
          "full_name": "create_backup",
          "class": null,
          "signature": "(config_service: ConfigService)",
          "return_type": "",
          "decorators": [
            "router.post('/backup')"
          ],
          "docstring": "Create system backup.",
          "line_start": 41,
          "line_end": 53,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "APIRouter",
          "alias": null,
          "line": 3
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "Depends",
          "alias": null,
          "line": 3
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "HTTPException",
          "alias": null,
          "line": 3
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "status",
          "alias": null,
          "line": 3
        },
        {
          "type": "from_import",
          "module": "pydantic",
          "name": "BaseModel",
          "alias": null,
          "line": 4
        },
        {
          "type": "import",
          "module": "structlog",
          "alias": null,
          "line": 5
        },
        {
          "type": "from_import",
          "module": "src.services.config_service",
          "name": "ConfigService",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "src.utils.dependencies",
          "name": "get_config_service",
          "alias": null,
          "line": 8
        }
      ],
      "function_calls": [
        {
          "caller": "get_system_info",
          "callee": "Depends",
          "line": 26,
          "type": "direct"
        },
        {
          "caller": "get_system_info",
          "callee": "get_system_info",
          "line": 30,
          "type": "attribute"
        },
        {
          "caller": "get_system_info",
          "callee": "error",
          "line": 33,
          "type": "attribute"
        },
        {
          "caller": "get_system_info",
          "callee": "str",
          "line": 33,
          "type": "direct"
        },
        {
          "caller": "get_system_info",
          "callee": "HTTPException",
          "line": 34,
          "type": "direct"
        },
        {
          "caller": "get_system_info",
          "callee": "get",
          "line": 24,
          "type": "attribute"
        },
        {
          "caller": "create_backup",
          "callee": "Depends",
          "line": 42,
          "type": "direct"
        },
        {
          "caller": "create_backup",
          "callee": "create_backup",
          "line": 46,
          "type": "attribute"
        },
        {
          "caller": "create_backup",
          "callee": "error",
          "line": 49,
          "type": "attribute"
        },
        {
          "caller": "create_backup",
          "callee": "str",
          "line": 49,
          "type": "direct"
        },
        {
          "caller": "create_backup",
          "callee": "HTTPException",
          "line": 50,
          "type": "direct"
        },
        {
          "caller": "create_backup",
          "callee": "post",
          "line": 40,
          "type": "attribute"
        }
      ],
      "error": null
    },
    {
      "filepath": "src\\api\\routers\\trending.py",
      "functions": [
        {
          "name": "get_trending",
          "full_name": "get_trending",
          "class": null,
          "signature": "(platform: Optional[str], category: Optional[str], limit: int, trending_service: TrendingService)",
          "return_type": "",
          "decorators": [
            "router.get('/', response_model=List[TrendingModel])"
          ],
          "docstring": "Get trending models from cache.",
          "line_start": 52,
          "line_end": 87,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_supported_platforms",
          "full_name": "get_supported_platforms",
          "class": null,
          "signature": "()",
          "return_type": "",
          "decorators": [
            "router.get('/platforms')"
          ],
          "docstring": "Get list of supported platforms for trending discovery.",
          "line_start": 91,
          "line_end": 108,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_trending_stats",
          "full_name": "get_trending_stats",
          "class": null,
          "signature": "(trending_service: TrendingService)",
          "return_type": "",
          "decorators": [
            "router.get('/stats', response_model=TrendingStats)"
          ],
          "docstring": "Get trending cache statistics.",
          "line_start": 112,
          "line_end": 120,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "refresh_trending",
          "full_name": "refresh_trending",
          "class": null,
          "signature": "(platform: Optional[str], trending_service: TrendingService)",
          "return_type": "",
          "decorators": [
            "router.post('/refresh', status_code=202)"
          ],
          "docstring": "Force refresh trending cache for all or specific platform.",
          "line_start": 124,
          "line_end": 153,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "save_trending_as_idea",
          "full_name": "save_trending_as_idea",
          "class": null,
          "signature": "(trending_id: str, request: SaveTrendingRequest, trending_service: TrendingService)",
          "return_type": "",
          "decorators": [
            "router.post('/{trending_id}/save', response_model=dict, status_code=201)"
          ],
          "docstring": "Save a trending item as a personal idea.",
          "line_start": 157,
          "line_end": 178,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_platform_trending",
          "full_name": "get_platform_trending",
          "class": null,
          "signature": "(platform: str, category: Optional[str], limit: int, trending_service: TrendingService)",
          "return_type": "",
          "decorators": [
            "router.get('/{platform}')"
          ],
          "docstring": "Get trending models for a specific platform.",
          "line_start": 182,
          "line_end": 221,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "cleanup_expired",
          "full_name": "cleanup_expired",
          "class": null,
          "signature": "(trending_service: TrendingService)",
          "return_type": "",
          "decorators": [
            "router.delete('/cleanup', status_code=204)"
          ],
          "docstring": "Clean up expired trending cache entries.",
          "line_start": 225,
          "line_end": 232,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_trending_categories",
          "full_name": "get_trending_categories",
          "class": null,
          "signature": "(platform: Optional[str], trending_service: TrendingService)",
          "return_type": "",
          "decorators": [
            "router.get('/categories/list')"
          ],
          "docstring": "Get available categories for trending items.",
          "line_start": 236,
          "line_end": 258,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "List",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Optional",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Dict",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Any",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "APIRouter",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "Depends",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "HTTPException",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "Query",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "Body",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "pydantic",
          "name": "BaseModel",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "pydantic",
          "name": "Field",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "src.services.trending_service",
          "name": "TrendingService",
          "alias": null,
          "line": 12
        },
        {
          "type": "from_import",
          "module": "src.utils.dependencies",
          "name": "get_trending_service",
          "alias": null,
          "line": 13
        }
      ],
      "function_calls": [
        {
          "caller": "get_trending",
          "callee": "Query",
          "line": 53,
          "type": "direct"
        },
        {
          "caller": "get_trending",
          "callee": "Query",
          "line": 54,
          "type": "direct"
        },
        {
          "caller": "get_trending",
          "callee": "Query",
          "line": 55,
          "type": "direct"
        },
        {
          "caller": "get_trending",
          "callee": "Depends",
          "line": 56,
          "type": "direct"
        },
        {
          "caller": "get_trending",
          "callee": "get_trending",
          "line": 60,
          "type": "attribute"
        },
        {
          "caller": "get_trending",
          "callee": "TrendingModel",
          "line": 67,
          "type": "direct"
        },
        {
          "caller": "get_trending",
          "callee": "get",
          "line": 73,
          "type": "attribute"
        },
        {
          "caller": "get_trending",
          "callee": "get",
          "line": 74,
          "type": "attribute"
        },
        {
          "caller": "get_trending",
          "callee": "get",
          "line": 75,
          "type": "attribute"
        },
        {
          "caller": "get_trending",
          "callee": "get",
          "line": 76,
          "type": "attribute"
        },
        {
          "caller": "get_trending",
          "callee": "get",
          "line": 77,
          "type": "attribute"
        },
        {
          "caller": "get_trending",
          "callee": "get",
          "line": 78,
          "type": "attribute"
        },
        {
          "caller": "get_trending",
          "callee": "fromisoformat",
          "line": 79,
          "type": "attribute"
        },
        {
          "caller": "get_trending",
          "callee": "fromisoformat",
          "line": 80,
          "type": "attribute"
        },
        {
          "caller": "get_trending",
          "callee": "isinstance",
          "line": 81,
          "type": "direct"
        },
        {
          "caller": "get_trending",
          "callee": "get",
          "line": 81,
          "type": "attribute"
        },
        {
          "caller": "get_trending",
          "callee": "get",
          "line": 81,
          "type": "attribute"
        },
        {
          "caller": "get_trending",
          "callee": "HTTPException",
          "line": 87,
          "type": "direct"
        },
        {
          "caller": "get_trending",
          "callee": "str",
          "line": 87,
          "type": "direct"
        },
        {
          "caller": "get_trending",
          "callee": "get",
          "line": 51,
          "type": "attribute"
        },
        {
          "caller": "get_supported_platforms",
          "callee": "get",
          "line": 90,
          "type": "attribute"
        },
        {
          "caller": "get_trending_stats",
          "callee": "Depends",
          "line": 113,
          "type": "direct"
        },
        {
          "caller": "get_trending_stats",
          "callee": "get_statistics",
          "line": 117,
          "type": "attribute"
        },
        {
          "caller": "get_trending_stats",
          "callee": "TrendingStats",
          "line": 118,
          "type": "direct"
        },
        {
          "caller": "get_trending_stats",
          "callee": "HTTPException",
          "line": 120,
          "type": "direct"
        },
        {
          "caller": "get_trending_stats",
          "callee": "str",
          "line": 120,
          "type": "direct"
        },
        {
          "caller": "get_trending_stats",
          "callee": "get",
          "line": 111,
          "type": "attribute"
        },
        {
          "caller": "refresh_trending",
          "callee": "Query",
          "line": 125,
          "type": "direct"
        },
        {
          "caller": "refresh_trending",
          "callee": "Depends",
          "line": 126,
          "type": "direct"
        },
        {
          "caller": "refresh_trending",
          "callee": "fetch_makerworld_trending",
          "line": 133,
          "type": "attribute"
        },
        {
          "caller": "refresh_trending",
          "callee": "save_trending_items",
          "line": 134,
          "type": "attribute"
        },
        {
          "caller": "refresh_trending",
          "callee": "fetch_printables_trending",
          "line": 136,
          "type": "attribute"
        },
        {
          "caller": "refresh_trending",
          "callee": "save_trending_items",
          "line": 137,
          "type": "attribute"
        },
        {
          "caller": "refresh_trending",
          "callee": "HTTPException",
          "line": 139,
          "type": "direct"
        },
        {
          "caller": "refresh_trending",
          "callee": "locals",
          "line": 143,
          "type": "direct"
        },
        {
          "caller": "refresh_trending",
          "callee": "len",
          "line": 143,
          "type": "direct"
        },
        {
          "caller": "refresh_trending",
          "callee": "refresh_all_platforms",
          "line": 147,
          "type": "attribute"
        },
        {
          "caller": "refresh_trending",
          "callee": "HTTPException",
          "line": 153,
          "type": "direct"
        },
        {
          "caller": "refresh_trending",
          "callee": "str",
          "line": 153,
          "type": "direct"
        },
        {
          "caller": "refresh_trending",
          "callee": "post",
          "line": 123,
          "type": "attribute"
        },
        {
          "caller": "save_trending_as_idea",
          "callee": "Depends",
          "line": 160,
          "type": "direct"
        },
        {
          "caller": "save_trending_as_idea",
          "callee": "save_as_idea",
          "line": 164,
          "type": "attribute"
        },
        {
          "caller": "save_trending_as_idea",
          "callee": "HTTPException",
          "line": 176,
          "type": "direct"
        },
        {
          "caller": "save_trending_as_idea",
          "callee": "str",
          "line": 176,
          "type": "direct"
        },
        {
          "caller": "save_trending_as_idea",
          "callee": "HTTPException",
          "line": 178,
          "type": "direct"
        },
        {
          "caller": "save_trending_as_idea",
          "callee": "str",
          "line": 178,
          "type": "direct"
        },
        {
          "caller": "save_trending_as_idea",
          "callee": "post",
          "line": 156,
          "type": "attribute"
        },
        {
          "caller": "get_platform_trending",
          "callee": "Query",
          "line": 184,
          "type": "direct"
        },
        {
          "caller": "get_platform_trending",
          "callee": "Query",
          "line": 185,
          "type": "direct"
        },
        {
          "caller": "get_platform_trending",
          "callee": "Depends",
          "line": 186,
          "type": "direct"
        },
        {
          "caller": "get_platform_trending",
          "callee": "HTTPException",
          "line": 192,
          "type": "direct"
        },
        {
          "caller": "get_platform_trending",
          "callee": "get_trending",
          "line": 195,
          "type": "attribute"
        },
        {
          "caller": "get_platform_trending",
          "callee": "len",
          "line": 203,
          "type": "direct"
        },
        {
          "caller": "get_platform_trending",
          "callee": "get",
          "line": 210,
          "type": "attribute"
        },
        {
          "caller": "get_platform_trending",
          "callee": "get",
          "line": 211,
          "type": "attribute"
        },
        {
          "caller": "get_platform_trending",
          "callee": "get",
          "line": 212,
          "type": "attribute"
        },
        {
          "caller": "get_platform_trending",
          "callee": "get",
          "line": 213,
          "type": "attribute"
        },
        {
          "caller": "get_platform_trending",
          "callee": "HTTPException",
          "line": 221,
          "type": "direct"
        },
        {
          "caller": "get_platform_trending",
          "callee": "str",
          "line": 221,
          "type": "direct"
        },
        {
          "caller": "get_platform_trending",
          "callee": "get",
          "line": 181,
          "type": "attribute"
        },
        {
          "caller": "cleanup_expired",
          "callee": "Depends",
          "line": 226,
          "type": "direct"
        },
        {
          "caller": "cleanup_expired",
          "callee": "cleanup_expired",
          "line": 230,
          "type": "attribute"
        },
        {
          "caller": "cleanup_expired",
          "callee": "HTTPException",
          "line": 232,
          "type": "direct"
        },
        {
          "caller": "cleanup_expired",
          "callee": "str",
          "line": 232,
          "type": "direct"
        },
        {
          "caller": "cleanup_expired",
          "callee": "delete",
          "line": 224,
          "type": "attribute"
        },
        {
          "caller": "get_trending_categories",
          "callee": "Query",
          "line": 237,
          "type": "direct"
        },
        {
          "caller": "get_trending_categories",
          "callee": "Depends",
          "line": 238,
          "type": "direct"
        },
        {
          "caller": "get_trending_categories",
          "callee": "get",
          "line": 235,
          "type": "attribute"
        }
      ],
      "error": null
    },
    {
      "filepath": "src\\api\\routers\\websocket.py",
      "functions": [
        {
          "name": "__init__",
          "full_name": "ConnectionManager.__init__",
          "class": "ConnectionManager",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 21,
          "line_end": 23,
          "access_level": "dunder",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "connect",
          "full_name": "ConnectionManager.connect",
          "class": "ConnectionManager",
          "signature": "(self, websocket: WebSocket)",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 25,
          "line_end": 28,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "disconnect",
          "full_name": "ConnectionManager.disconnect",
          "class": "ConnectionManager",
          "signature": "(self, websocket: WebSocket)",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 30,
          "line_end": 35,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "broadcast",
          "full_name": "ConnectionManager.broadcast",
          "class": "ConnectionManager",
          "signature": "(self, message: dict)",
          "return_type": "",
          "decorators": [],
          "docstring": "Broadcast message to all connected clients.",
          "line_start": 37,
          "line_end": 53,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "send_to_printer_subscribers",
          "full_name": "ConnectionManager.send_to_printer_subscribers",
          "class": "ConnectionManager",
          "signature": "(self, printer_id: str, message: dict)",
          "return_type": "",
          "decorators": [],
          "docstring": "Send message to clients subscribed to specific printer.",
          "line_start": 55,
          "line_end": 72,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "subscribe_to_printer",
          "full_name": "ConnectionManager.subscribe_to_printer",
          "class": "ConnectionManager",
          "signature": "(self, websocket: WebSocket, printer_id: str)",
          "return_type": "",
          "decorators": [],
          "docstring": "Subscribe websocket to printer updates.",
          "line_start": 74,
          "line_end": 78,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "unsubscribe_from_printer",
          "full_name": "ConnectionManager.unsubscribe_from_printer",
          "class": "ConnectionManager",
          "signature": "(self, websocket: WebSocket, printer_id: str)",
          "return_type": "",
          "decorators": [],
          "docstring": "Unsubscribe websocket from printer updates.",
          "line_start": 80,
          "line_end": 83,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "websocket_endpoint",
          "full_name": "websocket_endpoint",
          "class": null,
          "signature": "(websocket: WebSocket)",
          "return_type": "",
          "decorators": [
            "router.websocket('/')"
          ],
          "docstring": "Main WebSocket endpoint for real-time updates.",
          "line_start": 90,
          "line_end": 93,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "websocket_endpoint_no_slash",
          "full_name": "websocket_endpoint_no_slash",
          "class": null,
          "signature": "(websocket: WebSocket)",
          "return_type": "",
          "decorators": [
            "router.websocket('')"
          ],
          "docstring": "Main WebSocket endpoint for real-time updates (without trailing slash).",
          "line_start": 96,
          "line_end": 99,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_handle_websocket_connection",
          "full_name": "_handle_websocket_connection",
          "class": null,
          "signature": "(websocket: WebSocket, event_service: EventService)",
          "return_type": "",
          "decorators": [],
          "docstring": "Handle WebSocket connection logic.",
          "line_start": 101,
          "line_end": 125,
          "access_level": "private",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "handle_client_message",
          "full_name": "handle_client_message",
          "class": null,
          "signature": "(websocket: WebSocket, message: dict)",
          "return_type": "",
          "decorators": [],
          "docstring": "Handle incoming client messages.",
          "line_start": 128,
          "line_end": 157,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "broadcast_printer_status",
          "full_name": "broadcast_printer_status",
          "class": null,
          "signature": "(printer_id: UUID, status_data: dict)",
          "return_type": "",
          "decorators": [],
          "docstring": "Broadcast printer status update.",
          "line_start": 161,
          "line_end": 167,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "broadcast_job_update",
          "full_name": "broadcast_job_update",
          "class": null,
          "signature": "(job_id: UUID, job_data: dict)",
          "return_type": "",
          "decorators": [],
          "docstring": "Broadcast job progress update.",
          "line_start": 170,
          "line_end": 176,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "broadcast_system_event",
          "full_name": "broadcast_system_event",
          "class": null,
          "signature": "(event_type: str, event_data: dict)",
          "return_type": "",
          "decorators": [],
          "docstring": "Broadcast system event.",
          "line_start": 179,
          "line_end": 185,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_connection_manager",
          "full_name": "get_connection_manager",
          "class": null,
          "signature": "()",
          "return_type": "ConnectionManager",
          "decorators": [],
          "docstring": "",
          "line_start": 189,
          "line_end": 190,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "from_import",
          "module": "typing",
          "name": "Dict",
          "alias": null,
          "line": 3
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Set",
          "alias": null,
          "line": 3
        },
        {
          "type": "import",
          "module": "json",
          "alias": null,
          "line": 4
        },
        {
          "type": "import",
          "module": "asyncio",
          "alias": null,
          "line": 5
        },
        {
          "type": "from_import",
          "module": "uuid",
          "name": "UUID",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "APIRouter",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "WebSocket",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "WebSocketDisconnect",
          "alias": null,
          "line": 8
        },
        {
          "type": "import",
          "module": "structlog",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "src.services.event_service",
          "name": "EventService",
          "alias": null,
          "line": 11
        }
      ],
      "function_calls": [
        {
          "caller": "ConnectionManager.__init__",
          "callee": "set",
          "line": 22,
          "type": "direct"
        },
        {
          "caller": "ConnectionManager.connect",
          "callee": "accept",
          "line": 26,
          "type": "attribute"
        },
        {
          "caller": "ConnectionManager.connect",
          "callee": "add",
          "line": 27,
          "type": "attribute"
        },
        {
          "caller": "ConnectionManager.connect",
          "callee": "info",
          "line": 28,
          "type": "attribute"
        },
        {
          "caller": "ConnectionManager.connect",
          "callee": "len",
          "line": 28,
          "type": "direct"
        },
        {
          "caller": "ConnectionManager.disconnect",
          "callee": "discard",
          "line": 31,
          "type": "attribute"
        },
        {
          "caller": "ConnectionManager.disconnect",
          "callee": "items",
          "line": 33,
          "type": "attribute"
        },
        {
          "caller": "ConnectionManager.disconnect",
          "callee": "discard",
          "line": 34,
          "type": "attribute"
        },
        {
          "caller": "ConnectionManager.disconnect",
          "callee": "info",
          "line": 35,
          "type": "attribute"
        },
        {
          "caller": "ConnectionManager.disconnect",
          "callee": "len",
          "line": 35,
          "type": "direct"
        },
        {
          "caller": "ConnectionManager.broadcast",
          "callee": "dumps",
          "line": 42,
          "type": "attribute"
        },
        {
          "caller": "ConnectionManager.broadcast",
          "callee": "set",
          "line": 43,
          "type": "direct"
        },
        {
          "caller": "ConnectionManager.broadcast",
          "callee": "send_text",
          "line": 47,
          "type": "attribute"
        },
        {
          "caller": "ConnectionManager.broadcast",
          "callee": "add",
          "line": 49,
          "type": "attribute"
        },
        {
          "caller": "ConnectionManager.broadcast",
          "callee": "disconnect",
          "line": 53,
          "type": "attribute"
        },
        {
          "caller": "ConnectionManager.send_to_printer_subscribers",
          "callee": "get",
          "line": 57,
          "type": "attribute"
        },
        {
          "caller": "ConnectionManager.send_to_printer_subscribers",
          "callee": "set",
          "line": 57,
          "type": "direct"
        },
        {
          "caller": "ConnectionManager.send_to_printer_subscribers",
          "callee": "dumps",
          "line": 61,
          "type": "attribute"
        },
        {
          "caller": "ConnectionManager.send_to_printer_subscribers",
          "callee": "set",
          "line": 62,
          "type": "direct"
        },
        {
          "caller": "ConnectionManager.send_to_printer_subscribers",
          "callee": "send_text",
          "line": 66,
          "type": "attribute"
        },
        {
          "caller": "ConnectionManager.send_to_printer_subscribers",
          "callee": "add",
          "line": 68,
          "type": "attribute"
        },
        {
          "caller": "ConnectionManager.send_to_printer_subscribers",
          "callee": "discard",
          "line": 72,
          "type": "attribute"
        },
        {
          "caller": "ConnectionManager.subscribe_to_printer",
          "callee": "set",
          "line": 77,
          "type": "direct"
        },
        {
          "caller": "ConnectionManager.subscribe_to_printer",
          "callee": "add",
          "line": 78,
          "type": "attribute"
        },
        {
          "caller": "ConnectionManager.unsubscribe_from_printer",
          "callee": "discard",
          "line": 83,
          "type": "attribute"
        },
        {
          "caller": "websocket_endpoint",
          "callee": "_handle_websocket_connection",
          "line": 93,
          "type": "direct"
        },
        {
          "caller": "websocket_endpoint",
          "callee": "websocket",
          "line": 89,
          "type": "attribute"
        },
        {
          "caller": "websocket_endpoint_no_slash",
          "callee": "_handle_websocket_connection",
          "line": 99,
          "type": "direct"
        },
        {
          "caller": "websocket_endpoint_no_slash",
          "callee": "websocket",
          "line": 95,
          "type": "attribute"
        },
        {
          "caller": "_handle_websocket_connection",
          "callee": "connect",
          "line": 103,
          "type": "attribute"
        },
        {
          "caller": "_handle_websocket_connection",
          "callee": "receive_text",
          "line": 108,
          "type": "attribute"
        },
        {
          "caller": "_handle_websocket_connection",
          "callee": "loads",
          "line": 110,
          "type": "attribute"
        },
        {
          "caller": "_handle_websocket_connection",
          "callee": "handle_client_message",
          "line": 111,
          "type": "direct"
        },
        {
          "caller": "_handle_websocket_connection",
          "callee": "send_text",
          "line": 113,
          "type": "attribute"
        },
        {
          "caller": "_handle_websocket_connection",
          "callee": "dumps",
          "line": 113,
          "type": "attribute"
        },
        {
          "caller": "_handle_websocket_connection",
          "callee": "error",
          "line": 118,
          "type": "attribute"
        },
        {
          "caller": "_handle_websocket_connection",
          "callee": "str",
          "line": 118,
          "type": "direct"
        },
        {
          "caller": "_handle_websocket_connection",
          "callee": "send_text",
          "line": 119,
          "type": "attribute"
        },
        {
          "caller": "_handle_websocket_connection",
          "callee": "dumps",
          "line": 119,
          "type": "attribute"
        },
        {
          "caller": "_handle_websocket_connection",
          "callee": "disconnect",
          "line": 125,
          "type": "attribute"
        },
        {
          "caller": "handle_client_message",
          "callee": "get",
          "line": 130,
          "type": "attribute"
        },
        {
          "caller": "handle_client_message",
          "callee": "get",
          "line": 133,
          "type": "attribute"
        },
        {
          "caller": "handle_client_message",
          "callee": "subscribe_to_printer",
          "line": 135,
          "type": "attribute"
        },
        {
          "caller": "handle_client_message",
          "callee": "send_text",
          "line": 136,
          "type": "attribute"
        },
        {
          "caller": "handle_client_message",
          "callee": "dumps",
          "line": 136,
          "type": "attribute"
        },
        {
          "caller": "handle_client_message",
          "callee": "get",
          "line": 142,
          "type": "attribute"
        },
        {
          "caller": "handle_client_message",
          "callee": "unsubscribe_from_printer",
          "line": 144,
          "type": "attribute"
        },
        {
          "caller": "handle_client_message",
          "callee": "send_text",
          "line": 145,
          "type": "attribute"
        },
        {
          "caller": "handle_client_message",
          "callee": "dumps",
          "line": 145,
          "type": "attribute"
        },
        {
          "caller": "handle_client_message",
          "callee": "send_text",
          "line": 151,
          "type": "attribute"
        },
        {
          "caller": "handle_client_message",
          "callee": "dumps",
          "line": 151,
          "type": "attribute"
        },
        {
          "caller": "handle_client_message",
          "callee": "send_text",
          "line": 154,
          "type": "attribute"
        },
        {
          "caller": "handle_client_message",
          "callee": "dumps",
          "line": 154,
          "type": "attribute"
        },
        {
          "caller": "broadcast_printer_status",
          "callee": "send_to_printer_subscribers",
          "line": 163,
          "type": "attribute"
        },
        {
          "caller": "broadcast_printer_status",
          "callee": "str",
          "line": 163,
          "type": "direct"
        },
        {
          "caller": "broadcast_printer_status",
          "callee": "str",
          "line": 165,
          "type": "direct"
        },
        {
          "caller": "broadcast_job_update",
          "callee": "broadcast",
          "line": 172,
          "type": "attribute"
        },
        {
          "caller": "broadcast_job_update",
          "callee": "str",
          "line": 174,
          "type": "direct"
        },
        {
          "caller": "broadcast_system_event",
          "callee": "broadcast",
          "line": 181,
          "type": "attribute"
        }
      ],
      "error": null
    },
    {
      "filepath": "src\\database\\__init__.py",
      "functions": [],
      "imports": [],
      "function_calls": [],
      "error": null
    },
    {
      "filepath": "src\\database\\database.py",
      "functions": [
        {
          "name": "__init__",
          "full_name": "Database.__init__",
          "class": "Database",
          "signature": "(self, db_path: Optional[str])",
          "return_type": "",
          "decorators": [],
          "docstring": "Initialize database connection.",
          "line_start": 22,
          "line_end": 29,
          "access_level": "dunder",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "initialize",
          "full_name": "Database.initialize",
          "class": "Database",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Initialize database and create tables.",
          "line_start": 31,
          "line_end": 44,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_create_tables",
          "full_name": "Database._create_tables",
          "class": "Database",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Create database tables if they don't exist.",
          "line_start": 46,
          "line_end": 192,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_execute_write",
          "full_name": "Database._execute_write",
          "class": "Database",
          "signature": "(self, sql: str, params: Optional[tuple])",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Execute a write statement with timing + limited retry.\n\nArgs:\n    sql: SQL statement (INSERT/UPDATE/DELETE)\n    params: Parameters tuple\n    retries: Additional retry attempts on sqlite OperationalError\n    retry_delay: Initial delay for exponential backoff\nReturns:\n    True if success else False",
          "line_start": 197,
          "line_end": 233,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_fetch_one",
          "full_name": "Database._fetch_one",
          "class": "Database",
          "signature": "(self, sql: str, params: Optional[List[Any]])",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 235,
          "line_end": 247,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_fetch_all",
          "full_name": "Database._fetch_all",
          "class": "Database",
          "signature": "(self, sql: str, params: Optional[List[Any]])",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 249,
          "line_end": 261,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "close",
          "full_name": "Database.close",
          "class": "Database",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Close database connection.",
          "line_start": 263,
          "line_end": 267,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_connection",
          "full_name": "Database.get_connection",
          "class": "Database",
          "signature": "(self)",
          "return_type": "aiosqlite.Connection",
          "decorators": [],
          "docstring": "Get database connection.",
          "line_start": 269,
          "line_end": 273,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "connection",
          "full_name": "Database.connection",
          "class": "Database",
          "signature": "(self)",
          "return_type": "",
          "decorators": [
            "asynccontextmanager"
          ],
          "docstring": "Get database connection as async context manager.",
          "line_start": 276,
          "line_end": 280,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "health_check",
          "full_name": "Database.health_check",
          "class": "Database",
          "signature": "(self)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Check database health.",
          "line_start": 282,
          "line_end": 293,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "transaction",
          "full_name": "Database.transaction",
          "class": "Database",
          "signature": "(self)",
          "return_type": "",
          "decorators": [
            "asynccontextmanager"
          ],
          "docstring": "Database transaction context manager.",
          "line_start": 296,
          "line_end": 301,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "create_printer",
          "full_name": "Database.create_printer",
          "class": "Database",
          "signature": "(self, printer_data: Dict[str, Any])",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Create a new printer record.",
          "line_start": 304,
          "line_end": 323,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_printer",
          "full_name": "Database.get_printer",
          "class": "Database",
          "signature": "(self, printer_id: str)",
          "return_type": "Optional[Dict[str, Any]]",
          "decorators": [],
          "docstring": "Get printer by ID.",
          "line_start": 325,
          "line_end": 332,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "list_printers",
          "full_name": "Database.list_printers",
          "class": "Database",
          "signature": "(self, active_only: bool)",
          "return_type": "List[Dict[str, Any]]",
          "decorators": [],
          "docstring": "List all printers.",
          "line_start": 334,
          "line_end": 345,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "update_printer_status",
          "full_name": "Database.update_printer_status",
          "class": "Database",
          "signature": "(self, printer_id: str, status: str, last_seen: Optional[datetime])",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Update printer status and last seen time.",
          "line_start": 347,
          "line_end": 358,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "create_job",
          "full_name": "Database.create_job",
          "class": "Database",
          "signature": "(self, job_data: Dict[str, Any])",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Create a new job record.",
          "line_start": 361,
          "line_end": 382,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_job",
          "full_name": "Database.get_job",
          "class": "Database",
          "signature": "(self, job_id: str)",
          "return_type": "Optional[Dict[str, Any]]",
          "decorators": [],
          "docstring": "Get job by ID.",
          "line_start": 384,
          "line_end": 394,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "list_jobs",
          "full_name": "Database.list_jobs",
          "class": "Database",
          "signature": "(self, printer_id: Optional[str], status: Optional[str], is_business: Optional[bool], limit: Optional[int], offset: Optional[int])",
          "return_type": "List[Dict[str, Any]]",
          "decorators": [],
          "docstring": "List jobs with optional filtering and pagination.",
          "line_start": 396,
          "line_end": 433,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_jobs_by_date_range",
          "full_name": "Database.get_jobs_by_date_range",
          "class": "Database",
          "signature": "(self, start_date: str, end_date: str, is_business: Optional[bool])",
          "return_type": "List[Dict[str, Any]]",
          "decorators": [],
          "docstring": "Get jobs within a date range for reporting.",
          "line_start": 435,
          "line_end": 453,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_job_statistics",
          "full_name": "Database.get_job_statistics",
          "class": "Database",
          "signature": "(self)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Get comprehensive job statistics.",
          "line_start": 455,
          "line_end": 517,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "update_job",
          "full_name": "Database.update_job",
          "class": "Database",
          "signature": "(self, job_id: str, updates: Dict[str, Any])",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Update job with provided fields.",
          "line_start": 519,
          "line_end": 543,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "delete_job",
          "full_name": "Database.delete_job",
          "class": "Database",
          "signature": "(self, job_id: str)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Delete a job record from the database.",
          "line_start": 545,
          "line_end": 554,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "create_file",
          "full_name": "Database.create_file",
          "class": "Database",
          "signature": "(self, file_data: Dict[str, Any])",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Create a new file record or update if exists (preserving thumbnails).",
          "line_start": 557,
          "line_end": 611,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "list_files",
          "full_name": "Database.list_files",
          "class": "Database",
          "signature": "(self, printer_id: Optional[str], status: Optional[str], source: Optional[str])",
          "return_type": "List[Dict[str, Any]]",
          "decorators": [],
          "docstring": "List files with optional filtering.",
          "line_start": 613,
          "line_end": 652,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "update_file",
          "full_name": "Database.update_file",
          "class": "Database",
          "signature": "(self, file_id: str, updates: Dict[str, Any])",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Update file with provided fields.",
          "line_start": 654,
          "line_end": 679,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "update_file_enhanced_metadata",
          "full_name": "Database.update_file_enhanced_metadata",
          "class": "Database",
          "signature": "(self, file_id: str, enhanced_metadata: Dict[str, Any], last_analyzed: datetime)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Update file with enhanced metadata (Issue #43 - METADATA-001).\n\nThis method stores comprehensive metadata extracted from 3D files including\nphysical properties, print settings, material requirements, cost analysis,\nquality metrics, and compatibility information.",
          "line_start": 681,
          "line_end": 751,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "create_local_file",
          "full_name": "Database.create_local_file",
          "class": "Database",
          "signature": "(self, file_data: Dict[str, Any])",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Create a local file record specifically for watch folder files.",
          "line_start": 753,
          "line_end": 761,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "list_local_files",
          "full_name": "Database.list_local_files",
          "class": "Database",
          "signature": "(self, watch_folder_path: Optional[str])",
          "return_type": "List[Dict[str, Any]]",
          "decorators": [],
          "docstring": "List local files from watch folders.",
          "line_start": 763,
          "line_end": 780,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "delete_local_file",
          "full_name": "Database.delete_local_file",
          "class": "Database",
          "signature": "(self, file_id: str)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Delete a local file record.",
          "line_start": 782,
          "line_end": 788,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_file_statistics",
          "full_name": "Database.get_file_statistics",
          "class": "Database",
          "signature": "(self)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Get file statistics by source.",
          "line_start": 790,
          "line_end": 820,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "create_idea",
          "full_name": "Database.create_idea",
          "class": "Database",
          "signature": "(self, idea_data: Dict[str, Any])",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Create a new idea record.",
          "line_start": 823,
          "line_end": 851,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_idea",
          "full_name": "Database.get_idea",
          "class": "Database",
          "signature": "(self, idea_id: str)",
          "return_type": "Optional[Dict[str, Any]]",
          "decorators": [],
          "docstring": "Get idea by ID.",
          "line_start": 853,
          "line_end": 860,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "list_ideas",
          "full_name": "Database.list_ideas",
          "class": "Database",
          "signature": "(self, status: Optional[str], is_business: Optional[bool], category: Optional[str], source_type: Optional[str], limit: Optional[int], offset: Optional[int])",
          "return_type": "List[Dict[str, Any]]",
          "decorators": [],
          "docstring": "List ideas with optional filtering and pagination.",
          "line_start": 862,
          "line_end": 900,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "update_idea",
          "full_name": "Database.update_idea",
          "class": "Database",
          "signature": "(self, idea_id: str, updates: Dict[str, Any])",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Update idea with provided fields.",
          "line_start": 902,
          "line_end": 924,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "delete_idea",
          "full_name": "Database.delete_idea",
          "class": "Database",
          "signature": "(self, idea_id: str)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Delete an idea record.",
          "line_start": 926,
          "line_end": 935,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "update_idea_status",
          "full_name": "Database.update_idea_status",
          "class": "Database",
          "signature": "(self, idea_id: str, status: str)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Update idea status.",
          "line_start": 937,
          "line_end": 942,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "add_idea_tags",
          "full_name": "Database.add_idea_tags",
          "class": "Database",
          "signature": "(self, idea_id: str, tags: List[str])",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Add tags to an idea.",
          "line_start": 945,
          "line_end": 956,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "remove_idea_tags",
          "full_name": "Database.remove_idea_tags",
          "class": "Database",
          "signature": "(self, idea_id: str, tags: List[str])",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Remove tags from an idea.",
          "line_start": 958,
          "line_end": 969,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_idea_tags",
          "full_name": "Database.get_idea_tags",
          "class": "Database",
          "signature": "(self, idea_id: str)",
          "return_type": "List[str]",
          "decorators": [],
          "docstring": "Get all tags for an idea.",
          "line_start": 971,
          "line_end": 981,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_all_tags",
          "full_name": "Database.get_all_tags",
          "class": "Database",
          "signature": "(self)",
          "return_type": "List[Dict[str, Any]]",
          "decorators": [],
          "docstring": "Get all unique tags with counts.",
          "line_start": 983,
          "line_end": 993,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "upsert_trending",
          "full_name": "Database.upsert_trending",
          "class": "Database",
          "signature": "(self, trending_data: Dict[str, Any])",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Insert or update trending cache entry.",
          "line_start": 996,
          "line_end": 1021,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_trending",
          "full_name": "Database.get_trending",
          "class": "Database",
          "signature": "(self, platform: Optional[str], category: Optional[str])",
          "return_type": "List[Dict[str, Any]]",
          "decorators": [],
          "docstring": "Get trending items from cache.",
          "line_start": 1023,
          "line_end": 1042,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "clean_expired_trending",
          "full_name": "Database.clean_expired_trending",
          "class": "Database",
          "signature": "(self)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Remove expired trending cache entries.",
          "line_start": 1044,
          "line_end": 1053,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_idea_statistics",
          "full_name": "Database.get_idea_statistics",
          "class": "Database",
          "signature": "(self)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Get idea statistics.",
          "line_start": 1055,
          "line_end": 1096,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "create_library_file",
          "full_name": "Database.create_library_file",
          "class": "Database",
          "signature": "(self, file_data: Dict[str, Any])",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Create a new library file record.",
          "line_start": 1102,
          "line_end": 1131,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_library_file",
          "full_name": "Database.get_library_file",
          "class": "Database",
          "signature": "(self, file_id: str)",
          "return_type": "Optional[Dict[str, Any]]",
          "decorators": [],
          "docstring": "Get library file by ID.",
          "line_start": 1133,
          "line_end": 1139,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_library_file_by_checksum",
          "full_name": "Database.get_library_file_by_checksum",
          "class": "Database",
          "signature": "(self, checksum: str)",
          "return_type": "Optional[Dict[str, Any]]",
          "decorators": [],
          "docstring": "Get library file by checksum.",
          "line_start": 1141,
          "line_end": 1147,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "update_library_file",
          "full_name": "Database.update_library_file",
          "class": "Database",
          "signature": "(self, checksum: str, updates: Dict[str, Any])",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Update library file by checksum.",
          "line_start": 1149,
          "line_end": 1161,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "delete_library_file",
          "full_name": "Database.delete_library_file",
          "class": "Database",
          "signature": "(self, checksum: str)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Delete library file by checksum.",
          "line_start": 1163,
          "line_end": 1168,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "list_library_files",
          "full_name": "Database.list_library_files",
          "class": "Database",
          "signature": "(self, filters: Optional[Dict[str, Any]], page: int, limit: int)",
          "return_type": "tuple",
          "decorators": [],
          "docstring": "List library files with filters and pagination.\n\nReturns:\n    Tuple of (files_list, pagination_info)",
          "line_start": 1170,
          "line_end": 1288,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "create_library_file_source",
          "full_name": "Database.create_library_file_source",
          "class": "Database",
          "signature": "(self, source_data: Dict[str, Any])",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Create library file source record.",
          "line_start": 1290,
          "line_end": 1313,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_library_file_sources",
          "full_name": "Database.get_library_file_sources",
          "class": "Database",
          "signature": "(self, checksum: str)",
          "return_type": "List[Dict[str, Any]]",
          "decorators": [],
          "docstring": "Get all sources for a library file.",
          "line_start": 1315,
          "line_end": 1321,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "delete_library_file_sources",
          "full_name": "Database.delete_library_file_sources",
          "class": "Database",
          "signature": "(self, checksum: str)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Delete all sources for a library file.",
          "line_start": 1323,
          "line_end": 1328,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_library_stats",
          "full_name": "Database.get_library_stats",
          "class": "Database",
          "signature": "(self)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Get library statistics.",
          "line_start": 1330,
          "line_end": 1337,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "update_file_enhanced_metadata",
          "full_name": "Database.update_file_enhanced_metadata",
          "class": "Database",
          "signature": "(self, file_id: str, enhanced_metadata: Dict[str, Any], last_analyzed: datetime)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Update enhanced metadata for a file (compatibility method).",
          "line_start": 1339,
          "line_end": 1399,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_run_migrations",
          "full_name": "Database._run_migrations",
          "class": "Database",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Run database migrations to update schema.",
          "line_start": 1401,
          "line_end": 1497,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "asyncio",
          "alias": null,
          "line": 5
        },
        {
          "type": "import",
          "module": "aiosqlite",
          "alias": null,
          "line": 6
        },
        {
          "type": "import",
          "module": "json",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "pathlib",
          "name": "Path",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Optional",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "List",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Dict",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Any",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 10
        },
        {
          "type": "import",
          "module": "structlog",
          "alias": null,
          "line": 11
        },
        {
          "type": "from_import",
          "module": "contextlib",
          "name": "asynccontextmanager",
          "alias": null,
          "line": 12
        },
        {
          "type": "import",
          "module": "time",
          "alias": null,
          "line": 13
        },
        {
          "type": "import",
          "module": "sqlite3",
          "alias": null,
          "line": 14
        },
        {
          "type": "import",
          "module": "json",
          "alias": null,
          "line": 691
        },
        {
          "type": "from_import",
          "module": "pathlib",
          "name": "Path",
          "alias": null,
          "line": 1459
        }
      ],
      "function_calls": [
        {
          "caller": "Database.__init__",
          "callee": "Path",
          "line": 25,
          "type": "direct"
        },
        {
          "caller": "Database.__init__",
          "callee": "Path",
          "line": 27,
          "type": "direct"
        },
        {
          "caller": "Database.__init__",
          "callee": "mkdir",
          "line": 28,
          "type": "attribute"
        },
        {
          "caller": "Database.initialize",
          "callee": "info",
          "line": 33,
          "type": "attribute"
        },
        {
          "caller": "Database.initialize",
          "callee": "str",
          "line": 33,
          "type": "direct"
        },
        {
          "caller": "Database.initialize",
          "callee": "connect",
          "line": 35,
          "type": "attribute"
        },
        {
          "caller": "Database.initialize",
          "callee": "str",
          "line": 35,
          "type": "direct"
        },
        {
          "caller": "Database.initialize",
          "callee": "_create_tables",
          "line": 39,
          "type": "attribute"
        },
        {
          "caller": "Database.initialize",
          "callee": "_run_migrations",
          "line": 42,
          "type": "attribute"
        },
        {
          "caller": "Database.initialize",
          "callee": "info",
          "line": 44,
          "type": "attribute"
        },
        {
          "caller": "Database._create_tables",
          "callee": "cursor",
          "line": 48,
          "type": "attribute"
        },
        {
          "caller": "Database._create_tables",
          "callee": "execute",
          "line": 50,
          "type": "attribute"
        },
        {
          "caller": "Database._create_tables",
          "callee": "execute",
          "line": 74,
          "type": "attribute"
        },
        {
          "caller": "Database._create_tables",
          "callee": "execute",
          "line": 97,
          "type": "attribute"
        },
        {
          "caller": "Database._create_tables",
          "callee": "execute",
          "line": 100,
          "type": "attribute"
        },
        {
          "caller": "Database._create_tables",
          "callee": "execute",
          "line": 103,
          "type": "attribute"
        },
        {
          "caller": "Database._create_tables",
          "callee": "execute",
          "line": 108,
          "type": "attribute"
        },
        {
          "caller": "Database._create_tables",
          "callee": "execute",
          "line": 132,
          "type": "attribute"
        },
        {
          "caller": "Database._create_tables",
          "callee": "execute",
          "line": 152,
          "type": "attribute"
        },
        {
          "caller": "Database._create_tables",
          "callee": "execute",
          "line": 162,
          "type": "attribute"
        },
        {
          "caller": "Database._create_tables",
          "callee": "execute",
          "line": 163,
          "type": "attribute"
        },
        {
          "caller": "Database._create_tables",
          "callee": "execute",
          "line": 164,
          "type": "attribute"
        },
        {
          "caller": "Database._create_tables",
          "callee": "execute",
          "line": 165,
          "type": "attribute"
        },
        {
          "caller": "Database._create_tables",
          "callee": "execute",
          "line": 166,
          "type": "attribute"
        },
        {
          "caller": "Database._create_tables",
          "callee": "execute",
          "line": 169,
          "type": "attribute"
        },
        {
          "caller": "Database._create_tables",
          "callee": "execute",
          "line": 186,
          "type": "attribute"
        },
        {
          "caller": "Database._create_tables",
          "callee": "execute",
          "line": 187,
          "type": "attribute"
        },
        {
          "caller": "Database._create_tables",
          "callee": "execute",
          "line": 188,
          "type": "attribute"
        },
        {
          "caller": "Database._create_tables",
          "callee": "execute",
          "line": 189,
          "type": "attribute"
        },
        {
          "caller": "Database._create_tables",
          "callee": "commit",
          "line": 191,
          "type": "attribute"
        },
        {
          "caller": "Database._create_tables",
          "callee": "info",
          "line": 192,
          "type": "attribute"
        },
        {
          "caller": "Database._execute_write",
          "callee": "RuntimeError",
          "line": 210,
          "type": "direct"
        },
        {
          "caller": "Database._execute_write",
          "callee": "perf_counter",
          "line": 214,
          "type": "attribute"
        },
        {
          "caller": "Database._execute_write",
          "callee": "execute",
          "line": 216,
          "type": "attribute"
        },
        {
          "caller": "Database._execute_write",
          "callee": "commit",
          "line": 218,
          "type": "attribute"
        },
        {
          "caller": "Database._execute_write",
          "callee": "perf_counter",
          "line": 219,
          "type": "attribute"
        },
        {
          "caller": "Database._execute_write",
          "callee": "debug",
          "line": 220,
          "type": "attribute"
        },
        {
          "caller": "Database._execute_write",
          "callee": "split",
          "line": 220,
          "type": "attribute"
        },
        {
          "caller": "Database._execute_write",
          "callee": "round",
          "line": 220,
          "type": "direct"
        },
        {
          "caller": "Database._execute_write",
          "callee": "warning",
          "line": 224,
          "type": "attribute"
        },
        {
          "caller": "Database._execute_write",
          "callee": "str",
          "line": 224,
          "type": "direct"
        },
        {
          "caller": "Database._execute_write",
          "callee": "sleep",
          "line": 225,
          "type": "attribute"
        },
        {
          "caller": "Database._execute_write",
          "callee": "error",
          "line": 229,
          "type": "attribute"
        },
        {
          "caller": "Database._execute_write",
          "callee": "str",
          "line": 229,
          "type": "direct"
        },
        {
          "caller": "Database._execute_write",
          "callee": "split",
          "line": 229,
          "type": "attribute"
        },
        {
          "caller": "Database._execute_write",
          "callee": "error",
          "line": 232,
          "type": "attribute"
        },
        {
          "caller": "Database._execute_write",
          "callee": "str",
          "line": 232,
          "type": "direct"
        },
        {
          "caller": "Database._fetch_one",
          "callee": "RuntimeError",
          "line": 237,
          "type": "direct"
        },
        {
          "caller": "Database._fetch_one",
          "callee": "perf_counter",
          "line": 238,
          "type": "attribute"
        },
        {
          "caller": "Database._fetch_one",
          "callee": "execute",
          "line": 240,
          "type": "attribute"
        },
        {
          "caller": "Database._fetch_one",
          "callee": "fetchone",
          "line": 241,
          "type": "attribute"
        },
        {
          "caller": "Database._fetch_one",
          "callee": "perf_counter",
          "line": 242,
          "type": "attribute"
        },
        {
          "caller": "Database._fetch_one",
          "callee": "debug",
          "line": 243,
          "type": "attribute"
        },
        {
          "caller": "Database._fetch_one",
          "callee": "split",
          "line": 243,
          "type": "attribute"
        },
        {
          "caller": "Database._fetch_one",
          "callee": "bool",
          "line": 243,
          "type": "direct"
        },
        {
          "caller": "Database._fetch_one",
          "callee": "round",
          "line": 243,
          "type": "direct"
        },
        {
          "caller": "Database._fetch_one",
          "callee": "error",
          "line": 246,
          "type": "attribute"
        },
        {
          "caller": "Database._fetch_one",
          "callee": "str",
          "line": 246,
          "type": "direct"
        },
        {
          "caller": "Database._fetch_one",
          "callee": "split",
          "line": 246,
          "type": "attribute"
        },
        {
          "caller": "Database._fetch_all",
          "callee": "RuntimeError",
          "line": 251,
          "type": "direct"
        },
        {
          "caller": "Database._fetch_all",
          "callee": "perf_counter",
          "line": 252,
          "type": "attribute"
        },
        {
          "caller": "Database._fetch_all",
          "callee": "execute",
          "line": 254,
          "type": "attribute"
        },
        {
          "caller": "Database._fetch_all",
          "callee": "fetchall",
          "line": 255,
          "type": "attribute"
        },
        {
          "caller": "Database._fetch_all",
          "callee": "perf_counter",
          "line": 256,
          "type": "attribute"
        },
        {
          "caller": "Database._fetch_all",
          "callee": "debug",
          "line": 257,
          "type": "attribute"
        },
        {
          "caller": "Database._fetch_all",
          "callee": "split",
          "line": 257,
          "type": "attribute"
        },
        {
          "caller": "Database._fetch_all",
          "callee": "len",
          "line": 257,
          "type": "direct"
        },
        {
          "caller": "Database._fetch_all",
          "callee": "round",
          "line": 257,
          "type": "direct"
        },
        {
          "caller": "Database._fetch_all",
          "callee": "error",
          "line": 260,
          "type": "attribute"
        },
        {
          "caller": "Database._fetch_all",
          "callee": "str",
          "line": 260,
          "type": "direct"
        },
        {
          "caller": "Database._fetch_all",
          "callee": "split",
          "line": 260,
          "type": "attribute"
        },
        {
          "caller": "Database.close",
          "callee": "close",
          "line": 266,
          "type": "attribute"
        },
        {
          "caller": "Database.close",
          "callee": "info",
          "line": 267,
          "type": "attribute"
        },
        {
          "caller": "Database.get_connection",
          "callee": "RuntimeError",
          "line": 272,
          "type": "direct"
        },
        {
          "caller": "Database.connection",
          "callee": "RuntimeError",
          "line": 279,
          "type": "direct"
        },
        {
          "caller": "Database.health_check",
          "callee": "execute",
          "line": 288,
          "type": "attribute"
        },
        {
          "caller": "Database.health_check",
          "callee": "fetchone",
          "line": 289,
          "type": "attribute"
        },
        {
          "caller": "Database.health_check",
          "callee": "error",
          "line": 292,
          "type": "attribute"
        },
        {
          "caller": "Database.health_check",
          "callee": "str",
          "line": 292,
          "type": "direct"
        },
        {
          "caller": "Database.transaction",
          "callee": "RuntimeError",
          "line": 299,
          "type": "direct"
        },
        {
          "caller": "Database.create_printer",
          "callee": "_execute_write",
          "line": 307,
          "type": "attribute"
        },
        {
          "caller": "Database.create_printer",
          "callee": "get",
          "line": 314,
          "type": "attribute"
        },
        {
          "caller": "Database.create_printer",
          "callee": "get",
          "line": 315,
          "type": "attribute"
        },
        {
          "caller": "Database.create_printer",
          "callee": "get",
          "line": 316,
          "type": "attribute"
        },
        {
          "caller": "Database.create_printer",
          "callee": "get",
          "line": 317,
          "type": "attribute"
        },
        {
          "caller": "Database.create_printer",
          "callee": "get",
          "line": 318,
          "type": "attribute"
        },
        {
          "caller": "Database.create_printer",
          "callee": "error",
          "line": 322,
          "type": "attribute"
        },
        {
          "caller": "Database.create_printer",
          "callee": "str",
          "line": 322,
          "type": "direct"
        },
        {
          "caller": "Database.get_printer",
          "callee": "_fetch_one",
          "line": 328,
          "type": "attribute"
        },
        {
          "caller": "Database.get_printer",
          "callee": "dict",
          "line": 329,
          "type": "direct"
        },
        {
          "caller": "Database.get_printer",
          "callee": "error",
          "line": 331,
          "type": "attribute"
        },
        {
          "caller": "Database.get_printer",
          "callee": "str",
          "line": 331,
          "type": "direct"
        },
        {
          "caller": "Database.list_printers",
          "callee": "_fetch_all",
          "line": 341,
          "type": "attribute"
        },
        {
          "caller": "Database.list_printers",
          "callee": "dict",
          "line": 342,
          "type": "direct"
        },
        {
          "caller": "Database.list_printers",
          "callee": "error",
          "line": 344,
          "type": "attribute"
        },
        {
          "caller": "Database.list_printers",
          "callee": "str",
          "line": 344,
          "type": "direct"
        },
        {
          "caller": "Database.update_printer_status",
          "callee": "now",
          "line": 351,
          "type": "attribute"
        },
        {
          "caller": "Database.update_printer_status",
          "callee": "_execute_write",
          "line": 352,
          "type": "attribute"
        },
        {
          "caller": "Database.update_printer_status",
          "callee": "isoformat",
          "line": 354,
          "type": "attribute"
        },
        {
          "caller": "Database.update_printer_status",
          "callee": "error",
          "line": 357,
          "type": "attribute"
        },
        {
          "caller": "Database.update_printer_status",
          "callee": "str",
          "line": 357,
          "type": "direct"
        },
        {
          "caller": "Database.create_job",
          "callee": "_execute_write",
          "line": 364,
          "type": "attribute"
        },
        {
          "caller": "Database.create_job",
          "callee": "get",
          "line": 373,
          "type": "attribute"
        },
        {
          "caller": "Database.create_job",
          "callee": "get",
          "line": 374,
          "type": "attribute"
        },
        {
          "caller": "Database.create_job",
          "callee": "get",
          "line": 375,
          "type": "attribute"
        },
        {
          "caller": "Database.create_job",
          "callee": "get",
          "line": 376,
          "type": "attribute"
        },
        {
          "caller": "Database.create_job",
          "callee": "get",
          "line": 377,
          "type": "attribute"
        },
        {
          "caller": "Database.create_job",
          "callee": "error",
          "line": 381,
          "type": "attribute"
        },
        {
          "caller": "Database.create_job",
          "callee": "str",
          "line": 381,
          "type": "direct"
        },
        {
          "caller": "Database.get_job",
          "callee": "execute",
          "line": 387,
          "type": "attribute"
        },
        {
          "caller": "Database.get_job",
          "callee": "fetchone",
          "line": 390,
          "type": "attribute"
        },
        {
          "caller": "Database.get_job",
          "callee": "dict",
          "line": 391,
          "type": "direct"
        },
        {
          "caller": "Database.get_job",
          "callee": "error",
          "line": 393,
          "type": "attribute"
        },
        {
          "caller": "Database.get_job",
          "callee": "str",
          "line": 393,
          "type": "direct"
        },
        {
          "caller": "Database.list_jobs",
          "callee": "append",
          "line": 406,
          "type": "attribute"
        },
        {
          "caller": "Database.list_jobs",
          "callee": "append",
          "line": 407,
          "type": "attribute"
        },
        {
          "caller": "Database.list_jobs",
          "callee": "append",
          "line": 409,
          "type": "attribute"
        },
        {
          "caller": "Database.list_jobs",
          "callee": "append",
          "line": 410,
          "type": "attribute"
        },
        {
          "caller": "Database.list_jobs",
          "callee": "append",
          "line": 412,
          "type": "attribute"
        },
        {
          "caller": "Database.list_jobs",
          "callee": "append",
          "line": 413,
          "type": "attribute"
        },
        {
          "caller": "Database.list_jobs",
          "callee": "int",
          "line": 413,
          "type": "direct"
        },
        {
          "caller": "Database.list_jobs",
          "callee": "join",
          "line": 416,
          "type": "attribute"
        },
        {
          "caller": "Database.list_jobs",
          "callee": "append",
          "line": 423,
          "type": "attribute"
        },
        {
          "caller": "Database.list_jobs",
          "callee": "append",
          "line": 426,
          "type": "attribute"
        },
        {
          "caller": "Database.list_jobs",
          "callee": "execute",
          "line": 428,
          "type": "attribute"
        },
        {
          "caller": "Database.list_jobs",
          "callee": "fetchall",
          "line": 429,
          "type": "attribute"
        },
        {
          "caller": "Database.list_jobs",
          "callee": "dict",
          "line": 430,
          "type": "direct"
        },
        {
          "caller": "Database.list_jobs",
          "callee": "error",
          "line": 432,
          "type": "attribute"
        },
        {
          "caller": "Database.list_jobs",
          "callee": "str",
          "line": 432,
          "type": "direct"
        },
        {
          "caller": "Database.get_jobs_by_date_range",
          "callee": "append",
          "line": 444,
          "type": "attribute"
        },
        {
          "caller": "Database.get_jobs_by_date_range",
          "callee": "int",
          "line": 444,
          "type": "direct"
        },
        {
          "caller": "Database.get_jobs_by_date_range",
          "callee": "execute",
          "line": 448,
          "type": "attribute"
        },
        {
          "caller": "Database.get_jobs_by_date_range",
          "callee": "fetchall",
          "line": 449,
          "type": "attribute"
        },
        {
          "caller": "Database.get_jobs_by_date_range",
          "callee": "dict",
          "line": 450,
          "type": "direct"
        },
        {
          "caller": "Database.get_jobs_by_date_range",
          "callee": "error",
          "line": 452,
          "type": "attribute"
        },
        {
          "caller": "Database.get_jobs_by_date_range",
          "callee": "str",
          "line": 452,
          "type": "direct"
        },
        {
          "caller": "Database.get_job_statistics",
          "callee": "execute",
          "line": 461,
          "type": "attribute"
        },
        {
          "caller": "Database.get_job_statistics",
          "callee": "fetchall",
          "line": 466,
          "type": "attribute"
        },
        {
          "caller": "Database.get_job_statistics",
          "callee": "execute",
          "line": 471,
          "type": "attribute"
        },
        {
          "caller": "Database.get_job_statistics",
          "callee": "fetchall",
          "line": 476,
          "type": "attribute"
        },
        {
          "caller": "Database.get_job_statistics",
          "callee": "execute",
          "line": 482,
          "type": "attribute"
        },
        {
          "caller": "Database.get_job_statistics",
          "callee": "fetchone",
          "line": 495,
          "type": "attribute"
        },
        {
          "caller": "Database.get_job_statistics",
          "callee": "update",
          "line": 497,
          "type": "attribute"
        },
        {
          "caller": "Database.get_job_statistics",
          "callee": "execute",
          "line": 509,
          "type": "attribute"
        },
        {
          "caller": "Database.get_job_statistics",
          "callee": "fetchone",
          "line": 510,
          "type": "attribute"
        },
        {
          "caller": "Database.get_job_statistics",
          "callee": "error",
          "line": 516,
          "type": "attribute"
        },
        {
          "caller": "Database.get_job_statistics",
          "callee": "str",
          "line": 516,
          "type": "direct"
        },
        {
          "caller": "Database.update_job",
          "callee": "items",
          "line": 526,
          "type": "attribute"
        },
        {
          "caller": "Database.update_job",
          "callee": "append",
          "line": 528,
          "type": "attribute"
        },
        {
          "caller": "Database.update_job",
          "callee": "append",
          "line": 529,
          "type": "attribute"
        },
        {
          "caller": "Database.update_job",
          "callee": "append",
          "line": 534,
          "type": "attribute"
        },
        {
          "caller": "Database.update_job",
          "callee": "append",
          "line": 535,
          "type": "attribute"
        },
        {
          "caller": "Database.update_job",
          "callee": "isoformat",
          "line": 535,
          "type": "attribute"
        },
        {
          "caller": "Database.update_job",
          "callee": "now",
          "line": 535,
          "type": "attribute"
        },
        {
          "caller": "Database.update_job",
          "callee": "append",
          "line": 536,
          "type": "attribute"
        },
        {
          "caller": "Database.update_job",
          "callee": "join",
          "line": 538,
          "type": "attribute"
        },
        {
          "caller": "Database.update_job",
          "callee": "_execute_write",
          "line": 540,
          "type": "attribute"
        },
        {
          "caller": "Database.update_job",
          "callee": "tuple",
          "line": 540,
          "type": "direct"
        },
        {
          "caller": "Database.update_job",
          "callee": "error",
          "line": 542,
          "type": "attribute"
        },
        {
          "caller": "Database.update_job",
          "callee": "str",
          "line": 542,
          "type": "direct"
        },
        {
          "caller": "Database.delete_job",
          "callee": "_execute_write",
          "line": 548,
          "type": "attribute"
        },
        {
          "caller": "Database.delete_job",
          "callee": "info",
          "line": 550,
          "type": "attribute"
        },
        {
          "caller": "Database.delete_job",
          "callee": "error",
          "line": 553,
          "type": "attribute"
        },
        {
          "caller": "Database.delete_job",
          "callee": "str",
          "line": 553,
          "type": "direct"
        },
        {
          "caller": "Database.create_file",
          "callee": "execute",
          "line": 563,
          "type": "attribute"
        },
        {
          "caller": "Database.create_file",
          "callee": "fetchone",
          "line": 564,
          "type": "attribute"
        },
        {
          "caller": "Database.create_file",
          "callee": "get",
          "line": 569,
          "type": "attribute"
        },
        {
          "caller": "Database.create_file",
          "callee": "get",
          "line": 570,
          "type": "attribute"
        },
        {
          "caller": "Database.create_file",
          "callee": "get",
          "line": 571,
          "type": "attribute"
        },
        {
          "caller": "Database.create_file",
          "callee": "get",
          "line": 572,
          "type": "attribute"
        },
        {
          "caller": "Database.create_file",
          "callee": "get",
          "line": 576,
          "type": "attribute"
        },
        {
          "caller": "Database.create_file",
          "callee": "get",
          "line": 578,
          "type": "attribute"
        },
        {
          "caller": "Database.create_file",
          "callee": "get",
          "line": 582,
          "type": "attribute"
        },
        {
          "caller": "Database.create_file",
          "callee": "update_file",
          "line": 585,
          "type": "attribute"
        },
        {
          "caller": "Database.create_file",
          "callee": "_execute_write",
          "line": 588,
          "type": "attribute"
        },
        {
          "caller": "Database.create_file",
          "callee": "get",
          "line": 595,
          "type": "attribute"
        },
        {
          "caller": "Database.create_file",
          "callee": "get",
          "line": 597,
          "type": "attribute"
        },
        {
          "caller": "Database.create_file",
          "callee": "get",
          "line": 598,
          "type": "attribute"
        },
        {
          "caller": "Database.create_file",
          "callee": "get",
          "line": 599,
          "type": "attribute"
        },
        {
          "caller": "Database.create_file",
          "callee": "get",
          "line": 600,
          "type": "attribute"
        },
        {
          "caller": "Database.create_file",
          "callee": "get",
          "line": 601,
          "type": "attribute"
        },
        {
          "caller": "Database.create_file",
          "callee": "get",
          "line": 602,
          "type": "attribute"
        },
        {
          "caller": "Database.create_file",
          "callee": "get",
          "line": 603,
          "type": "attribute"
        },
        {
          "caller": "Database.create_file",
          "callee": "get",
          "line": 604,
          "type": "attribute"
        },
        {
          "caller": "Database.create_file",
          "callee": "get",
          "line": 605,
          "type": "attribute"
        },
        {
          "caller": "Database.create_file",
          "callee": "get",
          "line": 606,
          "type": "attribute"
        },
        {
          "caller": "Database.create_file",
          "callee": "error",
          "line": 610,
          "type": "attribute"
        },
        {
          "caller": "Database.create_file",
          "callee": "str",
          "line": 610,
          "type": "direct"
        },
        {
          "caller": "Database.list_files",
          "callee": "append",
          "line": 622,
          "type": "attribute"
        },
        {
          "caller": "Database.list_files",
          "callee": "append",
          "line": 623,
          "type": "attribute"
        },
        {
          "caller": "Database.list_files",
          "callee": "append",
          "line": 625,
          "type": "attribute"
        },
        {
          "caller": "Database.list_files",
          "callee": "append",
          "line": 626,
          "type": "attribute"
        },
        {
          "caller": "Database.list_files",
          "callee": "append",
          "line": 628,
          "type": "attribute"
        },
        {
          "caller": "Database.list_files",
          "callee": "append",
          "line": 629,
          "type": "attribute"
        },
        {
          "caller": "Database.list_files",
          "callee": "join",
          "line": 632,
          "type": "attribute"
        },
        {
          "caller": "Database.list_files",
          "callee": "execute",
          "line": 636,
          "type": "attribute"
        },
        {
          "caller": "Database.list_files",
          "callee": "fetchall",
          "line": 637,
          "type": "attribute"
        },
        {
          "caller": "Database.list_files",
          "callee": "dict",
          "line": 640,
          "type": "direct"
        },
        {
          "caller": "Database.list_files",
          "callee": "get",
          "line": 642,
          "type": "attribute"
        },
        {
          "caller": "Database.list_files",
          "callee": "isinstance",
          "line": 642,
          "type": "direct"
        },
        {
          "caller": "Database.list_files",
          "callee": "loads",
          "line": 644,
          "type": "attribute"
        },
        {
          "caller": "Database.list_files",
          "callee": "append",
          "line": 648,
          "type": "attribute"
        },
        {
          "caller": "Database.list_files",
          "callee": "error",
          "line": 651,
          "type": "attribute"
        },
        {
          "caller": "Database.list_files",
          "callee": "str",
          "line": 651,
          "type": "direct"
        },
        {
          "caller": "Database.update_file",
          "callee": "items",
          "line": 661,
          "type": "attribute"
        },
        {
          "caller": "Database.update_file",
          "callee": "isinstance",
          "line": 664,
          "type": "direct"
        },
        {
          "caller": "Database.update_file",
          "callee": "dumps",
          "line": 665,
          "type": "attribute"
        },
        {
          "caller": "Database.update_file",
          "callee": "append",
          "line": 667,
          "type": "attribute"
        },
        {
          "caller": "Database.update_file",
          "callee": "append",
          "line": 668,
          "type": "attribute"
        },
        {
          "caller": "Database.update_file",
          "callee": "append",
          "line": 673,
          "type": "attribute"
        },
        {
          "caller": "Database.update_file",
          "callee": "join",
          "line": 674,
          "type": "attribute"
        },
        {
          "caller": "Database.update_file",
          "callee": "_execute_write",
          "line": 676,
          "type": "attribute"
        },
        {
          "caller": "Database.update_file",
          "callee": "tuple",
          "line": 676,
          "type": "direct"
        },
        {
          "caller": "Database.update_file",
          "callee": "error",
          "line": 678,
          "type": "attribute"
        },
        {
          "caller": "Database.update_file",
          "callee": "str",
          "line": 678,
          "type": "direct"
        },
        {
          "caller": "Database.update_file_enhanced_metadata",
          "callee": "get",
          "line": 694,
          "type": "attribute"
        },
        {
          "caller": "Database.update_file_enhanced_metadata",
          "callee": "get",
          "line": 695,
          "type": "attribute"
        },
        {
          "caller": "Database.update_file_enhanced_metadata",
          "callee": "get",
          "line": 696,
          "type": "attribute"
        },
        {
          "caller": "Database.update_file_enhanced_metadata",
          "callee": "get",
          "line": 697,
          "type": "attribute"
        },
        {
          "caller": "Database.update_file_enhanced_metadata",
          "callee": "get",
          "line": 698,
          "type": "attribute"
        },
        {
          "caller": "Database.update_file_enhanced_metadata",
          "callee": "get",
          "line": 699,
          "type": "attribute"
        },
        {
          "caller": "Database.update_file_enhanced_metadata",
          "callee": "get",
          "line": 704,
          "type": "attribute"
        },
        {
          "caller": "Database.update_file_enhanced_metadata",
          "callee": "get",
          "line": 705,
          "type": "attribute"
        },
        {
          "caller": "Database.update_file_enhanced_metadata",
          "callee": "get",
          "line": 706,
          "type": "attribute"
        },
        {
          "caller": "Database.update_file_enhanced_metadata",
          "callee": "get",
          "line": 707,
          "type": "attribute"
        },
        {
          "caller": "Database.update_file_enhanced_metadata",
          "callee": "get",
          "line": 708,
          "type": "attribute"
        },
        {
          "caller": "Database.update_file_enhanced_metadata",
          "callee": "get",
          "line": 709,
          "type": "attribute"
        },
        {
          "caller": "Database.update_file_enhanced_metadata",
          "callee": "get",
          "line": 712,
          "type": "attribute"
        },
        {
          "caller": "Database.update_file_enhanced_metadata",
          "callee": "get",
          "line": 713,
          "type": "attribute"
        },
        {
          "caller": "Database.update_file_enhanced_metadata",
          "callee": "get",
          "line": 714,
          "type": "attribute"
        },
        {
          "caller": "Database.update_file_enhanced_metadata",
          "callee": "get",
          "line": 715,
          "type": "attribute"
        },
        {
          "caller": "Database.update_file_enhanced_metadata",
          "callee": "get",
          "line": 716,
          "type": "attribute"
        },
        {
          "caller": "Database.update_file_enhanced_metadata",
          "callee": "get",
          "line": 719,
          "type": "attribute"
        },
        {
          "caller": "Database.update_file_enhanced_metadata",
          "callee": "get",
          "line": 720,
          "type": "attribute"
        },
        {
          "caller": "Database.update_file_enhanced_metadata",
          "callee": "get",
          "line": 721,
          "type": "attribute"
        },
        {
          "caller": "Database.update_file_enhanced_metadata",
          "callee": "dumps",
          "line": 721,
          "type": "attribute"
        },
        {
          "caller": "Database.update_file_enhanced_metadata",
          "callee": "get",
          "line": 721,
          "type": "attribute"
        },
        {
          "caller": "Database.update_file_enhanced_metadata",
          "callee": "get",
          "line": 724,
          "type": "attribute"
        },
        {
          "caller": "Database.update_file_enhanced_metadata",
          "callee": "get",
          "line": 725,
          "type": "attribute"
        },
        {
          "caller": "Database.update_file_enhanced_metadata",
          "callee": "get",
          "line": 726,
          "type": "attribute"
        },
        {
          "caller": "Database.update_file_enhanced_metadata",
          "callee": "get",
          "line": 729,
          "type": "attribute"
        },
        {
          "caller": "Database.update_file_enhanced_metadata",
          "callee": "get",
          "line": 730,
          "type": "attribute"
        },
        {
          "caller": "Database.update_file_enhanced_metadata",
          "callee": "get",
          "line": 731,
          "type": "attribute"
        },
        {
          "caller": "Database.update_file_enhanced_metadata",
          "callee": "get",
          "line": 734,
          "type": "attribute"
        },
        {
          "caller": "Database.update_file_enhanced_metadata",
          "callee": "dumps",
          "line": 734,
          "type": "attribute"
        },
        {
          "caller": "Database.update_file_enhanced_metadata",
          "callee": "get",
          "line": 734,
          "type": "attribute"
        },
        {
          "caller": "Database.update_file_enhanced_metadata",
          "callee": "get",
          "line": 735,
          "type": "attribute"
        },
        {
          "caller": "Database.update_file_enhanced_metadata",
          "callee": "get",
          "line": 736,
          "type": "attribute"
        },
        {
          "caller": "Database.update_file_enhanced_metadata",
          "callee": "get",
          "line": 737,
          "type": "attribute"
        },
        {
          "caller": "Database.update_file_enhanced_metadata",
          "callee": "isinstance",
          "line": 740,
          "type": "direct"
        },
        {
          "caller": "Database.update_file_enhanced_metadata",
          "callee": "isoformat",
          "line": 740,
          "type": "attribute"
        },
        {
          "caller": "Database.update_file_enhanced_metadata",
          "callee": "items",
          "line": 744,
          "type": "attribute"
        },
        {
          "caller": "Database.update_file_enhanced_metadata",
          "callee": "update_file",
          "line": 747,
          "type": "attribute"
        },
        {
          "caller": "Database.update_file_enhanced_metadata",
          "callee": "error",
          "line": 750,
          "type": "attribute"
        },
        {
          "caller": "Database.update_file_enhanced_metadata",
          "callee": "str",
          "line": 750,
          "type": "direct"
        },
        {
          "caller": "Database.create_local_file",
          "callee": "create_file",
          "line": 761,
          "type": "attribute"
        },
        {
          "caller": "Database.list_local_files",
          "callee": "append",
          "line": 771,
          "type": "attribute"
        },
        {
          "caller": "Database.list_local_files",
          "callee": "execute",
          "line": 775,
          "type": "attribute"
        },
        {
          "caller": "Database.list_local_files",
          "callee": "fetchall",
          "line": 776,
          "type": "attribute"
        },
        {
          "caller": "Database.list_local_files",
          "callee": "dict",
          "line": 777,
          "type": "direct"
        },
        {
          "caller": "Database.list_local_files",
          "callee": "error",
          "line": 779,
          "type": "attribute"
        },
        {
          "caller": "Database.list_local_files",
          "callee": "str",
          "line": 779,
          "type": "direct"
        },
        {
          "caller": "Database.delete_local_file",
          "callee": "_execute_write",
          "line": 785,
          "type": "attribute"
        },
        {
          "caller": "Database.delete_local_file",
          "callee": "error",
          "line": 787,
          "type": "attribute"
        },
        {
          "caller": "Database.delete_local_file",
          "callee": "str",
          "line": 787,
          "type": "direct"
        },
        {
          "caller": "Database.get_file_statistics",
          "callee": "execute",
          "line": 796,
          "type": "attribute"
        },
        {
          "caller": "Database.get_file_statistics",
          "callee": "fetchall",
          "line": 797,
          "type": "attribute"
        },
        {
          "caller": "Database.get_file_statistics",
          "callee": "execute",
          "line": 803,
          "type": "attribute"
        },
        {
          "caller": "Database.get_file_statistics",
          "callee": "fetchall",
          "line": 804,
          "type": "attribute"
        },
        {
          "caller": "Database.get_file_statistics",
          "callee": "execute",
          "line": 810,
          "type": "attribute"
        },
        {
          "caller": "Database.get_file_statistics",
          "callee": "fetchall",
          "line": 811,
          "type": "attribute"
        },
        {
          "caller": "Database.get_file_statistics",
          "callee": "error",
          "line": 819,
          "type": "attribute"
        },
        {
          "caller": "Database.get_file_statistics",
          "callee": "str",
          "line": 819,
          "type": "direct"
        },
        {
          "caller": "Database.create_idea",
          "callee": "_execute_write",
          "line": 826,
          "type": "attribute"
        },
        {
          "caller": "Database.create_idea",
          "callee": "get",
          "line": 834,
          "type": "attribute"
        },
        {
          "caller": "Database.create_idea",
          "callee": "get",
          "line": 835,
          "type": "attribute"
        },
        {
          "caller": "Database.create_idea",
          "callee": "get",
          "line": 836,
          "type": "attribute"
        },
        {
          "caller": "Database.create_idea",
          "callee": "get",
          "line": 837,
          "type": "attribute"
        },
        {
          "caller": "Database.create_idea",
          "callee": "get",
          "line": 838,
          "type": "attribute"
        },
        {
          "caller": "Database.create_idea",
          "callee": "get",
          "line": 839,
          "type": "attribute"
        },
        {
          "caller": "Database.create_idea",
          "callee": "get",
          "line": 840,
          "type": "attribute"
        },
        {
          "caller": "Database.create_idea",
          "callee": "get",
          "line": 841,
          "type": "attribute"
        },
        {
          "caller": "Database.create_idea",
          "callee": "get",
          "line": 842,
          "type": "attribute"
        },
        {
          "caller": "Database.create_idea",
          "callee": "get",
          "line": 843,
          "type": "attribute"
        },
        {
          "caller": "Database.create_idea",
          "callee": "get",
          "line": 844,
          "type": "attribute"
        },
        {
          "caller": "Database.create_idea",
          "callee": "get",
          "line": 845,
          "type": "attribute"
        },
        {
          "caller": "Database.create_idea",
          "callee": "get",
          "line": 846,
          "type": "attribute"
        },
        {
          "caller": "Database.create_idea",
          "callee": "error",
          "line": 850,
          "type": "attribute"
        },
        {
          "caller": "Database.create_idea",
          "callee": "str",
          "line": 850,
          "type": "direct"
        },
        {
          "caller": "Database.get_idea",
          "callee": "_fetch_one",
          "line": 856,
          "type": "attribute"
        },
        {
          "caller": "Database.get_idea",
          "callee": "dict",
          "line": 857,
          "type": "direct"
        },
        {
          "caller": "Database.get_idea",
          "callee": "error",
          "line": 859,
          "type": "attribute"
        },
        {
          "caller": "Database.get_idea",
          "callee": "str",
          "line": 859,
          "type": "direct"
        },
        {
          "caller": "Database.list_ideas",
          "callee": "append",
          "line": 872,
          "type": "attribute"
        },
        {
          "caller": "Database.list_ideas",
          "callee": "append",
          "line": 873,
          "type": "attribute"
        },
        {
          "caller": "Database.list_ideas",
          "callee": "append",
          "line": 875,
          "type": "attribute"
        },
        {
          "caller": "Database.list_ideas",
          "callee": "append",
          "line": 876,
          "type": "attribute"
        },
        {
          "caller": "Database.list_ideas",
          "callee": "int",
          "line": 876,
          "type": "direct"
        },
        {
          "caller": "Database.list_ideas",
          "callee": "append",
          "line": 878,
          "type": "attribute"
        },
        {
          "caller": "Database.list_ideas",
          "callee": "append",
          "line": 879,
          "type": "attribute"
        },
        {
          "caller": "Database.list_ideas",
          "callee": "append",
          "line": 881,
          "type": "attribute"
        },
        {
          "caller": "Database.list_ideas",
          "callee": "append",
          "line": 882,
          "type": "attribute"
        },
        {
          "caller": "Database.list_ideas",
          "callee": "join",
          "line": 885,
          "type": "attribute"
        },
        {
          "caller": "Database.list_ideas",
          "callee": "append",
          "line": 891,
          "type": "attribute"
        },
        {
          "caller": "Database.list_ideas",
          "callee": "append",
          "line": 894,
          "type": "attribute"
        },
        {
          "caller": "Database.list_ideas",
          "callee": "_fetch_all",
          "line": 896,
          "type": "attribute"
        },
        {
          "caller": "Database.list_ideas",
          "callee": "dict",
          "line": 897,
          "type": "direct"
        },
        {
          "caller": "Database.list_ideas",
          "callee": "error",
          "line": 899,
          "type": "attribute"
        },
        {
          "caller": "Database.list_ideas",
          "callee": "str",
          "line": 899,
          "type": "direct"
        },
        {
          "caller": "Database.update_idea",
          "callee": "items",
          "line": 908,
          "type": "attribute"
        },
        {
          "caller": "Database.update_idea",
          "callee": "append",
          "line": 910,
          "type": "attribute"
        },
        {
          "caller": "Database.update_idea",
          "callee": "append",
          "line": 911,
          "type": "attribute"
        },
        {
          "caller": "Database.update_idea",
          "callee": "append",
          "line": 916,
          "type": "attribute"
        },
        {
          "caller": "Database.update_idea",
          "callee": "append",
          "line": 917,
          "type": "attribute"
        },
        {
          "caller": "Database.update_idea",
          "callee": "isoformat",
          "line": 917,
          "type": "attribute"
        },
        {
          "caller": "Database.update_idea",
          "callee": "now",
          "line": 917,
          "type": "attribute"
        },
        {
          "caller": "Database.update_idea",
          "callee": "append",
          "line": 918,
          "type": "attribute"
        },
        {
          "caller": "Database.update_idea",
          "callee": "join",
          "line": 920,
          "type": "attribute"
        },
        {
          "caller": "Database.update_idea",
          "callee": "_execute_write",
          "line": 921,
          "type": "attribute"
        },
        {
          "caller": "Database.update_idea",
          "callee": "tuple",
          "line": 921,
          "type": "direct"
        },
        {
          "caller": "Database.update_idea",
          "callee": "error",
          "line": 923,
          "type": "attribute"
        },
        {
          "caller": "Database.update_idea",
          "callee": "str",
          "line": 923,
          "type": "direct"
        },
        {
          "caller": "Database.delete_idea",
          "callee": "_execute_write",
          "line": 930,
          "type": "attribute"
        },
        {
          "caller": "Database.delete_idea",
          "callee": "_execute_write",
          "line": 932,
          "type": "attribute"
        },
        {
          "caller": "Database.delete_idea",
          "callee": "error",
          "line": 934,
          "type": "attribute"
        },
        {
          "caller": "Database.delete_idea",
          "callee": "str",
          "line": 934,
          "type": "direct"
        },
        {
          "caller": "Database.update_idea_status",
          "callee": "isoformat",
          "line": 941,
          "type": "attribute"
        },
        {
          "caller": "Database.update_idea_status",
          "callee": "now",
          "line": 941,
          "type": "attribute"
        },
        {
          "caller": "Database.update_idea_status",
          "callee": "update_idea",
          "line": 942,
          "type": "attribute"
        },
        {
          "caller": "Database.add_idea_tags",
          "callee": "_execute_write",
          "line": 949,
          "type": "attribute"
        },
        {
          "caller": "Database.add_idea_tags",
          "callee": "error",
          "line": 955,
          "type": "attribute"
        },
        {
          "caller": "Database.add_idea_tags",
          "callee": "str",
          "line": 955,
          "type": "direct"
        },
        {
          "caller": "Database.remove_idea_tags",
          "callee": "_execute_write",
          "line": 962,
          "type": "attribute"
        },
        {
          "caller": "Database.remove_idea_tags",
          "callee": "error",
          "line": 968,
          "type": "attribute"
        },
        {
          "caller": "Database.remove_idea_tags",
          "callee": "str",
          "line": 968,
          "type": "direct"
        },
        {
          "caller": "Database.get_idea_tags",
          "callee": "_fetch_all",
          "line": 974,
          "type": "attribute"
        },
        {
          "caller": "Database.get_idea_tags",
          "callee": "error",
          "line": 980,
          "type": "attribute"
        },
        {
          "caller": "Database.get_idea_tags",
          "callee": "str",
          "line": 980,
          "type": "direct"
        },
        {
          "caller": "Database.get_all_tags",
          "callee": "_fetch_all",
          "line": 986,
          "type": "attribute"
        },
        {
          "caller": "Database.get_all_tags",
          "callee": "dict",
          "line": 990,
          "type": "direct"
        },
        {
          "caller": "Database.get_all_tags",
          "callee": "error",
          "line": 992,
          "type": "attribute"
        },
        {
          "caller": "Database.get_all_tags",
          "callee": "str",
          "line": 992,
          "type": "direct"
        },
        {
          "caller": "Database.upsert_trending",
          "callee": "_execute_write",
          "line": 999,
          "type": "attribute"
        },
        {
          "caller": "Database.upsert_trending",
          "callee": "get",
          "line": 1010,
          "type": "attribute"
        },
        {
          "caller": "Database.upsert_trending",
          "callee": "get",
          "line": 1011,
          "type": "attribute"
        },
        {
          "caller": "Database.upsert_trending",
          "callee": "get",
          "line": 1012,
          "type": "attribute"
        },
        {
          "caller": "Database.upsert_trending",
          "callee": "get",
          "line": 1013,
          "type": "attribute"
        },
        {
          "caller": "Database.upsert_trending",
          "callee": "get",
          "line": 1014,
          "type": "attribute"
        },
        {
          "caller": "Database.upsert_trending",
          "callee": "get",
          "line": 1015,
          "type": "attribute"
        },
        {
          "caller": "Database.upsert_trending",
          "callee": "error",
          "line": 1020,
          "type": "attribute"
        },
        {
          "caller": "Database.upsert_trending",
          "callee": "str",
          "line": 1020,
          "type": "direct"
        },
        {
          "caller": "Database.get_trending",
          "callee": "append",
          "line": 1031,
          "type": "attribute"
        },
        {
          "caller": "Database.get_trending",
          "callee": "append",
          "line": 1034,
          "type": "attribute"
        },
        {
          "caller": "Database.get_trending",
          "callee": "_fetch_all",
          "line": 1038,
          "type": "attribute"
        },
        {
          "caller": "Database.get_trending",
          "callee": "dict",
          "line": 1039,
          "type": "direct"
        },
        {
          "caller": "Database.get_trending",
          "callee": "error",
          "line": 1041,
          "type": "attribute"
        },
        {
          "caller": "Database.get_trending",
          "callee": "str",
          "line": 1041,
          "type": "direct"
        },
        {
          "caller": "Database.clean_expired_trending",
          "callee": "_execute_write",
          "line": 1047,
          "type": "attribute"
        },
        {
          "caller": "Database.clean_expired_trending",
          "callee": "error",
          "line": 1052,
          "type": "attribute"
        },
        {
          "caller": "Database.clean_expired_trending",
          "callee": "str",
          "line": 1052,
          "type": "direct"
        },
        {
          "caller": "Database.get_idea_statistics",
          "callee": "_fetch_all",
          "line": 1061,
          "type": "attribute"
        },
        {
          "caller": "Database.get_idea_statistics",
          "callee": "_fetch_all",
          "line": 1069,
          "type": "attribute"
        },
        {
          "caller": "Database.get_idea_statistics",
          "callee": "_fetch_all",
          "line": 1078,
          "type": "attribute"
        },
        {
          "caller": "Database.get_idea_statistics",
          "callee": "_fetch_one",
          "line": 1086,
          "type": "attribute"
        },
        {
          "caller": "Database.get_idea_statistics",
          "callee": "_fetch_one",
          "line": 1090,
          "type": "attribute"
        },
        {
          "caller": "Database.get_idea_statistics",
          "callee": "round",
          "line": 1091,
          "type": "direct"
        },
        {
          "caller": "Database.get_idea_statistics",
          "callee": "error",
          "line": 1095,
          "type": "attribute"
        },
        {
          "caller": "Database.get_idea_statistics",
          "callee": "str",
          "line": 1095,
          "type": "direct"
        },
        {
          "caller": "Database.create_library_file",
          "callee": "_execute_write",
          "line": 1105,
          "type": "attribute"
        },
        {
          "caller": "Database.create_library_file",
          "callee": "get",
          "line": 1115,
          "type": "attribute"
        },
        {
          "caller": "Database.create_library_file",
          "callee": "get",
          "line": 1120,
          "type": "attribute"
        },
        {
          "caller": "Database.create_library_file",
          "callee": "get",
          "line": 1122,
          "type": "attribute"
        },
        {
          "caller": "Database.create_library_file",
          "callee": "get",
          "line": 1123,
          "type": "attribute"
        },
        {
          "caller": "Database.create_library_file",
          "callee": "get",
          "line": 1124,
          "type": "attribute"
        },
        {
          "caller": "Database.create_library_file",
          "callee": "get",
          "line": 1125,
          "type": "attribute"
        },
        {
          "caller": "Database.create_library_file",
          "callee": "get",
          "line": 1126,
          "type": "attribute"
        },
        {
          "caller": "Database.create_library_file",
          "callee": "error",
          "line": 1130,
          "type": "attribute"
        },
        {
          "caller": "Database.create_library_file",
          "callee": "str",
          "line": 1130,
          "type": "direct"
        },
        {
          "caller": "Database.get_library_file",
          "callee": "_fetch_one",
          "line": 1135,
          "type": "attribute"
        },
        {
          "caller": "Database.get_library_file",
          "callee": "dict",
          "line": 1139,
          "type": "direct"
        },
        {
          "caller": "Database.get_library_file_by_checksum",
          "callee": "_fetch_one",
          "line": 1143,
          "type": "attribute"
        },
        {
          "caller": "Database.get_library_file_by_checksum",
          "callee": "dict",
          "line": 1147,
          "type": "direct"
        },
        {
          "caller": "Database.update_library_file",
          "callee": "keys",
          "line": 1155,
          "type": "attribute"
        },
        {
          "caller": "Database.update_library_file",
          "callee": "join",
          "line": 1156,
          "type": "attribute"
        },
        {
          "caller": "Database.update_library_file",
          "callee": "list",
          "line": 1159,
          "type": "direct"
        },
        {
          "caller": "Database.update_library_file",
          "callee": "values",
          "line": 1159,
          "type": "attribute"
        },
        {
          "caller": "Database.update_library_file",
          "callee": "_execute_write",
          "line": 1161,
          "type": "attribute"
        },
        {
          "caller": "Database.update_library_file",
          "callee": "tuple",
          "line": 1161,
          "type": "direct"
        },
        {
          "caller": "Database.delete_library_file",
          "callee": "_execute_write",
          "line": 1165,
          "type": "attribute"
        },
        {
          "caller": "Database.list_library_files",
          "callee": "get",
          "line": 1182,
          "type": "attribute"
        },
        {
          "caller": "Database.list_library_files",
          "callee": "get",
          "line": 1182,
          "type": "attribute"
        },
        {
          "caller": "Database.list_library_files",
          "callee": "get",
          "line": 1188,
          "type": "attribute"
        },
        {
          "caller": "Database.list_library_files",
          "callee": "append",
          "line": 1189,
          "type": "attribute"
        },
        {
          "caller": "Database.list_library_files",
          "callee": "append",
          "line": 1190,
          "type": "attribute"
        },
        {
          "caller": "Database.list_library_files",
          "callee": "get",
          "line": 1192,
          "type": "attribute"
        },
        {
          "caller": "Database.list_library_files",
          "callee": "append",
          "line": 1193,
          "type": "attribute"
        },
        {
          "caller": "Database.list_library_files",
          "callee": "append",
          "line": 1194,
          "type": "attribute"
        },
        {
          "caller": "Database.list_library_files",
          "callee": "get",
          "line": 1196,
          "type": "attribute"
        },
        {
          "caller": "Database.list_library_files",
          "callee": "append",
          "line": 1197,
          "type": "attribute"
        },
        {
          "caller": "Database.list_library_files",
          "callee": "append",
          "line": 1198,
          "type": "attribute"
        },
        {
          "caller": "Database.list_library_files",
          "callee": "get",
          "line": 1200,
          "type": "attribute"
        },
        {
          "caller": "Database.list_library_files",
          "callee": "append",
          "line": 1201,
          "type": "attribute"
        },
        {
          "caller": "Database.list_library_files",
          "callee": "append",
          "line": 1202,
          "type": "attribute"
        },
        {
          "caller": "Database.list_library_files",
          "callee": "lower",
          "line": 1202,
          "type": "attribute"
        },
        {
          "caller": "Database.list_library_files",
          "callee": "get",
          "line": 1204,
          "type": "attribute"
        },
        {
          "caller": "Database.list_library_files",
          "callee": "append",
          "line": 1205,
          "type": "attribute"
        },
        {
          "caller": "Database.list_library_files",
          "callee": "append",
          "line": 1206,
          "type": "attribute"
        },
        {
          "caller": "Database.list_library_files",
          "callee": "get",
          "line": 1208,
          "type": "attribute"
        },
        {
          "caller": "Database.list_library_files",
          "callee": "append",
          "line": 1209,
          "type": "attribute"
        },
        {
          "caller": "Database.list_library_files",
          "callee": "get",
          "line": 1212,
          "type": "attribute"
        },
        {
          "caller": "Database.list_library_files",
          "callee": "append",
          "line": 1213,
          "type": "attribute"
        },
        {
          "caller": "Database.list_library_files",
          "callee": "append",
          "line": 1214,
          "type": "attribute"
        },
        {
          "caller": "Database.list_library_files",
          "callee": "get",
          "line": 1216,
          "type": "attribute"
        },
        {
          "caller": "Database.list_library_files",
          "callee": "append",
          "line": 1217,
          "type": "attribute"
        },
        {
          "caller": "Database.list_library_files",
          "callee": "append",
          "line": 1218,
          "type": "attribute"
        },
        {
          "caller": "Database.list_library_files",
          "callee": "get",
          "line": 1221,
          "type": "attribute"
        },
        {
          "caller": "Database.list_library_files",
          "callee": "append",
          "line": 1222,
          "type": "attribute"
        },
        {
          "caller": "Database.list_library_files",
          "callee": "get",
          "line": 1224,
          "type": "attribute"
        },
        {
          "caller": "Database.list_library_files",
          "callee": "append",
          "line": 1225,
          "type": "attribute"
        },
        {
          "caller": "Database.list_library_files",
          "callee": "join",
          "line": 1228,
          "type": "attribute"
        },
        {
          "caller": "Database.list_library_files",
          "callee": "copy",
          "line": 1238,
          "type": "attribute"
        },
        {
          "caller": "Database.list_library_files",
          "callee": "copy",
          "line": 1242,
          "type": "attribute"
        },
        {
          "caller": "Database.list_library_files",
          "callee": "_fetch_one",
          "line": 1244,
          "type": "attribute"
        },
        {
          "caller": "Database.list_library_files",
          "callee": "extend",
          "line": 1272,
          "type": "attribute"
        },
        {
          "caller": "Database.list_library_files",
          "callee": "_fetch_all",
          "line": 1274,
          "type": "attribute"
        },
        {
          "caller": "Database.list_library_files",
          "callee": "dict",
          "line": 1275,
          "type": "direct"
        },
        {
          "caller": "Database.list_library_files",
          "callee": "error",
          "line": 1287,
          "type": "attribute"
        },
        {
          "caller": "Database.list_library_files",
          "callee": "str",
          "line": 1287,
          "type": "direct"
        },
        {
          "caller": "Database.create_library_file_source",
          "callee": "_execute_write",
          "line": 1293,
          "type": "attribute"
        },
        {
          "caller": "Database.create_library_file_source",
          "callee": "get",
          "line": 1301,
          "type": "attribute"
        },
        {
          "caller": "Database.create_library_file_source",
          "callee": "get",
          "line": 1302,
          "type": "attribute"
        },
        {
          "caller": "Database.create_library_file_source",
          "callee": "get",
          "line": 1303,
          "type": "attribute"
        },
        {
          "caller": "Database.create_library_file_source",
          "callee": "get",
          "line": 1304,
          "type": "attribute"
        },
        {
          "caller": "Database.create_library_file_source",
          "callee": "get",
          "line": 1306,
          "type": "attribute"
        },
        {
          "caller": "Database.create_library_file_source",
          "callee": "get",
          "line": 1307,
          "type": "attribute"
        },
        {
          "caller": "Database.create_library_file_source",
          "callee": "get",
          "line": 1308,
          "type": "attribute"
        },
        {
          "caller": "Database.create_library_file_source",
          "callee": "error",
          "line": 1312,
          "type": "attribute"
        },
        {
          "caller": "Database.create_library_file_source",
          "callee": "str",
          "line": 1312,
          "type": "direct"
        },
        {
          "caller": "Database.get_library_file_sources",
          "callee": "_fetch_all",
          "line": 1317,
          "type": "attribute"
        },
        {
          "caller": "Database.get_library_file_sources",
          "callee": "dict",
          "line": 1321,
          "type": "direct"
        },
        {
          "caller": "Database.delete_library_file_sources",
          "callee": "_execute_write",
          "line": 1325,
          "type": "attribute"
        },
        {
          "caller": "Database.get_library_stats",
          "callee": "_fetch_one",
          "line": 1333,
          "type": "attribute"
        },
        {
          "caller": "Database.get_library_stats",
          "callee": "dict",
          "line": 1334,
          "type": "direct"
        },
        {
          "caller": "Database.get_library_stats",
          "callee": "error",
          "line": 1336,
          "type": "attribute"
        },
        {
          "caller": "Database.get_library_stats",
          "callee": "str",
          "line": 1336,
          "type": "direct"
        },
        {
          "caller": "Database.update_file_enhanced_metadata",
          "callee": "isinstance",
          "line": 1347,
          "type": "direct"
        },
        {
          "caller": "Database.update_file_enhanced_metadata",
          "callee": "isoformat",
          "line": 1347,
          "type": "attribute"
        },
        {
          "caller": "Database.update_file_enhanced_metadata",
          "callee": "keys",
          "line": 1380,
          "type": "attribute"
        },
        {
          "caller": "Database.update_file_enhanced_metadata",
          "callee": "join",
          "line": 1381,
          "type": "attribute"
        },
        {
          "caller": "Database.update_file_enhanced_metadata",
          "callee": "list",
          "line": 1383,
          "type": "direct"
        },
        {
          "caller": "Database.update_file_enhanced_metadata",
          "callee": "values",
          "line": 1383,
          "type": "attribute"
        },
        {
          "caller": "Database.update_file_enhanced_metadata",
          "callee": "_execute_write",
          "line": 1384,
          "type": "attribute"
        },
        {
          "caller": "Database.update_file_enhanced_metadata",
          "callee": "tuple",
          "line": 1384,
          "type": "direct"
        },
        {
          "caller": "Database.update_file_enhanced_metadata",
          "callee": "debug",
          "line": 1387,
          "type": "attribute"
        },
        {
          "caller": "Database.update_file_enhanced_metadata",
          "callee": "str",
          "line": 1387,
          "type": "direct"
        },
        {
          "caller": "Database.update_file_enhanced_metadata",
          "callee": "get_library_file",
          "line": 1392,
          "type": "attribute"
        },
        {
          "caller": "Database.update_file_enhanced_metadata",
          "callee": "update_library_file",
          "line": 1394,
          "type": "attribute"
        },
        {
          "caller": "Database.update_file_enhanced_metadata",
          "callee": "debug",
          "line": 1397,
          "type": "attribute"
        },
        {
          "caller": "Database.update_file_enhanced_metadata",
          "callee": "str",
          "line": 1397,
          "type": "direct"
        },
        {
          "caller": "Database._run_migrations",
          "callee": "cursor",
          "line": 1404,
          "type": "attribute"
        },
        {
          "caller": "Database._run_migrations",
          "callee": "execute",
          "line": 1406,
          "type": "attribute"
        },
        {
          "caller": "Database._run_migrations",
          "callee": "execute",
          "line": 1416,
          "type": "attribute"
        },
        {
          "caller": "Database._run_migrations",
          "callee": "fetchall",
          "line": 1417,
          "type": "attribute"
        },
        {
          "caller": "Database._run_migrations",
          "callee": "execute",
          "line": 1421,
          "type": "attribute"
        },
        {
          "caller": "Database._run_migrations",
          "callee": "fetchall",
          "line": 1422,
          "type": "attribute"
        },
        {
          "caller": "Database._run_migrations",
          "callee": "info",
          "line": 1427,
          "type": "attribute"
        },
        {
          "caller": "Database._run_migrations",
          "callee": "execute",
          "line": 1428,
          "type": "attribute"
        },
        {
          "caller": "Database._run_migrations",
          "callee": "info",
          "line": 1432,
          "type": "attribute"
        },
        {
          "caller": "Database._run_migrations",
          "callee": "execute",
          "line": 1433,
          "type": "attribute"
        },
        {
          "caller": "Database._run_migrations",
          "callee": "info",
          "line": 1437,
          "type": "attribute"
        },
        {
          "caller": "Database._run_migrations",
          "callee": "execute",
          "line": 1438,
          "type": "attribute"
        },
        {
          "caller": "Database._run_migrations",
          "callee": "execute",
          "line": 1440,
          "type": "attribute"
        },
        {
          "caller": "Database._run_migrations",
          "callee": "info",
          "line": 1444,
          "type": "attribute"
        },
        {
          "caller": "Database._run_migrations",
          "callee": "info",
          "line": 1448,
          "type": "attribute"
        },
        {
          "caller": "Database._run_migrations",
          "callee": "execute",
          "line": 1451,
          "type": "attribute"
        },
        {
          "caller": "Database._run_migrations",
          "callee": "fetchone",
          "line": 1452,
          "type": "attribute"
        },
        {
          "caller": "Database._run_migrations",
          "callee": "info",
          "line": 1456,
          "type": "attribute"
        },
        {
          "caller": "Database._run_migrations",
          "callee": "Path",
          "line": 1460,
          "type": "direct"
        },
        {
          "caller": "Database._run_migrations",
          "callee": "exists",
          "line": 1462,
          "type": "attribute"
        },
        {
          "caller": "Database._run_migrations",
          "callee": "open",
          "line": 1463,
          "type": "direct"
        },
        {
          "caller": "Database._run_migrations",
          "callee": "read",
          "line": 1464,
          "type": "attribute"
        },
        {
          "caller": "Database._run_migrations",
          "callee": "strip",
          "line": 1468,
          "type": "attribute"
        },
        {
          "caller": "Database._run_migrations",
          "callee": "split",
          "line": 1468,
          "type": "attribute"
        },
        {
          "caller": "Database._run_migrations",
          "callee": "strip",
          "line": 1468,
          "type": "attribute"
        },
        {
          "caller": "Database._run_migrations",
          "callee": "startswith",
          "line": 1471,
          "type": "attribute"
        },
        {
          "caller": "Database._run_migrations",
          "callee": "execute",
          "line": 1472,
          "type": "attribute"
        },
        {
          "caller": "Database._run_migrations",
          "callee": "info",
          "line": 1474,
          "type": "attribute"
        },
        {
          "caller": "Database._run_migrations",
          "callee": "warning",
          "line": 1477,
          "type": "attribute"
        },
        {
          "caller": "Database._run_migrations",
          "callee": "execute",
          "line": 1478,
          "type": "attribute"
        },
        {
          "caller": "Database._run_migrations",
          "callee": "info",
          "line": 1484,
          "type": "attribute"
        },
        {
          "caller": "Database._run_migrations",
          "callee": "execute",
          "line": 1486,
          "type": "attribute"
        },
        {
          "caller": "Database._run_migrations",
          "callee": "info",
          "line": 1490,
          "type": "attribute"
        },
        {
          "caller": "Database._run_migrations",
          "callee": "commit",
          "line": 1492,
          "type": "attribute"
        },
        {
          "caller": "Database._run_migrations",
          "callee": "info",
          "line": 1493,
          "type": "attribute"
        },
        {
          "caller": "Database._run_migrations",
          "callee": "error",
          "line": 1496,
          "type": "attribute"
        },
        {
          "caller": "Database._run_migrations",
          "callee": "str",
          "line": 1496,
          "type": "direct"
        }
      ],
      "error": null
    },
    {
      "filepath": "src\\integrations\\__init__.py",
      "functions": [],
      "imports": [],
      "function_calls": [],
      "error": null
    },
    {
      "filepath": "src\\main.py",
      "functions": [
        {
          "name": "lifespan",
          "full_name": "lifespan",
          "class": null,
          "signature": "(app: FastAPI)",
          "return_type": "",
          "decorators": [
            "asynccontextmanager"
          ],
          "docstring": "Application lifespan context manager for startup/shutdown.",
          "line_start": 88,
          "line_end": 264,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_on_printer_status_update",
          "full_name": "_on_printer_status_update",
          "class": null,
          "signature": "(data)",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 144,
          "line_end": 152,
          "access_level": "private",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "shutdown_with_timeout",
          "full_name": "shutdown_with_timeout",
          "class": null,
          "signature": "(coro, service_name: str, timeout: float)",
          "return_type": "",
          "decorators": [],
          "docstring": "Execute shutdown coroutine with timeout.",
          "line_start": 181,
          "line_end": 189,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "create_application",
          "full_name": "create_application",
          "class": null,
          "signature": "()",
          "return_type": "FastAPI",
          "decorators": [],
          "docstring": "Create FastAPI application with production configuration.",
          "line_start": 267,
          "line_end": 392,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "read_index",
          "full_name": "read_index",
          "class": null,
          "signature": "()",
          "return_type": "",
          "decorators": [
            "app.get('/')"
          ],
          "docstring": "",
          "line_start": 333,
          "line_end": 335,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "read_debug",
          "full_name": "read_debug",
          "class": null,
          "signature": "()",
          "return_type": "",
          "decorators": [
            "app.get('/debug')"
          ],
          "docstring": "",
          "line_start": 338,
          "line_end": 340,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "metrics",
          "full_name": "metrics",
          "class": null,
          "signature": "()",
          "return_type": "",
          "decorators": [
            "app.get('/metrics')"
          ],
          "docstring": "",
          "line_start": 344,
          "line_end": 346,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "printernizer_exception_handler",
          "full_name": "printernizer_exception_handler",
          "class": null,
          "signature": "(request: Request, exc: PrinternizerException)",
          "return_type": "",
          "decorators": [
            "app.exception_handler(PrinternizerException)"
          ],
          "docstring": "",
          "line_start": 350,
          "line_end": 362,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "validation_exception_handler",
          "full_name": "validation_exception_handler",
          "class": null,
          "signature": "(request: Request, exc: RequestValidationError)",
          "return_type": "",
          "decorators": [
            "app.exception_handler(RequestValidationError)"
          ],
          "docstring": "",
          "line_start": 365,
          "line_end": 376,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "general_exception_handler",
          "full_name": "general_exception_handler",
          "class": null,
          "signature": "(request: Request, exc: Exception)",
          "return_type": "",
          "decorators": [
            "app.exception_handler(Exception)"
          ],
          "docstring": "",
          "line_start": 379,
          "line_end": 390,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "setup_signal_handlers",
          "full_name": "setup_signal_handlers",
          "class": null,
          "signature": "()",
          "return_type": "",
          "decorators": [],
          "docstring": "Setup graceful shutdown signal handlers.",
          "line_start": 395,
          "line_end": 403,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "signal_handler",
          "full_name": "signal_handler",
          "class": null,
          "signature": "(signum, frame)",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 397,
          "line_end": 400,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "asyncio",
          "alias": null,
          "line": 8
        },
        {
          "type": "import",
          "module": "logging",
          "alias": null,
          "line": 9
        },
        {
          "type": "import",
          "module": "os",
          "alias": null,
          "line": 10
        },
        {
          "type": "import",
          "module": "signal",
          "alias": null,
          "line": 11
        },
        {
          "type": "import",
          "module": "sys",
          "alias": null,
          "line": 12
        },
        {
          "type": "from_import",
          "module": "contextlib",
          "name": "asynccontextmanager",
          "alias": null,
          "line": 13
        },
        {
          "type": "from_import",
          "module": "pathlib",
          "name": "Path",
          "alias": null,
          "line": 14
        },
        {
          "type": "import",
          "module": "structlog",
          "alias": null,
          "line": 22
        },
        {
          "type": "import",
          "module": "uvicorn",
          "alias": null,
          "line": 23
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "FastAPI",
          "alias": null,
          "line": 24
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "Request",
          "alias": null,
          "line": 24
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "status",
          "alias": null,
          "line": 24
        },
        {
          "type": "from_import",
          "module": "fastapi.exceptions",
          "name": "RequestValidationError",
          "alias": null,
          "line": 25
        },
        {
          "type": "from_import",
          "module": "fastapi.middleware.cors",
          "name": "CORSMiddleware",
          "alias": null,
          "line": 26
        },
        {
          "type": "from_import",
          "module": "fastapi.responses",
          "name": "JSONResponse",
          "alias": null,
          "line": 27
        },
        {
          "type": "from_import",
          "module": "fastapi.staticfiles",
          "name": "StaticFiles",
          "alias": null,
          "line": 28
        },
        {
          "type": "from_import",
          "module": "prometheus_client",
          "name": "Counter",
          "alias": null,
          "line": 29
        },
        {
          "type": "from_import",
          "module": "prometheus_client",
          "name": "Histogram",
          "alias": null,
          "line": 29
        },
        {
          "type": "from_import",
          "module": "prometheus_client",
          "name": "generate_latest",
          "alias": null,
          "line": 29
        },
        {
          "type": "from_import",
          "module": "prometheus_client",
          "name": "CONTENT_TYPE_LATEST",
          "alias": null,
          "line": 29
        },
        {
          "type": "from_import",
          "module": "src.api.routers",
          "name": "health_router",
          "alias": null,
          "line": 31
        },
        {
          "type": "from_import",
          "module": "src.api.routers",
          "name": "printers_router",
          "alias": null,
          "line": 31
        },
        {
          "type": "from_import",
          "module": "src.api.routers",
          "name": "jobs_router",
          "alias": null,
          "line": 31
        },
        {
          "type": "from_import",
          "module": "src.api.routers",
          "name": "files_router",
          "alias": null,
          "line": 31
        },
        {
          "type": "from_import",
          "module": "src.api.routers",
          "name": "analytics_router",
          "alias": null,
          "line": 31
        },
        {
          "type": "from_import",
          "module": "src.api.routers",
          "name": "system_router",
          "alias": null,
          "line": 31
        },
        {
          "type": "from_import",
          "module": "src.api.routers",
          "name": "websocket_router",
          "alias": null,
          "line": 31
        },
        {
          "type": "from_import",
          "module": "src.api.routers",
          "name": "settings_router",
          "alias": null,
          "line": 31
        },
        {
          "type": "from_import",
          "module": "src.api.routers",
          "name": "errors_router",
          "alias": null,
          "line": 31
        },
        {
          "type": "from_import",
          "module": "src.api.routers",
          "name": "camera_router",
          "alias": null,
          "line": 31
        },
        {
          "type": "from_import",
          "module": "src.api.routers.websocket",
          "name": "broadcast_printer_status",
          "alias": null,
          "line": 43
        },
        {
          "type": "from_import",
          "module": "src.api.routers.ideas",
          "name": "router",
          "alias": "ideas_router",
          "line": 44
        },
        {
          "type": "from_import",
          "module": "src.api.routers.idea_url",
          "name": "router",
          "alias": "idea_url_router",
          "line": 45
        },
        {
          "type": "from_import",
          "module": "src.api.routers.trending",
          "name": "router",
          "alias": "trending_router",
          "line": 46
        },
        {
          "type": "from_import",
          "module": "src.api.routers.debug",
          "name": "router",
          "alias": "debug_router",
          "line": 47
        },
        {
          "type": "from_import",
          "module": "src.api.routers.library",
          "name": "router",
          "alias": "library_router",
          "line": 48
        },
        {
          "type": "from_import",
          "module": "src.database.database",
          "name": "Database",
          "alias": null,
          "line": 49
        },
        {
          "type": "from_import",
          "module": "src.services.event_service",
          "name": "EventService",
          "alias": null,
          "line": 50
        },
        {
          "type": "from_import",
          "module": "src.services.config_service",
          "name": "ConfigService",
          "alias": null,
          "line": 51
        },
        {
          "type": "from_import",
          "module": "src.services.printer_service",
          "name": "PrinterService",
          "alias": null,
          "line": 52
        },
        {
          "type": "from_import",
          "module": "src.services.file_service",
          "name": "FileService",
          "alias": null,
          "line": 53
        },
        {
          "type": "from_import",
          "module": "src.services.file_watcher_service",
          "name": "FileWatcherService",
          "alias": null,
          "line": 54
        },
        {
          "type": "from_import",
          "module": "src.services.migration_service",
          "name": "MigrationService",
          "alias": null,
          "line": 55
        },
        {
          "type": "from_import",
          "module": "src.services.monitoring_service",
          "name": "monitoring_service",
          "alias": null,
          "line": 56
        },
        {
          "type": "from_import",
          "module": "src.services.trending_service",
          "name": "TrendingService",
          "alias": null,
          "line": 57
        },
        {
          "type": "from_import",
          "module": "src.services.thumbnail_service",
          "name": "ThumbnailService",
          "alias": null,
          "line": 58
        },
        {
          "type": "from_import",
          "module": "src.services.url_parser_service",
          "name": "UrlParserService",
          "alias": null,
          "line": 59
        },
        {
          "type": "from_import",
          "module": "src.utils.logging_config",
          "name": "setup_logging",
          "alias": null,
          "line": 60
        },
        {
          "type": "from_import",
          "module": "src.utils.exceptions",
          "name": "PrinternizerException",
          "alias": null,
          "line": 61
        },
        {
          "type": "from_import",
          "module": "src.utils.middleware",
          "name": "RequestTimingMiddleware",
          "alias": null,
          "line": 62
        },
        {
          "type": "from_import",
          "module": "src.utils.middleware",
          "name": "GermanComplianceMiddleware",
          "alias": null,
          "line": 62
        },
        {
          "type": "from_import",
          "module": "src.utils.middleware",
          "name": "SecurityHeadersMiddleware",
          "alias": null,
          "line": 62
        },
        {
          "type": "from_import",
          "module": "prometheus_client",
          "name": "REGISTRY",
          "alias": null,
          "line": 81
        },
        {
          "type": "from_import",
          "module": "src.services.library_service",
          "name": "LibraryService",
          "alias": null,
          "line": 111
        },
        {
          "type": "from_import",
          "module": "src.services.config_service",
          "name": "Settings",
          "alias": null,
          "line": 271
        },
        {
          "type": "from_import",
          "module": "fastapi.responses",
          "name": "FileResponse",
          "alias": null,
          "line": 334
        },
        {
          "type": "from_import",
          "module": "fastapi.responses",
          "name": "FileResponse",
          "alias": null,
          "line": 339
        },
        {
          "type": "from_import",
          "module": "fastapi.responses",
          "name": "Response",
          "alias": null,
          "line": 345
        }
      ],
      "function_calls": [
        {
          "caller": "lifespan",
          "callee": "setup_logging",
          "line": 91,
          "type": "direct"
        },
        {
          "caller": "lifespan",
          "callee": "get_logger",
          "line": 92,
          "type": "attribute"
        },
        {
          "caller": "lifespan",
          "callee": "info",
          "line": 93,
          "type": "attribute"
        },
        {
          "caller": "lifespan",
          "callee": "Database",
          "line": 96,
          "type": "direct"
        },
        {
          "caller": "lifespan",
          "callee": "initialize",
          "line": 97,
          "type": "attribute"
        },
        {
          "caller": "lifespan",
          "callee": "MigrationService",
          "line": 101,
          "type": "direct"
        },
        {
          "caller": "lifespan",
          "callee": "run_migrations",
          "line": 102,
          "type": "attribute"
        },
        {
          "caller": "lifespan",
          "callee": "ConfigService",
          "line": 106,
          "type": "direct"
        },
        {
          "caller": "lifespan",
          "callee": "EventService",
          "line": 107,
          "type": "direct"
        },
        {
          "caller": "lifespan",
          "callee": "PrinterService",
          "line": 108,
          "type": "direct"
        },
        {
          "caller": "lifespan",
          "callee": "LibraryService",
          "line": 112,
          "type": "direct"
        },
        {
          "caller": "lifespan",
          "callee": "initialize",
          "line": 113,
          "type": "attribute"
        },
        {
          "caller": "lifespan",
          "callee": "FileWatcherService",
          "line": 116,
          "type": "direct"
        },
        {
          "caller": "lifespan",
          "callee": "FileService",
          "line": 119,
          "type": "direct"
        },
        {
          "caller": "lifespan",
          "callee": "ThumbnailService",
          "line": 125,
          "type": "direct"
        },
        {
          "caller": "lifespan",
          "callee": "UrlParserService",
          "line": 126,
          "type": "direct"
        },
        {
          "caller": "lifespan",
          "callee": "TrendingService",
          "line": 127,
          "type": "direct"
        },
        {
          "caller": "lifespan",
          "callee": "start",
          "line": 140,
          "type": "attribute"
        },
        {
          "caller": "lifespan",
          "callee": "initialize",
          "line": 141,
          "type": "attribute"
        },
        {
          "caller": "_on_printer_status_update",
          "callee": "broadcast_printer_status",
          "line": 147,
          "type": "direct"
        },
        {
          "caller": "_on_printer_status_update",
          "callee": "get",
          "line": 148,
          "type": "attribute"
        },
        {
          "caller": "_on_printer_status_update",
          "callee": "warning",
          "line": 152,
          "type": "attribute"
        },
        {
          "caller": "_on_printer_status_update",
          "callee": "str",
          "line": 152,
          "type": "direct"
        },
        {
          "caller": "lifespan",
          "callee": "subscribe",
          "line": 154,
          "type": "attribute"
        },
        {
          "caller": "lifespan",
          "callee": "initialize",
          "line": 157,
          "type": "attribute"
        },
        {
          "caller": "lifespan",
          "callee": "start_monitoring",
          "line": 161,
          "type": "attribute"
        },
        {
          "caller": "lifespan",
          "callee": "info",
          "line": 162,
          "type": "attribute"
        },
        {
          "caller": "lifespan",
          "callee": "warning",
          "line": 164,
          "type": "attribute"
        },
        {
          "caller": "lifespan",
          "callee": "str",
          "line": 164,
          "type": "direct"
        },
        {
          "caller": "lifespan",
          "callee": "start",
          "line": 168,
          "type": "attribute"
        },
        {
          "caller": "lifespan",
          "callee": "info",
          "line": 169,
          "type": "attribute"
        },
        {
          "caller": "lifespan",
          "callee": "warning",
          "line": 171,
          "type": "attribute"
        },
        {
          "caller": "lifespan",
          "callee": "str",
          "line": 171,
          "type": "direct"
        },
        {
          "caller": "lifespan",
          "callee": "info",
          "line": 173,
          "type": "attribute"
        },
        {
          "caller": "lifespan",
          "callee": "info",
          "line": 178,
          "type": "attribute"
        },
        {
          "caller": "shutdown_with_timeout",
          "callee": "wait_for",
          "line": 184,
          "type": "attribute"
        },
        {
          "caller": "shutdown_with_timeout",
          "callee": "info",
          "line": 185,
          "type": "attribute"
        },
        {
          "caller": "shutdown_with_timeout",
          "callee": "warning",
          "line": 187,
          "type": "attribute"
        },
        {
          "caller": "shutdown_with_timeout",
          "callee": "warning",
          "line": 189,
          "type": "attribute"
        },
        {
          "caller": "shutdown_with_timeout",
          "callee": "str",
          "line": 189,
          "type": "direct"
        },
        {
          "caller": "lifespan",
          "callee": "hasattr",
          "line": 195,
          "type": "direct"
        },
        {
          "caller": "lifespan",
          "callee": "append",
          "line": 196,
          "type": "attribute"
        },
        {
          "caller": "lifespan",
          "callee": "shutdown_with_timeout",
          "line": 197,
          "type": "direct"
        },
        {
          "caller": "lifespan",
          "callee": "shutdown",
          "line": 198,
          "type": "attribute"
        },
        {
          "caller": "lifespan",
          "callee": "hasattr",
          "line": 205,
          "type": "direct"
        },
        {
          "caller": "lifespan",
          "callee": "append",
          "line": 206,
          "type": "attribute"
        },
        {
          "caller": "lifespan",
          "callee": "shutdown_with_timeout",
          "line": 207,
          "type": "direct"
        },
        {
          "caller": "lifespan",
          "callee": "stop",
          "line": 208,
          "type": "attribute"
        },
        {
          "caller": "lifespan",
          "callee": "hasattr",
          "line": 215,
          "type": "direct"
        },
        {
          "caller": "lifespan",
          "callee": "append",
          "line": 216,
          "type": "attribute"
        },
        {
          "caller": "lifespan",
          "callee": "shutdown_with_timeout",
          "line": 217,
          "type": "direct"
        },
        {
          "caller": "lifespan",
          "callee": "cleanup",
          "line": 218,
          "type": "attribute"
        },
        {
          "caller": "lifespan",
          "callee": "hasattr",
          "line": 225,
          "type": "direct"
        },
        {
          "caller": "lifespan",
          "callee": "append",
          "line": 226,
          "type": "attribute"
        },
        {
          "caller": "lifespan",
          "callee": "shutdown_with_timeout",
          "line": 227,
          "type": "direct"
        },
        {
          "caller": "lifespan",
          "callee": "cleanup",
          "line": 228,
          "type": "attribute"
        },
        {
          "caller": "lifespan",
          "callee": "hasattr",
          "line": 235,
          "type": "direct"
        },
        {
          "caller": "lifespan",
          "callee": "append",
          "line": 236,
          "type": "attribute"
        },
        {
          "caller": "lifespan",
          "callee": "shutdown_with_timeout",
          "line": 237,
          "type": "direct"
        },
        {
          "caller": "lifespan",
          "callee": "close",
          "line": 238,
          "type": "attribute"
        },
        {
          "caller": "lifespan",
          "callee": "gather",
          "line": 246,
          "type": "attribute"
        },
        {
          "caller": "lifespan",
          "callee": "hasattr",
          "line": 249,
          "type": "direct"
        },
        {
          "caller": "lifespan",
          "callee": "shutdown_with_timeout",
          "line": 250,
          "type": "direct"
        },
        {
          "caller": "lifespan",
          "callee": "stop",
          "line": 251,
          "type": "attribute"
        },
        {
          "caller": "lifespan",
          "callee": "hasattr",
          "line": 257,
          "type": "direct"
        },
        {
          "caller": "lifespan",
          "callee": "shutdown_with_timeout",
          "line": 258,
          "type": "direct"
        },
        {
          "caller": "lifespan",
          "callee": "close",
          "line": 259,
          "type": "attribute"
        },
        {
          "caller": "lifespan",
          "callee": "info",
          "line": 264,
          "type": "attribute"
        },
        {
          "caller": "create_application",
          "callee": "Settings",
          "line": 272,
          "type": "direct"
        },
        {
          "caller": "create_application",
          "callee": "FastAPI",
          "line": 274,
          "type": "direct"
        },
        {
          "caller": "create_application",
          "callee": "getenv",
          "line": 278,
          "type": "attribute"
        },
        {
          "caller": "create_application",
          "callee": "getenv",
          "line": 279,
          "type": "attribute"
        },
        {
          "caller": "create_application",
          "callee": "get_cors_origins",
          "line": 284,
          "type": "attribute"
        },
        {
          "caller": "create_application",
          "callee": "extend",
          "line": 287,
          "type": "attribute"
        },
        {
          "caller": "create_application",
          "callee": "add_middleware",
          "line": 296,
          "type": "attribute"
        },
        {
          "caller": "create_application",
          "callee": "add_middleware",
          "line": 305,
          "type": "attribute"
        },
        {
          "caller": "create_application",
          "callee": "add_middleware",
          "line": 306,
          "type": "attribute"
        },
        {
          "caller": "create_application",
          "callee": "add_middleware",
          "line": 307,
          "type": "attribute"
        },
        {
          "caller": "create_application",
          "callee": "include_router",
          "line": 310,
          "type": "attribute"
        },
        {
          "caller": "create_application",
          "callee": "include_router",
          "line": 311,
          "type": "attribute"
        },
        {
          "caller": "create_application",
          "callee": "include_router",
          "line": 312,
          "type": "attribute"
        },
        {
          "caller": "create_application",
          "callee": "include_router",
          "line": 313,
          "type": "attribute"
        },
        {
          "caller": "create_application",
          "callee": "include_router",
          "line": 314,
          "type": "attribute"
        },
        {
          "caller": "create_application",
          "callee": "include_router",
          "line": 315,
          "type": "attribute"
        },
        {
          "caller": "create_application",
          "callee": "include_router",
          "line": 316,
          "type": "attribute"
        },
        {
          "caller": "create_application",
          "callee": "include_router",
          "line": 317,
          "type": "attribute"
        },
        {
          "caller": "create_application",
          "callee": "include_router",
          "line": 318,
          "type": "attribute"
        },
        {
          "caller": "create_application",
          "callee": "include_router",
          "line": 319,
          "type": "attribute"
        },
        {
          "caller": "create_application",
          "callee": "include_router",
          "line": 320,
          "type": "attribute"
        },
        {
          "caller": "create_application",
          "callee": "include_router",
          "line": 321,
          "type": "attribute"
        },
        {
          "caller": "create_application",
          "callee": "include_router",
          "line": 322,
          "type": "attribute"
        },
        {
          "caller": "create_application",
          "callee": "include_router",
          "line": 323,
          "type": "attribute"
        },
        {
          "caller": "create_application",
          "callee": "include_router",
          "line": 325,
          "type": "attribute"
        },
        {
          "caller": "create_application",
          "callee": "Path",
          "line": 328,
          "type": "direct"
        },
        {
          "caller": "create_application",
          "callee": "exists",
          "line": 329,
          "type": "attribute"
        },
        {
          "caller": "create_application",
          "callee": "mount",
          "line": 330,
          "type": "attribute"
        },
        {
          "caller": "create_application",
          "callee": "StaticFiles",
          "line": 330,
          "type": "direct"
        },
        {
          "caller": "create_application",
          "callee": "str",
          "line": 330,
          "type": "direct"
        },
        {
          "caller": "read_index",
          "callee": "FileResponse",
          "line": 335,
          "type": "direct"
        },
        {
          "caller": "read_index",
          "callee": "str",
          "line": 335,
          "type": "direct"
        },
        {
          "caller": "read_index",
          "callee": "get",
          "line": 332,
          "type": "attribute"
        },
        {
          "caller": "read_debug",
          "callee": "FileResponse",
          "line": 340,
          "type": "direct"
        },
        {
          "caller": "read_debug",
          "callee": "str",
          "line": 340,
          "type": "direct"
        },
        {
          "caller": "read_debug",
          "callee": "get",
          "line": 337,
          "type": "attribute"
        },
        {
          "caller": "metrics",
          "callee": "Response",
          "line": 346,
          "type": "direct"
        },
        {
          "caller": "metrics",
          "callee": "generate_latest",
          "line": 346,
          "type": "direct"
        },
        {
          "caller": "metrics",
          "callee": "get",
          "line": 343,
          "type": "attribute"
        },
        {
          "caller": "printernizer_exception_handler",
          "callee": "get_logger",
          "line": 351,
          "type": "attribute"
        },
        {
          "caller": "printernizer_exception_handler",
          "callee": "error",
          "line": 352,
          "type": "attribute"
        },
        {
          "caller": "printernizer_exception_handler",
          "callee": "str",
          "line": 352,
          "type": "direct"
        },
        {
          "caller": "printernizer_exception_handler",
          "callee": "JSONResponse",
          "line": 354,
          "type": "direct"
        },
        {
          "caller": "printernizer_exception_handler",
          "callee": "isoformat",
          "line": 360,
          "type": "attribute"
        },
        {
          "caller": "printernizer_exception_handler",
          "callee": "exception_handler",
          "line": 349,
          "type": "attribute"
        },
        {
          "caller": "validation_exception_handler",
          "callee": "get_logger",
          "line": 366,
          "type": "attribute"
        },
        {
          "caller": "validation_exception_handler",
          "callee": "warning",
          "line": 367,
          "type": "attribute"
        },
        {
          "caller": "validation_exception_handler",
          "callee": "errors",
          "line": 367,
          "type": "attribute"
        },
        {
          "caller": "validation_exception_handler",
          "callee": "JSONResponse",
          "line": 369,
          "type": "direct"
        },
        {
          "caller": "validation_exception_handler",
          "callee": "errors",
          "line": 374,
          "type": "attribute"
        },
        {
          "caller": "validation_exception_handler",
          "callee": "exception_handler",
          "line": 364,
          "type": "attribute"
        },
        {
          "caller": "general_exception_handler",
          "callee": "get_logger",
          "line": 380,
          "type": "attribute"
        },
        {
          "caller": "general_exception_handler",
          "callee": "error",
          "line": 381,
          "type": "attribute"
        },
        {
          "caller": "general_exception_handler",
          "callee": "str",
          "line": 381,
          "type": "direct"
        },
        {
          "caller": "general_exception_handler",
          "callee": "JSONResponse",
          "line": 383,
          "type": "direct"
        },
        {
          "caller": "general_exception_handler",
          "callee": "exception_handler",
          "line": 378,
          "type": "attribute"
        },
        {
          "caller": "signal_handler",
          "callee": "get_logger",
          "line": 398,
          "type": "attribute"
        },
        {
          "caller": "signal_handler",
          "callee": "info",
          "line": 399,
          "type": "attribute"
        },
        {
          "caller": "signal_handler",
          "callee": "exit",
          "line": 400,
          "type": "attribute"
        },
        {
          "caller": "setup_signal_handlers",
          "callee": "signal",
          "line": 402,
          "type": "attribute"
        },
        {
          "caller": "setup_signal_handlers",
          "callee": "signal",
          "line": 403,
          "type": "attribute"
        }
      ],
      "error": null
    },
    {
      "filepath": "src\\models\\__init__.py",
      "functions": [],
      "imports": [],
      "function_calls": [],
      "error": null
    },
    {
      "filepath": "src\\models\\file.py",
      "functions": [],
      "imports": [
        {
          "type": "from_import",
          "module": "enum",
          "name": "Enum",
          "alias": null,
          "line": 5
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Optional",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Dict",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Any",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "List",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "pydantic",
          "name": "BaseModel",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "pydantic",
          "name": "Field",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "decimal",
          "name": "Decimal",
          "alias": null,
          "line": 9
        }
      ],
      "function_calls": [],
      "error": null
    },
    {
      "filepath": "src\\models\\idea.py",
      "functions": [
        {
          "name": "to_dict",
          "full_name": "Idea.to_dict",
          "class": "Idea",
          "signature": "(self)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Convert idea to dictionary.",
          "line_start": 49,
          "line_end": 71,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "from_dict",
          "full_name": "Idea.from_dict",
          "class": "Idea",
          "signature": "(cls, data: Dict[str, Any])",
          "return_type": "'Idea'",
          "decorators": [
            "classmethod"
          ],
          "docstring": "Create idea from dictionary.",
          "line_start": 74,
          "line_end": 96,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": true
        },
        {
          "name": "validate",
          "full_name": "Idea.validate",
          "class": "Idea",
          "signature": "(self)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Validate idea data.",
          "line_start": 98,
          "line_end": 108,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_formatted_time",
          "full_name": "Idea.get_formatted_time",
          "class": "Idea",
          "signature": "(self)",
          "return_type": "str",
          "decorators": [],
          "docstring": "Get formatted estimated print time.",
          "line_start": 110,
          "line_end": 118,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "to_dict",
          "full_name": "TrendingItem.to_dict",
          "class": "TrendingItem",
          "signature": "(self)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Convert trending item to dictionary.",
          "line_start": 138,
          "line_end": 154,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "from_dict",
          "full_name": "TrendingItem.from_dict",
          "class": "TrendingItem",
          "signature": "(cls, data: Dict[str, Any])",
          "return_type": "'TrendingItem'",
          "decorators": [
            "classmethod"
          ],
          "docstring": "Create trending item from dictionary.",
          "line_start": 157,
          "line_end": 173,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": true
        },
        {
          "name": "is_expired",
          "full_name": "TrendingItem.is_expired",
          "class": "TrendingItem",
          "signature": "(self)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Check if the trending item has expired.",
          "line_start": 175,
          "line_end": 180,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "from_import",
          "module": "dataclasses",
          "name": "dataclass",
          "alias": null,
          "line": 4
        },
        {
          "type": "from_import",
          "module": "dataclasses",
          "name": "field",
          "alias": null,
          "line": 4
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Optional",
          "alias": null,
          "line": 5
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "List",
          "alias": null,
          "line": 5
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Dict",
          "alias": null,
          "line": 5
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Any",
          "alias": null,
          "line": 5
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "enum",
          "name": "Enum",
          "alias": null,
          "line": 7
        }
      ],
      "function_calls": [
        {
          "caller": "Idea.from_dict",
          "callee": "cls",
          "line": 76,
          "type": "direct"
        },
        {
          "caller": "Idea.from_dict",
          "callee": "get",
          "line": 79,
          "type": "attribute"
        },
        {
          "caller": "Idea.from_dict",
          "callee": "get",
          "line": 80,
          "type": "attribute"
        },
        {
          "caller": "Idea.from_dict",
          "callee": "get",
          "line": 81,
          "type": "attribute"
        },
        {
          "caller": "Idea.from_dict",
          "callee": "get",
          "line": 82,
          "type": "attribute"
        },
        {
          "caller": "Idea.from_dict",
          "callee": "get",
          "line": 83,
          "type": "attribute"
        },
        {
          "caller": "Idea.from_dict",
          "callee": "get",
          "line": 84,
          "type": "attribute"
        },
        {
          "caller": "Idea.from_dict",
          "callee": "get",
          "line": 85,
          "type": "attribute"
        },
        {
          "caller": "Idea.from_dict",
          "callee": "get",
          "line": 86,
          "type": "attribute"
        },
        {
          "caller": "Idea.from_dict",
          "callee": "get",
          "line": 87,
          "type": "attribute"
        },
        {
          "caller": "Idea.from_dict",
          "callee": "get",
          "line": 88,
          "type": "attribute"
        },
        {
          "caller": "Idea.from_dict",
          "callee": "get",
          "line": 89,
          "type": "attribute"
        },
        {
          "caller": "Idea.from_dict",
          "callee": "get",
          "line": 90,
          "type": "attribute"
        },
        {
          "caller": "Idea.from_dict",
          "callee": "get",
          "line": 91,
          "type": "attribute"
        },
        {
          "caller": "Idea.from_dict",
          "callee": "get",
          "line": 92,
          "type": "attribute"
        },
        {
          "caller": "Idea.from_dict",
          "callee": "get",
          "line": 93,
          "type": "attribute"
        },
        {
          "caller": "Idea.from_dict",
          "callee": "get",
          "line": 94,
          "type": "attribute"
        },
        {
          "caller": "Idea.from_dict",
          "callee": "get",
          "line": 95,
          "type": "attribute"
        },
        {
          "caller": "TrendingItem.from_dict",
          "callee": "cls",
          "line": 159,
          "type": "direct"
        },
        {
          "caller": "TrendingItem.from_dict",
          "callee": "get",
          "line": 165,
          "type": "attribute"
        },
        {
          "caller": "TrendingItem.from_dict",
          "callee": "get",
          "line": 166,
          "type": "attribute"
        },
        {
          "caller": "TrendingItem.from_dict",
          "callee": "get",
          "line": 167,
          "type": "attribute"
        },
        {
          "caller": "TrendingItem.from_dict",
          "callee": "get",
          "line": 168,
          "type": "attribute"
        },
        {
          "caller": "TrendingItem.from_dict",
          "callee": "get",
          "line": 169,
          "type": "attribute"
        },
        {
          "caller": "TrendingItem.from_dict",
          "callee": "get",
          "line": 170,
          "type": "attribute"
        },
        {
          "caller": "TrendingItem.from_dict",
          "callee": "get",
          "line": 171,
          "type": "attribute"
        },
        {
          "caller": "TrendingItem.is_expired",
          "callee": "fromisoformat",
          "line": 179,
          "type": "attribute"
        },
        {
          "caller": "TrendingItem.is_expired",
          "callee": "now",
          "line": 180,
          "type": "attribute"
        }
      ],
      "error": null
    },
    {
      "filepath": "src\\models\\job.py",
      "functions": [
        {
          "name": "convert_progress_to_int",
          "full_name": "Job.convert_progress_to_int",
          "class": "Job",
          "signature": "(cls, v)",
          "return_type": "",
          "decorators": [
            "field_validator('progress', mode='before')"
          ],
          "docstring": "Convert float progress values to integers.",
          "line_start": 45,
          "line_end": 49,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "from_import",
          "module": "enum",
          "name": "Enum",
          "alias": null,
          "line": 5
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Optional",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Dict",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Any",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "pydantic",
          "name": "BaseModel",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "pydantic",
          "name": "Field",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "pydantic",
          "name": "field_validator",
          "alias": null,
          "line": 8
        }
      ],
      "function_calls": [
        {
          "caller": "Job.convert_progress_to_int",
          "callee": "isinstance",
          "line": 47,
          "type": "direct"
        },
        {
          "caller": "Job.convert_progress_to_int",
          "callee": "int",
          "line": 48,
          "type": "direct"
        },
        {
          "caller": "Job.convert_progress_to_int",
          "callee": "field_validator",
          "line": 44,
          "type": "direct"
        }
      ],
      "error": null
    },
    {
      "filepath": "src\\models\\material.py",
      "functions": [
        {
          "name": "used_weight",
          "full_name": "MaterialSpool.used_weight",
          "class": "MaterialSpool",
          "signature": "(self)",
          "return_type": "float",
          "decorators": [
            "property"
          ],
          "docstring": "Calculate used material weight.",
          "line_start": 77,
          "line_end": 79,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": true,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "remaining_percentage",
          "full_name": "MaterialSpool.remaining_percentage",
          "class": "MaterialSpool",
          "signature": "(self)",
          "return_type": "float",
          "decorators": [
            "property"
          ],
          "docstring": "Calculate remaining material percentage.",
          "line_start": 82,
          "line_end": 86,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": true,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "total_cost",
          "full_name": "MaterialSpool.total_cost",
          "class": "MaterialSpool",
          "signature": "(self)",
          "return_type": "Decimal",
          "decorators": [
            "property"
          ],
          "docstring": "Calculate total spool cost.",
          "line_start": 89,
          "line_end": 91,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": true,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "remaining_value",
          "full_name": "MaterialSpool.remaining_value",
          "class": "MaterialSpool",
          "signature": "(self)",
          "return_type": "Decimal",
          "decorators": [
            "property"
          ],
          "docstring": "Calculate remaining material value.",
          "line_start": 94,
          "line_end": 96,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": true,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "validate_remaining",
          "full_name": "MaterialCreate.validate_remaining",
          "class": "MaterialCreate",
          "signature": "(cls, v, values)",
          "return_type": "",
          "decorators": [
            "field_validator('remaining_weight')"
          ],
          "docstring": "Ensure remaining weight doesn't exceed total weight.",
          "line_start": 116,
          "line_end": 120,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "weight_used_kg",
          "full_name": "MaterialConsumption.weight_used_kg",
          "class": "MaterialConsumption",
          "signature": "(self)",
          "return_type": "float",
          "decorators": [
            "property"
          ],
          "docstring": "Convert grams to kg.",
          "line_start": 147,
          "line_end": 149,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": true,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "from_import",
          "module": "dataclasses",
          "name": "dataclass",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "dataclasses",
          "name": "field",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "decimal",
          "name": "Decimal",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "enum",
          "name": "Enum",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Optional",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Dict",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Any",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "pydantic",
          "name": "BaseModel",
          "alias": null,
          "line": 11
        },
        {
          "type": "from_import",
          "module": "pydantic",
          "name": "Field",
          "alias": null,
          "line": 11
        },
        {
          "type": "from_import",
          "module": "pydantic",
          "name": "ConfigDict",
          "alias": null,
          "line": 11
        },
        {
          "type": "from_import",
          "module": "pydantic",
          "name": "field_validator",
          "alias": null,
          "line": 11
        }
      ],
      "function_calls": [
        {
          "caller": "MaterialSpool.total_cost",
          "callee": "Decimal",
          "line": 91,
          "type": "direct"
        },
        {
          "caller": "MaterialSpool.total_cost",
          "callee": "str",
          "line": 91,
          "type": "direct"
        },
        {
          "caller": "MaterialSpool.remaining_value",
          "callee": "Decimal",
          "line": 96,
          "type": "direct"
        },
        {
          "caller": "MaterialSpool.remaining_value",
          "callee": "str",
          "line": 96,
          "type": "direct"
        },
        {
          "caller": "MaterialCreate.validate_remaining",
          "callee": "ValueError",
          "line": 119,
          "type": "direct"
        },
        {
          "caller": "MaterialCreate.validate_remaining",
          "callee": "field_validator",
          "line": 115,
          "type": "direct"
        }
      ],
      "error": null
    },
    {
      "filepath": "src\\models\\printer.py",
      "functions": [],
      "imports": [
        {
          "type": "from_import",
          "module": "enum",
          "name": "Enum",
          "alias": null,
          "line": 5
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Optional",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Dict",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Any",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "pydantic",
          "name": "BaseModel",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "pydantic",
          "name": "Field",
          "alias": null,
          "line": 8
        }
      ],
      "function_calls": [],
      "error": null
    },
    {
      "filepath": "src\\models\\snapshot.py",
      "functions": [],
      "imports": [
        {
          "type": "from_import",
          "module": "enum",
          "name": "Enum",
          "alias": null,
          "line": 5
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Optional",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Dict",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Any",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "pydantic",
          "name": "BaseModel",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "pydantic",
          "name": "Field",
          "alias": null,
          "line": 8
        }
      ],
      "function_calls": [],
      "error": null
    },
    {
      "filepath": "src\\models\\watch_folder.py",
      "functions": [
        {
          "name": "to_dict",
          "full_name": "WatchFolder.to_dict",
          "class": "WatchFolder",
          "signature": "(self)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Convert to dictionary representation.",
          "line_start": 47,
          "line_end": 64,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "from_dict",
          "full_name": "WatchFolder.from_dict",
          "class": "WatchFolder",
          "signature": "(cls, data: Dict[str, Any])",
          "return_type": "'WatchFolder'",
          "decorators": [
            "classmethod"
          ],
          "docstring": "Create instance from dictionary.",
          "line_start": 67,
          "line_end": 84,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": true
        },
        {
          "name": "from_db_row",
          "full_name": "WatchFolder.from_db_row",
          "class": "WatchFolder",
          "signature": "(cls, row: tuple)",
          "return_type": "'WatchFolder'",
          "decorators": [
            "classmethod"
          ],
          "docstring": "Create instance from database row.",
          "line_start": 87,
          "line_end": 104,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": true
        },
        {
          "name": "get_display_name",
          "full_name": "WatchFolder.get_display_name",
          "class": "WatchFolder",
          "signature": "(self)",
          "return_type": "str",
          "decorators": [],
          "docstring": "Get display name for the folder.",
          "line_start": 106,
          "line_end": 113,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "is_accessible",
          "full_name": "WatchFolder.is_accessible",
          "class": "WatchFolder",
          "signature": "(self)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Check if folder is currently accessible.",
          "line_start": 115,
          "line_end": 118,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Optional",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Dict",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Any",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "dataclasses",
          "name": "dataclass",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "enum",
          "name": "Enum",
          "alias": null,
          "line": 9
        },
        {
          "type": "import",
          "module": "os",
          "alias": null,
          "line": 112
        },
        {
          "type": "import",
          "module": "os",
          "alias": null,
          "line": 117
        }
      ],
      "function_calls": [
        {
          "caller": "WatchFolder.to_dict",
          "callee": "isoformat",
          "line": 57,
          "type": "attribute"
        },
        {
          "caller": "WatchFolder.to_dict",
          "callee": "isoformat",
          "line": 60,
          "type": "attribute"
        },
        {
          "caller": "WatchFolder.to_dict",
          "callee": "isoformat",
          "line": 62,
          "type": "attribute"
        },
        {
          "caller": "WatchFolder.to_dict",
          "callee": "isoformat",
          "line": 63,
          "type": "attribute"
        },
        {
          "caller": "WatchFolder.from_dict",
          "callee": "cls",
          "line": 69,
          "type": "direct"
        },
        {
          "caller": "WatchFolder.from_dict",
          "callee": "get",
          "line": 70,
          "type": "attribute"
        },
        {
          "caller": "WatchFolder.from_dict",
          "callee": "get",
          "line": 71,
          "type": "attribute"
        },
        {
          "caller": "WatchFolder.from_dict",
          "callee": "bool",
          "line": 72,
          "type": "direct"
        },
        {
          "caller": "WatchFolder.from_dict",
          "callee": "get",
          "line": 72,
          "type": "attribute"
        },
        {
          "caller": "WatchFolder.from_dict",
          "callee": "bool",
          "line": 73,
          "type": "direct"
        },
        {
          "caller": "WatchFolder.from_dict",
          "callee": "get",
          "line": 73,
          "type": "attribute"
        },
        {
          "caller": "WatchFolder.from_dict",
          "callee": "get",
          "line": 74,
          "type": "attribute"
        },
        {
          "caller": "WatchFolder.from_dict",
          "callee": "get",
          "line": 75,
          "type": "attribute"
        },
        {
          "caller": "WatchFolder.from_dict",
          "callee": "int",
          "line": 76,
          "type": "direct"
        },
        {
          "caller": "WatchFolder.from_dict",
          "callee": "get",
          "line": 76,
          "type": "attribute"
        },
        {
          "caller": "WatchFolder.from_dict",
          "callee": "get",
          "line": 77,
          "type": "attribute"
        },
        {
          "caller": "WatchFolder.from_dict",
          "callee": "fromisoformat",
          "line": 77,
          "type": "attribute"
        },
        {
          "caller": "WatchFolder.from_dict",
          "callee": "bool",
          "line": 78,
          "type": "direct"
        },
        {
          "caller": "WatchFolder.from_dict",
          "callee": "get",
          "line": 78,
          "type": "attribute"
        },
        {
          "caller": "WatchFolder.from_dict",
          "callee": "get",
          "line": 79,
          "type": "attribute"
        },
        {
          "caller": "WatchFolder.from_dict",
          "callee": "get",
          "line": 80,
          "type": "attribute"
        },
        {
          "caller": "WatchFolder.from_dict",
          "callee": "fromisoformat",
          "line": 80,
          "type": "attribute"
        },
        {
          "caller": "WatchFolder.from_dict",
          "callee": "WatchFolderSource",
          "line": 81,
          "type": "direct"
        },
        {
          "caller": "WatchFolder.from_dict",
          "callee": "get",
          "line": 81,
          "type": "attribute"
        },
        {
          "caller": "WatchFolder.from_dict",
          "callee": "get",
          "line": 82,
          "type": "attribute"
        },
        {
          "caller": "WatchFolder.from_dict",
          "callee": "fromisoformat",
          "line": 82,
          "type": "attribute"
        },
        {
          "caller": "WatchFolder.from_dict",
          "callee": "get",
          "line": 83,
          "type": "attribute"
        },
        {
          "caller": "WatchFolder.from_dict",
          "callee": "fromisoformat",
          "line": 83,
          "type": "attribute"
        },
        {
          "caller": "WatchFolder.from_db_row",
          "callee": "cls",
          "line": 89,
          "type": "direct"
        },
        {
          "caller": "WatchFolder.from_db_row",
          "callee": "bool",
          "line": 92,
          "type": "direct"
        },
        {
          "caller": "WatchFolder.from_db_row",
          "callee": "bool",
          "line": 93,
          "type": "direct"
        },
        {
          "caller": "WatchFolder.from_db_row",
          "callee": "int",
          "line": 96,
          "type": "direct"
        },
        {
          "caller": "WatchFolder.from_db_row",
          "callee": "fromisoformat",
          "line": 97,
          "type": "attribute"
        },
        {
          "caller": "WatchFolder.from_db_row",
          "callee": "bool",
          "line": 98,
          "type": "direct"
        },
        {
          "caller": "WatchFolder.from_db_row",
          "callee": "fromisoformat",
          "line": 100,
          "type": "attribute"
        },
        {
          "caller": "WatchFolder.from_db_row",
          "callee": "WatchFolderSource",
          "line": 101,
          "type": "direct"
        },
        {
          "caller": "WatchFolder.from_db_row",
          "callee": "fromisoformat",
          "line": 102,
          "type": "attribute"
        },
        {
          "caller": "WatchFolder.from_db_row",
          "callee": "fromisoformat",
          "line": 103,
          "type": "attribute"
        },
        {
          "caller": "WatchFolder.get_display_name",
          "callee": "basename",
          "line": 113,
          "type": "attribute"
        },
        {
          "caller": "WatchFolder.is_accessible",
          "callee": "exists",
          "line": 118,
          "type": "attribute"
        },
        {
          "caller": "WatchFolder.is_accessible",
          "callee": "isdir",
          "line": 118,
          "type": "attribute"
        }
      ],
      "error": null
    },
    {
      "filepath": "src\\printers\\__init__.py",
      "functions": [],
      "imports": [
        {
          "type": "from_import",
          "module": "base",
          "name": "BasePrinter",
          "alias": null,
          "line": 5
        },
        {
          "type": "from_import",
          "module": "base",
          "name": "PrinterInterface",
          "alias": null,
          "line": 5
        },
        {
          "type": "from_import",
          "module": "bambu_lab",
          "name": "BambuLabPrinter",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "prusa",
          "name": "PrusaPrinter",
          "alias": null,
          "line": 7
        }
      ],
      "function_calls": [],
      "error": null
    },
    {
      "filepath": "src\\printers\\bambu_lab.py",
      "functions": [
        {
          "name": "__init__",
          "full_name": "BambuLabPrinter.__init__",
          "class": "BambuLabPrinter",
          "signature": "(self, printer_id: str, name: str, ip_address: str, access_code: str, serial_number: str, file_service)",
          "return_type": "",
          "decorators": [],
          "docstring": "Initialize Bambu Lab printer.",
          "line_start": 39,
          "line_end": 72,
          "access_level": "dunder",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_on_connect",
          "full_name": "BambuLabPrinter._on_connect",
          "class": "BambuLabPrinter",
          "signature": "(self, client, userdata, flags, rc)",
          "return_type": "",
          "decorators": [],
          "docstring": "MQTT connection callback.",
          "line_start": 74,
          "line_end": 83,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_on_message",
          "full_name": "BambuLabPrinter._on_message",
          "class": "BambuLabPrinter",
          "signature": "(self, client, userdata, msg)",
          "return_type": "",
          "decorators": [],
          "docstring": "MQTT message callback.",
          "line_start": 85,
          "line_end": 92,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_on_disconnect",
          "full_name": "BambuLabPrinter._on_disconnect",
          "class": "BambuLabPrinter",
          "signature": "(self, client, userdata, rc)",
          "return_type": "",
          "decorators": [],
          "docstring": "MQTT disconnect callback.",
          "line_start": 94,
          "line_end": 96,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "connect",
          "full_name": "BambuLabPrinter.connect",
          "class": "BambuLabPrinter",
          "signature": "(self)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Establish connection to Bambu Lab printer.",
          "line_start": 98,
          "line_end": 131,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_connect_bambu_api",
          "full_name": "BambuLabPrinter._connect_bambu_api",
          "class": "BambuLabPrinter",
          "signature": "(self)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Connect using bambulabs_api library.",
          "line_start": 133,
          "line_end": 163,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_connect_mqtt",
          "full_name": "BambuLabPrinter._connect_mqtt",
          "class": "BambuLabPrinter",
          "signature": "(self)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Connect using direct MQTT (fallback).",
          "line_start": 165,
          "line_end": 199,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_on_bambu_status_update",
          "full_name": "BambuLabPrinter._on_bambu_status_update",
          "class": "BambuLabPrinter",
          "signature": "(self, status: Dict[str, Any])",
          "return_type": "",
          "decorators": [],
          "docstring": "Handle status updates from bambulabs_api.",
          "line_start": 202,
          "line_end": 205,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_on_bambu_file_list_update",
          "full_name": "BambuLabPrinter._on_bambu_file_list_update",
          "class": "BambuLabPrinter",
          "signature": "(self, file_list_data: Dict[str, Any])",
          "return_type": "",
          "decorators": [],
          "docstring": "Handle file list updates from bambulabs_api.",
          "line_start": 207,
          "line_end": 234,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "disconnect",
          "full_name": "BambuLabPrinter.disconnect",
          "class": "BambuLabPrinter",
          "signature": "(self)",
          "return_type": "None",
          "decorators": [],
          "docstring": "Disconnect from Bambu Lab printer.",
          "line_start": 236,
          "line_end": 260,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_status",
          "full_name": "BambuLabPrinter.get_status",
          "class": "BambuLabPrinter",
          "signature": "(self)",
          "return_type": "PrinterStatusUpdate",
          "decorators": [],
          "docstring": "Get current printer status from Bambu Lab.",
          "line_start": 262,
          "line_end": 281,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_get_status_bambu_api",
          "full_name": "BambuLabPrinter._get_status_bambu_api",
          "class": "BambuLabPrinter",
          "signature": "(self)",
          "return_type": "PrinterStatusUpdate",
          "decorators": [],
          "docstring": "Get status using bambulabs_api with improved timeout handling.",
          "line_start": 283,
          "line_end": 569,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_get_status_mqtt",
          "full_name": "BambuLabPrinter._get_status_mqtt",
          "class": "BambuLabPrinter",
          "signature": "(self)",
          "return_type": "PrinterStatusUpdate",
          "decorators": [],
          "docstring": "Get status using direct MQTT.",
          "line_start": 571,
          "line_end": 698,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_map_bambu_status",
          "full_name": "BambuLabPrinter._map_bambu_status",
          "class": "BambuLabPrinter",
          "signature": "(self, bambu_status)",
          "return_type": "PrinterStatus",
          "decorators": [],
          "docstring": "Map Bambu Lab status to PrinterStatus.",
          "line_start": 700,
          "line_end": 748,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_job_info",
          "full_name": "BambuLabPrinter.get_job_info",
          "class": "BambuLabPrinter",
          "signature": "(self)",
          "return_type": "Optional[JobInfo]",
          "decorators": [],
          "docstring": "Get current job information from Bambu Lab.",
          "line_start": 750,
          "line_end": 789,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_map_job_status",
          "full_name": "BambuLabPrinter._map_job_status",
          "class": "BambuLabPrinter",
          "signature": "(self, bambu_status)",
          "return_type": "JobStatus",
          "decorators": [],
          "docstring": "Map Bambu Lab status to JobStatus.",
          "line_start": 791,
          "line_end": 838,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "list_files",
          "full_name": "BambuLabPrinter.list_files",
          "class": "BambuLabPrinter",
          "signature": "(self)",
          "return_type": "List[PrinterFile]",
          "decorators": [],
          "docstring": "List files available on Bambu Lab printer.",
          "line_start": 840,
          "line_end": 857,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_list_files_bambu_api",
          "full_name": "BambuLabPrinter._list_files_bambu_api",
          "class": "BambuLabPrinter",
          "signature": "(self)",
          "return_type": "List[PrinterFile]",
          "decorators": [],
          "docstring": "List files using bambulabs_api library with enhanced discovery.",
          "line_start": 859,
          "line_end": 944,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_discover_files_via_ftp",
          "full_name": "BambuLabPrinter._discover_files_via_ftp",
          "class": "BambuLabPrinter",
          "signature": "(self)",
          "return_type": "List[PrinterFile]",
          "decorators": [],
          "docstring": "Discover files using FTP client methods.",
          "line_start": 946,
          "line_end": 1018,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_discover_files_via_mqtt_dump",
          "full_name": "BambuLabPrinter._discover_files_via_mqtt_dump",
          "class": "BambuLabPrinter",
          "signature": "(self)",
          "return_type": "List[PrinterFile]",
          "decorators": [],
          "docstring": "Discover files using MQTT dump data.",
          "line_start": 1020,
          "line_end": 1086,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_list_files_mqtt",
          "full_name": "BambuLabPrinter._list_files_mqtt",
          "class": "BambuLabPrinter",
          "signature": "(self)",
          "return_type": "List[PrinterFile]",
          "decorators": [],
          "docstring": "List files using direct MQTT (fallback).",
          "line_start": 1088,
          "line_end": 1168,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_list_files_mqtt_from_bambu_api",
          "full_name": "BambuLabPrinter._list_files_mqtt_from_bambu_api",
          "class": "BambuLabPrinter",
          "signature": "(self)",
          "return_type": "List[PrinterFile]",
          "decorators": [],
          "docstring": "Extract file references from bambulabs_api MQTT data.",
          "line_start": 1170,
          "line_end": 1218,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_list_files_direct_ftp",
          "full_name": "BambuLabPrinter._list_files_direct_ftp",
          "class": "BambuLabPrinter",
          "signature": "(self)",
          "return_type": "List[PrinterFile]",
          "decorators": [],
          "docstring": "List files using direct FTP connection.",
          "line_start": 1220,
          "line_end": 1253,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_download_file_direct_ftp",
          "full_name": "BambuLabPrinter._download_file_direct_ftp",
          "class": "BambuLabPrinter",
          "signature": "(self, filename: str, local_path: str)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Download file using direct FTP connection.",
          "line_start": 1255,
          "line_end": 1283,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_get_file_type_from_name",
          "full_name": "BambuLabPrinter._get_file_type_from_name",
          "class": "BambuLabPrinter",
          "signature": "(self, filename: str)",
          "return_type": "str",
          "decorators": [],
          "docstring": "Extract file type from filename extension.",
          "line_start": 1285,
          "line_end": 1297,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "download_file",
          "full_name": "BambuLabPrinter.download_file",
          "class": "BambuLabPrinter",
          "signature": "(self, filename: str, local_path: str)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Download a file from Bambu Lab printer.",
          "line_start": 1299,
          "line_end": 1316,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_download_file_bambu_api",
          "full_name": "BambuLabPrinter._download_file_bambu_api",
          "class": "BambuLabPrinter",
          "signature": "(self, filename: str, local_path: str)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Download file using bambulabs_api with corrected implementation.",
          "line_start": 1318,
          "line_end": 1377,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_download_file_mqtt",
          "full_name": "BambuLabPrinter._download_file_mqtt",
          "class": "BambuLabPrinter",
          "signature": "(self, filename: str, local_path: str)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Download file using direct MQTT (fallback).",
          "line_start": 1379,
          "line_end": 1384,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_download_via_ftp",
          "full_name": "BambuLabPrinter._download_via_ftp",
          "class": "BambuLabPrinter",
          "signature": "(self, filename: str, local_path: str)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Download file via bambulabs_api FTP client.",
          "line_start": 1386,
          "line_end": 1552,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_safe_list",
          "full_name": "BambuLabPrinter._safe_list",
          "class": "BambuLabPrinter",
          "signature": "(dir_path: str)",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 1445,
          "line_end": 1455,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "rank",
          "full_name": "BambuLabPrinter.rank",
          "class": "BambuLabPrinter",
          "signature": "(item)",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 1510,
          "line_end": 1518,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_download_via_http",
          "full_name": "BambuLabPrinter._download_via_http",
          "class": "BambuLabPrinter",
          "signature": "(self, filename: str, local_path: str)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Download file via HTTP from Bambu Lab printer web interface.",
          "line_start": 1554,
          "line_end": 1640,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "pause_print",
          "full_name": "BambuLabPrinter.pause_print",
          "class": "BambuLabPrinter",
          "signature": "(self)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Pause the current print job on Bambu Lab printer.",
          "line_start": 1642,
          "line_end": 1663,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "resume_print",
          "full_name": "BambuLabPrinter.resume_print",
          "class": "BambuLabPrinter",
          "signature": "(self)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Resume the paused print job on Bambu Lab printer.",
          "line_start": 1665,
          "line_end": 1686,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "stop_print",
          "full_name": "BambuLabPrinter.stop_print",
          "class": "BambuLabPrinter",
          "signature": "(self)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Stop/cancel the current print job on Bambu Lab printer.",
          "line_start": 1688,
          "line_end": 1709,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "has_camera",
          "full_name": "BambuLabPrinter.has_camera",
          "class": "BambuLabPrinter",
          "signature": "(self)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Check if Bambu Lab printer has camera support.",
          "line_start": 1711,
          "line_end": 1723,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_camera_stream_url",
          "full_name": "BambuLabPrinter.get_camera_stream_url",
          "class": "BambuLabPrinter",
          "signature": "(self)",
          "return_type": "Optional[str]",
          "decorators": [],
          "docstring": "Get camera stream URL for Bambu Lab printer.",
          "line_start": 1725,
          "line_end": 1744,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "take_snapshot",
          "full_name": "BambuLabPrinter.take_snapshot",
          "class": "BambuLabPrinter",
          "signature": "(self)",
          "return_type": "Optional[bytes]",
          "decorators": [],
          "docstring": "Take a camera snapshot from Bambu Lab printer.",
          "line_start": 1746,
          "line_end": 1779,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "asyncio",
          "alias": null,
          "line": 5
        },
        {
          "type": "import",
          "module": "json",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Dict",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Any",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Optional",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "List",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 8
        },
        {
          "type": "import",
          "module": "structlog",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "src.models.printer",
          "name": "PrinterStatus",
          "alias": null,
          "line": 11
        },
        {
          "type": "from_import",
          "module": "src.models.printer",
          "name": "PrinterStatusUpdate",
          "alias": null,
          "line": 11
        },
        {
          "type": "from_import",
          "module": "src.utils.exceptions",
          "name": "PrinterConnectionError",
          "alias": null,
          "line": 12
        },
        {
          "type": "from_import",
          "module": "base",
          "name": "BasePrinter",
          "alias": null,
          "line": 13
        },
        {
          "type": "from_import",
          "module": "base",
          "name": "JobInfo",
          "alias": null,
          "line": 13
        },
        {
          "type": "from_import",
          "module": "base",
          "name": "JobStatus",
          "alias": null,
          "line": 13
        },
        {
          "type": "from_import",
          "module": "base",
          "name": "PrinterFile",
          "alias": null,
          "line": 13
        },
        {
          "type": "from_import",
          "module": "src.services.bambu_ftp_service",
          "name": "BambuFTPService",
          "alias": null,
          "line": 14
        },
        {
          "type": "from_import",
          "module": "src.services.bambu_ftp_service",
          "name": "BambuFTPFile",
          "alias": null,
          "line": 14
        },
        {
          "type": "from_import",
          "module": "bambulabs_api",
          "name": "Printer",
          "alias": "BambuClient",
          "line": 18
        },
        {
          "type": "import",
          "module": "paho.mqtt.client",
          "alias": "mqtt",
          "line": 26
        },
        {
          "type": "import",
          "module": "ssl",
          "alias": null,
          "line": 27
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "timedelta",
          "alias": null,
          "line": 413
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "timedelta",
          "alias": null,
          "line": 596
        },
        {
          "type": "from_import",
          "module": "pathlib",
          "name": "Path",
          "alias": null,
          "line": 1287
        },
        {
          "type": "from_import",
          "module": "pathlib",
          "name": "Path",
          "alias": null,
          "line": 1330
        },
        {
          "type": "from_import",
          "module": "pathlib",
          "name": "Path",
          "alias": null,
          "line": 1392
        },
        {
          "type": "import",
          "module": "aiohttp",
          "alias": null,
          "line": 1557
        },
        {
          "type": "from_import",
          "module": "pathlib",
          "name": "Path",
          "alias": null,
          "line": 1558
        },
        {
          "type": "import",
          "module": "aiohttp",
          "alias": null,
          "line": 1754
        }
      ],
      "function_calls": [
        {
          "caller": "BambuLabPrinter.__init__",
          "callee": "__init__",
          "line": 42,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.__init__",
          "callee": "super",
          "line": 42,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter.__init__",
          "callee": "info",
          "line": 47,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.__init__",
          "callee": "warning",
          "line": 50,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.__init__",
          "callee": "ImportError",
          "line": 52,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._on_connect",
          "callee": "info",
          "line": 77,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._on_connect",
          "callee": "subscribe",
          "line": 80,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._on_connect",
          "callee": "debug",
          "line": 81,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._on_connect",
          "callee": "error",
          "line": 83,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._on_message",
          "callee": "loads",
          "line": 88,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._on_message",
          "callee": "decode",
          "line": 88,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._on_message",
          "callee": "debug",
          "line": 90,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._on_message",
          "callee": "warning",
          "line": 92,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._on_message",
          "callee": "str",
          "line": 92,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._on_disconnect",
          "callee": "info",
          "line": 96,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.connect",
          "callee": "info",
          "line": 101,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.connect",
          "callee": "BambuFTPService",
          "line": 108,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter.connect",
          "callee": "test_connection",
          "line": 110,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.connect",
          "callee": "info",
          "line": 112,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.connect",
          "callee": "warning",
          "line": 115,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.connect",
          "callee": "warning",
          "line": 119,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.connect",
          "callee": "str",
          "line": 120,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter.connect",
          "callee": "_connect_bambu_api",
          "line": 124,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.connect",
          "callee": "_connect_mqtt",
          "line": 126,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.connect",
          "callee": "error",
          "line": 129,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.connect",
          "callee": "str",
          "line": 130,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter.connect",
          "callee": "PrinterConnectionError",
          "line": 131,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter.connect",
          "callee": "str",
          "line": 131,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._connect_bambu_api",
          "callee": "info",
          "line": 135,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._connect_bambu_api",
          "callee": "BambuClient",
          "line": 139,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._connect_bambu_api",
          "callee": "connect",
          "line": 150,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._connect_bambu_api",
          "callee": "hasattr",
          "line": 153,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._connect_bambu_api",
          "callee": "request_status",
          "line": 154,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._connect_bambu_api",
          "callee": "hasattr",
          "line": 157,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._connect_bambu_api",
          "callee": "request_file_list",
          "line": 158,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._connect_bambu_api",
          "callee": "info",
          "line": 161,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._connect_mqtt",
          "callee": "info",
          "line": 167,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._connect_mqtt",
          "callee": "Client",
          "line": 171,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._connect_mqtt",
          "callee": "username_pw_set",
          "line": 172,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._connect_mqtt",
          "callee": "create_default_context",
          "line": 175,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._connect_mqtt",
          "callee": "tls_set_context",
          "line": 178,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._connect_mqtt",
          "callee": "connect",
          "line": 186,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._connect_mqtt",
          "callee": "ConnectionError",
          "line": 188,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._connect_mqtt",
          "callee": "loop_start",
          "line": 191,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._connect_mqtt",
          "callee": "sleep",
          "line": 194,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._connect_mqtt",
          "callee": "info",
          "line": 197,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._on_bambu_status_update",
          "callee": "debug",
          "line": 205,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._on_bambu_file_list_update",
          "callee": "isinstance",
          "line": 211,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._on_bambu_file_list_update",
          "callee": "isinstance",
          "line": 213,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._on_bambu_file_list_update",
          "callee": "isinstance",
          "line": 215,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._on_bambu_file_list_update",
          "callee": "get",
          "line": 216,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._on_bambu_file_list_update",
          "callee": "append",
          "line": 218,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._on_bambu_file_list_update",
          "callee": "PrinterFile",
          "line": 218,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._on_bambu_file_list_update",
          "callee": "get",
          "line": 220,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._on_bambu_file_list_update",
          "callee": "get",
          "line": 221,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._on_bambu_file_list_update",
          "callee": "_get_file_type_from_name",
          "line": 223,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._on_bambu_file_list_update",
          "callee": "now",
          "line": 227,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._on_bambu_file_list_update",
          "callee": "info",
          "line": 229,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._on_bambu_file_list_update",
          "callee": "len",
          "line": 230,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._on_bambu_file_list_update",
          "callee": "warning",
          "line": 233,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._on_bambu_file_list_update",
          "callee": "str",
          "line": 234,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter.disconnect",
          "callee": "disconnect",
          "line": 243,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.disconnect",
          "callee": "loop_stop",
          "line": 247,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.disconnect",
          "callee": "disconnect",
          "line": 248,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.disconnect",
          "callee": "info",
          "line": 253,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.disconnect",
          "callee": "error",
          "line": 256,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.disconnect",
          "callee": "str",
          "line": 257,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter.get_status",
          "callee": "PrinterConnectionError",
          "line": 265,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter.get_status",
          "callee": "_get_status_bambu_api",
          "line": 269,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.get_status",
          "callee": "_get_status_mqtt",
          "line": 271,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.get_status",
          "callee": "error",
          "line": 274,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.get_status",
          "callee": "str",
          "line": 275,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter.get_status",
          "callee": "PrinterStatusUpdate",
          "line": 276,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter.get_status",
          "callee": "str",
          "line": 279,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter.get_status",
          "callee": "now",
          "line": 280,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "PrinterConnectionError",
          "line": 286,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "get_current_state",
          "line": 290,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "debug",
          "line": 294,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "str",
          "line": 295,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "type",
          "line": 300,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "hasattr",
          "line": 303,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "get_state",
          "line": 305,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "get_bed_temperature",
          "line": 312,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "get_nozzle_temperature",
          "line": 313,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "get_percentage",
          "line": 320,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "hasattr",
          "line": 328,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "getattr",
          "line": 329,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "method",
          "line": 330,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "isinstance",
          "line": 331,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "strip",
          "line": 331,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "strip",
          "line": 332,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "hasattr",
          "line": 334,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "hasattr",
          "line": 340,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "hasattr",
          "line": 342,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "info",
          "line": 345,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "debug",
          "line": 353,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "str",
          "line": 354,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "PrinterStatusUpdate",
          "line": 358,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "now",
          "line": 363,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "getattr",
          "line": 368,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "getattr",
          "line": 369,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "_map_bambu_status",
          "line": 372,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "hasattr",
          "line": 385,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "mqtt_dump",
          "line": 386,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "isinstance",
          "line": 387,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "isinstance",
          "line": 389,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "float",
          "line": 391,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "get",
          "line": 391,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "float",
          "line": 392,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "get",
          "line": 392,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "int",
          "line": 395,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "get",
          "line": 395,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "int",
          "line": 401,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "int",
          "line": 409,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "now",
          "line": 414,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "timedelta",
          "line": 414,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "debug",
          "line": 417,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "list",
          "line": 422,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "keys",
          "line": 422,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "hasattr",
          "line": 425,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "float",
          "line": 426,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "get_bed_temperature",
          "line": 426,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "hasattr",
          "line": 428,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "float",
          "line": 429,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "get_nozzle_temperature",
          "line": 429,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "hasattr",
          "line": 431,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "int",
          "line": 432,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "get_percentage",
          "line": 432,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "hasattr",
          "line": 435,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "int",
          "line": 436,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "current_layer_num",
          "line": 436,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "hasattr",
          "line": 439,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "subtask_name",
          "line": 440,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "isinstance",
          "line": 441,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "strip",
          "line": 441,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "strip",
          "line": 442,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "hasattr",
          "line": 444,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "gcode_file",
          "line": 445,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "isinstance",
          "line": 446,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "strip",
          "line": 446,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "strip",
          "line": 447,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "startswith",
          "line": 449,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "debug",
          "line": 453,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "str",
          "line": 454,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "getattr",
          "line": 457,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "getattr",
          "line": 458,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "getattr",
          "line": 459,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "getattr",
          "line": 460,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "_map_bambu_status",
          "line": 503,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "startswith",
          "line": 521,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "find_file_by_name",
          "line": 524,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "get",
          "line": 526,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "get",
          "line": 527,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "debug",
          "line": 528,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "debug",
          "line": 534,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "str",
          "line": 537,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "debug",
          "line": 546,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "PrinterStatusUpdate",
          "line": 554,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "float",
          "line": 558,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "float",
          "line": 559,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "int",
          "line": 560,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "now",
          "line": 567,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_status_bambu_api",
          "callee": "hasattr",
          "line": 568,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_status_mqtt",
          "callee": "PrinterConnectionError",
          "line": 574,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_status_mqtt",
          "callee": "get",
          "line": 577,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_status_mqtt",
          "callee": "get",
          "line": 580,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_status_mqtt",
          "callee": "get",
          "line": 581,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_status_mqtt",
          "callee": "get",
          "line": 582,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_status_mqtt",
          "callee": "get",
          "line": 583,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_status_mqtt",
          "callee": "int",
          "line": 592,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_status_mqtt",
          "callee": "now",
          "line": 597,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_status_mqtt",
          "callee": "timedelta",
          "line": 597,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_status_mqtt",
          "callee": "get",
          "line": 622,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_status_mqtt",
          "callee": "hasattr",
          "line": 625,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_status_mqtt",
          "callee": "hasattr",
          "line": 630,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_status_mqtt",
          "callee": "getattr",
          "line": 631,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_status_mqtt",
          "callee": "method",
          "line": 632,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_status_mqtt",
          "callee": "isinstance",
          "line": 633,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_status_mqtt",
          "callee": "strip",
          "line": 633,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_status_mqtt",
          "callee": "strip",
          "line": 634,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_status_mqtt",
          "callee": "startswith",
          "line": 636,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_status_mqtt",
          "callee": "debug",
          "line": 638,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_status_mqtt",
          "callee": "debug",
          "line": 641,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_status_mqtt",
          "callee": "startswith",
          "line": 654,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_status_mqtt",
          "callee": "find_file_by_name",
          "line": 657,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_status_mqtt",
          "callee": "get",
          "line": 659,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_status_mqtt",
          "callee": "get",
          "line": 660,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_status_mqtt",
          "callee": "debug",
          "line": 661,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_status_mqtt",
          "callee": "debug",
          "line": 667,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_status_mqtt",
          "callee": "str",
          "line": 670,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_status_mqtt",
          "callee": "debug",
          "line": 676,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_status_mqtt",
          "callee": "PrinterStatusUpdate",
          "line": 683,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_status_mqtt",
          "callee": "float",
          "line": 687,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_status_mqtt",
          "callee": "float",
          "line": 688,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_status_mqtt",
          "callee": "int",
          "line": 689,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_status_mqtt",
          "callee": "now",
          "line": 696,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._map_bambu_status",
          "callee": "hasattr",
          "line": 703,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._map_bambu_status",
          "callee": "str",
          "line": 706,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._map_bambu_status",
          "callee": "get",
          "line": 748,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._map_bambu_status",
          "callee": "upper",
          "line": 748,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.get_job_info",
          "callee": "get",
          "line": 756,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.get_job_info",
          "callee": "get",
          "line": 757,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.get_job_info",
          "callee": "get",
          "line": 764,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.get_job_info",
          "callee": "strftime",
          "line": 764,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.get_job_info",
          "callee": "now",
          "line": 764,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.get_job_info",
          "callee": "get",
          "line": 765,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.get_job_info",
          "callee": "get",
          "line": 768,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.get_job_info",
          "callee": "JobInfo",
          "line": 776,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter.get_job_info",
          "callee": "strftime",
          "line": 777,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.get_job_info",
          "callee": "now",
          "line": 777,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.get_job_info",
          "callee": "error",
          "line": 787,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.get_job_info",
          "callee": "str",
          "line": 788,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._map_job_status",
          "callee": "hasattr",
          "line": 794,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._map_job_status",
          "callee": "str",
          "line": 797,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._map_job_status",
          "callee": "get",
          "line": 838,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._map_job_status",
          "callee": "upper",
          "line": 838,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.list_files",
          "callee": "PrinterConnectionError",
          "line": 843,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter.list_files",
          "callee": "_list_files_direct_ftp",
          "line": 848,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.list_files",
          "callee": "_list_files_bambu_api",
          "line": 850,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.list_files",
          "callee": "_list_files_mqtt",
          "line": 852,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.list_files",
          "callee": "error",
          "line": 855,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.list_files",
          "callee": "str",
          "line": 856,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter.list_files",
          "callee": "PrinterConnectionError",
          "line": 857,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter.list_files",
          "callee": "str",
          "line": 857,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._list_files_bambu_api",
          "callee": "PrinterConnectionError",
          "line": 862,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._list_files_bambu_api",
          "callee": "info",
          "line": 864,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._list_files_bambu_api",
          "callee": "hasattr",
          "line": 871,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._list_files_bambu_api",
          "callee": "hasattr",
          "line": 872,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._list_files_bambu_api",
          "callee": "now",
          "line": 873,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._list_files_bambu_api",
          "callee": "info",
          "line": 874,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._list_files_bambu_api",
          "callee": "len",
          "line": 875,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._list_files_bambu_api",
          "callee": "hasattr",
          "line": 879,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._list_files_bambu_api",
          "callee": "get_files",
          "line": 881,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._list_files_bambu_api",
          "callee": "append",
          "line": 884,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._list_files_bambu_api",
          "callee": "PrinterFile",
          "line": 884,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._list_files_bambu_api",
          "callee": "get",
          "line": 885,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._list_files_bambu_api",
          "callee": "get",
          "line": 886,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._list_files_bambu_api",
          "callee": "get",
          "line": 887,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._list_files_bambu_api",
          "callee": "_get_file_type_from_name",
          "line": 889,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._list_files_bambu_api",
          "callee": "get",
          "line": 889,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._list_files_bambu_api",
          "callee": "info",
          "line": 891,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._list_files_bambu_api",
          "callee": "len",
          "line": 892,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._list_files_bambu_api",
          "callee": "debug",
          "line": 895,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._list_files_bambu_api",
          "callee": "str",
          "line": 896,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._list_files_bambu_api",
          "callee": "hasattr",
          "line": 899,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._list_files_bambu_api",
          "callee": "_discover_files_via_ftp",
          "line": 901,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._list_files_bambu_api",
          "callee": "extend",
          "line": 902,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._list_files_bambu_api",
          "callee": "debug",
          "line": 904,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._list_files_bambu_api",
          "callee": "str",
          "line": 905,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._list_files_bambu_api",
          "callee": "len",
          "line": 908,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._list_files_bambu_api",
          "callee": "_discover_files_via_mqtt_dump",
          "line": 910,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._list_files_bambu_api",
          "callee": "extend",
          "line": 911,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._list_files_bambu_api",
          "callee": "debug",
          "line": 913,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._list_files_bambu_api",
          "callee": "str",
          "line": 914,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._list_files_bambu_api",
          "callee": "hasattr",
          "line": 917,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._list_files_bambu_api",
          "callee": "append",
          "line": 921,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._list_files_bambu_api",
          "callee": "PrinterFile",
          "line": 921,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._list_files_bambu_api",
          "callee": "_get_file_type_from_name",
          "line": 926,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._list_files_bambu_api",
          "callee": "debug",
          "line": 929,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._list_files_bambu_api",
          "callee": "str",
          "line": 930,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._list_files_bambu_api",
          "callee": "warning",
          "line": 933,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._list_files_bambu_api",
          "callee": "str",
          "line": 934,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._list_files_bambu_api",
          "callee": "len",
          "line": 937,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._list_files_bambu_api",
          "callee": "info",
          "line": 938,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._list_files_bambu_api",
          "callee": "info",
          "line": 941,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._list_files_bambu_api",
          "callee": "len",
          "line": 942,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._discover_files_via_ftp",
          "callee": "hasattr",
          "line": 950,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._discover_files_via_ftp",
          "callee": "hasattr",
          "line": 961,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._discover_files_via_ftp",
          "callee": "list_images_dir",
          "line": 963,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._discover_files_via_ftp",
          "callee": "endswith",
          "line": 965,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._discover_files_via_ftp",
          "callee": "lower",
          "line": 965,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._discover_files_via_ftp",
          "callee": "replace",
          "line": 967,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._discover_files_via_ftp",
          "callee": "replace",
          "line": 967,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._discover_files_via_ftp",
          "callee": "append",
          "line": 971,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._discover_files_via_ftp",
          "callee": "PrinterFile",
          "line": 971,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._discover_files_via_ftp",
          "callee": "debug",
          "line": 979,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._discover_files_via_ftp",
          "callee": "str",
          "line": 979,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._discover_files_via_ftp",
          "callee": "hasattr",
          "line": 982,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._discover_files_via_ftp",
          "callee": "list_cache_dir",
          "line": 984,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._discover_files_via_ftp",
          "callee": "isinstance",
          "line": 989,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._discover_files_via_ftp",
          "callee": "split",
          "line": 991,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._discover_files_via_ftp",
          "callee": "strip",
          "line": 991,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._discover_files_via_ftp",
          "callee": "len",
          "line": 992,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._discover_files_via_ftp",
          "callee": "join",
          "line": 993,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._discover_files_via_ftp",
          "callee": "int",
          "line": 996,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._discover_files_via_ftp",
          "callee": "str",
          "line": 1002,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._discover_files_via_ftp",
          "callee": "any",
          "line": 1004,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._discover_files_via_ftp",
          "callee": "endswith",
          "line": 1004,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._discover_files_via_ftp",
          "callee": "lower",
          "line": 1004,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._discover_files_via_ftp",
          "callee": "append",
          "line": 1005,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._discover_files_via_ftp",
          "callee": "PrinterFile",
          "line": 1005,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._discover_files_via_ftp",
          "callee": "_get_file_type_from_name",
          "line": 1010,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._discover_files_via_ftp",
          "callee": "debug",
          "line": 1013,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._discover_files_via_ftp",
          "callee": "str",
          "line": 1013,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._discover_files_via_ftp",
          "callee": "debug",
          "line": 1016,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._discover_files_via_ftp",
          "callee": "str",
          "line": 1016,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._discover_files_via_mqtt_dump",
          "callee": "hasattr",
          "line": 1025,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._discover_files_via_mqtt_dump",
          "callee": "mqtt_dump",
          "line": 1026,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._discover_files_via_mqtt_dump",
          "callee": "isinstance",
          "line": 1029,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._discover_files_via_mqtt_dump",
          "callee": "isinstance",
          "line": 1033,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._discover_files_via_mqtt_dump",
          "callee": "isinstance",
          "line": 1037,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._discover_files_via_mqtt_dump",
          "callee": "append",
          "line": 1038,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._discover_files_via_mqtt_dump",
          "callee": "PrinterFile",
          "line": 1038,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._discover_files_via_mqtt_dump",
          "callee": "_get_file_type_from_name",
          "line": 1043,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._discover_files_via_mqtt_dump",
          "callee": "isinstance",
          "line": 1049,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._discover_files_via_mqtt_dump",
          "callee": "any",
          "line": 1051,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._discover_files_via_mqtt_dump",
          "callee": "endswith",
          "line": 1051,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._discover_files_via_mqtt_dump",
          "callee": "lower",
          "line": 1051,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._discover_files_via_mqtt_dump",
          "callee": "append",
          "line": 1053,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._discover_files_via_mqtt_dump",
          "callee": "PrinterFile",
          "line": 1053,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._discover_files_via_mqtt_dump",
          "callee": "_get_file_type_from_name",
          "line": 1058,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._discover_files_via_mqtt_dump",
          "callee": "isinstance",
          "line": 1064,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._discover_files_via_mqtt_dump",
          "callee": "isinstance",
          "line": 1069,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._discover_files_via_mqtt_dump",
          "callee": "isinstance",
          "line": 1071,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._discover_files_via_mqtt_dump",
          "callee": "isinstance",
          "line": 1073,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._discover_files_via_mqtt_dump",
          "callee": "append",
          "line": 1075,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._discover_files_via_mqtt_dump",
          "callee": "PrinterFile",
          "line": 1075,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._discover_files_via_mqtt_dump",
          "callee": "get",
          "line": 1077,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._discover_files_via_mqtt_dump",
          "callee": "_get_file_type_from_name",
          "line": 1080,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._discover_files_via_mqtt_dump",
          "callee": "debug",
          "line": 1084,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._discover_files_via_mqtt_dump",
          "callee": "str",
          "line": 1084,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._list_files_mqtt",
          "callee": "_list_files_mqtt_from_bambu_api",
          "line": 1092,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._list_files_mqtt",
          "callee": "PrinterConnectionError",
          "line": 1096,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._list_files_mqtt",
          "callee": "info",
          "line": 1098,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._list_files_mqtt",
          "callee": "isinstance",
          "line": 1105,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._list_files_mqtt",
          "callee": "get",
          "line": 1107,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._list_files_mqtt",
          "callee": "isinstance",
          "line": 1108,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._list_files_mqtt",
          "callee": "get",
          "line": 1110,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._list_files_mqtt",
          "callee": "isinstance",
          "line": 1111,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._list_files_mqtt",
          "callee": "append",
          "line": 1112,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._list_files_mqtt",
          "callee": "PrinterFile",
          "line": 1112,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._list_files_mqtt",
          "callee": "_get_file_type_from_name",
          "line": 1117,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._list_files_mqtt",
          "callee": "get",
          "line": 1121,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._list_files_mqtt",
          "callee": "isinstance",
          "line": 1122,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._list_files_mqtt",
          "callee": "any",
          "line": 1125,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._list_files_mqtt",
          "callee": "endswith",
          "line": 1125,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._list_files_mqtt",
          "callee": "lower",
          "line": 1125,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._list_files_mqtt",
          "callee": "append",
          "line": 1127,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._list_files_mqtt",
          "callee": "PrinterFile",
          "line": 1127,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._list_files_mqtt",
          "callee": "_get_file_type_from_name",
          "line": 1132,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._list_files_mqtt",
          "callee": "isinstance",
          "line": 1141,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._list_files_mqtt",
          "callee": "items",
          "line": 1143,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._list_files_mqtt",
          "callee": "isinstance",
          "line": 1144,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._list_files_mqtt",
          "callee": "any",
          "line": 1145,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._list_files_mqtt",
          "callee": "endswith",
          "line": 1145,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._list_files_mqtt",
          "callee": "lower",
          "line": 1145,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._list_files_mqtt",
          "callee": "append",
          "line": 1147,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._list_files_mqtt",
          "callee": "PrinterFile",
          "line": 1147,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._list_files_mqtt",
          "callee": "_get_file_type_from_name",
          "line": 1152,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._list_files_mqtt",
          "callee": "len",
          "line": 1156,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._list_files_mqtt",
          "callee": "info",
          "line": 1157,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._list_files_mqtt",
          "callee": "debug",
          "line": 1159,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._list_files_mqtt",
          "callee": "list",
          "line": 1159,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._list_files_mqtt",
          "callee": "keys",
          "line": 1159,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._list_files_mqtt",
          "callee": "info",
          "line": 1161,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._list_files_mqtt",
          "callee": "len",
          "line": 1162,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._list_files_mqtt",
          "callee": "warning",
          "line": 1165,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._list_files_mqtt",
          "callee": "str",
          "line": 1166,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._list_files_mqtt_from_bambu_api",
          "callee": "hasattr",
          "line": 1176,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._list_files_mqtt_from_bambu_api",
          "callee": "mqtt_dump",
          "line": 1177,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._list_files_mqtt_from_bambu_api",
          "callee": "isinstance",
          "line": 1179,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._list_files_mqtt_from_bambu_api",
          "callee": "isinstance",
          "line": 1183,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._list_files_mqtt_from_bambu_api",
          "callee": "isinstance",
          "line": 1187,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._list_files_mqtt_from_bambu_api",
          "callee": "append",
          "line": 1188,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._list_files_mqtt_from_bambu_api",
          "callee": "PrinterFile",
          "line": 1188,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._list_files_mqtt_from_bambu_api",
          "callee": "_get_file_type_from_name",
          "line": 1193,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._list_files_mqtt_from_bambu_api",
          "callee": "isinstance",
          "line": 1199,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._list_files_mqtt_from_bambu_api",
          "callee": "any",
          "line": 1201,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._list_files_mqtt_from_bambu_api",
          "callee": "endswith",
          "line": 1201,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._list_files_mqtt_from_bambu_api",
          "callee": "lower",
          "line": 1201,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._list_files_mqtt_from_bambu_api",
          "callee": "append",
          "line": 1203,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._list_files_mqtt_from_bambu_api",
          "callee": "PrinterFile",
          "line": 1203,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._list_files_mqtt_from_bambu_api",
          "callee": "_get_file_type_from_name",
          "line": 1208,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._list_files_mqtt_from_bambu_api",
          "callee": "info",
          "line": 1211,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._list_files_mqtt_from_bambu_api",
          "callee": "len",
          "line": 1212,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._list_files_mqtt_from_bambu_api",
          "callee": "debug",
          "line": 1215,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._list_files_mqtt_from_bambu_api",
          "callee": "str",
          "line": 1216,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._list_files_direct_ftp",
          "callee": "PrinterConnectionError",
          "line": 1223,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._list_files_direct_ftp",
          "callee": "info",
          "line": 1225,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._list_files_direct_ftp",
          "callee": "list_files",
          "line": 1230,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._list_files_direct_ftp",
          "callee": "PrinterFile",
          "line": 1235,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._list_files_direct_ftp",
          "callee": "append",
          "line": 1242,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._list_files_direct_ftp",
          "callee": "info",
          "line": 1244,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._list_files_direct_ftp",
          "callee": "len",
          "line": 1246,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._list_files_direct_ftp",
          "callee": "error",
          "line": 1251,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._list_files_direct_ftp",
          "callee": "str",
          "line": 1252,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._download_file_direct_ftp",
          "callee": "warning",
          "line": 1258,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_file_direct_ftp",
          "callee": "_download_file_bambu_api",
          "line": 1260,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_file_direct_ftp",
          "callee": "info",
          "line": 1262,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_file_direct_ftp",
          "callee": "download_file",
          "line": 1267,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_file_direct_ftp",
          "callee": "info",
          "line": 1270,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_file_direct_ftp",
          "callee": "warning",
          "line": 1274,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_file_direct_ftp",
          "callee": "_download_file_bambu_api",
          "line": 1277,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_file_direct_ftp",
          "callee": "error",
          "line": 1280,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_file_direct_ftp",
          "callee": "str",
          "line": 1281,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._download_file_direct_ftp",
          "callee": "_download_file_bambu_api",
          "line": 1283,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_file_type_from_name",
          "callee": "lower",
          "line": 1288,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._get_file_type_from_name",
          "callee": "Path",
          "line": 1288,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._get_file_type_from_name",
          "callee": "get",
          "line": 1297,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.download_file",
          "callee": "PrinterConnectionError",
          "line": 1302,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter.download_file",
          "callee": "_download_file_direct_ftp",
          "line": 1307,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.download_file",
          "callee": "_download_file_bambu_api",
          "line": 1309,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.download_file",
          "callee": "_download_file_mqtt",
          "line": 1311,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.download_file",
          "callee": "error",
          "line": 1314,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.download_file",
          "callee": "str",
          "line": 1315,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._download_file_bambu_api",
          "callee": "PrinterConnectionError",
          "line": 1321,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._download_file_bambu_api",
          "callee": "info",
          "line": 1323,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_file_bambu_api",
          "callee": "hasattr",
          "line": 1327,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._download_file_bambu_api",
          "callee": "mkdir",
          "line": 1333,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_file_bambu_api",
          "callee": "Path",
          "line": 1333,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._download_file_bambu_api",
          "callee": "debug",
          "line": 1335,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_file_bambu_api",
          "callee": "download_file",
          "line": 1339,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_file_bambu_api",
          "callee": "getvalue",
          "line": 1342,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_file_bambu_api",
          "callee": "len",
          "line": 1343,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._download_file_bambu_api",
          "callee": "open",
          "line": 1345,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._download_file_bambu_api",
          "callee": "write",
          "line": 1346,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_file_bambu_api",
          "callee": "info",
          "line": 1348,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_file_bambu_api",
          "callee": "len",
          "line": 1351,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._download_file_bambu_api",
          "callee": "debug",
          "line": 1354,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_file_bambu_api",
          "callee": "debug",
          "line": 1357,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_file_bambu_api",
          "callee": "debug",
          "line": 1361,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_file_bambu_api",
          "callee": "str",
          "line": 1362,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._download_file_bambu_api",
          "callee": "_download_via_http",
          "line": 1366,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_file_bambu_api",
          "callee": "info",
          "line": 1368,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_file_bambu_api",
          "callee": "warning",
          "line": 1372,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_file_bambu_api",
          "callee": "str",
          "line": 1373,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._download_file_bambu_api",
          "callee": "warning",
          "line": 1375,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_file_mqtt",
          "callee": "warning",
          "line": 1382,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_via_ftp",
          "callee": "mkdir",
          "line": 1393,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_via_ftp",
          "callee": "Path",
          "line": 1393,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._download_via_ftp",
          "callee": "debug",
          "line": 1405,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_via_ftp",
          "callee": "download_file",
          "line": 1411,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_via_ftp",
          "callee": "getvalue",
          "line": 1415,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_via_ftp",
          "callee": "len",
          "line": 1417,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._download_via_ftp",
          "callee": "open",
          "line": 1419,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._download_via_ftp",
          "callee": "write",
          "line": 1420,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_via_ftp",
          "callee": "info",
          "line": 1422,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_via_ftp",
          "callee": "len",
          "line": 1426,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._download_via_ftp",
          "callee": "debug",
          "line": 1429,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_via_ftp",
          "callee": "debug",
          "line": 1434,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_via_ftp",
          "callee": "str",
          "line": 1437,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._download_via_ftp",
          "callee": "debug",
          "line": 1442,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._safe_list",
          "callee": "hasattr",
          "line": 1450,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._safe_list",
          "callee": "getattr",
          "line": 1452,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._download_via_ftp",
          "callee": "lower",
          "line": 1459,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_via_ftp",
          "callee": "_safe_list",
          "line": 1464,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._download_via_ftp",
          "callee": "_safe_list",
          "line": 1464,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._download_via_ftp",
          "callee": "isinstance",
          "line": 1469,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._download_via_ftp",
          "callee": "get",
          "line": 1470,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_via_ftp",
          "callee": "get",
          "line": 1470,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_via_ftp",
          "callee": "get",
          "line": 1471,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_via_ftp",
          "callee": "str",
          "line": 1473,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._download_via_ftp",
          "callee": "append",
          "line": 1477,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_via_ftp",
          "callee": "debug",
          "line": 1479,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_via_ftp",
          "callee": "str",
          "line": 1479,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._download_via_ftp",
          "callee": "next",
          "line": 1483,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._download_via_ftp",
          "callee": "lower",
          "line": 1483,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_via_ftp",
          "callee": "startswith",
          "line": 1486,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_via_ftp",
          "callee": "debug",
          "line": 1488,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_via_ftp",
          "callee": "download_file",
          "line": 1489,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_via_ftp",
          "callee": "getvalue",
          "line": 1491,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_via_ftp",
          "callee": "open",
          "line": 1493,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._download_via_ftp",
          "callee": "write",
          "line": 1494,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_via_ftp",
          "callee": "info",
          "line": 1495,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_via_ftp",
          "callee": "len",
          "line": 1495,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._download_via_ftp",
          "callee": "debug",
          "line": 1498,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_via_ftp",
          "callee": "str",
          "line": 1498,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._download_via_ftp",
          "callee": "rsplit",
          "line": 1501,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_via_ftp",
          "callee": "lower",
          "line": 1504,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_via_ftp",
          "callee": "append",
          "line": 1506,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.rank",
          "callee": "lower",
          "line": 1512,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.rank",
          "callee": "endswith",
          "line": 1514,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.rank",
          "callee": "endswith",
          "line": 1515,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.rank",
          "callee": "startswith",
          "line": 1516,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_via_ftp",
          "callee": "sort",
          "line": 1519,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_via_ftp",
          "callee": "startswith",
          "line": 1522,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_via_ftp",
          "callee": "debug",
          "line": 1524,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_via_ftp",
          "callee": "download_file",
          "line": 1525,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_via_ftp",
          "callee": "getvalue",
          "line": 1527,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_via_ftp",
          "callee": "open",
          "line": 1529,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._download_via_ftp",
          "callee": "write",
          "line": 1530,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_via_ftp",
          "callee": "info",
          "line": 1531,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_via_ftp",
          "callee": "len",
          "line": 1531,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._download_via_ftp",
          "callee": "debug",
          "line": 1534,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_via_ftp",
          "callee": "str",
          "line": 1534,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._download_via_ftp",
          "callee": "split",
          "line": 1538,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_via_ftp",
          "callee": "lower",
          "line": 1538,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_via_ftp",
          "callee": "warning",
          "line": 1539,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_via_ftp",
          "callee": "warning",
          "line": 1541,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_via_ftp",
          "callee": "debug",
          "line": 1543,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_via_ftp",
          "callee": "str",
          "line": 1543,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._download_via_ftp",
          "callee": "warning",
          "line": 1545,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_via_ftp",
          "callee": "error",
          "line": 1550,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_via_ftp",
          "callee": "str",
          "line": 1551,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._download_via_http",
          "callee": "mkdir",
          "line": 1561,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_via_http",
          "callee": "Path",
          "line": 1561,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._download_via_http",
          "callee": "ClientTimeout",
          "line": 1573,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_via_http",
          "callee": "ClientSession",
          "line": 1575,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_via_http",
          "callee": "debug",
          "line": 1578,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_via_http",
          "callee": "hasattr",
          "line": 1583,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._download_via_http",
          "callee": "BasicAuth",
          "line": 1584,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_via_http",
          "callee": "get",
          "line": 1586,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_via_http",
          "callee": "get",
          "line": 1589,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_via_http",
          "callee": "int",
          "line": 1590,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._download_via_http",
          "callee": "open",
          "line": 1593,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._download_via_http",
          "callee": "iter_chunked",
          "line": 1594,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_via_http",
          "callee": "write",
          "line": 1595,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_via_http",
          "callee": "len",
          "line": 1596,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._download_via_http",
          "callee": "debug",
          "line": 1601,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_via_http",
          "callee": "info",
          "line": 1606,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_via_http",
          "callee": "debug",
          "line": 1614,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_via_http",
          "callee": "debug",
          "line": 1617,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_via_http",
          "callee": "debug",
          "line": 1620,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_via_http",
          "callee": "debug",
          "line": 1625,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_via_http",
          "callee": "str",
          "line": 1626,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._download_via_http",
          "callee": "debug",
          "line": 1629,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_via_http",
          "callee": "str",
          "line": 1630,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter._download_via_http",
          "callee": "warning",
          "line": 1633,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_via_http",
          "callee": "error",
          "line": 1638,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter._download_via_http",
          "callee": "str",
          "line": 1639,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter.pause_print",
          "callee": "PrinterConnectionError",
          "line": 1645,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter.pause_print",
          "callee": "info",
          "line": 1648,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.pause_print",
          "callee": "pause",
          "line": 1651,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.pause_print",
          "callee": "info",
          "line": 1654,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.pause_print",
          "callee": "warning",
          "line": 1657,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.pause_print",
          "callee": "error",
          "line": 1661,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.pause_print",
          "callee": "str",
          "line": 1662,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter.resume_print",
          "callee": "PrinterConnectionError",
          "line": 1668,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter.resume_print",
          "callee": "info",
          "line": 1671,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.resume_print",
          "callee": "resume",
          "line": 1674,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.resume_print",
          "callee": "info",
          "line": 1677,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.resume_print",
          "callee": "warning",
          "line": 1680,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.resume_print",
          "callee": "error",
          "line": 1684,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.resume_print",
          "callee": "str",
          "line": 1685,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter.stop_print",
          "callee": "PrinterConnectionError",
          "line": 1691,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter.stop_print",
          "callee": "info",
          "line": 1694,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.stop_print",
          "callee": "stop",
          "line": 1697,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.stop_print",
          "callee": "info",
          "line": 1700,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.stop_print",
          "callee": "warning",
          "line": 1703,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.stop_print",
          "callee": "error",
          "line": 1707,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.stop_print",
          "callee": "str",
          "line": 1708,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter.has_camera",
          "callee": "get_camera_stream_url",
          "line": 1719,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.has_camera",
          "callee": "debug",
          "line": 1722,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.has_camera",
          "callee": "str",
          "line": 1722,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter.get_camera_stream_url",
          "callee": "warning",
          "line": 1728,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.get_camera_stream_url",
          "callee": "debug",
          "line": 1737,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.get_camera_stream_url",
          "callee": "error",
          "line": 1742,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.get_camera_stream_url",
          "callee": "str",
          "line": 1743,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter.take_snapshot",
          "callee": "warning",
          "line": 1749,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.take_snapshot",
          "callee": "info",
          "line": 1759,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.take_snapshot",
          "callee": "ClientSession",
          "line": 1762,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.take_snapshot",
          "callee": "ClientTimeout",
          "line": 1762,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.take_snapshot",
          "callee": "get",
          "line": 1763,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.take_snapshot",
          "callee": "read",
          "line": 1765,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.take_snapshot",
          "callee": "info",
          "line": 1766,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.take_snapshot",
          "callee": "len",
          "line": 1768,
          "type": "direct"
        },
        {
          "caller": "BambuLabPrinter.take_snapshot",
          "callee": "warning",
          "line": 1771,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.take_snapshot",
          "callee": "error",
          "line": 1777,
          "type": "attribute"
        },
        {
          "caller": "BambuLabPrinter.take_snapshot",
          "callee": "str",
          "line": 1778,
          "type": "direct"
        }
      ],
      "error": null
    },
    {
      "filepath": "src\\printers\\base.py",
      "functions": [
        {
          "name": "__init__",
          "full_name": "PrinterFile.__init__",
          "class": "PrinterFile",
          "signature": "(self, filename: str, size: Optional[int], modified: Optional[datetime], path: Optional[str], file_type: Optional[str])",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 33,
          "line_end": 40,
          "access_level": "dunder",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_guess_file_type",
          "full_name": "PrinterFile._guess_file_type",
          "class": "PrinterFile",
          "signature": "(self, filename: str)",
          "return_type": "str",
          "decorators": [],
          "docstring": "Guess file type from filename extension.",
          "line_start": 42,
          "line_end": 55,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "__repr__",
          "full_name": "PrinterFile.__repr__",
          "class": "PrinterFile",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 57,
          "line_end": 58,
          "access_level": "dunder",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "__init__",
          "full_name": "JobInfo.__init__",
          "class": "JobInfo",
          "signature": "(self, job_id: str, name: str, status: JobStatus, progress: Optional[int], estimated_time: Optional[int], elapsed_time: Optional[int])",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 63,
          "line_end": 73,
          "access_level": "dunder",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "__repr__",
          "full_name": "JobInfo.__repr__",
          "class": "JobInfo",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 75,
          "line_end": 76,
          "access_level": "dunder",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "connect",
          "full_name": "PrinterInterface.connect",
          "class": "PrinterInterface",
          "signature": "(self)",
          "return_type": "bool",
          "decorators": [
            "abstractmethod"
          ],
          "docstring": "Establish connection to the printer.",
          "line_start": 83,
          "line_end": 85,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "disconnect",
          "full_name": "PrinterInterface.disconnect",
          "class": "PrinterInterface",
          "signature": "(self)",
          "return_type": "None",
          "decorators": [
            "abstractmethod"
          ],
          "docstring": "Disconnect from the printer.",
          "line_start": 88,
          "line_end": 90,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_status",
          "full_name": "PrinterInterface.get_status",
          "class": "PrinterInterface",
          "signature": "(self)",
          "return_type": "PrinterStatusUpdate",
          "decorators": [
            "abstractmethod"
          ],
          "docstring": "Get current printer status.",
          "line_start": 93,
          "line_end": 95,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_job_info",
          "full_name": "PrinterInterface.get_job_info",
          "class": "PrinterInterface",
          "signature": "(self)",
          "return_type": "Optional[JobInfo]",
          "decorators": [
            "abstractmethod"
          ],
          "docstring": "Get current job information.",
          "line_start": 98,
          "line_end": 100,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "list_files",
          "full_name": "PrinterInterface.list_files",
          "class": "PrinterInterface",
          "signature": "(self)",
          "return_type": "List[PrinterFile]",
          "decorators": [
            "abstractmethod"
          ],
          "docstring": "List files available on the printer.",
          "line_start": 103,
          "line_end": 105,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "download_file",
          "full_name": "PrinterInterface.download_file",
          "class": "PrinterInterface",
          "signature": "(self, filename: str, local_path: str)",
          "return_type": "bool",
          "decorators": [
            "abstractmethod"
          ],
          "docstring": "Download a file from the printer.",
          "line_start": 108,
          "line_end": 110,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "pause_print",
          "full_name": "PrinterInterface.pause_print",
          "class": "PrinterInterface",
          "signature": "(self)",
          "return_type": "bool",
          "decorators": [
            "abstractmethod"
          ],
          "docstring": "Pause the current print job.",
          "line_start": 113,
          "line_end": 115,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "resume_print",
          "full_name": "PrinterInterface.resume_print",
          "class": "PrinterInterface",
          "signature": "(self)",
          "return_type": "bool",
          "decorators": [
            "abstractmethod"
          ],
          "docstring": "Resume the paused print job.",
          "line_start": 118,
          "line_end": 120,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "stop_print",
          "full_name": "PrinterInterface.stop_print",
          "class": "PrinterInterface",
          "signature": "(self)",
          "return_type": "bool",
          "decorators": [
            "abstractmethod"
          ],
          "docstring": "Stop/cancel the current print job.",
          "line_start": 123,
          "line_end": 125,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "has_camera",
          "full_name": "PrinterInterface.has_camera",
          "class": "PrinterInterface",
          "signature": "(self)",
          "return_type": "bool",
          "decorators": [
            "abstractmethod"
          ],
          "docstring": "Check if printer has camera support.",
          "line_start": 128,
          "line_end": 130,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_camera_stream_url",
          "full_name": "PrinterInterface.get_camera_stream_url",
          "class": "PrinterInterface",
          "signature": "(self)",
          "return_type": "Optional[str]",
          "decorators": [
            "abstractmethod"
          ],
          "docstring": "Get camera stream URL if available.",
          "line_start": 133,
          "line_end": 135,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "take_snapshot",
          "full_name": "PrinterInterface.take_snapshot",
          "class": "PrinterInterface",
          "signature": "(self)",
          "return_type": "Optional[bytes]",
          "decorators": [
            "abstractmethod"
          ],
          "docstring": "Take a camera snapshot and return image data.",
          "line_start": 138,
          "line_end": 140,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "__init__",
          "full_name": "BasePrinter.__init__",
          "class": "BasePrinter",
          "signature": "(self, printer_id: str, name: str, ip_address: str)",
          "return_type": "",
          "decorators": [],
          "docstring": "Initialize base printer.",
          "line_start": 146,
          "line_end": 166,
          "access_level": "dunder",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "start_monitoring",
          "full_name": "BasePrinter.start_monitoring",
          "class": "BasePrinter",
          "signature": "(self, interval: int)",
          "return_type": "None",
          "decorators": [],
          "docstring": "Start periodic status monitoring.",
          "line_start": 168,
          "line_end": 183,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "stop_monitoring",
          "full_name": "BasePrinter.stop_monitoring",
          "class": "BasePrinter",
          "signature": "(self)",
          "return_type": "None",
          "decorators": [],
          "docstring": "Stop status monitoring.",
          "line_start": 185,
          "line_end": 201,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_monitor_loop",
          "full_name": "BasePrinter._monitor_loop",
          "class": "BasePrinter",
          "signature": "(self, interval: int)",
          "return_type": "None",
          "decorators": [],
          "docstring": "Internal monitoring loop with exponential backoff on failures.",
          "line_start": 203,
          "line_end": 242,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "add_status_callback",
          "full_name": "BasePrinter.add_status_callback",
          "class": "BasePrinter",
          "signature": "(self, callback: Callable[[PrinterStatusUpdate], None])",
          "return_type": "None",
          "decorators": [],
          "docstring": "Add a status update callback.",
          "line_start": 244,
          "line_end": 246,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "remove_status_callback",
          "full_name": "BasePrinter.remove_status_callback",
          "class": "BasePrinter",
          "signature": "(self, callback: Callable[[PrinterStatusUpdate], None])",
          "return_type": "None",
          "decorators": [],
          "docstring": "Remove a status update callback.",
          "line_start": 248,
          "line_end": 251,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "health_check",
          "full_name": "BasePrinter.health_check",
          "class": "BasePrinter",
          "signature": "(self)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Check if printer is healthy and responsive.",
          "line_start": 253,
          "line_end": 259,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_connection_info",
          "full_name": "BasePrinter.get_connection_info",
          "class": "BasePrinter",
          "signature": "(self)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Get connection information for debugging.",
          "line_start": 261,
          "line_end": 270,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_monitoring_metrics",
          "full_name": "BasePrinter.get_monitoring_metrics",
          "class": "BasePrinter",
          "signature": "(self)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Get basic monitoring metrics for this printer.",
          "line_start": 272,
          "line_end": 283,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "__aenter__",
          "full_name": "BasePrinter.__aenter__",
          "class": "BasePrinter",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Async context manager entry.",
          "line_start": 285,
          "line_end": 288,
          "access_level": "dunder",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "__aexit__",
          "full_name": "BasePrinter.__aexit__",
          "class": "BasePrinter",
          "signature": "(self, exc_type, exc_val, exc_tb)",
          "return_type": "",
          "decorators": [],
          "docstring": "Async context manager exit.",
          "line_start": 290,
          "line_end": 292,
          "access_level": "dunder",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "from_import",
          "module": "abc",
          "name": "ABC",
          "alias": null,
          "line": 5
        },
        {
          "type": "from_import",
          "module": "abc",
          "name": "abstractmethod",
          "alias": null,
          "line": 5
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Dict",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Any",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Optional",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "List",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Callable",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "AsyncGenerator",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 7
        },
        {
          "type": "import",
          "module": "time",
          "alias": null,
          "line": 8
        },
        {
          "type": "import",
          "module": "random",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "enum",
          "name": "Enum",
          "alias": null,
          "line": 10
        },
        {
          "type": "import",
          "module": "asyncio",
          "alias": null,
          "line": 11
        },
        {
          "type": "import",
          "module": "structlog",
          "alias": null,
          "line": 12
        },
        {
          "type": "from_import",
          "module": "src.models.printer",
          "name": "PrinterStatus",
          "alias": null,
          "line": 14
        },
        {
          "type": "from_import",
          "module": "src.models.printer",
          "name": "PrinterStatusUpdate",
          "alias": null,
          "line": 14
        },
        {
          "type": "from_import",
          "module": "src.utils.exceptions",
          "name": "PrinterConnectionError",
          "alias": null,
          "line": 15
        }
      ],
      "function_calls": [
        {
          "caller": "PrinterFile.__init__",
          "callee": "now",
          "line": 38,
          "type": "attribute"
        },
        {
          "caller": "PrinterFile.__init__",
          "callee": "_guess_file_type",
          "line": 40,
          "type": "attribute"
        },
        {
          "caller": "PrinterFile._guess_file_type",
          "callee": "split",
          "line": 46,
          "type": "attribute"
        },
        {
          "caller": "PrinterFile._guess_file_type",
          "callee": "lower",
          "line": 46,
          "type": "attribute"
        },
        {
          "caller": "PrinterFile._guess_file_type",
          "callee": "get",
          "line": 55,
          "type": "attribute"
        },
        {
          "caller": "BasePrinter.__init__",
          "callee": "Event",
          "line": 156,
          "type": "attribute"
        },
        {
          "caller": "BasePrinter.start_monitoring",
          "callee": "warning",
          "line": 171,
          "type": "attribute"
        },
        {
          "caller": "BasePrinter.start_monitoring",
          "callee": "info",
          "line": 174,
          "type": "attribute"
        },
        {
          "caller": "BasePrinter.start_monitoring",
          "callee": "clear",
          "line": 175,
          "type": "attribute"
        },
        {
          "caller": "BasePrinter.start_monitoring",
          "callee": "max",
          "line": 176,
          "type": "direct"
        },
        {
          "caller": "BasePrinter.start_monitoring",
          "callee": "int",
          "line": 176,
          "type": "direct"
        },
        {
          "caller": "BasePrinter.start_monitoring",
          "callee": "create_task",
          "line": 183,
          "type": "attribute"
        },
        {
          "caller": "BasePrinter.start_monitoring",
          "callee": "_monitor_loop",
          "line": 183,
          "type": "attribute"
        },
        {
          "caller": "BasePrinter.stop_monitoring",
          "callee": "info",
          "line": 190,
          "type": "attribute"
        },
        {
          "caller": "BasePrinter.stop_monitoring",
          "callee": "set",
          "line": 191,
          "type": "attribute"
        },
        {
          "caller": "BasePrinter.stop_monitoring",
          "callee": "done",
          "line": 193,
          "type": "attribute"
        },
        {
          "caller": "BasePrinter.stop_monitoring",
          "callee": "cancel",
          "line": 194,
          "type": "attribute"
        },
        {
          "caller": "BasePrinter._monitor_loop",
          "callee": "is_set",
          "line": 205,
          "type": "attribute"
        },
        {
          "caller": "BasePrinter._monitor_loop",
          "callee": "perf_counter",
          "line": 206,
          "type": "attribute"
        },
        {
          "caller": "BasePrinter._monitor_loop",
          "callee": "get_status",
          "line": 208,
          "type": "attribute"
        },
        {
          "caller": "BasePrinter._monitor_loop",
          "callee": "perf_counter",
          "line": 209,
          "type": "attribute"
        },
        {
          "caller": "BasePrinter._monitor_loop",
          "callee": "now",
          "line": 213,
          "type": "attribute"
        },
        {
          "caller": "BasePrinter._monitor_loop",
          "callee": "info",
          "line": 215,
          "type": "attribute"
        },
        {
          "caller": "BasePrinter._monitor_loop",
          "callee": "iscoroutinefunction",
          "line": 220,
          "type": "attribute"
        },
        {
          "caller": "BasePrinter._monitor_loop",
          "callee": "callback",
          "line": 221,
          "type": "direct"
        },
        {
          "caller": "BasePrinter._monitor_loop",
          "callee": "callback",
          "line": 223,
          "type": "direct"
        },
        {
          "caller": "BasePrinter._monitor_loop",
          "callee": "error",
          "line": 225,
          "type": "attribute"
        },
        {
          "caller": "BasePrinter._monitor_loop",
          "callee": "str",
          "line": 225,
          "type": "direct"
        },
        {
          "caller": "BasePrinter._monitor_loop",
          "callee": "str",
          "line": 229,
          "type": "direct"
        },
        {
          "caller": "BasePrinter._monitor_loop",
          "callee": "now",
          "line": 230,
          "type": "attribute"
        },
        {
          "caller": "BasePrinter._monitor_loop",
          "callee": "error",
          "line": 231,
          "type": "attribute"
        },
        {
          "caller": "BasePrinter._monitor_loop",
          "callee": "str",
          "line": 231,
          "type": "direct"
        },
        {
          "caller": "BasePrinter._monitor_loop",
          "callee": "min",
          "line": 232,
          "type": "direct"
        },
        {
          "caller": "BasePrinter._monitor_loop",
          "callee": "uniform",
          "line": 234,
          "type": "attribute"
        },
        {
          "caller": "BasePrinter._monitor_loop",
          "callee": "max",
          "line": 235,
          "type": "direct"
        },
        {
          "caller": "BasePrinter._monitor_loop",
          "callee": "int",
          "line": 235,
          "type": "direct"
        },
        {
          "caller": "BasePrinter._monitor_loop",
          "callee": "warning",
          "line": 236,
          "type": "attribute"
        },
        {
          "caller": "BasePrinter._monitor_loop",
          "callee": "wait_for",
          "line": 239,
          "type": "attribute"
        },
        {
          "caller": "BasePrinter._monitor_loop",
          "callee": "wait",
          "line": 239,
          "type": "attribute"
        },
        {
          "caller": "BasePrinter.add_status_callback",
          "callee": "append",
          "line": 246,
          "type": "attribute"
        },
        {
          "caller": "BasePrinter.remove_status_callback",
          "callee": "remove",
          "line": 251,
          "type": "attribute"
        },
        {
          "caller": "BasePrinter.health_check",
          "callee": "get_status",
          "line": 256,
          "type": "attribute"
        },
        {
          "caller": "BasePrinter.get_connection_info",
          "callee": "dict",
          "line": 268,
          "type": "attribute"
        },
        {
          "caller": "BasePrinter.get_monitoring_metrics",
          "callee": "isoformat",
          "line": 281,
          "type": "attribute"
        },
        {
          "caller": "BasePrinter.get_monitoring_metrics",
          "callee": "isoformat",
          "line": 282,
          "type": "attribute"
        },
        {
          "caller": "BasePrinter.__aenter__",
          "callee": "connect",
          "line": 287,
          "type": "attribute"
        },
        {
          "caller": "BasePrinter.__aexit__",
          "callee": "disconnect",
          "line": 292,
          "type": "attribute"
        }
      ],
      "error": null
    },
    {
      "filepath": "src\\printers\\prusa.py",
      "functions": [
        {
          "name": "__init__",
          "full_name": "PrusaPrinter.__init__",
          "class": "PrusaPrinter",
          "signature": "(self, printer_id: str, name: str, ip_address: str, api_key: str, file_service)",
          "return_type": "",
          "decorators": [],
          "docstring": "Initialize Prusa printer.",
          "line_start": 23,
          "line_end": 30,
          "access_level": "dunder",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "connect",
          "full_name": "PrusaPrinter.connect",
          "class": "PrusaPrinter",
          "signature": "(self)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Establish HTTP connection to Prusa printer.",
          "line_start": 32,
          "line_end": 113,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "disconnect",
          "full_name": "PrusaPrinter.disconnect",
          "class": "PrusaPrinter",
          "signature": "(self)",
          "return_type": "None",
          "decorators": [],
          "docstring": "Disconnect from Prusa printer.",
          "line_start": 115,
          "line_end": 131,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_status",
          "full_name": "PrusaPrinter.get_status",
          "class": "PrusaPrinter",
          "signature": "(self)",
          "return_type": "PrinterStatusUpdate",
          "decorators": [],
          "docstring": "Get current printer status from Prusa.",
          "line_start": 133,
          "line_end": 236,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_map_prusa_status",
          "full_name": "PrusaPrinter._map_prusa_status",
          "class": "PrusaPrinter",
          "signature": "(self, prusa_state: str)",
          "return_type": "PrinterStatus",
          "decorators": [],
          "docstring": "Map Prusa state to PrinterStatus.",
          "line_start": 238,
          "line_end": 251,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_job_info",
          "full_name": "PrusaPrinter.get_job_info",
          "class": "PrusaPrinter",
          "signature": "(self)",
          "return_type": "Optional[JobInfo]",
          "decorators": [],
          "docstring": "Get current job information from Prusa.",
          "line_start": 253,
          "line_end": 297,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_map_job_status",
          "full_name": "PrusaPrinter._map_job_status",
          "class": "PrusaPrinter",
          "signature": "(self, prusa_state: str)",
          "return_type": "JobStatus",
          "decorators": [],
          "docstring": "Map Prusa state to JobStatus.",
          "line_start": 299,
          "line_end": 314,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "list_files",
          "full_name": "PrusaPrinter.list_files",
          "class": "PrusaPrinter",
          "signature": "(self)",
          "return_type": "List[PrinterFile]",
          "decorators": [],
          "docstring": "List files available on Prusa printer.",
          "line_start": 316,
          "line_end": 397,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "extract_files_from_structure",
          "full_name": "PrusaPrinter.extract_files_from_structure",
          "class": "PrusaPrinter",
          "signature": "(items, prefix)",
          "return_type": "",
          "decorators": [],
          "docstring": "Recursively extract files from PrusaLink folder structure.",
          "line_start": 339,
          "line_end": 378,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_files",
          "full_name": "PrusaPrinter.get_files",
          "class": "PrusaPrinter",
          "signature": "(self)",
          "return_type": "List[dict]",
          "decorators": [],
          "docstring": "Get raw file data from Prusa printer API (for download references).",
          "line_start": 399,
          "line_end": 475,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "extract_raw_files_from_structure",
          "full_name": "PrusaPrinter.extract_raw_files_from_structure",
          "class": "PrusaPrinter",
          "signature": "(items, prefix)",
          "return_type": "",
          "decorators": [],
          "docstring": "Recursively extract raw file data from PrusaLink folder structure.",
          "line_start": 421,
          "line_end": 456,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "download_file",
          "full_name": "PrusaPrinter.download_file",
          "class": "PrusaPrinter",
          "signature": "(self, filename: str, local_path: str)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Download a file from Prusa printer.",
          "line_start": 477,
          "line_end": 575,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_find_file_by_display_name",
          "full_name": "PrusaPrinter._find_file_by_display_name",
          "class": "PrusaPrinter",
          "signature": "(self, display_name: str)",
          "return_type": "Optional[dict]",
          "decorators": [],
          "docstring": "Find a file in the printer's file list by its display name.",
          "line_start": 577,
          "line_end": 626,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "download_thumbnail",
          "full_name": "PrusaPrinter.download_thumbnail",
          "class": "PrusaPrinter",
          "signature": "(self, filename: str, size: str)",
          "return_type": "Optional[bytes]",
          "decorators": [],
          "docstring": "Download thumbnail for a file from Prusa printer.\n\nArgs:\n    filename: Display name of the file\n    size: Thumbnail size - 's' (small/icon) or 'l' (large/thumbnail)\n\nReturns:\n    PNG thumbnail data as bytes, or None if not available",
          "line_start": 628,
          "line_end": 694,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "pause_print",
          "full_name": "PrusaPrinter.pause_print",
          "class": "PrusaPrinter",
          "signature": "(self)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Pause the current print job on Prusa printer.",
          "line_start": 696,
          "line_end": 718,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "resume_print",
          "full_name": "PrusaPrinter.resume_print",
          "class": "PrusaPrinter",
          "signature": "(self)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Resume the paused print job on Prusa printer.",
          "line_start": 720,
          "line_end": 742,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "stop_print",
          "full_name": "PrusaPrinter.stop_print",
          "class": "PrusaPrinter",
          "signature": "(self)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Stop/cancel the current print job on Prusa printer.",
          "line_start": 744,
          "line_end": 766,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "has_camera",
          "full_name": "PrusaPrinter.has_camera",
          "class": "PrusaPrinter",
          "signature": "(self)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Check if Prusa printer has camera support.",
          "line_start": 768,
          "line_end": 772,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_camera_stream_url",
          "full_name": "PrusaPrinter.get_camera_stream_url",
          "class": "PrusaPrinter",
          "signature": "(self)",
          "return_type": "Optional[str]",
          "decorators": [],
          "docstring": "Get camera stream URL for Prusa printer.",
          "line_start": 774,
          "line_end": 778,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "take_snapshot",
          "full_name": "PrusaPrinter.take_snapshot",
          "class": "PrusaPrinter",
          "signature": "(self)",
          "return_type": "Optional[bytes]",
          "decorators": [],
          "docstring": "Take a camera snapshot from Prusa printer.",
          "line_start": 780,
          "line_end": 784,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "asyncio",
          "alias": null,
          "line": 5
        },
        {
          "type": "import",
          "module": "json",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Dict",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Any",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Optional",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "List",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "pathlib",
          "name": "Path",
          "alias": null,
          "line": 9
        },
        {
          "type": "import",
          "module": "aiohttp",
          "alias": null,
          "line": 10
        },
        {
          "type": "import",
          "module": "structlog",
          "alias": null,
          "line": 11
        },
        {
          "type": "from_import",
          "module": "src.models.printer",
          "name": "PrinterStatus",
          "alias": null,
          "line": 13
        },
        {
          "type": "from_import",
          "module": "src.models.printer",
          "name": "PrinterStatusUpdate",
          "alias": null,
          "line": 13
        },
        {
          "type": "from_import",
          "module": "src.utils.exceptions",
          "name": "PrinterConnectionError",
          "alias": null,
          "line": 14
        },
        {
          "type": "from_import",
          "module": "base",
          "name": "BasePrinter",
          "alias": null,
          "line": 15
        },
        {
          "type": "from_import",
          "module": "base",
          "name": "JobInfo",
          "alias": null,
          "line": 15
        },
        {
          "type": "from_import",
          "module": "base",
          "name": "JobStatus",
          "alias": null,
          "line": 15
        },
        {
          "type": "from_import",
          "module": "base",
          "name": "PrinterFile",
          "alias": null,
          "line": 15
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "timedelta",
          "alias": null,
          "line": 188
        }
      ],
      "function_calls": [
        {
          "caller": "PrusaPrinter.__init__",
          "callee": "__init__",
          "line": 26,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.__init__",
          "callee": "super",
          "line": 26,
          "type": "direct"
        },
        {
          "caller": "PrusaPrinter.connect",
          "callee": "info",
          "line": 35,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.connect",
          "callee": "info",
          "line": 39,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.connect",
          "callee": "ClientTimeout",
          "line": 49,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.connect",
          "callee": "TCPConnector",
          "line": 50,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.connect",
          "callee": "ClientSession",
          "line": 58,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.connect",
          "callee": "range",
          "line": 66,
          "type": "direct"
        },
        {
          "caller": "PrusaPrinter.connect",
          "callee": "get",
          "line": 68,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.connect",
          "callee": "json",
          "line": 70,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.connect",
          "callee": "info",
          "line": 71,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.connect",
          "callee": "get",
          "line": 73,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.connect",
          "callee": "ClientError",
          "line": 78,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.connect",
          "callee": "ClientError",
          "line": 80,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.connect",
          "callee": "ClientError",
          "line": 82,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.connect",
          "callee": "warning",
          "line": 87,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.connect",
          "callee": "str",
          "line": 91,
          "type": "direct"
        },
        {
          "caller": "PrusaPrinter.connect",
          "callee": "sleep",
          "line": 92,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.connect",
          "callee": "str",
          "line": 98,
          "type": "direct"
        },
        {
          "caller": "PrusaPrinter.connect",
          "callee": "type",
          "line": 98,
          "type": "direct"
        },
        {
          "caller": "PrusaPrinter.connect",
          "callee": "error",
          "line": 100,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.connect",
          "callee": "lower",
          "line": 102,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.connect",
          "callee": "isinstance",
          "line": 102,
          "type": "direct"
        },
        {
          "caller": "PrusaPrinter.connect",
          "callee": "error",
          "line": 103,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.connect",
          "callee": "error",
          "line": 106,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.connect",
          "callee": "type",
          "line": 108,
          "type": "direct"
        },
        {
          "caller": "PrusaPrinter.connect",
          "callee": "close",
          "line": 111,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.connect",
          "callee": "PrinterConnectionError",
          "line": 113,
          "type": "direct"
        },
        {
          "caller": "PrusaPrinter.disconnect",
          "callee": "close",
          "line": 122,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.disconnect",
          "callee": "info",
          "line": 127,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.disconnect",
          "callee": "error",
          "line": 130,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.disconnect",
          "callee": "str",
          "line": 131,
          "type": "direct"
        },
        {
          "caller": "PrusaPrinter.get_status",
          "callee": "PrinterConnectionError",
          "line": 136,
          "type": "direct"
        },
        {
          "caller": "PrusaPrinter.get_status",
          "callee": "get",
          "line": 140,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.get_status",
          "callee": "ClientError",
          "line": 142,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.get_status",
          "callee": "json",
          "line": 144,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.get_status",
          "callee": "get",
          "line": 149,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.get_status",
          "callee": "json",
          "line": 151,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.get_status",
          "callee": "warning",
          "line": 153,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.get_status",
          "callee": "str",
          "line": 154,
          "type": "direct"
        },
        {
          "caller": "PrusaPrinter.get_status",
          "callee": "get",
          "line": 157,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.get_status",
          "callee": "get",
          "line": 157,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.get_status",
          "callee": "_map_prusa_status",
          "line": 158,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.get_status",
          "callee": "get",
          "line": 161,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.get_status",
          "callee": "get",
          "line": 162,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.get_status",
          "callee": "get",
          "line": 162,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.get_status",
          "callee": "get",
          "line": 163,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.get_status",
          "callee": "get",
          "line": 163,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.get_status",
          "callee": "get",
          "line": 172,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.get_status",
          "callee": "get",
          "line": 173,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.get_status",
          "callee": "get",
          "line": 174,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.get_status",
          "callee": "get",
          "line": 176,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.get_status",
          "callee": "get",
          "line": 176,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.get_status",
          "callee": "get",
          "line": 178,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.get_status",
          "callee": "int",
          "line": 180,
          "type": "direct"
        },
        {
          "caller": "PrusaPrinter.get_status",
          "callee": "get",
          "line": 180,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.get_status",
          "callee": "get",
          "line": 183,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.get_status",
          "callee": "int",
          "line": 186,
          "type": "direct"
        },
        {
          "caller": "PrusaPrinter.get_status",
          "callee": "now",
          "line": 189,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.get_status",
          "callee": "timedelta",
          "line": 189,
          "type": "direct"
        },
        {
          "caller": "PrusaPrinter.get_status",
          "callee": "find_file_by_name",
          "line": 196,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.get_status",
          "callee": "get",
          "line": 198,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.get_status",
          "callee": "get",
          "line": 199,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.get_status",
          "callee": "debug",
          "line": 200,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.get_status",
          "callee": "debug",
          "line": 206,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.get_status",
          "callee": "str",
          "line": 209,
          "type": "direct"
        },
        {
          "caller": "PrusaPrinter.get_status",
          "callee": "PrinterStatusUpdate",
          "line": 211,
          "type": "direct"
        },
        {
          "caller": "PrusaPrinter.get_status",
          "callee": "float",
          "line": 215,
          "type": "direct"
        },
        {
          "caller": "PrusaPrinter.get_status",
          "callee": "float",
          "line": 216,
          "type": "direct"
        },
        {
          "caller": "PrusaPrinter.get_status",
          "callee": "now",
          "line": 224,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.get_status",
          "callee": "error",
          "line": 229,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.get_status",
          "callee": "str",
          "line": 230,
          "type": "direct"
        },
        {
          "caller": "PrusaPrinter.get_status",
          "callee": "PrinterStatusUpdate",
          "line": 231,
          "type": "direct"
        },
        {
          "caller": "PrusaPrinter.get_status",
          "callee": "str",
          "line": 234,
          "type": "direct"
        },
        {
          "caller": "PrusaPrinter.get_status",
          "callee": "now",
          "line": 235,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter._map_prusa_status",
          "callee": "lower",
          "line": 240,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.get_job_info",
          "callee": "get",
          "line": 259,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.get_job_info",
          "callee": "json",
          "line": 263,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.get_job_info",
          "callee": "get",
          "line": 265,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.get_job_info",
          "callee": "get",
          "line": 266,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.get_job_info",
          "callee": "get",
          "line": 266,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.get_job_info",
          "callee": "get",
          "line": 269,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.get_job_info",
          "callee": "get",
          "line": 270,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.get_job_info",
          "callee": "get",
          "line": 272,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.get_job_info",
          "callee": "get",
          "line": 272,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.get_job_info",
          "callee": "int",
          "line": 273,
          "type": "direct"
        },
        {
          "caller": "PrusaPrinter.get_job_info",
          "callee": "get",
          "line": 273,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.get_job_info",
          "callee": "get",
          "line": 276,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.get_job_info",
          "callee": "_map_job_status",
          "line": 277,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.get_job_info",
          "callee": "get",
          "line": 280,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.get_job_info",
          "callee": "get",
          "line": 281,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.get_job_info",
          "callee": "JobInfo",
          "line": 283,
          "type": "direct"
        },
        {
          "caller": "PrusaPrinter.get_job_info",
          "callee": "strftime",
          "line": 284,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.get_job_info",
          "callee": "now",
          "line": 284,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.get_job_info",
          "callee": "error",
          "line": 295,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.get_job_info",
          "callee": "str",
          "line": 296,
          "type": "direct"
        },
        {
          "caller": "PrusaPrinter._map_job_status",
          "callee": "lower",
          "line": 301,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.list_files",
          "callee": "PrinterConnectionError",
          "line": 319,
          "type": "direct"
        },
        {
          "caller": "PrusaPrinter.list_files",
          "callee": "get",
          "line": 323,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.list_files",
          "callee": "warning",
          "line": 325,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.list_files",
          "callee": "warning",
          "line": 329,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.list_files",
          "callee": "json",
          "line": 333,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.extract_files_from_structure",
          "callee": "get",
          "line": 344,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.extract_files_from_structure",
          "callee": "get",
          "line": 348,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.extract_files_from_structure",
          "callee": "get",
          "line": 348,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.extract_files_from_structure",
          "callee": "extract_files_from_structure",
          "line": 352,
          "type": "direct"
        },
        {
          "caller": "PrusaPrinter.extract_files_from_structure",
          "callee": "extend",
          "line": 356,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.extract_files_from_structure",
          "callee": "get",
          "line": 361,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.extract_files_from_structure",
          "callee": "get",
          "line": 362,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.extract_files_from_structure",
          "callee": "endswith",
          "line": 365,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.extract_files_from_structure",
          "callee": "lower",
          "line": 365,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.extract_files_from_structure",
          "callee": "endswith",
          "line": 366,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.extract_files_from_structure",
          "callee": "lower",
          "line": 366,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.extract_files_from_structure",
          "callee": "PrinterFile",
          "line": 369,
          "type": "direct"
        },
        {
          "caller": "PrusaPrinter.extract_files_from_structure",
          "callee": "get",
          "line": 371,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.extract_files_from_structure",
          "callee": "get",
          "line": 373,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.extract_files_from_structure",
          "callee": "fromtimestamp",
          "line": 372,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.extract_files_from_structure",
          "callee": "get",
          "line": 372,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.extract_files_from_structure",
          "callee": "get",
          "line": 374,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.extract_files_from_structure",
          "callee": "append",
          "line": 376,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.list_files",
          "callee": "get",
          "line": 381,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.list_files",
          "callee": "extend",
          "line": 382,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.list_files",
          "callee": "extract_files_from_structure",
          "line": 382,
          "type": "direct"
        },
        {
          "caller": "PrusaPrinter.list_files",
          "callee": "get",
          "line": 385,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.list_files",
          "callee": "get",
          "line": 386,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.list_files",
          "callee": "get",
          "line": 386,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.list_files",
          "callee": "extract_files_from_structure",
          "line": 387,
          "type": "direct"
        },
        {
          "caller": "PrusaPrinter.list_files",
          "callee": "extend",
          "line": 388,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.list_files",
          "callee": "info",
          "line": 390,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.list_files",
          "callee": "len",
          "line": 391,
          "type": "direct"
        },
        {
          "caller": "PrusaPrinter.list_files",
          "callee": "warning",
          "line": 395,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.list_files",
          "callee": "str",
          "line": 396,
          "type": "direct"
        },
        {
          "caller": "PrusaPrinter.get_files",
          "callee": "PrinterConnectionError",
          "line": 402,
          "type": "direct"
        },
        {
          "caller": "PrusaPrinter.get_files",
          "callee": "get",
          "line": 406,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.get_files",
          "callee": "warning",
          "line": 408,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.get_files",
          "callee": "warning",
          "line": 412,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.get_files",
          "callee": "json",
          "line": 416,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.extract_raw_files_from_structure",
          "callee": "get",
          "line": 426,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.extract_raw_files_from_structure",
          "callee": "get",
          "line": 430,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.extract_raw_files_from_structure",
          "callee": "get",
          "line": 430,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.extract_raw_files_from_structure",
          "callee": "extract_raw_files_from_structure",
          "line": 434,
          "type": "direct"
        },
        {
          "caller": "PrusaPrinter.extract_raw_files_from_structure",
          "callee": "extend",
          "line": 438,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.extract_raw_files_from_structure",
          "callee": "get",
          "line": 443,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.extract_raw_files_from_structure",
          "callee": "get",
          "line": 444,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.extract_raw_files_from_structure",
          "callee": "endswith",
          "line": 447,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.extract_raw_files_from_structure",
          "callee": "lower",
          "line": 447,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.extract_raw_files_from_structure",
          "callee": "endswith",
          "line": 448,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.extract_raw_files_from_structure",
          "callee": "lower",
          "line": 448,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.extract_raw_files_from_structure",
          "callee": "dict",
          "line": 452,
          "type": "direct"
        },
        {
          "caller": "PrusaPrinter.extract_raw_files_from_structure",
          "callee": "append",
          "line": 454,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.get_files",
          "callee": "get",
          "line": 459,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.get_files",
          "callee": "extend",
          "line": 460,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.get_files",
          "callee": "extract_raw_files_from_structure",
          "line": 460,
          "type": "direct"
        },
        {
          "caller": "PrusaPrinter.get_files",
          "callee": "get",
          "line": 463,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.get_files",
          "callee": "get",
          "line": 464,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.get_files",
          "callee": "get",
          "line": 464,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.get_files",
          "callee": "extract_raw_files_from_structure",
          "line": 465,
          "type": "direct"
        },
        {
          "caller": "PrusaPrinter.get_files",
          "callee": "extend",
          "line": 466,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.get_files",
          "callee": "info",
          "line": 468,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.get_files",
          "callee": "len",
          "line": 469,
          "type": "direct"
        },
        {
          "caller": "PrusaPrinter.get_files",
          "callee": "warning",
          "line": 473,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.get_files",
          "callee": "str",
          "line": 474,
          "type": "direct"
        },
        {
          "caller": "PrusaPrinter.download_file",
          "callee": "PrinterConnectionError",
          "line": 480,
          "type": "direct"
        },
        {
          "caller": "PrusaPrinter.download_file",
          "callee": "info",
          "line": 483,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.download_file",
          "callee": "_find_file_by_display_name",
          "line": 487,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.download_file",
          "callee": "error",
          "line": 489,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.download_file",
          "callee": "get",
          "line": 494,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.download_file",
          "callee": "get",
          "line": 494,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.download_file",
          "callee": "error",
          "line": 496,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.download_file",
          "callee": "info",
          "line": 500,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.download_file",
          "callee": "info",
          "line": 502,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.download_file",
          "callee": "startswith",
          "line": 512,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.download_file",
          "callee": "info",
          "line": 517,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.download_file",
          "callee": "info",
          "line": 520,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.download_file",
          "callee": "get",
          "line": 526,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.download_file",
          "callee": "mkdir",
          "line": 529,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.download_file",
          "callee": "Path",
          "line": 529,
          "type": "direct"
        },
        {
          "caller": "PrusaPrinter.download_file",
          "callee": "iter_chunked",
          "line": 535,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.download_file",
          "callee": "startswith",
          "line": 539,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.download_file",
          "callee": "startswith",
          "line": 539,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.download_file",
          "callee": "decode",
          "line": 542,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.download_file",
          "callee": "error",
          "line": 543,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.download_file",
          "callee": "append",
          "line": 551,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.download_file",
          "callee": "open",
          "line": 554,
          "type": "direct"
        },
        {
          "caller": "PrusaPrinter.download_file",
          "callee": "write",
          "line": 556,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.download_file",
          "callee": "stat",
          "line": 558,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.download_file",
          "callee": "Path",
          "line": 558,
          "type": "direct"
        },
        {
          "caller": "PrusaPrinter.download_file",
          "callee": "info",
          "line": 559,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.download_file",
          "callee": "error",
          "line": 564,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.download_file",
          "callee": "error",
          "line": 573,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.download_file",
          "callee": "str",
          "line": 574,
          "type": "direct"
        },
        {
          "caller": "PrusaPrinter._find_file_by_display_name",
          "callee": "get_files",
          "line": 580,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter._find_file_by_display_name",
          "callee": "debug",
          "line": 582,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter._find_file_by_display_name",
          "callee": "len",
          "line": 582,
          "type": "direct"
        },
        {
          "caller": "PrusaPrinter._find_file_by_display_name",
          "callee": "get",
          "line": 587,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter._find_file_by_display_name",
          "callee": "get",
          "line": 588,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter._find_file_by_display_name",
          "callee": "debug",
          "line": 591,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter._find_file_by_display_name",
          "callee": "lower",
          "line": 596,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter._find_file_by_display_name",
          "callee": "get",
          "line": 598,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter._find_file_by_display_name",
          "callee": "get",
          "line": 599,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter._find_file_by_display_name",
          "callee": "lower",
          "line": 601,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter._find_file_by_display_name",
          "callee": "lower",
          "line": 602,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter._find_file_by_display_name",
          "callee": "lower",
          "line": 603,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter._find_file_by_display_name",
          "callee": "lower",
          "line": 604,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter._find_file_by_display_name",
          "callee": "info",
          "line": 606,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter._find_file_by_display_name",
          "callee": "warning",
          "line": 611,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter._find_file_by_display_name",
          "callee": "enumerate",
          "line": 613,
          "type": "direct"
        },
        {
          "caller": "PrusaPrinter._find_file_by_display_name",
          "callee": "warning",
          "line": 614,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter._find_file_by_display_name",
          "callee": "get",
          "line": 614,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter._find_file_by_display_name",
          "callee": "get",
          "line": 614,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter._find_file_by_display_name",
          "callee": "len",
          "line": 616,
          "type": "direct"
        },
        {
          "caller": "PrusaPrinter._find_file_by_display_name",
          "callee": "warning",
          "line": 617,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter._find_file_by_display_name",
          "callee": "len",
          "line": 617,
          "type": "direct"
        },
        {
          "caller": "PrusaPrinter._find_file_by_display_name",
          "callee": "error",
          "line": 622,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter._find_file_by_display_name",
          "callee": "str",
          "line": 625,
          "type": "direct"
        },
        {
          "caller": "PrusaPrinter.download_thumbnail",
          "callee": "warning",
          "line": 640,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.download_thumbnail",
          "callee": "_find_file_by_display_name",
          "line": 646,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.download_thumbnail",
          "callee": "warning",
          "line": 648,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.download_thumbnail",
          "callee": "get",
          "line": 653,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.download_thumbnail",
          "callee": "get",
          "line": 654,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.download_thumbnail",
          "callee": "get",
          "line": 654,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.download_thumbnail",
          "callee": "debug",
          "line": 657,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.download_thumbnail",
          "callee": "startswith",
          "line": 663,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.download_thumbnail",
          "callee": "startswith",
          "line": 665,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.download_thumbnail",
          "callee": "warning",
          "line": 669,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.download_thumbnail",
          "callee": "info",
          "line": 673,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.download_thumbnail",
          "callee": "get",
          "line": 678,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.download_thumbnail",
          "callee": "read",
          "line": 680,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.download_thumbnail",
          "callee": "info",
          "line": 681,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.download_thumbnail",
          "callee": "len",
          "line": 683,
          "type": "direct"
        },
        {
          "caller": "PrusaPrinter.download_thumbnail",
          "callee": "warning",
          "line": 686,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.download_thumbnail",
          "callee": "error",
          "line": 692,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.download_thumbnail",
          "callee": "str",
          "line": 693,
          "type": "direct"
        },
        {
          "caller": "PrusaPrinter.pause_print",
          "callee": "PrinterConnectionError",
          "line": 699,
          "type": "direct"
        },
        {
          "caller": "PrusaPrinter.pause_print",
          "callee": "info",
          "line": 702,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.pause_print",
          "callee": "post",
          "line": 705,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.pause_print",
          "callee": "info",
          "line": 708,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.pause_print",
          "callee": "warning",
          "line": 711,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.pause_print",
          "callee": "error",
          "line": 716,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.pause_print",
          "callee": "str",
          "line": 717,
          "type": "direct"
        },
        {
          "caller": "PrusaPrinter.resume_print",
          "callee": "PrinterConnectionError",
          "line": 723,
          "type": "direct"
        },
        {
          "caller": "PrusaPrinter.resume_print",
          "callee": "info",
          "line": 726,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.resume_print",
          "callee": "post",
          "line": 729,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.resume_print",
          "callee": "info",
          "line": 732,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.resume_print",
          "callee": "warning",
          "line": 735,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.resume_print",
          "callee": "error",
          "line": 740,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.resume_print",
          "callee": "str",
          "line": 741,
          "type": "direct"
        },
        {
          "caller": "PrusaPrinter.stop_print",
          "callee": "PrinterConnectionError",
          "line": 747,
          "type": "direct"
        },
        {
          "caller": "PrusaPrinter.stop_print",
          "callee": "info",
          "line": 750,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.stop_print",
          "callee": "post",
          "line": 753,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.stop_print",
          "callee": "info",
          "line": 756,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.stop_print",
          "callee": "warning",
          "line": 759,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.stop_print",
          "callee": "error",
          "line": 764,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.stop_print",
          "callee": "str",
          "line": 765,
          "type": "direct"
        },
        {
          "caller": "PrusaPrinter.get_camera_stream_url",
          "callee": "debug",
          "line": 777,
          "type": "attribute"
        },
        {
          "caller": "PrusaPrinter.take_snapshot",
          "callee": "debug",
          "line": 783,
          "type": "attribute"
        }
      ],
      "error": null
    },
    {
      "filepath": "src\\services\\__init__.py",
      "functions": [],
      "imports": [],
      "function_calls": [],
      "error": null
    },
    {
      "filepath": "src\\services\\analytics_service.py",
      "functions": [
        {
          "name": "__init__",
          "full_name": "AnalyticsService.__init__",
          "class": "AnalyticsService",
          "signature": "(self, database: Database)",
          "return_type": "",
          "decorators": [],
          "docstring": "Initialize analytics service.",
          "line_start": 16,
          "line_end": 18,
          "access_level": "dunder",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_dashboard_stats",
          "full_name": "AnalyticsService.get_dashboard_stats",
          "class": "AnalyticsService",
          "signature": "(self)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Get main dashboard statistics.",
          "line_start": 20,
          "line_end": 31,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_printer_usage",
          "full_name": "AnalyticsService.get_printer_usage",
          "class": "AnalyticsService",
          "signature": "(self, days: int)",
          "return_type": "List[Dict[str, Any]]",
          "decorators": [],
          "docstring": "Get printer usage statistics.",
          "line_start": 33,
          "line_end": 36,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_material_consumption",
          "full_name": "AnalyticsService.get_material_consumption",
          "class": "AnalyticsService",
          "signature": "(self, days: int)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Get material consumption statistics.",
          "line_start": 38,
          "line_end": 45,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_business_report",
          "full_name": "AnalyticsService.get_business_report",
          "class": "AnalyticsService",
          "signature": "(self, start_date: datetime, end_date: datetime)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Generate business report for given period.",
          "line_start": 47,
          "line_end": 114,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "export_data",
          "full_name": "AnalyticsService.export_data",
          "class": "AnalyticsService",
          "signature": "(self, format_type: str, filters: Dict[str, Any])",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Export data in specified format (CSV, Excel).",
          "line_start": 116,
          "line_end": 126,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_summary",
          "full_name": "AnalyticsService.get_summary",
          "class": "AnalyticsService",
          "signature": "(self, start_date: Optional[datetime], end_date: Optional[datetime])",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Get analytics summary for the specified period.",
          "line_start": 128,
          "line_end": 166,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_business_analytics",
          "full_name": "AnalyticsService.get_business_analytics",
          "class": "AnalyticsService",
          "signature": "(self, start_date: Optional[datetime], end_date: Optional[datetime])",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Get business analytics for the specified period.",
          "line_start": 168,
          "line_end": 221,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_dashboard_overview",
          "full_name": "AnalyticsService.get_dashboard_overview",
          "class": "AnalyticsService",
          "signature": "(self, period: str)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Get dashboard overview statistics for the specified period.",
          "line_start": 223,
          "line_end": 258,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_get_job_statistics",
          "full_name": "AnalyticsService._get_job_statistics",
          "class": "AnalyticsService",
          "signature": "(self, period: str)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Get job statistics for the specified period.",
          "line_start": 260,
          "line_end": 280,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_get_file_statistics",
          "full_name": "AnalyticsService._get_file_statistics",
          "class": "AnalyticsService",
          "signature": "(self)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Get file statistics.",
          "line_start": 282,
          "line_end": 308,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_get_printer_statistics",
          "full_name": "AnalyticsService._get_printer_statistics",
          "class": "AnalyticsService",
          "signature": "(self)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Get printer statistics.",
          "line_start": 310,
          "line_end": 328,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "from_import",
          "module": "typing",
          "name": "Dict",
          "alias": null,
          "line": 5
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Any",
          "alias": null,
          "line": 5
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "List",
          "alias": null,
          "line": 5
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Optional",
          "alias": null,
          "line": 5
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "timedelta",
          "alias": null,
          "line": 6
        },
        {
          "type": "import",
          "module": "structlog",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "src.database.database",
          "name": "Database",
          "alias": null,
          "line": 8
        }
      ],
      "function_calls": [
        {
          "caller": "AnalyticsService.get_business_report",
          "callee": "info",
          "line": 50,
          "type": "attribute"
        },
        {
          "caller": "AnalyticsService.get_business_report",
          "callee": "isoformat",
          "line": 51,
          "type": "attribute"
        },
        {
          "caller": "AnalyticsService.get_business_report",
          "callee": "isoformat",
          "line": 51,
          "type": "attribute"
        },
        {
          "caller": "AnalyticsService.get_business_report",
          "callee": "get_jobs_by_date_range",
          "line": 54,
          "type": "attribute"
        },
        {
          "caller": "AnalyticsService.get_business_report",
          "callee": "isoformat",
          "line": 55,
          "type": "attribute"
        },
        {
          "caller": "AnalyticsService.get_business_report",
          "callee": "isoformat",
          "line": 55,
          "type": "attribute"
        },
        {
          "caller": "AnalyticsService.get_business_report",
          "callee": "get",
          "line": 59,
          "type": "attribute"
        },
        {
          "caller": "AnalyticsService.get_business_report",
          "callee": "get",
          "line": 60,
          "type": "attribute"
        },
        {
          "caller": "AnalyticsService.get_business_report",
          "callee": "sum",
          "line": 63,
          "type": "direct"
        },
        {
          "caller": "AnalyticsService.get_business_report",
          "callee": "get",
          "line": 63,
          "type": "attribute"
        },
        {
          "caller": "AnalyticsService.get_business_report",
          "callee": "sum",
          "line": 64,
          "type": "direct"
        },
        {
          "caller": "AnalyticsService.get_business_report",
          "callee": "get",
          "line": 64,
          "type": "attribute"
        },
        {
          "caller": "AnalyticsService.get_business_report",
          "callee": "sum",
          "line": 65,
          "type": "direct"
        },
        {
          "caller": "AnalyticsService.get_business_report",
          "callee": "get",
          "line": 65,
          "type": "attribute"
        },
        {
          "caller": "AnalyticsService.get_business_report",
          "callee": "sum",
          "line": 69,
          "type": "direct"
        },
        {
          "caller": "AnalyticsService.get_business_report",
          "callee": "get",
          "line": 69,
          "type": "attribute"
        },
        {
          "caller": "AnalyticsService.get_business_report",
          "callee": "isoformat",
          "line": 73,
          "type": "attribute"
        },
        {
          "caller": "AnalyticsService.get_business_report",
          "callee": "isoformat",
          "line": 74,
          "type": "attribute"
        },
        {
          "caller": "AnalyticsService.get_business_report",
          "callee": "len",
          "line": 77,
          "type": "direct"
        },
        {
          "caller": "AnalyticsService.get_business_report",
          "callee": "len",
          "line": 78,
          "type": "direct"
        },
        {
          "caller": "AnalyticsService.get_business_report",
          "callee": "len",
          "line": 79,
          "type": "direct"
        },
        {
          "caller": "AnalyticsService.get_business_report",
          "callee": "error",
          "line": 93,
          "type": "attribute"
        },
        {
          "caller": "AnalyticsService.get_business_report",
          "callee": "str",
          "line": 93,
          "type": "direct"
        },
        {
          "caller": "AnalyticsService.get_business_report",
          "callee": "isoformat",
          "line": 96,
          "type": "attribute"
        },
        {
          "caller": "AnalyticsService.get_business_report",
          "callee": "isoformat",
          "line": 97,
          "type": "attribute"
        },
        {
          "caller": "AnalyticsService.export_data",
          "callee": "info",
          "line": 119,
          "type": "attribute"
        },
        {
          "caller": "AnalyticsService.get_summary",
          "callee": "now",
          "line": 133,
          "type": "attribute"
        },
        {
          "caller": "AnalyticsService.get_summary",
          "callee": "timedelta",
          "line": 135,
          "type": "direct"
        },
        {
          "caller": "AnalyticsService.get_summary",
          "callee": "get_jobs_by_date_range",
          "line": 138,
          "type": "attribute"
        },
        {
          "caller": "AnalyticsService.get_summary",
          "callee": "isoformat",
          "line": 139,
          "type": "attribute"
        },
        {
          "caller": "AnalyticsService.get_summary",
          "callee": "isoformat",
          "line": 139,
          "type": "attribute"
        },
        {
          "caller": "AnalyticsService.get_summary",
          "callee": "len",
          "line": 143,
          "type": "direct"
        },
        {
          "caller": "AnalyticsService.get_summary",
          "callee": "len",
          "line": 144,
          "type": "direct"
        },
        {
          "caller": "AnalyticsService.get_summary",
          "callee": "get",
          "line": 144,
          "type": "attribute"
        },
        {
          "caller": "AnalyticsService.get_summary",
          "callee": "len",
          "line": 145,
          "type": "direct"
        },
        {
          "caller": "AnalyticsService.get_summary",
          "callee": "get",
          "line": 145,
          "type": "attribute"
        },
        {
          "caller": "AnalyticsService.get_summary",
          "callee": "sum",
          "line": 147,
          "type": "direct"
        },
        {
          "caller": "AnalyticsService.get_summary",
          "callee": "get",
          "line": 147,
          "type": "attribute"
        },
        {
          "caller": "AnalyticsService.get_summary",
          "callee": "sum",
          "line": 148,
          "type": "direct"
        },
        {
          "caller": "AnalyticsService.get_summary",
          "callee": "get",
          "line": 148,
          "type": "attribute"
        },
        {
          "caller": "AnalyticsService.get_summary",
          "callee": "sum",
          "line": 149,
          "type": "direct"
        },
        {
          "caller": "AnalyticsService.get_summary",
          "callee": "get",
          "line": 149,
          "type": "attribute"
        },
        {
          "caller": "AnalyticsService.get_summary",
          "callee": "round",
          "line": 158,
          "type": "direct"
        },
        {
          "caller": "AnalyticsService.get_summary",
          "callee": "round",
          "line": 159,
          "type": "direct"
        },
        {
          "caller": "AnalyticsService.get_summary",
          "callee": "round",
          "line": 160,
          "type": "direct"
        },
        {
          "caller": "AnalyticsService.get_summary",
          "callee": "round",
          "line": 161,
          "type": "direct"
        },
        {
          "caller": "AnalyticsService.get_summary",
          "callee": "round",
          "line": 162,
          "type": "direct"
        },
        {
          "caller": "AnalyticsService.get_summary",
          "callee": "error",
          "line": 165,
          "type": "attribute"
        },
        {
          "caller": "AnalyticsService.get_summary",
          "callee": "str",
          "line": 165,
          "type": "direct"
        },
        {
          "caller": "AnalyticsService.get_business_analytics",
          "callee": "now",
          "line": 173,
          "type": "attribute"
        },
        {
          "caller": "AnalyticsService.get_business_analytics",
          "callee": "timedelta",
          "line": 175,
          "type": "direct"
        },
        {
          "caller": "AnalyticsService.get_business_analytics",
          "callee": "get_jobs_by_date_range",
          "line": 178,
          "type": "attribute"
        },
        {
          "caller": "AnalyticsService.get_business_analytics",
          "callee": "isoformat",
          "line": 179,
          "type": "attribute"
        },
        {
          "caller": "AnalyticsService.get_business_analytics",
          "callee": "isoformat",
          "line": 179,
          "type": "attribute"
        },
        {
          "caller": "AnalyticsService.get_business_analytics",
          "callee": "get",
          "line": 183,
          "type": "attribute"
        },
        {
          "caller": "AnalyticsService.get_business_analytics",
          "callee": "get",
          "line": 184,
          "type": "attribute"
        },
        {
          "caller": "AnalyticsService.get_business_analytics",
          "callee": "sum",
          "line": 187,
          "type": "direct"
        },
        {
          "caller": "AnalyticsService.get_business_analytics",
          "callee": "get",
          "line": 187,
          "type": "attribute"
        },
        {
          "caller": "AnalyticsService.get_business_analytics",
          "callee": "sum",
          "line": 188,
          "type": "direct"
        },
        {
          "caller": "AnalyticsService.get_business_analytics",
          "callee": "get",
          "line": 188,
          "type": "attribute"
        },
        {
          "caller": "AnalyticsService.get_business_analytics",
          "callee": "get",
          "line": 194,
          "type": "attribute"
        },
        {
          "caller": "AnalyticsService.get_business_analytics",
          "callee": "get",
          "line": 202,
          "type": "attribute"
        },
        {
          "caller": "AnalyticsService.get_business_analytics",
          "callee": "sorted",
          "line": 205,
          "type": "direct"
        },
        {
          "caller": "AnalyticsService.get_business_analytics",
          "callee": "values",
          "line": 206,
          "type": "attribute"
        },
        {
          "caller": "AnalyticsService.get_business_analytics",
          "callee": "len",
          "line": 212,
          "type": "direct"
        },
        {
          "caller": "AnalyticsService.get_business_analytics",
          "callee": "len",
          "line": 213,
          "type": "direct"
        },
        {
          "caller": "AnalyticsService.get_business_analytics",
          "callee": "round",
          "line": 214,
          "type": "direct"
        },
        {
          "caller": "AnalyticsService.get_business_analytics",
          "callee": "round",
          "line": 215,
          "type": "direct"
        },
        {
          "caller": "AnalyticsService.get_business_analytics",
          "callee": "round",
          "line": 216,
          "type": "direct"
        },
        {
          "caller": "AnalyticsService.get_business_analytics",
          "callee": "error",
          "line": 220,
          "type": "attribute"
        },
        {
          "caller": "AnalyticsService.get_business_analytics",
          "callee": "str",
          "line": 220,
          "type": "direct"
        },
        {
          "caller": "AnalyticsService.get_dashboard_overview",
          "callee": "_get_job_statistics",
          "line": 227,
          "type": "attribute"
        },
        {
          "caller": "AnalyticsService.get_dashboard_overview",
          "callee": "_get_file_statistics",
          "line": 230,
          "type": "attribute"
        },
        {
          "caller": "AnalyticsService.get_dashboard_overview",
          "callee": "_get_printer_statistics",
          "line": 233,
          "type": "attribute"
        },
        {
          "caller": "AnalyticsService.get_dashboard_overview",
          "callee": "error",
          "line": 242,
          "type": "attribute"
        },
        {
          "caller": "AnalyticsService.get_dashboard_overview",
          "callee": "str",
          "line": 242,
          "type": "direct"
        },
        {
          "caller": "AnalyticsService._get_job_statistics",
          "callee": "error",
          "line": 275,
          "type": "attribute"
        },
        {
          "caller": "AnalyticsService._get_job_statistics",
          "callee": "str",
          "line": 275,
          "type": "direct"
        },
        {
          "caller": "AnalyticsService._get_file_statistics",
          "callee": "get_file_statistics",
          "line": 286,
          "type": "attribute"
        },
        {
          "caller": "AnalyticsService._get_file_statistics",
          "callee": "get",
          "line": 290,
          "type": "attribute"
        },
        {
          "caller": "AnalyticsService._get_file_statistics",
          "callee": "get",
          "line": 291,
          "type": "attribute"
        },
        {
          "caller": "AnalyticsService._get_file_statistics",
          "callee": "get",
          "line": 292,
          "type": "attribute"
        },
        {
          "caller": "AnalyticsService._get_file_statistics",
          "callee": "error",
          "line": 303,
          "type": "attribute"
        },
        {
          "caller": "AnalyticsService._get_file_statistics",
          "callee": "str",
          "line": 303,
          "type": "direct"
        },
        {
          "caller": "AnalyticsService._get_printer_statistics",
          "callee": "list_printers",
          "line": 314,
          "type": "attribute"
        },
        {
          "caller": "AnalyticsService._get_printer_statistics",
          "callee": "len",
          "line": 316,
          "type": "direct"
        },
        {
          "caller": "AnalyticsService._get_printer_statistics",
          "callee": "len",
          "line": 317,
          "type": "direct"
        },
        {
          "caller": "AnalyticsService._get_printer_statistics",
          "callee": "get",
          "line": 317,
          "type": "attribute"
        },
        {
          "caller": "AnalyticsService._get_printer_statistics",
          "callee": "error",
          "line": 324,
          "type": "attribute"
        },
        {
          "caller": "AnalyticsService._get_printer_statistics",
          "callee": "str",
          "line": 324,
          "type": "direct"
        }
      ],
      "error": null
    },
    {
      "filepath": "src\\services\\bambu_ftp_service.py",
      "functions": [
        {
          "name": "__init__",
          "full_name": "BambuFTPFile.__init__",
          "class": "BambuFTPFile",
          "signature": "(self, name: str, size: int, permissions: str, modified: Optional[datetime], raw_line: str)",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 32,
          "line_end": 39,
          "access_level": "dunder",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_determine_file_type",
          "full_name": "BambuFTPFile._determine_file_type",
          "class": "BambuFTPFile",
          "signature": "(self)",
          "return_type": "str",
          "decorators": [],
          "docstring": "Determine file type from extension.",
          "line_start": 41,
          "line_end": 57,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "is_3d_file",
          "full_name": "BambuFTPFile.is_3d_file",
          "class": "BambuFTPFile",
          "signature": "(self)",
          "return_type": "bool",
          "decorators": [
            "property"
          ],
          "docstring": "Check if this is a 3D printing file.",
          "line_start": 60,
          "line_end": 62,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": true,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "to_dict",
          "full_name": "BambuFTPFile.to_dict",
          "class": "BambuFTPFile",
          "signature": "(self)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Convert to dictionary representation.",
          "line_start": 64,
          "line_end": 74,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "__init__",
          "full_name": "BambuFTPService.__init__",
          "class": "BambuFTPService",
          "signature": "(self, ip_address: str, access_code: str, port: int)",
          "return_type": "",
          "decorators": [],
          "docstring": "Initialize Bambu FTP service.\n\nArgs:\n    ip_address: Printer IP address\n    access_code: Bambu Lab access code (used as password)\n    port: FTP port (default 990 for implicit TLS)",
          "line_start": 80,
          "line_end": 100,
          "access_level": "dunder",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_create_ssl_context",
          "full_name": "BambuFTPService._create_ssl_context",
          "class": "BambuFTPService",
          "signature": "(self)",
          "return_type": "ssl.SSLContext",
          "decorators": [],
          "docstring": "Create SSL context for implicit TLS connection.",
          "line_start": 102,
          "line_end": 108,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_connect_ftp",
          "full_name": "BambuFTPService._connect_ftp",
          "class": "BambuFTPService",
          "signature": "(self)",
          "return_type": "ftplib.FTP_TLS",
          "decorators": [],
          "docstring": "Create and return a connected FTP_TLS instance.\n\nReturns:\n    Connected FTP_TLS instance\n\nRaises:\n    ConnectionError: If connection fails\n    PermissionError: If authentication fails",
          "line_start": 110,
          "line_end": 151,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_sync_connect",
          "full_name": "BambuFTPService._sync_connect",
          "class": "BambuFTPService",
          "signature": "()",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 124,
          "line_end": 148,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "ftp_connection",
          "full_name": "BambuFTPService.ftp_connection",
          "class": "BambuFTPService",
          "signature": "(self)",
          "return_type": "",
          "decorators": [
            "asynccontextmanager"
          ],
          "docstring": "Async context manager for FTP connections with automatic cleanup.\n\nUsage:\n    async with service.ftp_connection() as ftp:\n        files = await service.list_files(ftp)",
          "line_start": 154,
          "line_end": 192,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "list_files",
          "full_name": "BambuFTPService.list_files",
          "class": "BambuFTPService",
          "signature": "(self, directory: str)",
          "return_type": "List[BambuFTPFile]",
          "decorators": [],
          "docstring": "List files in the specified directory.\n\nArgs:\n    directory: Directory path to list (default: /cache)\n\nReturns:\n    List of BambuFTPFile objects\n\nRaises:\n    ConnectionError: If FTP connection fails\n    PermissionError: If directory access is denied",
          "line_start": 194,
          "line_end": 245,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_sync_list",
          "full_name": "BambuFTPService._sync_list",
          "class": "BambuFTPService",
          "signature": "()",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 212,
          "line_end": 235,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_parse_ftp_line",
          "full_name": "BambuFTPService._parse_ftp_line",
          "class": "BambuFTPService",
          "signature": "(self, line: str)",
          "return_type": "Optional[BambuFTPFile]",
          "decorators": [],
          "docstring": "Parse a single line from FTP LIST command.\n\nArgs:\n    line: Raw FTP LIST output line\n\nReturns:\n    BambuFTPFile object or None if line couldn't be parsed",
          "line_start": 247,
          "line_end": 294,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "download_file",
          "full_name": "BambuFTPService.download_file",
          "class": "BambuFTPService",
          "signature": "(self, remote_filename: str, local_path: str, directory: str)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Download a file from the FTP server.\n\nArgs:\n    remote_filename: Name of file to download on the server\n    local_path: Local path where file should be saved\n    directory: Remote directory containing the file (default: /cache)\n\nReturns:\n    True if download successful, False otherwise",
          "line_start": 296,
          "line_end": 366,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_sync_download",
          "full_name": "BambuFTPService._sync_download",
          "class": "BambuFTPService",
          "signature": "()",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 320,
          "line_end": 342,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "file_exists",
          "full_name": "BambuFTPService.file_exists",
          "class": "BambuFTPService",
          "signature": "(self, filename: str, directory: str)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Check if a file exists on the FTP server.\n\nArgs:\n    filename: Name of file to check\n    directory: Directory to check in (default: /cache)\n\nReturns:\n    True if file exists, False otherwise",
          "line_start": 368,
          "line_end": 387,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_file_info",
          "full_name": "BambuFTPService.get_file_info",
          "class": "BambuFTPService",
          "signature": "(self, filename: str, directory: str)",
          "return_type": "Optional[BambuFTPFile]",
          "decorators": [],
          "docstring": "Get detailed information about a specific file.\n\nArgs:\n    filename: Name of file to get info for\n    directory: Directory containing the file (default: /cache)\n\nReturns:\n    BambuFTPFile object or None if file not found",
          "line_start": 389,
          "line_end": 408,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_connection",
          "full_name": "BambuFTPService.test_connection",
          "class": "BambuFTPService",
          "signature": "(self)",
          "return_type": "Tuple[bool, str]",
          "decorators": [],
          "docstring": "Test the FTP connection without performing any operations.\n\nReturns:\n    Tuple of (success: bool, message: str)",
          "line_start": 410,
          "line_end": 430,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "create_bambu_ftp_service",
          "full_name": "create_bambu_ftp_service",
          "class": null,
          "signature": "(ip_address: str, access_code: str)",
          "return_type": "BambuFTPService",
          "decorators": [],
          "docstring": "Factory function to create and test a Bambu FTP service.\n\nArgs:\n    ip_address: Printer IP address\n    access_code: Bambu Lab access code\n\nReturns:\n    BambuFTPService instance\n\nRaises:\n    ConnectionError: If connection test fails",
          "line_start": 433,
          "line_end": 457,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "ftplib",
          "alias": null,
          "line": 16
        },
        {
          "type": "import",
          "module": "ssl",
          "alias": null,
          "line": 17
        },
        {
          "type": "import",
          "module": "socket",
          "alias": null,
          "line": 18
        },
        {
          "type": "import",
          "module": "asyncio",
          "alias": null,
          "line": 19
        },
        {
          "type": "from_import",
          "module": "pathlib",
          "name": "Path",
          "alias": null,
          "line": 20
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "List",
          "alias": null,
          "line": 21
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Dict",
          "alias": null,
          "line": 21
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Optional",
          "alias": null,
          "line": 21
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Tuple",
          "alias": null,
          "line": 21
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Any",
          "alias": null,
          "line": 21
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 22
        },
        {
          "type": "import",
          "module": "structlog",
          "alias": null,
          "line": 23
        },
        {
          "type": "from_import",
          "module": "contextlib",
          "name": "asynccontextmanager",
          "alias": null,
          "line": 24
        }
      ],
      "function_calls": [
        {
          "caller": "BambuFTPFile.__init__",
          "callee": "_determine_file_type",
          "line": 39,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPFile._determine_file_type",
          "callee": "lower",
          "line": 43,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPFile._determine_file_type",
          "callee": "Path",
          "line": 43,
          "type": "direct"
        },
        {
          "caller": "BambuFTPFile._determine_file_type",
          "callee": "get",
          "line": 57,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPFile.to_dict",
          "callee": "isoformat",
          "line": 70,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPService.__init__",
          "callee": "info",
          "line": 99,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPService._create_ssl_context",
          "callee": "create_default_context",
          "line": 104,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPService._connect_ftp",
          "callee": "_create_ssl_context",
          "line": 121,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPService._sync_connect",
          "callee": "FTP_TLS",
          "line": 125,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPService._sync_connect",
          "callee": "set_pasv",
          "line": 126,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPService._sync_connect",
          "callee": "connect",
          "line": 130,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPService._sync_connect",
          "callee": "login",
          "line": 133,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPService._sync_connect",
          "callee": "prot_p",
          "line": 136,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPService._sync_connect",
          "callee": "close",
          "line": 141,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPService._sync_connect",
          "callee": "PermissionError",
          "line": 142,
          "type": "direct"
        },
        {
          "caller": "BambuFTPService._sync_connect",
          "callee": "close",
          "line": 144,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPService._sync_connect",
          "callee": "ConnectionError",
          "line": 145,
          "type": "direct"
        },
        {
          "caller": "BambuFTPService._sync_connect",
          "callee": "close",
          "line": 147,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPService._sync_connect",
          "callee": "ConnectionError",
          "line": 148,
          "type": "direct"
        },
        {
          "caller": "BambuFTPService._connect_ftp",
          "callee": "get_event_loop",
          "line": 150,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPService._connect_ftp",
          "callee": "run_in_executor",
          "line": 151,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPService.ftp_connection",
          "callee": "range",
          "line": 163,
          "type": "direct"
        },
        {
          "caller": "BambuFTPService.ftp_connection",
          "callee": "_connect_ftp",
          "line": 165,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPService.ftp_connection",
          "callee": "debug",
          "line": 166,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPService.ftp_connection",
          "callee": "warning",
          "line": 172,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPService.ftp_connection",
          "callee": "str",
          "line": 176,
          "type": "direct"
        },
        {
          "caller": "BambuFTPService.ftp_connection",
          "callee": "sleep",
          "line": 182,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPService.ftp_connection",
          "callee": "run_in_executor",
          "line": 187,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPService.ftp_connection",
          "callee": "get_event_loop",
          "line": 187,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPService.ftp_connection",
          "callee": "close",
          "line": 190,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPService.list_files",
          "callee": "info",
          "line": 208,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPService.list_files",
          "callee": "ftp_connection",
          "line": 211,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPService._sync_list",
          "callee": "cwd",
          "line": 215,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPService._sync_list",
          "callee": "retrlines",
          "line": 219,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPService._sync_list",
          "callee": "_parse_ftp_line",
          "line": 223,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPService._sync_list",
          "callee": "append",
          "line": 225,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPService._sync_list",
          "callee": "str",
          "line": 230,
          "type": "direct"
        },
        {
          "caller": "BambuFTPService._sync_list",
          "callee": "warning",
          "line": 231,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPService._sync_list",
          "callee": "str",
          "line": 232,
          "type": "direct"
        },
        {
          "caller": "BambuFTPService._sync_list",
          "callee": "PermissionError",
          "line": 235,
          "type": "direct"
        },
        {
          "caller": "BambuFTPService.list_files",
          "callee": "get_event_loop",
          "line": 237,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPService.list_files",
          "callee": "run_in_executor",
          "line": 238,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPService.list_files",
          "callee": "info",
          "line": 240,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPService.list_files",
          "callee": "len",
          "line": 243,
          "type": "direct"
        },
        {
          "caller": "BambuFTPService._parse_ftp_line",
          "callee": "split",
          "line": 258,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPService._parse_ftp_line",
          "callee": "strip",
          "line": 258,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPService._parse_ftp_line",
          "callee": "len",
          "line": 259,
          "type": "direct"
        },
        {
          "caller": "BambuFTPService._parse_ftp_line",
          "callee": "startswith",
          "line": 265,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPService._parse_ftp_line",
          "callee": "isdigit",
          "line": 269,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPService._parse_ftp_line",
          "callee": "int",
          "line": 269,
          "type": "direct"
        },
        {
          "caller": "BambuFTPService._parse_ftp_line",
          "callee": "join",
          "line": 270,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPService._parse_ftp_line",
          "callee": "len",
          "line": 278,
          "type": "direct"
        },
        {
          "caller": "BambuFTPService._parse_ftp_line",
          "callee": "BambuFTPFile",
          "line": 284,
          "type": "direct"
        },
        {
          "caller": "BambuFTPService._parse_ftp_line",
          "callee": "debug",
          "line": 293,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPService._parse_ftp_line",
          "callee": "str",
          "line": 293,
          "type": "direct"
        },
        {
          "caller": "BambuFTPService.download_file",
          "callee": "info",
          "line": 309,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPService.download_file",
          "callee": "mkdir",
          "line": 317,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPService.download_file",
          "callee": "Path",
          "line": 317,
          "type": "direct"
        },
        {
          "caller": "BambuFTPService.download_file",
          "callee": "ftp_connection",
          "line": 319,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPService._sync_download",
          "callee": "cwd",
          "line": 323,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPService._sync_download",
          "callee": "open",
          "line": 326,
          "type": "direct"
        },
        {
          "caller": "BambuFTPService._sync_download",
          "callee": "retrbinary",
          "line": 327,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPService._sync_download",
          "callee": "error",
          "line": 332,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPService._sync_download",
          "callee": "str",
          "line": 335,
          "type": "direct"
        },
        {
          "caller": "BambuFTPService._sync_download",
          "callee": "error",
          "line": 338,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPService._sync_download",
          "callee": "str",
          "line": 341,
          "type": "direct"
        },
        {
          "caller": "BambuFTPService.download_file",
          "callee": "get_event_loop",
          "line": 344,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPService.download_file",
          "callee": "run_in_executor",
          "line": 345,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPService.download_file",
          "callee": "exists",
          "line": 347,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPService.download_file",
          "callee": "Path",
          "line": 347,
          "type": "direct"
        },
        {
          "caller": "BambuFTPService.download_file",
          "callee": "stat",
          "line": 348,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPService.download_file",
          "callee": "Path",
          "line": 348,
          "type": "direct"
        },
        {
          "caller": "BambuFTPService.download_file",
          "callee": "info",
          "line": 349,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPService.download_file",
          "callee": "error",
          "line": 356,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPService.download_file",
          "callee": "error",
          "line": 362,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPService.download_file",
          "callee": "str",
          "line": 365,
          "type": "direct"
        },
        {
          "caller": "BambuFTPService.file_exists",
          "callee": "list_files",
          "line": 380,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPService.file_exists",
          "callee": "any",
          "line": 381,
          "type": "direct"
        },
        {
          "caller": "BambuFTPService.file_exists",
          "callee": "debug",
          "line": 383,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPService.file_exists",
          "callee": "str",
          "line": 386,
          "type": "direct"
        },
        {
          "caller": "BambuFTPService.get_file_info",
          "callee": "list_files",
          "line": 401,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPService.get_file_info",
          "callee": "next",
          "line": 402,
          "type": "direct"
        },
        {
          "caller": "BambuFTPService.get_file_info",
          "callee": "debug",
          "line": 404,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPService.get_file_info",
          "callee": "str",
          "line": 407,
          "type": "direct"
        },
        {
          "caller": "BambuFTPService.test_connection",
          "callee": "ftp_connection",
          "line": 418,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPService.test_connection",
          "callee": "get_event_loop",
          "line": 420,
          "type": "attribute"
        },
        {
          "caller": "BambuFTPService.test_connection",
          "callee": "run_in_executor",
          "line": 421,
          "type": "attribute"
        },
        {
          "caller": "create_bambu_ftp_service",
          "callee": "BambuFTPService",
          "line": 447,
          "type": "direct"
        },
        {
          "caller": "create_bambu_ftp_service",
          "callee": "test_connection",
          "line": 450,
          "type": "attribute"
        },
        {
          "caller": "create_bambu_ftp_service",
          "callee": "ConnectionError",
          "line": 452,
          "type": "direct"
        },
        {
          "caller": "create_bambu_ftp_service",
          "callee": "info",
          "line": 454,
          "type": "attribute"
        }
      ],
      "error": null
    },
    {
      "filepath": "src\\services\\bambu_parser.py",
      "functions": [
        {
          "name": "__init__",
          "full_name": "BambuParser.__init__",
          "class": "BambuParser",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Initialize the Bambu parser.",
          "line_start": 82,
          "line_end": 84,
          "access_level": "dunder",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "parse_file",
          "full_name": "BambuParser.parse_file",
          "class": "BambuParser",
          "signature": "(self, file_path: str)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Parse a Bambu G-code or 3MF file and extract thumbnails and metadata.\n\nArgs:\n    file_path: Path to the file to parse\n\nReturns:\n    Dictionary containing parsed data with keys:\n    - thumbnails: List of thumbnail data (base64, width, height)\n    - metadata: Dictionary of parsed metadata\n    - success: Boolean indicating if parsing was successful\n    - error: Error message if parsing failed\n    - needs_generation: Boolean indicating if preview rendering is needed",
          "line_start": 86,
          "line_end": 139,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_parse_gcode_file",
          "full_name": "BambuParser._parse_gcode_file",
          "class": "BambuParser",
          "signature": "(self, file_path: Path)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Parse G-code file for thumbnails and metadata.",
          "line_start": 141,
          "line_end": 174,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_parse_3mf_file",
          "full_name": "BambuParser._parse_3mf_file",
          "class": "BambuParser",
          "signature": "(self, file_path: Path)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Parse 3MF file for thumbnails and metadata.",
          "line_start": 176,
          "line_end": 253,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_extract_gcode_thumbnails",
          "full_name": "BambuParser._extract_gcode_thumbnails",
          "class": "BambuParser",
          "signature": "(self, content: str)",
          "return_type": "List[Dict[str, Any]]",
          "decorators": [],
          "docstring": "Extract thumbnails from G-code comments.",
          "line_start": 255,
          "line_end": 312,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_extract_gcode_metadata",
          "full_name": "BambuParser._extract_gcode_metadata",
          "class": "BambuParser",
          "signature": "(self, content: str)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Extract metadata from G-code comments.",
          "line_start": 314,
          "line_end": 373,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_extract_advanced_metadata",
          "full_name": "BambuParser._extract_advanced_metadata",
          "class": "BambuParser",
          "signature": "(self, content: str)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Extract advanced metadata from G-code content.",
          "line_start": 375,
          "line_end": 385,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_convert_metadata_value",
          "full_name": "BambuParser._convert_metadata_value",
          "class": "BambuParser",
          "signature": "(self, key: str, value: str)",
          "return_type": "Any",
          "decorators": [],
          "docstring": "Convert string values to appropriate types based on key.",
          "line_start": 387,
          "line_end": 436,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_calculate_derived_metrics",
          "full_name": "BambuParser._calculate_derived_metrics",
          "class": "BambuParser",
          "signature": "(self, metadata: Dict[str, Any])",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Calculate derived metrics from extracted metadata.",
          "line_start": 438,
          "line_end": 509,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_calculate_complexity_score",
          "full_name": "BambuParser._calculate_complexity_score",
          "class": "BambuParser",
          "signature": "(self, metadata: Dict[str, Any])",
          "return_type": "int",
          "decorators": [],
          "docstring": "Calculate print complexity score (1-10 scale).",
          "line_start": 511,
          "line_end": 559,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_calculate_difficulty_level",
          "full_name": "BambuParser._calculate_difficulty_level",
          "class": "BambuParser",
          "signature": "(self, metadata: Dict[str, Any])",
          "return_type": "str",
          "decorators": [],
          "docstring": "Calculate difficulty level based on complexity.",
          "line_start": 561,
          "line_end": 572,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_extract_3mf_metadata",
          "full_name": "BambuParser._extract_3mf_metadata",
          "class": "BambuParser",
          "signature": "(self, xml_content: str)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Extract metadata from 3MF XML files.",
          "line_start": 574,
          "line_end": 604,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_parse_bgcode_file",
          "full_name": "BambuParser._parse_bgcode_file",
          "class": "BambuParser",
          "signature": "(self, file_path: Path)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Parse Binary G-code file for thumbnails and metadata.\n\nBGCode is a binary format that contains structured blocks.\nFor now, we'll implement basic parsing to extract embedded thumbnails.",
          "line_start": 606,
          "line_end": 718,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_parse_stl_file",
          "full_name": "BambuParser._parse_stl_file",
          "class": "BambuParser",
          "signature": "(self, file_path: Path)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Parse STL file - STL files never have embedded thumbnails.\nReturns success but marks that generation is needed.\n\nArgs:\n    file_path: Path to STL file\n\nReturns:\n    Parse result indicating generation is needed",
          "line_start": 720,
          "line_end": 761,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_extract_png_dimensions",
          "full_name": "BambuParser._extract_png_dimensions",
          "class": "BambuParser",
          "signature": "(self, png_data: bytes)",
          "return_type": "Tuple[int, int]",
          "decorators": [],
          "docstring": "Extract width and height from PNG header.",
          "line_start": 763,
          "line_end": 773,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_parse_thumbnail_dimensions",
          "full_name": "BambuParser._parse_thumbnail_dimensions",
          "class": "BambuParser",
          "signature": "(self, filename: str)",
          "return_type": "Tuple[int, int]",
          "decorators": [],
          "docstring": "Parse thumbnail dimensions from filename or return defaults.",
          "line_start": 775,
          "line_end": 783,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_parse_time_duration",
          "full_name": "BambuParser._parse_time_duration",
          "class": "BambuParser",
          "signature": "(self, time_str: str)",
          "return_type": "int",
          "decorators": [],
          "docstring": "Parse time duration string to seconds.",
          "line_start": 785,
          "line_end": 818,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_is_valid_base64",
          "full_name": "BambuParser._is_valid_base64",
          "class": "BambuParser",
          "signature": "(self, s: str)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Check if string is valid base64.",
          "line_start": 820,
          "line_end": 830,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_largest_thumbnail",
          "full_name": "BambuParser.get_largest_thumbnail",
          "class": "BambuParser",
          "signature": "(self, thumbnails: List[Dict[str, Any]])",
          "return_type": "Optional[Dict[str, Any]]",
          "decorators": [],
          "docstring": "Get the largest thumbnail from a list of thumbnails.",
          "line_start": 832,
          "line_end": 839,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_thumbnail_by_size",
          "full_name": "BambuParser.get_thumbnail_by_size",
          "class": "BambuParser",
          "signature": "(self, thumbnails: List[Dict[str, Any]], preferred_size: Tuple[int, int])",
          "return_type": "Optional[Dict[str, Any]]",
          "decorators": [],
          "docstring": "Get thumbnail closest to preferred size.",
          "line_start": 841,
          "line_end": 854,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "re",
          "alias": null,
          "line": 5
        },
        {
          "type": "import",
          "module": "base64",
          "alias": null,
          "line": 6
        },
        {
          "type": "import",
          "module": "zipfile",
          "alias": null,
          "line": 7
        },
        {
          "type": "import",
          "module": "xml.etree.ElementTree",
          "alias": "ET",
          "line": 8
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Dict",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Any",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Optional",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "List",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Tuple",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "pathlib",
          "name": "Path",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "io",
          "name": "BytesIO",
          "alias": null,
          "line": 11
        },
        {
          "type": "import",
          "module": "structlog",
          "alias": null,
          "line": 12
        }
      ],
      "function_calls": [
        {
          "caller": "BambuParser.parse_file",
          "callee": "Path",
          "line": 102,
          "type": "direct"
        },
        {
          "caller": "BambuParser.parse_file",
          "callee": "exists",
          "line": 104,
          "type": "attribute"
        },
        {
          "caller": "BambuParser.parse_file",
          "callee": "lower",
          "line": 114,
          "type": "attribute"
        },
        {
          "caller": "BambuParser.parse_file",
          "callee": "_parse_3mf_file",
          "line": 115,
          "type": "attribute"
        },
        {
          "caller": "BambuParser.parse_file",
          "callee": "lower",
          "line": 116,
          "type": "attribute"
        },
        {
          "caller": "BambuParser.parse_file",
          "callee": "_parse_gcode_file",
          "line": 117,
          "type": "attribute"
        },
        {
          "caller": "BambuParser.parse_file",
          "callee": "lower",
          "line": 118,
          "type": "attribute"
        },
        {
          "caller": "BambuParser.parse_file",
          "callee": "_parse_bgcode_file",
          "line": 119,
          "type": "attribute"
        },
        {
          "caller": "BambuParser.parse_file",
          "callee": "lower",
          "line": 120,
          "type": "attribute"
        },
        {
          "caller": "BambuParser.parse_file",
          "callee": "_parse_stl_file",
          "line": 121,
          "type": "attribute"
        },
        {
          "caller": "BambuParser.parse_file",
          "callee": "error",
          "line": 132,
          "type": "attribute"
        },
        {
          "caller": "BambuParser.parse_file",
          "callee": "str",
          "line": 132,
          "type": "direct"
        },
        {
          "caller": "BambuParser.parse_file",
          "callee": "str",
          "line": 132,
          "type": "direct"
        },
        {
          "caller": "BambuParser.parse_file",
          "callee": "str",
          "line": 135,
          "type": "direct"
        },
        {
          "caller": "BambuParser._parse_gcode_file",
          "callee": "open",
          "line": 144,
          "type": "direct"
        },
        {
          "caller": "BambuParser._parse_gcode_file",
          "callee": "read",
          "line": 145,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_gcode_file",
          "callee": "_extract_gcode_thumbnails",
          "line": 148,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_gcode_file",
          "callee": "_extract_gcode_metadata",
          "line": 151,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_gcode_file",
          "callee": "info",
          "line": 153,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_gcode_file",
          "callee": "str",
          "line": 154,
          "type": "direct"
        },
        {
          "caller": "BambuParser._parse_gcode_file",
          "callee": "len",
          "line": 155,
          "type": "direct"
        },
        {
          "caller": "BambuParser._parse_gcode_file",
          "callee": "list",
          "line": 156,
          "type": "direct"
        },
        {
          "caller": "BambuParser._parse_gcode_file",
          "callee": "keys",
          "line": 156,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_gcode_file",
          "callee": "len",
          "line": 163,
          "type": "direct"
        },
        {
          "caller": "BambuParser._parse_gcode_file",
          "callee": "error",
          "line": 167,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_gcode_file",
          "callee": "str",
          "line": 167,
          "type": "direct"
        },
        {
          "caller": "BambuParser._parse_gcode_file",
          "callee": "str",
          "line": 167,
          "type": "direct"
        },
        {
          "caller": "BambuParser._parse_gcode_file",
          "callee": "str",
          "line": 170,
          "type": "direct"
        },
        {
          "caller": "BambuParser._parse_3mf_file",
          "callee": "ZipFile",
          "line": 182,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_3mf_file",
          "callee": "namelist",
          "line": 184,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_3mf_file",
          "callee": "startswith",
          "line": 185,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_3mf_file",
          "callee": "endswith",
          "line": 185,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_3mf_file",
          "callee": "open",
          "line": 190,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_3mf_file",
          "callee": "read",
          "line": 191,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_3mf_file",
          "callee": "decode",
          "line": 192,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_3mf_file",
          "callee": "b64encode",
          "line": 192,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_3mf_file",
          "callee": "_parse_thumbnail_dimensions",
          "line": 195,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_3mf_file",
          "callee": "append",
          "line": 197,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_3mf_file",
          "callee": "warning",
          "line": 206,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_3mf_file",
          "callee": "str",
          "line": 207,
          "type": "direct"
        },
        {
          "caller": "BambuParser._parse_3mf_file",
          "callee": "open",
          "line": 212,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_3mf_file",
          "callee": "decode",
          "line": 213,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_3mf_file",
          "callee": "read",
          "line": 213,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_3mf_file",
          "callee": "update",
          "line": 214,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_3mf_file",
          "callee": "_extract_3mf_metadata",
          "line": 214,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_3mf_file",
          "callee": "warning",
          "line": 216,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_3mf_file",
          "callee": "str",
          "line": 216,
          "type": "direct"
        },
        {
          "caller": "BambuParser._parse_3mf_file",
          "callee": "namelist",
          "line": 219,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_3mf_file",
          "callee": "startswith",
          "line": 220,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_3mf_file",
          "callee": "endswith",
          "line": 220,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_3mf_file",
          "callee": "open",
          "line": 224,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_3mf_file",
          "callee": "decode",
          "line": 225,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_3mf_file",
          "callee": "read",
          "line": 225,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_3mf_file",
          "callee": "update",
          "line": 226,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_3mf_file",
          "callee": "_extract_3mf_metadata",
          "line": 226,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_3mf_file",
          "callee": "warning",
          "line": 228,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_3mf_file",
          "callee": "str",
          "line": 229,
          "type": "direct"
        },
        {
          "caller": "BambuParser._parse_3mf_file",
          "callee": "info",
          "line": 232,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_3mf_file",
          "callee": "str",
          "line": 233,
          "type": "direct"
        },
        {
          "caller": "BambuParser._parse_3mf_file",
          "callee": "len",
          "line": 234,
          "type": "direct"
        },
        {
          "caller": "BambuParser._parse_3mf_file",
          "callee": "list",
          "line": 235,
          "type": "direct"
        },
        {
          "caller": "BambuParser._parse_3mf_file",
          "callee": "keys",
          "line": 235,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_3mf_file",
          "callee": "len",
          "line": 242,
          "type": "direct"
        },
        {
          "caller": "BambuParser._parse_3mf_file",
          "callee": "error",
          "line": 246,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_3mf_file",
          "callee": "str",
          "line": 246,
          "type": "direct"
        },
        {
          "caller": "BambuParser._parse_3mf_file",
          "callee": "str",
          "line": 246,
          "type": "direct"
        },
        {
          "caller": "BambuParser._parse_3mf_file",
          "callee": "str",
          "line": 249,
          "type": "direct"
        },
        {
          "caller": "BambuParser._extract_gcode_thumbnails",
          "callee": "list",
          "line": 260,
          "type": "direct"
        },
        {
          "caller": "BambuParser._extract_gcode_thumbnails",
          "callee": "finditer",
          "line": 260,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._extract_gcode_thumbnails",
          "callee": "list",
          "line": 261,
          "type": "direct"
        },
        {
          "caller": "BambuParser._extract_gcode_thumbnails",
          "callee": "finditer",
          "line": 261,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._extract_gcode_thumbnails",
          "callee": "len",
          "line": 263,
          "type": "direct"
        },
        {
          "caller": "BambuParser._extract_gcode_thumbnails",
          "callee": "len",
          "line": 263,
          "type": "direct"
        },
        {
          "caller": "BambuParser._extract_gcode_thumbnails",
          "callee": "warning",
          "line": 264,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._extract_gcode_thumbnails",
          "callee": "len",
          "line": 265,
          "type": "direct"
        },
        {
          "caller": "BambuParser._extract_gcode_thumbnails",
          "callee": "len",
          "line": 266,
          "type": "direct"
        },
        {
          "caller": "BambuParser._extract_gcode_thumbnails",
          "callee": "enumerate",
          "line": 269,
          "type": "direct"
        },
        {
          "caller": "BambuParser._extract_gcode_thumbnails",
          "callee": "int",
          "line": 271,
          "type": "direct"
        },
        {
          "caller": "BambuParser._extract_gcode_thumbnails",
          "callee": "group",
          "line": 271,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._extract_gcode_thumbnails",
          "callee": "int",
          "line": 272,
          "type": "direct"
        },
        {
          "caller": "BambuParser._extract_gcode_thumbnails",
          "callee": "group",
          "line": 272,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._extract_gcode_thumbnails",
          "callee": "int",
          "line": 273,
          "type": "direct"
        },
        {
          "caller": "BambuParser._extract_gcode_thumbnails",
          "callee": "group",
          "line": 273,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._extract_gcode_thumbnails",
          "callee": "len",
          "line": 275,
          "type": "direct"
        },
        {
          "caller": "BambuParser._extract_gcode_thumbnails",
          "callee": "end",
          "line": 279,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._extract_gcode_thumbnails",
          "callee": "start",
          "line": 280,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._extract_gcode_thumbnails",
          "callee": "split",
          "line": 285,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._extract_gcode_thumbnails",
          "callee": "strip",
          "line": 286,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._extract_gcode_thumbnails",
          "callee": "startswith",
          "line": 287,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._extract_gcode_thumbnails",
          "callee": "len",
          "line": 287,
          "type": "direct"
        },
        {
          "caller": "BambuParser._extract_gcode_thumbnails",
          "callee": "strip",
          "line": 289,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._extract_gcode_thumbnails",
          "callee": "_is_valid_base64",
          "line": 293,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._extract_gcode_thumbnails",
          "callee": "append",
          "line": 294,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._extract_gcode_thumbnails",
          "callee": "debug",
          "line": 303,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._extract_gcode_thumbnails",
          "callee": "warning",
          "line": 306,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._extract_gcode_thumbnails",
          "callee": "warning",
          "line": 309,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._extract_gcode_thumbnails",
          "callee": "str",
          "line": 309,
          "type": "direct"
        },
        {
          "caller": "BambuParser._extract_gcode_metadata",
          "callee": "items",
          "line": 319,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._extract_gcode_metadata",
          "callee": "search",
          "line": 320,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._extract_gcode_metadata",
          "callee": "strip",
          "line": 322,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._extract_gcode_metadata",
          "callee": "group",
          "line": 322,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._extract_gcode_metadata",
          "callee": "float",
          "line": 327,
          "type": "direct"
        },
        {
          "caller": "BambuParser._extract_gcode_metadata",
          "callee": "int",
          "line": 332,
          "type": "direct"
        },
        {
          "caller": "BambuParser._extract_gcode_metadata",
          "callee": "_parse_time_duration",
          "line": 336,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._extract_gcode_metadata",
          "callee": "lower",
          "line": 338,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._extract_gcode_metadata",
          "callee": "items",
          "line": 343,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._extract_gcode_metadata",
          "callee": "search",
          "line": 344,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._extract_gcode_metadata",
          "callee": "strip",
          "line": 346,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._extract_gcode_metadata",
          "callee": "group",
          "line": 346,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._extract_gcode_metadata",
          "callee": "float",
          "line": 351,
          "type": "direct"
        },
        {
          "caller": "BambuParser._extract_gcode_metadata",
          "callee": "strip",
          "line": 351,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._extract_gcode_metadata",
          "callee": "split",
          "line": 351,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._extract_gcode_metadata",
          "callee": "sum",
          "line": 353,
          "type": "direct"
        },
        {
          "caller": "BambuParser._extract_gcode_metadata",
          "callee": "float",
          "line": 358,
          "type": "direct"
        },
        {
          "caller": "BambuParser._extract_gcode_metadata",
          "callee": "strip",
          "line": 363,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._extract_gcode_metadata",
          "callee": "split",
          "line": 363,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._extract_gcode_metadata",
          "callee": "update",
          "line": 368,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._extract_gcode_metadata",
          "callee": "_extract_advanced_metadata",
          "line": 368,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._extract_gcode_metadata",
          "callee": "update",
          "line": 371,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._extract_gcode_metadata",
          "callee": "_calculate_derived_metrics",
          "line": 371,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._extract_advanced_metadata",
          "callee": "items",
          "line": 379,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._extract_advanced_metadata",
          "callee": "search",
          "line": 380,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._extract_advanced_metadata",
          "callee": "strip",
          "line": 382,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._extract_advanced_metadata",
          "callee": "group",
          "line": 382,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._extract_advanced_metadata",
          "callee": "_convert_metadata_value",
          "line": 383,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._convert_metadata_value",
          "callee": "float",
          "line": 394,
          "type": "direct"
        },
        {
          "caller": "BambuParser._convert_metadata_value",
          "callee": "int",
          "line": 402,
          "type": "direct"
        },
        {
          "caller": "BambuParser._convert_metadata_value",
          "callee": "float",
          "line": 412,
          "type": "direct"
        },
        {
          "caller": "BambuParser._convert_metadata_value",
          "callee": "strip",
          "line": 412,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._convert_metadata_value",
          "callee": "split",
          "line": 412,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._convert_metadata_value",
          "callee": "float",
          "line": 414,
          "type": "direct"
        },
        {
          "caller": "BambuParser._convert_metadata_value",
          "callee": "lower",
          "line": 420,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._convert_metadata_value",
          "callee": "strip",
          "line": 428,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._convert_metadata_value",
          "callee": "strip",
          "line": 428,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._convert_metadata_value",
          "callee": "split",
          "line": 428,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._convert_metadata_value",
          "callee": "strip",
          "line": 431,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._convert_metadata_value",
          "callee": "strip",
          "line": 431,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._calculate_derived_metrics",
          "callee": "round",
          "line": 447,
          "type": "direct"
        },
        {
          "caller": "BambuParser._calculate_derived_metrics",
          "callee": "isinstance",
          "line": 454,
          "type": "direct"
        },
        {
          "caller": "BambuParser._calculate_derived_metrics",
          "callee": "round",
          "line": 455,
          "type": "direct"
        },
        {
          "caller": "BambuParser._calculate_derived_metrics",
          "callee": "sum",
          "line": 455,
          "type": "direct"
        },
        {
          "caller": "BambuParser._calculate_derived_metrics",
          "callee": "isinstance",
          "line": 456,
          "type": "direct"
        },
        {
          "caller": "BambuParser._calculate_derived_metrics",
          "callee": "round",
          "line": 457,
          "type": "direct"
        },
        {
          "caller": "BambuParser._calculate_derived_metrics",
          "callee": "float",
          "line": 457,
          "type": "direct"
        },
        {
          "caller": "BambuParser._calculate_derived_metrics",
          "callee": "isinstance",
          "line": 462,
          "type": "direct"
        },
        {
          "caller": "BambuParser._calculate_derived_metrics",
          "callee": "round",
          "line": 464,
          "type": "direct"
        },
        {
          "caller": "BambuParser._calculate_derived_metrics",
          "callee": "sum",
          "line": 464,
          "type": "direct"
        },
        {
          "caller": "BambuParser._calculate_derived_metrics",
          "callee": "isinstance",
          "line": 465,
          "type": "direct"
        },
        {
          "caller": "BambuParser._calculate_derived_metrics",
          "callee": "round",
          "line": 466,
          "type": "direct"
        },
        {
          "caller": "BambuParser._calculate_derived_metrics",
          "callee": "float",
          "line": 466,
          "type": "direct"
        },
        {
          "caller": "BambuParser._calculate_derived_metrics",
          "callee": "_calculate_complexity_score",
          "line": 473,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._calculate_derived_metrics",
          "callee": "_calculate_difficulty_level",
          "line": 476,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._calculate_derived_metrics",
          "callee": "get",
          "line": 480,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._calculate_derived_metrics",
          "callee": "get",
          "line": 480,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._calculate_derived_metrics",
          "callee": "round",
          "line": 483,
          "type": "direct"
        },
        {
          "caller": "BambuParser._calculate_derived_metrics",
          "callee": "get",
          "line": 488,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._calculate_derived_metrics",
          "callee": "round",
          "line": 501,
          "type": "direct"
        },
        {
          "caller": "BambuParser._calculate_derived_metrics",
          "callee": "round",
          "line": 505,
          "type": "direct"
        },
        {
          "caller": "BambuParser._calculate_complexity_score",
          "callee": "get",
          "line": 516,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._calculate_complexity_score",
          "callee": "get",
          "line": 526,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._calculate_complexity_score",
          "callee": "get",
          "line": 526,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._calculate_complexity_score",
          "callee": "get",
          "line": 530,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._calculate_complexity_score",
          "callee": "get",
          "line": 530,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._calculate_complexity_score",
          "callee": "get",
          "line": 536,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._calculate_complexity_score",
          "callee": "get",
          "line": 536,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._calculate_complexity_score",
          "callee": "any",
          "line": 539,
          "type": "direct"
        },
        {
          "caller": "BambuParser._calculate_complexity_score",
          "callee": "lower",
          "line": 539,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._calculate_complexity_score",
          "callee": "str",
          "line": 539,
          "type": "direct"
        },
        {
          "caller": "BambuParser._calculate_complexity_score",
          "callee": "get",
          "line": 543,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._calculate_complexity_score",
          "callee": "isinstance",
          "line": 544,
          "type": "direct"
        },
        {
          "caller": "BambuParser._calculate_complexity_score",
          "callee": "len",
          "line": 544,
          "type": "direct"
        },
        {
          "caller": "BambuParser._calculate_complexity_score",
          "callee": "sum",
          "line": 546,
          "type": "direct"
        },
        {
          "caller": "BambuParser._calculate_complexity_score",
          "callee": "get",
          "line": 551,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._calculate_complexity_score",
          "callee": "max",
          "line": 559,
          "type": "direct"
        },
        {
          "caller": "BambuParser._calculate_complexity_score",
          "callee": "min",
          "line": 559,
          "type": "direct"
        },
        {
          "caller": "BambuParser._calculate_difficulty_level",
          "callee": "_calculate_complexity_score",
          "line": 563,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._extract_3mf_metadata",
          "callee": "fromstring",
          "line": 579,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._extract_3mf_metadata",
          "callee": "iter",
          "line": 582,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._extract_3mf_metadata",
          "callee": "lower",
          "line": 583,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._extract_3mf_metadata",
          "callee": "get",
          "line": 584,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._extract_3mf_metadata",
          "callee": "get",
          "line": 585,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._extract_3mf_metadata",
          "callee": "lower",
          "line": 589,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._extract_3mf_metadata",
          "callee": "lower",
          "line": 593,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._extract_3mf_metadata",
          "callee": "float",
          "line": 593,
          "type": "direct"
        },
        {
          "caller": "BambuParser._extract_3mf_metadata",
          "callee": "lower",
          "line": 595,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._extract_3mf_metadata",
          "callee": "int",
          "line": 595,
          "type": "direct"
        },
        {
          "caller": "BambuParser._extract_3mf_metadata",
          "callee": "lower",
          "line": 597,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._extract_3mf_metadata",
          "callee": "lower",
          "line": 599,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._extract_3mf_metadata",
          "callee": "warning",
          "line": 602,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._extract_3mf_metadata",
          "callee": "str",
          "line": 602,
          "type": "direct"
        },
        {
          "caller": "BambuParser._parse_bgcode_file",
          "callee": "open",
          "line": 616,
          "type": "direct"
        },
        {
          "caller": "BambuParser._parse_bgcode_file",
          "callee": "read",
          "line": 619,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_bgcode_file",
          "callee": "warning",
          "line": 621,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_bgcode_file",
          "callee": "hex",
          "line": 622,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_bgcode_file",
          "callee": "hex",
          "line": 625,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_bgcode_file",
          "callee": "seek",
          "line": 632,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_bgcode_file",
          "callee": "read",
          "line": 633,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_bgcode_file",
          "callee": "find",
          "line": 640,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_bgcode_file",
          "callee": "append",
          "line": 643,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_bgcode_file",
          "callee": "enumerate",
          "line": 647,
          "type": "direct"
        },
        {
          "caller": "BambuParser._parse_bgcode_file",
          "callee": "len",
          "line": 650,
          "type": "direct"
        },
        {
          "caller": "BambuParser._parse_bgcode_file",
          "callee": "find",
          "line": 655,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_bgcode_file",
          "callee": "len",
          "line": 657,
          "type": "direct"
        },
        {
          "caller": "BambuParser._parse_bgcode_file",
          "callee": "min",
          "line": 660,
          "type": "direct"
        },
        {
          "caller": "BambuParser._parse_bgcode_file",
          "callee": "len",
          "line": 660,
          "type": "direct"
        },
        {
          "caller": "BambuParser._parse_bgcode_file",
          "callee": "len",
          "line": 665,
          "type": "direct"
        },
        {
          "caller": "BambuParser._parse_bgcode_file",
          "callee": "decode",
          "line": 669,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_bgcode_file",
          "callee": "b64encode",
          "line": 669,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_bgcode_file",
          "callee": "_extract_png_dimensions",
          "line": 672,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_bgcode_file",
          "callee": "append",
          "line": 674,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_bgcode_file",
          "callee": "debug",
          "line": 681,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_bgcode_file",
          "callee": "len",
          "line": 682,
          "type": "direct"
        },
        {
          "caller": "BambuParser._parse_bgcode_file",
          "callee": "warning",
          "line": 685,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_bgcode_file",
          "callee": "str",
          "line": 686,
          "type": "direct"
        },
        {
          "caller": "BambuParser._parse_bgcode_file",
          "callee": "len",
          "line": 692,
          "type": "direct"
        },
        {
          "caller": "BambuParser._parse_bgcode_file",
          "callee": "len",
          "line": 694,
          "type": "direct"
        },
        {
          "caller": "BambuParser._parse_bgcode_file",
          "callee": "info",
          "line": 697,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_bgcode_file",
          "callee": "str",
          "line": 698,
          "type": "direct"
        },
        {
          "caller": "BambuParser._parse_bgcode_file",
          "callee": "len",
          "line": 699,
          "type": "direct"
        },
        {
          "caller": "BambuParser._parse_bgcode_file",
          "callee": "list",
          "line": 700,
          "type": "direct"
        },
        {
          "caller": "BambuParser._parse_bgcode_file",
          "callee": "keys",
          "line": 700,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_bgcode_file",
          "callee": "len",
          "line": 707,
          "type": "direct"
        },
        {
          "caller": "BambuParser._parse_bgcode_file",
          "callee": "error",
          "line": 711,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_bgcode_file",
          "callee": "str",
          "line": 711,
          "type": "direct"
        },
        {
          "caller": "BambuParser._parse_bgcode_file",
          "callee": "str",
          "line": 711,
          "type": "direct"
        },
        {
          "caller": "BambuParser._parse_bgcode_file",
          "callee": "str",
          "line": 714,
          "type": "direct"
        },
        {
          "caller": "BambuParser._parse_stl_file",
          "callee": "stat",
          "line": 734,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_stl_file",
          "callee": "info",
          "line": 741,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_stl_file",
          "callee": "str",
          "line": 742,
          "type": "direct"
        },
        {
          "caller": "BambuParser._parse_stl_file",
          "callee": "error",
          "line": 754,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_stl_file",
          "callee": "str",
          "line": 754,
          "type": "direct"
        },
        {
          "caller": "BambuParser._parse_stl_file",
          "callee": "str",
          "line": 754,
          "type": "direct"
        },
        {
          "caller": "BambuParser._parse_stl_file",
          "callee": "str",
          "line": 757,
          "type": "direct"
        },
        {
          "caller": "BambuParser._extract_png_dimensions",
          "callee": "len",
          "line": 767,
          "type": "direct"
        },
        {
          "caller": "BambuParser._extract_png_dimensions",
          "callee": "from_bytes",
          "line": 768,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._extract_png_dimensions",
          "callee": "from_bytes",
          "line": 769,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_thumbnail_dimensions",
          "callee": "search",
          "line": 778,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_thumbnail_dimensions",
          "callee": "int",
          "line": 780,
          "type": "direct"
        },
        {
          "caller": "BambuParser._parse_thumbnail_dimensions",
          "callee": "group",
          "line": 780,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_thumbnail_dimensions",
          "callee": "int",
          "line": 780,
          "type": "direct"
        },
        {
          "caller": "BambuParser._parse_thumbnail_dimensions",
          "callee": "group",
          "line": 780,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_time_duration",
          "callee": "strip",
          "line": 789,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_time_duration",
          "callee": "lower",
          "line": 789,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_time_duration",
          "callee": "search",
          "line": 793,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_time_duration",
          "callee": "int",
          "line": 795,
          "type": "direct"
        },
        {
          "caller": "BambuParser._parse_time_duration",
          "callee": "group",
          "line": 795,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_time_duration",
          "callee": "search",
          "line": 798,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_time_duration",
          "callee": "int",
          "line": 800,
          "type": "direct"
        },
        {
          "caller": "BambuParser._parse_time_duration",
          "callee": "group",
          "line": 800,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_time_duration",
          "callee": "search",
          "line": 803,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_time_duration",
          "callee": "int",
          "line": 805,
          "type": "direct"
        },
        {
          "caller": "BambuParser._parse_time_duration",
          "callee": "group",
          "line": 805,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_time_duration",
          "callee": "int",
          "line": 810,
          "type": "direct"
        },
        {
          "caller": "BambuParser._parse_time_duration",
          "callee": "float",
          "line": 810,
          "type": "direct"
        },
        {
          "caller": "BambuParser._parse_time_duration",
          "callee": "warning",
          "line": 817,
          "type": "attribute"
        },
        {
          "caller": "BambuParser._parse_time_duration",
          "callee": "str",
          "line": 817,
          "type": "direct"
        },
        {
          "caller": "BambuParser._is_valid_base64",
          "callee": "len",
          "line": 824,
          "type": "direct"
        },
        {
          "caller": "BambuParser._is_valid_base64",
          "callee": "len",
          "line": 825,
          "type": "direct"
        },
        {
          "caller": "BambuParser._is_valid_base64",
          "callee": "b64decode",
          "line": 827,
          "type": "attribute"
        },
        {
          "caller": "BambuParser.get_largest_thumbnail",
          "callee": "max",
          "line": 838,
          "type": "direct"
        },
        {
          "caller": "BambuParser.get_largest_thumbnail",
          "callee": "get",
          "line": 838,
          "type": "attribute"
        },
        {
          "caller": "BambuParser.get_largest_thumbnail",
          "callee": "get",
          "line": 838,
          "type": "attribute"
        },
        {
          "caller": "BambuParser.get_thumbnail_by_size",
          "callee": "min",
          "line": 851,
          "type": "direct"
        },
        {
          "caller": "BambuParser.get_thumbnail_by_size",
          "callee": "abs",
          "line": 852,
          "type": "direct"
        },
        {
          "caller": "BambuParser.get_thumbnail_by_size",
          "callee": "get",
          "line": 852,
          "type": "attribute"
        },
        {
          "caller": "BambuParser.get_thumbnail_by_size",
          "callee": "get",
          "line": 852,
          "type": "attribute"
        }
      ],
      "error": null
    },
    {
      "filepath": "src\\services\\config_service.py",
      "functions": [
        {
          "name": "__post_init__",
          "full_name": "PrinterConfig.__post_init__",
          "class": "PrinterConfig",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Validate printer configuration after initialization.",
          "line_start": 33,
          "line_end": 35,
          "access_level": "dunder",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_validate_config",
          "full_name": "PrinterConfig._validate_config",
          "class": "PrinterConfig",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Validate printer configuration based on type.",
          "line_start": 37,
          "line_end": 46,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "from_dict",
          "full_name": "PrinterConfig.from_dict",
          "class": "PrinterConfig",
          "signature": "(cls, printer_id: str, config: Dict[str, Any])",
          "return_type": "'PrinterConfig'",
          "decorators": [
            "classmethod"
          ],
          "docstring": "Create PrinterConfig from dictionary.",
          "line_start": 49,
          "line_end": 60,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": true
        },
        {
          "name": "to_dict",
          "full_name": "PrinterConfig.to_dict",
          "class": "PrinterConfig",
          "signature": "(self)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Convert PrinterConfig to dictionary.",
          "line_start": 62,
          "line_end": 72,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_cors_origins",
          "full_name": "Settings.get_cors_origins",
          "class": "Settings",
          "signature": "(self)",
          "return_type": "List[str]",
          "decorators": [],
          "docstring": "Parse CORS origins from comma-separated string.",
          "line_start": 115,
          "line_end": 117,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "normalize_downloads_path",
          "full_name": "Settings.normalize_downloads_path",
          "class": "Settings",
          "signature": "(cls, v: str)",
          "return_type": "str",
          "decorators": [
            "field_validator('downloads_path')",
            "classmethod"
          ],
          "docstring": "Normalize the downloads path to avoid hidden control characters and ensure portability.\n\nHandles accidental escape sequences coming from .env parsing (e.g. C:\\temp becomes C:<TAB>emp\nwhen written as \"C:     emp\"), converts backslashes to forward slashes (Windows-compatible and\nsafer for URL/display), removes control chars, collapses duplicate slashes and resolves to an\nabsolute path when possible.",
          "line_start": 124,
          "line_end": 155,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": true
        },
        {
          "name": "normalize_library_path",
          "full_name": "Settings.normalize_library_path",
          "class": "Settings",
          "signature": "(cls, v: str)",
          "return_type": "str",
          "decorators": [
            "field_validator('library_path')",
            "classmethod"
          ],
          "docstring": "Normalize the library path to avoid hidden control characters and ensure portability.",
          "line_start": 159,
          "line_end": 180,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": true
        },
        {
          "name": "__init__",
          "full_name": "ConfigService.__init__",
          "class": "ConfigService",
          "signature": "(self, config_path: Optional[str], database)",
          "return_type": "",
          "decorators": [],
          "docstring": "Initialize configuration service.",
          "line_start": 192,
          "line_end": 203,
          "access_level": "dunder",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_load_printer_configs",
          "full_name": "ConfigService._load_printer_configs",
          "class": "ConfigService",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Load printer configurations from file and environment variables.",
          "line_start": 205,
          "line_end": 232,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_load_from_environment",
          "full_name": "ConfigService._load_from_environment",
          "class": "ConfigService",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Load printer configurations from environment variables.",
          "line_start": 234,
          "line_end": 274,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_create_default_config",
          "full_name": "ConfigService._create_default_config",
          "class": "ConfigService",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Create default configuration file.",
          "line_start": 276,
          "line_end": 305,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_printers",
          "full_name": "ConfigService.get_printers",
          "class": "ConfigService",
          "signature": "(self)",
          "return_type": "Dict[str, PrinterConfig]",
          "decorators": [],
          "docstring": "Get all printer configurations.",
          "line_start": 307,
          "line_end": 309,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_printer",
          "full_name": "ConfigService.get_printer",
          "class": "ConfigService",
          "signature": "(self, printer_id: str)",
          "return_type": "Optional[PrinterConfig]",
          "decorators": [],
          "docstring": "Get specific printer configuration.",
          "line_start": 311,
          "line_end": 313,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_active_printers",
          "full_name": "ConfigService.get_active_printers",
          "class": "ConfigService",
          "signature": "(self)",
          "return_type": "Dict[str, PrinterConfig]",
          "decorators": [],
          "docstring": "Get only active printer configurations.",
          "line_start": 315,
          "line_end": 320,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "add_printer",
          "full_name": "ConfigService.add_printer",
          "class": "ConfigService",
          "signature": "(self, printer_id: str, config: Dict[str, Any])",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Add or update printer configuration with validation.",
          "line_start": 322,
          "line_end": 336,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "remove_printer",
          "full_name": "ConfigService.remove_printer",
          "class": "ConfigService",
          "signature": "(self, printer_id: str)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Remove printer configuration.",
          "line_start": 338,
          "line_end": 345,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_save_config",
          "full_name": "ConfigService._save_config",
          "class": "ConfigService",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Save current configuration to file with proper encoding.",
          "line_start": 347,
          "line_end": 370,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "validate_printer_connection",
          "full_name": "ConfigService.validate_printer_connection",
          "class": "ConfigService",
          "signature": "(self, printer_id: str)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Validate printer connection configuration.",
          "line_start": 372,
          "line_end": 382,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_business_settings",
          "full_name": "ConfigService.get_business_settings",
          "class": "ConfigService",
          "signature": "(self)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Get German business-specific settings.",
          "line_start": 384,
          "line_end": 391,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "reload_config",
          "full_name": "ConfigService.reload_config",
          "class": "ConfigService",
          "signature": "(self)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Reload configuration from file and environment.",
          "line_start": 393,
          "line_end": 405,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_watch_folders",
          "full_name": "ConfigService.get_watch_folders",
          "class": "ConfigService",
          "signature": "(self)",
          "return_type": "List[str]",
          "decorators": [],
          "docstring": "Get list of configured watch folders from database.",
          "line_start": 407,
          "line_end": 410,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "is_watch_folders_enabled",
          "full_name": "ConfigService.is_watch_folders_enabled",
          "class": "ConfigService",
          "signature": "(self)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Check if watch folders monitoring is enabled.",
          "line_start": 412,
          "line_end": 415,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "is_recursive_watching_enabled",
          "full_name": "ConfigService.is_recursive_watching_enabled",
          "class": "ConfigService",
          "signature": "(self)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Check if recursive folder watching is enabled.",
          "line_start": 417,
          "line_end": 420,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "validate_watch_folder",
          "full_name": "ConfigService.validate_watch_folder",
          "class": "ConfigService",
          "signature": "(self, folder_path: str)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Validate a watch folder path.",
          "line_start": 422,
          "line_end": 439,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_watch_folder_settings",
          "full_name": "ConfigService.get_watch_folder_settings",
          "class": "ConfigService",
          "signature": "(self)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Get all watch folder related settings.",
          "line_start": 441,
          "line_end": 452,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_application_settings",
          "full_name": "ConfigService.get_application_settings",
          "class": "ConfigService",
          "signature": "(self)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Get all application settings.",
          "line_start": 454,
          "line_end": 482,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_get_cors_origins_list",
          "full_name": "ConfigService._get_cors_origins_list",
          "class": "ConfigService",
          "signature": "(self, cors_origins_str: str)",
          "return_type": "List[str]",
          "decorators": [],
          "docstring": "Convert CORS origins string to list.",
          "line_start": 484,
          "line_end": 488,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "update_application_settings",
          "full_name": "ConfigService.update_application_settings",
          "class": "ConfigService",
          "signature": "(self, settings_dict: Dict[str, Any])",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Update runtime-modifiable application settings.",
          "line_start": 490,
          "line_end": 531,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_persist_settings_to_env",
          "full_name": "ConfigService._persist_settings_to_env",
          "class": "ConfigService",
          "signature": "(self, settings_dict: Dict[str, Any])",
          "return_type": "None",
          "decorators": [],
          "docstring": "Persist settings to .env file.",
          "line_start": 533,
          "line_end": 577,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "add_watch_folder",
          "full_name": "ConfigService.add_watch_folder",
          "class": "ConfigService",
          "signature": "(self, folder_path: str)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Add a watch folder to the database configuration.",
          "line_start": 579,
          "line_end": 611,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "remove_watch_folder",
          "full_name": "ConfigService.remove_watch_folder",
          "class": "ConfigService",
          "signature": "(self, folder_path: str)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Remove a watch folder from the database configuration.",
          "line_start": 613,
          "line_end": 633,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_ensure_env_migration",
          "full_name": "ConfigService._ensure_env_migration",
          "class": "ConfigService",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Ensure environment variables are migrated to database on first use.",
          "line_start": 635,
          "line_end": 652,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "from_import",
          "module": "typing",
          "name": "Dict",
          "alias": null,
          "line": 5
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Any",
          "alias": null,
          "line": 5
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Optional",
          "alias": null,
          "line": 5
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "List",
          "alias": null,
          "line": 5
        },
        {
          "type": "from_import",
          "module": "pydantic_settings",
          "name": "BaseSettings",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "pydantic",
          "name": "field_validator",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "pathlib",
          "name": "Path",
          "alias": null,
          "line": 8
        },
        {
          "type": "import",
          "module": "json",
          "alias": null,
          "line": 9
        },
        {
          "type": "import",
          "module": "os",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "dataclasses",
          "name": "dataclass",
          "alias": null,
          "line": 11
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 12
        },
        {
          "type": "import",
          "module": "structlog",
          "alias": null,
          "line": 13
        },
        {
          "type": "from_import",
          "module": "src.utils.config",
          "name": "get_settings",
          "alias": null,
          "line": 14
        },
        {
          "type": "from_import",
          "module": "src.services.watch_folder_db_service",
          "name": "WatchFolderDbService",
          "alias": null,
          "line": 15
        },
        {
          "type": "from_import",
          "module": "src.models.watch_folder",
          "name": "WatchFolder",
          "alias": null,
          "line": 16
        },
        {
          "type": "from_import",
          "module": "src.models.watch_folder",
          "name": "WatchFolderSource",
          "alias": null,
          "line": 16
        },
        {
          "type": "import",
          "module": "shutil",
          "alias": null,
          "line": 362
        },
        {
          "type": "import",
          "module": "os",
          "alias": null,
          "line": 535
        },
        {
          "type": "from_import",
          "module": "pathlib",
          "name": "Path",
          "alias": null,
          "line": 536
        }
      ],
      "function_calls": [
        {
          "caller": "PrinterConfig.__post_init__",
          "callee": "_validate_config",
          "line": 35,
          "type": "attribute"
        },
        {
          "caller": "PrinterConfig._validate_config",
          "callee": "ValueError",
          "line": 41,
          "type": "direct"
        },
        {
          "caller": "PrinterConfig._validate_config",
          "callee": "ValueError",
          "line": 44,
          "type": "direct"
        },
        {
          "caller": "PrinterConfig._validate_config",
          "callee": "warning",
          "line": 46,
          "type": "attribute"
        },
        {
          "caller": "PrinterConfig.from_dict",
          "callee": "cls",
          "line": 51,
          "type": "direct"
        },
        {
          "caller": "PrinterConfig.from_dict",
          "callee": "get",
          "line": 53,
          "type": "attribute"
        },
        {
          "caller": "PrinterConfig.from_dict",
          "callee": "get",
          "line": 54,
          "type": "attribute"
        },
        {
          "caller": "PrinterConfig.from_dict",
          "callee": "get",
          "line": 55,
          "type": "attribute"
        },
        {
          "caller": "PrinterConfig.from_dict",
          "callee": "get",
          "line": 56,
          "type": "attribute"
        },
        {
          "caller": "PrinterConfig.from_dict",
          "callee": "get",
          "line": 57,
          "type": "attribute"
        },
        {
          "caller": "PrinterConfig.from_dict",
          "callee": "get",
          "line": 58,
          "type": "attribute"
        },
        {
          "caller": "PrinterConfig.from_dict",
          "callee": "get",
          "line": 59,
          "type": "attribute"
        },
        {
          "caller": "Settings.get_cors_origins",
          "callee": "strip",
          "line": 117,
          "type": "attribute"
        },
        {
          "caller": "Settings.get_cors_origins",
          "callee": "split",
          "line": 117,
          "type": "attribute"
        },
        {
          "caller": "Settings.get_cors_origins",
          "callee": "strip",
          "line": 117,
          "type": "attribute"
        },
        {
          "caller": "Settings.normalize_downloads_path",
          "callee": "any",
          "line": 137,
          "type": "direct"
        },
        {
          "caller": "Settings.normalize_downloads_path",
          "callee": "replace",
          "line": 138,
          "type": "attribute"
        },
        {
          "caller": "Settings.normalize_downloads_path",
          "callee": "replace",
          "line": 138,
          "type": "attribute"
        },
        {
          "caller": "Settings.normalize_downloads_path",
          "callee": "replace",
          "line": 138,
          "type": "attribute"
        },
        {
          "caller": "Settings.normalize_downloads_path",
          "callee": "replace",
          "line": 140,
          "type": "attribute"
        },
        {
          "caller": "Settings.normalize_downloads_path",
          "callee": "replace",
          "line": 142,
          "type": "attribute"
        },
        {
          "caller": "Settings.normalize_downloads_path",
          "callee": "replace",
          "line": 143,
          "type": "attribute"
        },
        {
          "caller": "Settings.normalize_downloads_path",
          "callee": "replace",
          "line": 143,
          "type": "attribute"
        },
        {
          "caller": "Settings.normalize_downloads_path",
          "callee": "replace",
          "line": 143,
          "type": "attribute"
        },
        {
          "caller": "Settings.normalize_downloads_path",
          "callee": "startswith",
          "line": 147,
          "type": "attribute"
        },
        {
          "caller": "Settings.normalize_downloads_path",
          "callee": "startswith",
          "line": 147,
          "type": "attribute"
        },
        {
          "caller": "Settings.normalize_downloads_path",
          "callee": "str",
          "line": 148,
          "type": "direct"
        },
        {
          "caller": "Settings.normalize_downloads_path",
          "callee": "resolve",
          "line": 148,
          "type": "attribute"
        },
        {
          "caller": "Settings.normalize_downloads_path",
          "callee": "expanduser",
          "line": 148,
          "type": "attribute"
        },
        {
          "caller": "Settings.normalize_downloads_path",
          "callee": "Path",
          "line": 148,
          "type": "direct"
        },
        {
          "caller": "Settings.normalize_downloads_path",
          "callee": "info",
          "line": 154,
          "type": "attribute"
        },
        {
          "caller": "Settings.normalize_downloads_path",
          "callee": "field_validator",
          "line": 122,
          "type": "direct"
        },
        {
          "caller": "Settings.normalize_library_path",
          "callee": "any",
          "line": 165,
          "type": "direct"
        },
        {
          "caller": "Settings.normalize_library_path",
          "callee": "replace",
          "line": 166,
          "type": "attribute"
        },
        {
          "caller": "Settings.normalize_library_path",
          "callee": "replace",
          "line": 166,
          "type": "attribute"
        },
        {
          "caller": "Settings.normalize_library_path",
          "callee": "replace",
          "line": 166,
          "type": "attribute"
        },
        {
          "caller": "Settings.normalize_library_path",
          "callee": "replace",
          "line": 168,
          "type": "attribute"
        },
        {
          "caller": "Settings.normalize_library_path",
          "callee": "replace",
          "line": 170,
          "type": "attribute"
        },
        {
          "caller": "Settings.normalize_library_path",
          "callee": "replace",
          "line": 171,
          "type": "attribute"
        },
        {
          "caller": "Settings.normalize_library_path",
          "callee": "replace",
          "line": 171,
          "type": "attribute"
        },
        {
          "caller": "Settings.normalize_library_path",
          "callee": "replace",
          "line": 171,
          "type": "attribute"
        },
        {
          "caller": "Settings.normalize_library_path",
          "callee": "startswith",
          "line": 174,
          "type": "attribute"
        },
        {
          "caller": "Settings.normalize_library_path",
          "callee": "startswith",
          "line": 174,
          "type": "attribute"
        },
        {
          "caller": "Settings.normalize_library_path",
          "callee": "str",
          "line": 175,
          "type": "direct"
        },
        {
          "caller": "Settings.normalize_library_path",
          "callee": "resolve",
          "line": 175,
          "type": "attribute"
        },
        {
          "caller": "Settings.normalize_library_path",
          "callee": "expanduser",
          "line": 175,
          "type": "attribute"
        },
        {
          "caller": "Settings.normalize_library_path",
          "callee": "Path",
          "line": 175,
          "type": "direct"
        },
        {
          "caller": "Settings.normalize_library_path",
          "callee": "info",
          "line": 179,
          "type": "attribute"
        },
        {
          "caller": "Settings.normalize_library_path",
          "callee": "field_validator",
          "line": 157,
          "type": "direct"
        },
        {
          "caller": "ConfigService.__init__",
          "callee": "Settings",
          "line": 194,
          "type": "direct"
        },
        {
          "caller": "ConfigService.__init__",
          "callee": "WatchFolderDbService",
          "line": 195,
          "type": "direct"
        },
        {
          "caller": "ConfigService.__init__",
          "callee": "Path",
          "line": 199,
          "type": "direct"
        },
        {
          "caller": "ConfigService.__init__",
          "callee": "Path",
          "line": 201,
          "type": "direct"
        },
        {
          "caller": "ConfigService.__init__",
          "callee": "_load_printer_configs",
          "line": 203,
          "type": "attribute"
        },
        {
          "caller": "ConfigService._load_printer_configs",
          "callee": "_load_from_environment",
          "line": 208,
          "type": "attribute"
        },
        {
          "caller": "ConfigService._load_printer_configs",
          "callee": "exists",
          "line": 211,
          "type": "attribute"
        },
        {
          "caller": "ConfigService._load_printer_configs",
          "callee": "warning",
          "line": 212,
          "type": "attribute"
        },
        {
          "caller": "ConfigService._load_printer_configs",
          "callee": "str",
          "line": 212,
          "type": "direct"
        },
        {
          "caller": "ConfigService._load_printer_configs",
          "callee": "_create_default_config",
          "line": 213,
          "type": "attribute"
        },
        {
          "caller": "ConfigService._load_printer_configs",
          "callee": "open",
          "line": 217,
          "type": "direct"
        },
        {
          "caller": "ConfigService._load_printer_configs",
          "callee": "load",
          "line": 218,
          "type": "attribute"
        },
        {
          "caller": "ConfigService._load_printer_configs",
          "callee": "items",
          "line": 221,
          "type": "attribute"
        },
        {
          "caller": "ConfigService._load_printer_configs",
          "callee": "get",
          "line": 221,
          "type": "attribute"
        },
        {
          "caller": "ConfigService._load_printer_configs",
          "callee": "from_dict",
          "line": 223,
          "type": "attribute"
        },
        {
          "caller": "ConfigService._load_printer_configs",
          "callee": "error",
          "line": 225,
          "type": "attribute"
        },
        {
          "caller": "ConfigService._load_printer_configs",
          "callee": "str",
          "line": 225,
          "type": "direct"
        },
        {
          "caller": "ConfigService._load_printer_configs",
          "callee": "info",
          "line": 228,
          "type": "attribute"
        },
        {
          "caller": "ConfigService._load_printer_configs",
          "callee": "len",
          "line": 228,
          "type": "direct"
        },
        {
          "caller": "ConfigService._load_printer_configs",
          "callee": "error",
          "line": 231,
          "type": "attribute"
        },
        {
          "caller": "ConfigService._load_printer_configs",
          "callee": "str",
          "line": 231,
          "type": "direct"
        },
        {
          "caller": "ConfigService._load_printer_configs",
          "callee": "str",
          "line": 231,
          "type": "direct"
        },
        {
          "caller": "ConfigService._load_printer_configs",
          "callee": "_create_default_config",
          "line": 232,
          "type": "attribute"
        },
        {
          "caller": "ConfigService._load_from_environment",
          "callee": "items",
          "line": 241,
          "type": "attribute"
        },
        {
          "caller": "ConfigService._load_from_environment",
          "callee": "startswith",
          "line": 242,
          "type": "attribute"
        },
        {
          "caller": "ConfigService._load_from_environment",
          "callee": "split",
          "line": 243,
          "type": "attribute"
        },
        {
          "caller": "ConfigService._load_from_environment",
          "callee": "len",
          "line": 244,
          "type": "direct"
        },
        {
          "caller": "ConfigService._load_from_environment",
          "callee": "join",
          "line": 246,
          "type": "attribute"
        },
        {
          "caller": "ConfigService._load_from_environment",
          "callee": "lower",
          "line": 247,
          "type": "attribute"
        },
        {
          "caller": "ConfigService._load_from_environment",
          "callee": "len",
          "line": 253,
          "type": "direct"
        },
        {
          "caller": "ConfigService._load_from_environment",
          "callee": "len",
          "line": 255,
          "type": "direct"
        },
        {
          "caller": "ConfigService._load_from_environment",
          "callee": "len",
          "line": 257,
          "type": "direct"
        },
        {
          "caller": "ConfigService._load_from_environment",
          "callee": "len",
          "line": 259,
          "type": "direct"
        },
        {
          "caller": "ConfigService._load_from_environment",
          "callee": "lower",
          "line": 263,
          "type": "attribute"
        },
        {
          "caller": "ConfigService._load_from_environment",
          "callee": "items",
          "line": 268,
          "type": "attribute"
        },
        {
          "caller": "ConfigService._load_from_environment",
          "callee": "from_dict",
          "line": 270,
          "type": "attribute"
        },
        {
          "caller": "ConfigService._load_from_environment",
          "callee": "info",
          "line": 271,
          "type": "attribute"
        },
        {
          "caller": "ConfigService._load_from_environment",
          "callee": "error",
          "line": 273,
          "type": "attribute"
        },
        {
          "caller": "ConfigService._load_from_environment",
          "callee": "str",
          "line": 274,
          "type": "direct"
        },
        {
          "caller": "ConfigService._create_default_config",
          "callee": "mkdir",
          "line": 278,
          "type": "attribute"
        },
        {
          "caller": "ConfigService._create_default_config",
          "callee": "open",
          "line": 301,
          "type": "direct"
        },
        {
          "caller": "ConfigService._create_default_config",
          "callee": "dump",
          "line": 302,
          "type": "attribute"
        },
        {
          "caller": "ConfigService._create_default_config",
          "callee": "info",
          "line": 303,
          "type": "attribute"
        },
        {
          "caller": "ConfigService._create_default_config",
          "callee": "str",
          "line": 303,
          "type": "direct"
        },
        {
          "caller": "ConfigService._create_default_config",
          "callee": "error",
          "line": 305,
          "type": "attribute"
        },
        {
          "caller": "ConfigService._create_default_config",
          "callee": "str",
          "line": 305,
          "type": "direct"
        },
        {
          "caller": "ConfigService.get_printers",
          "callee": "copy",
          "line": 309,
          "type": "attribute"
        },
        {
          "caller": "ConfigService.get_printer",
          "callee": "get",
          "line": 313,
          "type": "attribute"
        },
        {
          "caller": "ConfigService.get_active_printers",
          "callee": "items",
          "line": 318,
          "type": "attribute"
        },
        {
          "caller": "ConfigService.add_printer",
          "callee": "from_dict",
          "line": 326,
          "type": "attribute"
        },
        {
          "caller": "ConfigService.add_printer",
          "callee": "_save_config",
          "line": 328,
          "type": "attribute"
        },
        {
          "caller": "ConfigService.add_printer",
          "callee": "info",
          "line": 329,
          "type": "attribute"
        },
        {
          "caller": "ConfigService.add_printer",
          "callee": "error",
          "line": 332,
          "type": "attribute"
        },
        {
          "caller": "ConfigService.add_printer",
          "callee": "str",
          "line": 332,
          "type": "direct"
        },
        {
          "caller": "ConfigService.add_printer",
          "callee": "error",
          "line": 335,
          "type": "attribute"
        },
        {
          "caller": "ConfigService.add_printer",
          "callee": "str",
          "line": 335,
          "type": "direct"
        },
        {
          "caller": "ConfigService.remove_printer",
          "callee": "_save_config",
          "line": 342,
          "type": "attribute"
        },
        {
          "caller": "ConfigService.remove_printer",
          "callee": "info",
          "line": 343,
          "type": "attribute"
        },
        {
          "caller": "ConfigService._save_config",
          "callee": "isoformat",
          "line": 351,
          "type": "attribute"
        },
        {
          "caller": "ConfigService._save_config",
          "callee": "now",
          "line": 351,
          "type": "attribute"
        },
        {
          "caller": "ConfigService._save_config",
          "callee": "to_dict",
          "line": 353,
          "type": "attribute"
        },
        {
          "caller": "ConfigService._save_config",
          "callee": "items",
          "line": 354,
          "type": "attribute"
        },
        {
          "caller": "ConfigService._save_config",
          "callee": "exists",
          "line": 360,
          "type": "attribute"
        },
        {
          "caller": "ConfigService._save_config",
          "callee": "with_suffix",
          "line": 361,
          "type": "attribute"
        },
        {
          "caller": "ConfigService._save_config",
          "callee": "copy2",
          "line": 363,
          "type": "attribute"
        },
        {
          "caller": "ConfigService._save_config",
          "callee": "open",
          "line": 365,
          "type": "direct"
        },
        {
          "caller": "ConfigService._save_config",
          "callee": "dump",
          "line": 366,
          "type": "attribute"
        },
        {
          "caller": "ConfigService._save_config",
          "callee": "info",
          "line": 368,
          "type": "attribute"
        },
        {
          "caller": "ConfigService._save_config",
          "callee": "str",
          "line": 368,
          "type": "direct"
        },
        {
          "caller": "ConfigService._save_config",
          "callee": "error",
          "line": 370,
          "type": "attribute"
        },
        {
          "caller": "ConfigService._save_config",
          "callee": "str",
          "line": 370,
          "type": "direct"
        },
        {
          "caller": "ConfigService.validate_printer_connection",
          "callee": "get_printer",
          "line": 374,
          "type": "attribute"
        },
        {
          "caller": "ConfigService.validate_printer_connection",
          "callee": "_validate_config",
          "line": 379,
          "type": "attribute"
        },
        {
          "caller": "ConfigService.validate_printer_connection",
          "callee": "str",
          "line": 382,
          "type": "direct"
        },
        {
          "caller": "ConfigService.reload_config",
          "callee": "len",
          "line": 396,
          "type": "direct"
        },
        {
          "caller": "ConfigService.reload_config",
          "callee": "clear",
          "line": 397,
          "type": "attribute"
        },
        {
          "caller": "ConfigService.reload_config",
          "callee": "_load_printer_configs",
          "line": 398,
          "type": "attribute"
        },
        {
          "caller": "ConfigService.reload_config",
          "callee": "info",
          "line": 400,
          "type": "attribute"
        },
        {
          "caller": "ConfigService.reload_config",
          "callee": "len",
          "line": 401,
          "type": "direct"
        },
        {
          "caller": "ConfigService.reload_config",
          "callee": "error",
          "line": 404,
          "type": "attribute"
        },
        {
          "caller": "ConfigService.reload_config",
          "callee": "str",
          "line": 404,
          "type": "direct"
        },
        {
          "caller": "ConfigService.get_watch_folders",
          "callee": "_ensure_env_migration",
          "line": 409,
          "type": "attribute"
        },
        {
          "caller": "ConfigService.get_watch_folders",
          "callee": "get_active_folder_paths",
          "line": 410,
          "type": "attribute"
        },
        {
          "caller": "ConfigService.is_watch_folders_enabled",
          "callee": "get_settings",
          "line": 414,
          "type": "direct"
        },
        {
          "caller": "ConfigService.is_recursive_watching_enabled",
          "callee": "get_settings",
          "line": 419,
          "type": "direct"
        },
        {
          "caller": "ConfigService.validate_watch_folder",
          "callee": "Path",
          "line": 425,
          "type": "direct"
        },
        {
          "caller": "ConfigService.validate_watch_folder",
          "callee": "exists",
          "line": 427,
          "type": "attribute"
        },
        {
          "caller": "ConfigService.validate_watch_folder",
          "callee": "is_dir",
          "line": 430,
          "type": "attribute"
        },
        {
          "caller": "ConfigService.validate_watch_folder",
          "callee": "access",
          "line": 433,
          "type": "attribute"
        },
        {
          "caller": "ConfigService.validate_watch_folder",
          "callee": "str",
          "line": 439,
          "type": "direct"
        },
        {
          "caller": "ConfigService.get_watch_folder_settings",
          "callee": "_ensure_env_migration",
          "line": 443,
          "type": "attribute"
        },
        {
          "caller": "ConfigService.get_watch_folder_settings",
          "callee": "get_settings",
          "line": 444,
          "type": "direct"
        },
        {
          "caller": "ConfigService.get_watch_folder_settings",
          "callee": "get_all_watch_folders",
          "line": 445,
          "type": "attribute"
        },
        {
          "caller": "ConfigService.get_application_settings",
          "callee": "get_settings",
          "line": 456,
          "type": "direct"
        },
        {
          "caller": "ConfigService.get_application_settings",
          "callee": "str",
          "line": 458,
          "type": "direct"
        },
        {
          "caller": "ConfigService.get_application_settings",
          "callee": "getattr",
          "line": 461,
          "type": "direct"
        },
        {
          "caller": "ConfigService.get_application_settings",
          "callee": "str",
          "line": 467,
          "type": "direct"
        },
        {
          "caller": "ConfigService.get_application_settings",
          "callee": "_get_cors_origins_list",
          "line": 471,
          "type": "attribute"
        },
        {
          "caller": "ConfigService.get_application_settings",
          "callee": "str",
          "line": 478,
          "type": "direct"
        },
        {
          "caller": "ConfigService.get_application_settings",
          "callee": "getattr",
          "line": 481,
          "type": "direct"
        },
        {
          "caller": "ConfigService._get_cors_origins_list",
          "callee": "strip",
          "line": 488,
          "type": "attribute"
        },
        {
          "caller": "ConfigService._get_cors_origins_list",
          "callee": "split",
          "line": 488,
          "type": "attribute"
        },
        {
          "caller": "ConfigService._get_cors_origins_list",
          "callee": "strip",
          "line": 488,
          "type": "attribute"
        },
        {
          "caller": "ConfigService.update_application_settings",
          "callee": "info",
          "line": 492,
          "type": "attribute"
        },
        {
          "caller": "ConfigService.update_application_settings",
          "callee": "get_settings",
          "line": 494,
          "type": "direct"
        },
        {
          "caller": "ConfigService.update_application_settings",
          "callee": "info",
          "line": 495,
          "type": "attribute"
        },
        {
          "caller": "ConfigService.update_application_settings",
          "callee": "type",
          "line": 495,
          "type": "direct"
        },
        {
          "caller": "ConfigService.update_application_settings",
          "callee": "info",
          "line": 503,
          "type": "attribute"
        },
        {
          "caller": "ConfigService.update_application_settings",
          "callee": "items",
          "line": 505,
          "type": "attribute"
        },
        {
          "caller": "ConfigService.update_application_settings",
          "callee": "info",
          "line": 506,
          "type": "attribute"
        },
        {
          "caller": "ConfigService.update_application_settings",
          "callee": "info",
          "line": 508,
          "type": "attribute"
        },
        {
          "caller": "ConfigService.update_application_settings",
          "callee": "hasattr",
          "line": 509,
          "type": "direct"
        },
        {
          "caller": "ConfigService.update_application_settings",
          "callee": "getattr",
          "line": 510,
          "type": "direct"
        },
        {
          "caller": "ConfigService.update_application_settings",
          "callee": "info",
          "line": 511,
          "type": "attribute"
        },
        {
          "caller": "ConfigService.update_application_settings",
          "callee": "setattr",
          "line": 513,
          "type": "direct"
        },
        {
          "caller": "ConfigService.update_application_settings",
          "callee": "append",
          "line": 514,
          "type": "attribute"
        },
        {
          "caller": "ConfigService.update_application_settings",
          "callee": "info",
          "line": 515,
          "type": "attribute"
        },
        {
          "caller": "ConfigService.update_application_settings",
          "callee": "warning",
          "line": 517,
          "type": "attribute"
        },
        {
          "caller": "ConfigService.update_application_settings",
          "callee": "warning",
          "line": 519,
          "type": "attribute"
        },
        {
          "caller": "ConfigService.update_application_settings",
          "callee": "info",
          "line": 523,
          "type": "attribute"
        },
        {
          "caller": "ConfigService.update_application_settings",
          "callee": "_persist_settings_to_env",
          "line": 525,
          "type": "attribute"
        },
        {
          "caller": "ConfigService.update_application_settings",
          "callee": "info",
          "line": 526,
          "type": "attribute"
        },
        {
          "caller": "ConfigService.update_application_settings",
          "callee": "error",
          "line": 528,
          "type": "attribute"
        },
        {
          "caller": "ConfigService.update_application_settings",
          "callee": "str",
          "line": 528,
          "type": "direct"
        },
        {
          "caller": "ConfigService.update_application_settings",
          "callee": "len",
          "line": 531,
          "type": "direct"
        },
        {
          "caller": "ConfigService._persist_settings_to_env",
          "callee": "Path",
          "line": 539,
          "type": "direct"
        },
        {
          "caller": "ConfigService._persist_settings_to_env",
          "callee": "exists",
          "line": 543,
          "type": "attribute"
        },
        {
          "caller": "ConfigService._persist_settings_to_env",
          "callee": "open",
          "line": 544,
          "type": "direct"
        },
        {
          "caller": "ConfigService._persist_settings_to_env",
          "callee": "strip",
          "line": 546,
          "type": "attribute"
        },
        {
          "caller": "ConfigService._persist_settings_to_env",
          "callee": "startswith",
          "line": 547,
          "type": "attribute"
        },
        {
          "caller": "ConfigService._persist_settings_to_env",
          "callee": "split",
          "line": 548,
          "type": "attribute"
        },
        {
          "caller": "ConfigService._persist_settings_to_env",
          "callee": "strip",
          "line": 549,
          "type": "attribute"
        },
        {
          "caller": "ConfigService._persist_settings_to_env",
          "callee": "strip",
          "line": 549,
          "type": "attribute"
        },
        {
          "caller": "ConfigService._persist_settings_to_env",
          "callee": "items",
          "line": 562,
          "type": "attribute"
        },
        {
          "caller": "ConfigService._persist_settings_to_env",
          "callee": "isinstance",
          "line": 566,
          "type": "direct"
        },
        {
          "caller": "ConfigService._persist_settings_to_env",
          "callee": "str",
          "line": 569,
          "type": "direct"
        },
        {
          "caller": "ConfigService._persist_settings_to_env",
          "callee": "info",
          "line": 570,
          "type": "attribute"
        },
        {
          "caller": "ConfigService._persist_settings_to_env",
          "callee": "open",
          "line": 573,
          "type": "direct"
        },
        {
          "caller": "ConfigService._persist_settings_to_env",
          "callee": "items",
          "line": 574,
          "type": "attribute"
        },
        {
          "caller": "ConfigService._persist_settings_to_env",
          "callee": "write",
          "line": 575,
          "type": "attribute"
        },
        {
          "caller": "ConfigService._persist_settings_to_env",
          "callee": "info",
          "line": 577,
          "type": "attribute"
        },
        {
          "caller": "ConfigService._persist_settings_to_env",
          "callee": "str",
          "line": 577,
          "type": "direct"
        },
        {
          "caller": "ConfigService.add_watch_folder",
          "callee": "_ensure_env_migration",
          "line": 582,
          "type": "attribute"
        },
        {
          "caller": "ConfigService.add_watch_folder",
          "callee": "get_watch_folder_by_path",
          "line": 585,
          "type": "attribute"
        },
        {
          "caller": "ConfigService.add_watch_folder",
          "callee": "warning",
          "line": 587,
          "type": "attribute"
        },
        {
          "caller": "ConfigService.add_watch_folder",
          "callee": "validate_watch_folder",
          "line": 591,
          "type": "attribute"
        },
        {
          "caller": "ConfigService.add_watch_folder",
          "callee": "error",
          "line": 593,
          "type": "attribute"
        },
        {
          "caller": "ConfigService.add_watch_folder",
          "callee": "WatchFolder",
          "line": 598,
          "type": "direct"
        },
        {
          "caller": "ConfigService.add_watch_folder",
          "callee": "Path",
          "line": 600,
          "type": "direct"
        },
        {
          "caller": "ConfigService.add_watch_folder",
          "callee": "create_watch_folder",
          "line": 605,
          "type": "attribute"
        },
        {
          "caller": "ConfigService.add_watch_folder",
          "callee": "info",
          "line": 606,
          "type": "attribute"
        },
        {
          "caller": "ConfigService.add_watch_folder",
          "callee": "error",
          "line": 610,
          "type": "attribute"
        },
        {
          "caller": "ConfigService.add_watch_folder",
          "callee": "str",
          "line": 610,
          "type": "direct"
        },
        {
          "caller": "ConfigService.remove_watch_folder",
          "callee": "_ensure_env_migration",
          "line": 616,
          "type": "attribute"
        },
        {
          "caller": "ConfigService.remove_watch_folder",
          "callee": "get_watch_folder_by_path",
          "line": 619,
          "type": "attribute"
        },
        {
          "caller": "ConfigService.remove_watch_folder",
          "callee": "warning",
          "line": 621,
          "type": "attribute"
        },
        {
          "caller": "ConfigService.remove_watch_folder",
          "callee": "delete_watch_folder_by_path",
          "line": 625,
          "type": "attribute"
        },
        {
          "caller": "ConfigService.remove_watch_folder",
          "callee": "info",
          "line": 627,
          "type": "attribute"
        },
        {
          "caller": "ConfigService.remove_watch_folder",
          "callee": "error",
          "line": 632,
          "type": "attribute"
        },
        {
          "caller": "ConfigService.remove_watch_folder",
          "callee": "str",
          "line": 632,
          "type": "direct"
        },
        {
          "caller": "ConfigService._ensure_env_migration",
          "callee": "get_settings",
          "line": 641,
          "type": "direct"
        },
        {
          "caller": "ConfigService._ensure_env_migration",
          "callee": "migrate_env_folders",
          "line": 645,
          "type": "attribute"
        },
        {
          "caller": "ConfigService._ensure_env_migration",
          "callee": "info",
          "line": 646,
          "type": "attribute"
        },
        {
          "caller": "ConfigService._ensure_env_migration",
          "callee": "len",
          "line": 647,
          "type": "direct"
        },
        {
          "caller": "ConfigService._ensure_env_migration",
          "callee": "error",
          "line": 652,
          "type": "attribute"
        },
        {
          "caller": "ConfigService._ensure_env_migration",
          "callee": "str",
          "line": 652,
          "type": "direct"
        }
      ],
      "error": null
    },
    {
      "filepath": "src\\services\\event_service.py",
      "functions": [
        {
          "name": "__init__",
          "full_name": "EventService.__init__",
          "class": "EventService",
          "signature": "(self, printer_service, job_service, file_service, database)",
          "return_type": "",
          "decorators": [],
          "docstring": "Initialize event service with dependencies.",
          "line_start": 16,
          "line_end": 43,
          "access_level": "dunder",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "start",
          "full_name": "EventService.start",
          "class": "EventService",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Start the event service and background tasks.",
          "line_start": 45,
          "line_end": 61,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "stop",
          "full_name": "EventService.stop",
          "class": "EventService",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Stop the event service and cancel all tasks.",
          "line_start": 63,
          "line_end": 81,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "subscribe",
          "full_name": "EventService.subscribe",
          "class": "EventService",
          "signature": "(self, event_type: str, handler: Callable)",
          "return_type": "",
          "decorators": [],
          "docstring": "Subscribe to event notifications.",
          "line_start": 83,
          "line_end": 87,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "unsubscribe",
          "full_name": "EventService.unsubscribe",
          "class": "EventService",
          "signature": "(self, event_type: str, handler: Callable)",
          "return_type": "",
          "decorators": [],
          "docstring": "Unsubscribe from event notifications.",
          "line_start": 89,
          "line_end": 93,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "emit_event",
          "full_name": "EventService.emit_event",
          "class": "EventService",
          "signature": "(self, event_type: str, data: Dict[str, Any])",
          "return_type": "",
          "decorators": [],
          "docstring": "Emit an event to all subscribers.",
          "line_start": 95,
          "line_end": 109,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_printer_monitoring_task",
          "full_name": "EventService._printer_monitoring_task",
          "class": "EventService",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Background task for monitoring printer status.",
          "line_start": 111,
          "line_end": 220,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_job_status_task",
          "full_name": "EventService._job_status_task",
          "class": "EventService",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Background task for monitoring job status changes.",
          "line_start": 222,
          "line_end": 331,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_file_discovery_task",
          "full_name": "EventService._file_discovery_task",
          "class": "EventService",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Background task for discovering new files on printers.",
          "line_start": 333,
          "line_end": 450,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_status",
          "full_name": "EventService.get_status",
          "class": "EventService",
          "signature": "(self)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Get current event service status.",
          "line_start": 452,
          "line_end": 474,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "set_services",
          "full_name": "EventService.set_services",
          "class": "EventService",
          "signature": "(self, printer_service, job_service, file_service, database)",
          "return_type": "",
          "decorators": [],
          "docstring": "Set service dependencies after initialization.",
          "line_start": 476,
          "line_end": 491,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "force_discovery",
          "full_name": "EventService.force_discovery",
          "class": "EventService",
          "signature": "(self)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Force an immediate file discovery run.",
          "line_start": 493,
          "line_end": 541,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "reset_monitoring_state",
          "full_name": "EventService.reset_monitoring_state",
          "class": "EventService",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Reset all monitoring state - useful for testing or after configuration changes.",
          "line_start": 543,
          "line_end": 552,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "asyncio",
          "alias": null,
          "line": 5
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Dict",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Any",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Optional",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Callable",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "List",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 7
        },
        {
          "type": "import",
          "module": "structlog",
          "alias": null,
          "line": 8
        }
      ],
      "function_calls": [
        {
          "caller": "EventService.__init__",
          "callee": "now",
          "line": 31,
          "type": "attribute"
        },
        {
          "caller": "EventService.start",
          "callee": "warning",
          "line": 48,
          "type": "attribute"
        },
        {
          "caller": "EventService.start",
          "callee": "info",
          "line": 52,
          "type": "attribute"
        },
        {
          "caller": "EventService.start",
          "callee": "extend",
          "line": 55,
          "type": "attribute"
        },
        {
          "caller": "EventService.start",
          "callee": "create_task",
          "line": 56,
          "type": "attribute"
        },
        {
          "caller": "EventService.start",
          "callee": "_printer_monitoring_task",
          "line": 56,
          "type": "attribute"
        },
        {
          "caller": "EventService.start",
          "callee": "create_task",
          "line": 57,
          "type": "attribute"
        },
        {
          "caller": "EventService.start",
          "callee": "_job_status_task",
          "line": 57,
          "type": "attribute"
        },
        {
          "caller": "EventService.start",
          "callee": "create_task",
          "line": 58,
          "type": "attribute"
        },
        {
          "caller": "EventService.start",
          "callee": "_file_discovery_task",
          "line": 58,
          "type": "attribute"
        },
        {
          "caller": "EventService.start",
          "callee": "info",
          "line": 61,
          "type": "attribute"
        },
        {
          "caller": "EventService.start",
          "callee": "len",
          "line": 61,
          "type": "direct"
        },
        {
          "caller": "EventService.stop",
          "callee": "info",
          "line": 68,
          "type": "attribute"
        },
        {
          "caller": "EventService.stop",
          "callee": "done",
          "line": 73,
          "type": "attribute"
        },
        {
          "caller": "EventService.stop",
          "callee": "cancel",
          "line": 74,
          "type": "attribute"
        },
        {
          "caller": "EventService.stop",
          "callee": "gather",
          "line": 78,
          "type": "attribute"
        },
        {
          "caller": "EventService.stop",
          "callee": "clear",
          "line": 80,
          "type": "attribute"
        },
        {
          "caller": "EventService.stop",
          "callee": "info",
          "line": 81,
          "type": "attribute"
        },
        {
          "caller": "EventService.subscribe",
          "callee": "append",
          "line": 87,
          "type": "attribute"
        },
        {
          "caller": "EventService.unsubscribe",
          "callee": "remove",
          "line": 93,
          "type": "attribute"
        },
        {
          "caller": "EventService.emit_event",
          "callee": "copy",
          "line": 100,
          "type": "attribute"
        },
        {
          "caller": "EventService.emit_event",
          "callee": "iscoroutinefunction",
          "line": 103,
          "type": "attribute"
        },
        {
          "caller": "EventService.emit_event",
          "callee": "handler",
          "line": 104,
          "type": "direct"
        },
        {
          "caller": "EventService.emit_event",
          "callee": "handler",
          "line": 106,
          "type": "direct"
        },
        {
          "caller": "EventService.emit_event",
          "callee": "error",
          "line": 108,
          "type": "attribute"
        },
        {
          "caller": "EventService.emit_event",
          "callee": "str",
          "line": 109,
          "type": "direct"
        },
        {
          "caller": "EventService._printer_monitoring_task",
          "callee": "info",
          "line": 113,
          "type": "attribute"
        },
        {
          "caller": "EventService._printer_monitoring_task",
          "callee": "sleep",
          "line": 118,
          "type": "attribute"
        },
        {
          "caller": "EventService._printer_monitoring_task",
          "callee": "list_printers",
          "line": 127,
          "type": "attribute"
        },
        {
          "caller": "EventService._printer_monitoring_task",
          "callee": "get_printer_status",
          "line": 134,
          "type": "attribute"
        },
        {
          "caller": "EventService._printer_monitoring_task",
          "callee": "append",
          "line": 137,
          "type": "attribute"
        },
        {
          "caller": "EventService._printer_monitoring_task",
          "callee": "get",
          "line": 141,
          "type": "attribute"
        },
        {
          "caller": "EventService._printer_monitoring_task",
          "callee": "get",
          "line": 142,
          "type": "attribute"
        },
        {
          "caller": "EventService._printer_monitoring_task",
          "callee": "get",
          "line": 143,
          "type": "attribute"
        },
        {
          "caller": "EventService._printer_monitoring_task",
          "callee": "get",
          "line": 144,
          "type": "attribute"
        },
        {
          "caller": "EventService._printer_monitoring_task",
          "callee": "isoformat",
          "line": 145,
          "type": "attribute"
        },
        {
          "caller": "EventService._printer_monitoring_task",
          "callee": "now",
          "line": 145,
          "type": "attribute"
        },
        {
          "caller": "EventService._printer_monitoring_task",
          "callee": "get",
          "line": 149,
          "type": "attribute"
        },
        {
          "caller": "EventService._printer_monitoring_task",
          "callee": "get",
          "line": 150,
          "type": "attribute"
        },
        {
          "caller": "EventService._printer_monitoring_task",
          "callee": "get",
          "line": 150,
          "type": "attribute"
        },
        {
          "caller": "EventService._printer_monitoring_task",
          "callee": "append",
          "line": 151,
          "type": "attribute"
        },
        {
          "caller": "EventService._printer_monitoring_task",
          "callee": "get",
          "line": 153,
          "type": "attribute"
        },
        {
          "caller": "EventService._printer_monitoring_task",
          "callee": "get",
          "line": 154,
          "type": "attribute"
        },
        {
          "caller": "EventService._printer_monitoring_task",
          "callee": "isoformat",
          "line": 155,
          "type": "attribute"
        },
        {
          "caller": "EventService._printer_monitoring_task",
          "callee": "now",
          "line": 155,
          "type": "attribute"
        },
        {
          "caller": "EventService._printer_monitoring_task",
          "callee": "get",
          "line": 159,
          "type": "attribute"
        },
        {
          "caller": "EventService._printer_monitoring_task",
          "callee": "get",
          "line": 159,
          "type": "attribute"
        },
        {
          "caller": "EventService._printer_monitoring_task",
          "callee": "emit_event",
          "line": 160,
          "type": "attribute"
        },
        {
          "caller": "EventService._printer_monitoring_task",
          "callee": "isoformat",
          "line": 163,
          "type": "attribute"
        },
        {
          "caller": "EventService._printer_monitoring_task",
          "callee": "now",
          "line": 163,
          "type": "attribute"
        },
        {
          "caller": "EventService._printer_monitoring_task",
          "callee": "get",
          "line": 166,
          "type": "attribute"
        },
        {
          "caller": "EventService._printer_monitoring_task",
          "callee": "get",
          "line": 166,
          "type": "attribute"
        },
        {
          "caller": "EventService._printer_monitoring_task",
          "callee": "emit_event",
          "line": 167,
          "type": "attribute"
        },
        {
          "caller": "EventService._printer_monitoring_task",
          "callee": "isoformat",
          "line": 170,
          "type": "attribute"
        },
        {
          "caller": "EventService._printer_monitoring_task",
          "callee": "now",
          "line": 170,
          "type": "attribute"
        },
        {
          "caller": "EventService._printer_monitoring_task",
          "callee": "update_printer_status",
          "line": 179,
          "type": "attribute"
        },
        {
          "caller": "EventService._printer_monitoring_task",
          "callee": "get",
          "line": 181,
          "type": "attribute"
        },
        {
          "caller": "EventService._printer_monitoring_task",
          "callee": "now",
          "line": 182,
          "type": "attribute"
        },
        {
          "caller": "EventService._printer_monitoring_task",
          "callee": "warning",
          "line": 186,
          "type": "attribute"
        },
        {
          "caller": "EventService._printer_monitoring_task",
          "callee": "str",
          "line": 186,
          "type": "direct"
        },
        {
          "caller": "EventService._printer_monitoring_task",
          "callee": "append",
          "line": 188,
          "type": "attribute"
        },
        {
          "caller": "EventService._printer_monitoring_task",
          "callee": "str",
          "line": 193,
          "type": "direct"
        },
        {
          "caller": "EventService._printer_monitoring_task",
          "callee": "isoformat",
          "line": 194,
          "type": "attribute"
        },
        {
          "caller": "EventService._printer_monitoring_task",
          "callee": "now",
          "line": 194,
          "type": "attribute"
        },
        {
          "caller": "EventService._printer_monitoring_task",
          "callee": "emit_event",
          "line": 198,
          "type": "attribute"
        },
        {
          "caller": "EventService._printer_monitoring_task",
          "callee": "isoformat",
          "line": 199,
          "type": "attribute"
        },
        {
          "caller": "EventService._printer_monitoring_task",
          "callee": "now",
          "line": 199,
          "type": "attribute"
        },
        {
          "caller": "EventService._printer_monitoring_task",
          "callee": "debug",
          "line": 205,
          "type": "attribute"
        },
        {
          "caller": "EventService._printer_monitoring_task",
          "callee": "len",
          "line": 206,
          "type": "direct"
        },
        {
          "caller": "EventService._printer_monitoring_task",
          "callee": "len",
          "line": 207,
          "type": "direct"
        },
        {
          "caller": "EventService._printer_monitoring_task",
          "callee": "error",
          "line": 210,
          "type": "attribute"
        },
        {
          "caller": "EventService._printer_monitoring_task",
          "callee": "str",
          "line": 210,
          "type": "direct"
        },
        {
          "caller": "EventService._printer_monitoring_task",
          "callee": "sleep",
          "line": 212,
          "type": "attribute"
        },
        {
          "caller": "EventService._printer_monitoring_task",
          "callee": "error",
          "line": 217,
          "type": "attribute"
        },
        {
          "caller": "EventService._printer_monitoring_task",
          "callee": "str",
          "line": 217,
          "type": "direct"
        },
        {
          "caller": "EventService._printer_monitoring_task",
          "callee": "sleep",
          "line": 218,
          "type": "attribute"
        },
        {
          "caller": "EventService._printer_monitoring_task",
          "callee": "info",
          "line": 220,
          "type": "attribute"
        },
        {
          "caller": "EventService._job_status_task",
          "callee": "info",
          "line": 224,
          "type": "attribute"
        },
        {
          "caller": "EventService._job_status_task",
          "callee": "sleep",
          "line": 229,
          "type": "attribute"
        },
        {
          "caller": "EventService._job_status_task",
          "callee": "get_active_jobs",
          "line": 234,
          "type": "attribute"
        },
        {
          "caller": "EventService._job_status_task",
          "callee": "get",
          "line": 240,
          "type": "attribute"
        },
        {
          "caller": "EventService._job_status_task",
          "callee": "get",
          "line": 243,
          "type": "attribute"
        },
        {
          "caller": "EventService._job_status_task",
          "callee": "get",
          "line": 244,
          "type": "attribute"
        },
        {
          "caller": "EventService._job_status_task",
          "callee": "get",
          "line": 245,
          "type": "attribute"
        },
        {
          "caller": "EventService._job_status_task",
          "callee": "append",
          "line": 251,
          "type": "attribute"
        },
        {
          "caller": "EventService._job_status_task",
          "callee": "isoformat",
          "line": 258,
          "type": "attribute"
        },
        {
          "caller": "EventService._job_status_task",
          "callee": "now",
          "line": 258,
          "type": "attribute"
        },
        {
          "caller": "EventService._job_status_task",
          "callee": "emit_event",
          "line": 264,
          "type": "attribute"
        },
        {
          "caller": "EventService._job_status_task",
          "callee": "isoformat",
          "line": 268,
          "type": "attribute"
        },
        {
          "caller": "EventService._job_status_task",
          "callee": "now",
          "line": 268,
          "type": "attribute"
        },
        {
          "caller": "EventService._job_status_task",
          "callee": "emit_event",
          "line": 272,
          "type": "attribute"
        },
        {
          "caller": "EventService._job_status_task",
          "callee": "isoformat",
          "line": 277,
          "type": "attribute"
        },
        {
          "caller": "EventService._job_status_task",
          "callee": "now",
          "line": 277,
          "type": "attribute"
        },
        {
          "caller": "EventService._job_status_task",
          "callee": "abs",
          "line": 282,
          "type": "direct"
        },
        {
          "caller": "EventService._job_status_task",
          "callee": "append",
          "line": 283,
          "type": "attribute"
        },
        {
          "caller": "EventService._job_status_task",
          "callee": "isoformat",
          "line": 290,
          "type": "attribute"
        },
        {
          "caller": "EventService._job_status_task",
          "callee": "now",
          "line": 290,
          "type": "attribute"
        },
        {
          "caller": "EventService._job_status_task",
          "callee": "isoformat",
          "line": 299,
          "type": "attribute"
        },
        {
          "caller": "EventService._job_status_task",
          "callee": "now",
          "line": 299,
          "type": "attribute"
        },
        {
          "caller": "EventService._job_status_task",
          "callee": "items",
          "line": 303,
          "type": "attribute"
        },
        {
          "caller": "EventService._job_status_task",
          "callee": "emit_event",
          "line": 310,
          "type": "attribute"
        },
        {
          "caller": "EventService._job_status_task",
          "callee": "isoformat",
          "line": 311,
          "type": "attribute"
        },
        {
          "caller": "EventService._job_status_task",
          "callee": "now",
          "line": 311,
          "type": "attribute"
        },
        {
          "caller": "EventService._job_status_task",
          "callee": "len",
          "line": 312,
          "type": "direct"
        },
        {
          "caller": "EventService._job_status_task",
          "callee": "debug",
          "line": 318,
          "type": "attribute"
        },
        {
          "caller": "EventService._job_status_task",
          "callee": "len",
          "line": 318,
          "type": "direct"
        },
        {
          "caller": "EventService._job_status_task",
          "callee": "error",
          "line": 321,
          "type": "attribute"
        },
        {
          "caller": "EventService._job_status_task",
          "callee": "str",
          "line": 321,
          "type": "direct"
        },
        {
          "caller": "EventService._job_status_task",
          "callee": "sleep",
          "line": 323,
          "type": "attribute"
        },
        {
          "caller": "EventService._job_status_task",
          "callee": "error",
          "line": 328,
          "type": "attribute"
        },
        {
          "caller": "EventService._job_status_task",
          "callee": "str",
          "line": 328,
          "type": "direct"
        },
        {
          "caller": "EventService._job_status_task",
          "callee": "sleep",
          "line": 329,
          "type": "attribute"
        },
        {
          "caller": "EventService._job_status_task",
          "callee": "info",
          "line": 331,
          "type": "attribute"
        },
        {
          "caller": "EventService._file_discovery_task",
          "callee": "info",
          "line": 335,
          "type": "attribute"
        },
        {
          "caller": "EventService._file_discovery_task",
          "callee": "sleep",
          "line": 340,
          "type": "attribute"
        },
        {
          "caller": "EventService._file_discovery_task",
          "callee": "list_printers",
          "line": 349,
          "type": "attribute"
        },
        {
          "caller": "EventService._file_discovery_task",
          "callee": "discover_printer_files",
          "line": 356,
          "type": "attribute"
        },
        {
          "caller": "EventService._file_discovery_task",
          "callee": "extend",
          "line": 359,
          "type": "attribute"
        },
        {
          "caller": "EventService._file_discovery_task",
          "callee": "get",
          "line": 364,
          "type": "attribute"
        },
        {
          "caller": "EventService._file_discovery_task",
          "callee": "get",
          "line": 365,
          "type": "attribute"
        },
        {
          "caller": "EventService._file_discovery_task",
          "callee": "isoformat",
          "line": 366,
          "type": "attribute"
        },
        {
          "caller": "EventService._file_discovery_task",
          "callee": "now",
          "line": 366,
          "type": "attribute"
        },
        {
          "caller": "EventService._file_discovery_task",
          "callee": "len",
          "line": 373,
          "type": "direct"
        },
        {
          "caller": "EventService._file_discovery_task",
          "callee": "debug",
          "line": 377,
          "type": "attribute"
        },
        {
          "caller": "EventService._file_discovery_task",
          "callee": "len",
          "line": 379,
          "type": "direct"
        },
        {
          "caller": "EventService._file_discovery_task",
          "callee": "warning",
          "line": 382,
          "type": "attribute"
        },
        {
          "caller": "EventService._file_discovery_task",
          "callee": "str",
          "line": 383,
          "type": "direct"
        },
        {
          "caller": "EventService._file_discovery_task",
          "callee": "str",
          "line": 388,
          "type": "direct"
        },
        {
          "caller": "EventService._file_discovery_task",
          "callee": "hasattr",
          "line": 392,
          "type": "direct"
        },
        {
          "caller": "EventService._file_discovery_task",
          "callee": "scan_local_files",
          "line": 395,
          "type": "attribute"
        },
        {
          "caller": "EventService._file_discovery_task",
          "callee": "extend",
          "line": 397,
          "type": "attribute"
        },
        {
          "caller": "EventService._file_discovery_task",
          "callee": "get",
          "line": 402,
          "type": "attribute"
        },
        {
          "caller": "EventService._file_discovery_task",
          "callee": "get",
          "line": 403,
          "type": "attribute"
        },
        {
          "caller": "EventService._file_discovery_task",
          "callee": "get",
          "line": 404,
          "type": "attribute"
        },
        {
          "caller": "EventService._file_discovery_task",
          "callee": "isoformat",
          "line": 405,
          "type": "attribute"
        },
        {
          "caller": "EventService._file_discovery_task",
          "callee": "now",
          "line": 405,
          "type": "attribute"
        },
        {
          "caller": "EventService._file_discovery_task",
          "callee": "len",
          "line": 412,
          "type": "direct"
        },
        {
          "caller": "EventService._file_discovery_task",
          "callee": "warning",
          "line": 416,
          "type": "attribute"
        },
        {
          "caller": "EventService._file_discovery_task",
          "callee": "str",
          "line": 416,
          "type": "direct"
        },
        {
          "caller": "EventService._file_discovery_task",
          "callee": "emit_event",
          "line": 419,
          "type": "attribute"
        },
        {
          "caller": "EventService._file_discovery_task",
          "callee": "isoformat",
          "line": 420,
          "type": "attribute"
        },
        {
          "caller": "EventService._file_discovery_task",
          "callee": "now",
          "line": 420,
          "type": "attribute"
        },
        {
          "caller": "EventService._file_discovery_task",
          "callee": "len",
          "line": 423,
          "type": "direct"
        },
        {
          "caller": "EventService._file_discovery_task",
          "callee": "emit_event",
          "line": 429,
          "type": "attribute"
        },
        {
          "caller": "EventService._file_discovery_task",
          "callee": "isoformat",
          "line": 430,
          "type": "attribute"
        },
        {
          "caller": "EventService._file_discovery_task",
          "callee": "now",
          "line": 430,
          "type": "attribute"
        },
        {
          "caller": "EventService._file_discovery_task",
          "callee": "len",
          "line": 432,
          "type": "direct"
        },
        {
          "caller": "EventService._file_discovery_task",
          "callee": "info",
          "line": 435,
          "type": "attribute"
        },
        {
          "caller": "EventService._file_discovery_task",
          "callee": "len",
          "line": 435,
          "type": "direct"
        },
        {
          "caller": "EventService._file_discovery_task",
          "callee": "now",
          "line": 437,
          "type": "attribute"
        },
        {
          "caller": "EventService._file_discovery_task",
          "callee": "error",
          "line": 440,
          "type": "attribute"
        },
        {
          "caller": "EventService._file_discovery_task",
          "callee": "str",
          "line": 440,
          "type": "direct"
        },
        {
          "caller": "EventService._file_discovery_task",
          "callee": "sleep",
          "line": 442,
          "type": "attribute"
        },
        {
          "caller": "EventService._file_discovery_task",
          "callee": "error",
          "line": 447,
          "type": "attribute"
        },
        {
          "caller": "EventService._file_discovery_task",
          "callee": "str",
          "line": 447,
          "type": "direct"
        },
        {
          "caller": "EventService._file_discovery_task",
          "callee": "sleep",
          "line": 448,
          "type": "attribute"
        },
        {
          "caller": "EventService._file_discovery_task",
          "callee": "info",
          "line": 450,
          "type": "attribute"
        },
        {
          "caller": "EventService.get_status",
          "callee": "len",
          "line": 456,
          "type": "direct"
        },
        {
          "caller": "EventService.get_status",
          "callee": "done",
          "line": 456,
          "type": "attribute"
        },
        {
          "caller": "EventService.get_status",
          "callee": "len",
          "line": 457,
          "type": "direct"
        },
        {
          "caller": "EventService.get_status",
          "callee": "len",
          "line": 459,
          "type": "direct"
        },
        {
          "caller": "EventService.get_status",
          "callee": "items",
          "line": 460,
          "type": "attribute"
        },
        {
          "caller": "EventService.get_status",
          "callee": "len",
          "line": 463,
          "type": "direct"
        },
        {
          "caller": "EventService.get_status",
          "callee": "len",
          "line": 464,
          "type": "direct"
        },
        {
          "caller": "EventService.get_status",
          "callee": "isoformat",
          "line": 465,
          "type": "attribute"
        },
        {
          "caller": "EventService.get_status",
          "callee": "copy",
          "line": 467,
          "type": "attribute"
        },
        {
          "caller": "EventService.set_services",
          "callee": "info",
          "line": 487,
          "type": "attribute"
        },
        {
          "caller": "EventService.force_discovery",
          "callee": "info",
          "line": 495,
          "type": "attribute"
        },
        {
          "caller": "EventService.force_discovery",
          "callee": "list_printers",
          "line": 506,
          "type": "attribute"
        },
        {
          "caller": "EventService.force_discovery",
          "callee": "discover_printer_files",
          "line": 511,
          "type": "attribute"
        },
        {
          "caller": "EventService.force_discovery",
          "callee": "extend",
          "line": 513,
          "type": "attribute"
        },
        {
          "caller": "EventService.force_discovery",
          "callee": "len",
          "line": 515,
          "type": "direct"
        },
        {
          "caller": "EventService.force_discovery",
          "callee": "str",
          "line": 522,
          "type": "direct"
        },
        {
          "caller": "EventService.force_discovery",
          "callee": "emit_event",
          "line": 526,
          "type": "attribute"
        },
        {
          "caller": "EventService.force_discovery",
          "callee": "isoformat",
          "line": 527,
          "type": "attribute"
        },
        {
          "caller": "EventService.force_discovery",
          "callee": "now",
          "line": 527,
          "type": "attribute"
        },
        {
          "caller": "EventService.force_discovery",
          "callee": "len",
          "line": 535,
          "type": "direct"
        },
        {
          "caller": "EventService.force_discovery",
          "callee": "len",
          "line": 536,
          "type": "direct"
        },
        {
          "caller": "EventService.force_discovery",
          "callee": "error",
          "line": 540,
          "type": "attribute"
        },
        {
          "caller": "EventService.force_discovery",
          "callee": "str",
          "line": 540,
          "type": "direct"
        },
        {
          "caller": "EventService.force_discovery",
          "callee": "str",
          "line": 541,
          "type": "direct"
        },
        {
          "caller": "EventService.reset_monitoring_state",
          "callee": "info",
          "line": 545,
          "type": "attribute"
        },
        {
          "caller": "EventService.reset_monitoring_state",
          "callee": "clear",
          "line": 546,
          "type": "attribute"
        },
        {
          "caller": "EventService.reset_monitoring_state",
          "callee": "clear",
          "line": 547,
          "type": "attribute"
        },
        {
          "caller": "EventService.reset_monitoring_state",
          "callee": "now",
          "line": 548,
          "type": "attribute"
        }
      ],
      "error": null
    },
    {
      "filepath": "src\\services\\file_service.py",
      "functions": [
        {
          "name": "__init__",
          "full_name": "FileService.__init__",
          "class": "FileService",
          "signature": "(self, database: Database, event_service: EventService, file_watcher: Optional[FileWatcherService], printer_service, config_service, library_service)",
          "return_type": "",
          "decorators": [],
          "docstring": "Initialize file service.",
          "line_start": 24,
          "line_end": 41,
          "access_level": "dunder",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_files",
          "full_name": "FileService.get_files",
          "class": "FileService",
          "signature": "(self, printer_id: Optional[str], include_local: bool, status: Optional[str], source: Optional[str], has_thumbnail: Optional[bool], search: Optional[str], limit: Optional[int], order_by: Optional[str], order_dir: Optional[str], page: Optional[int])",
          "return_type": "List[Dict[str, Any]]",
          "decorators": [],
          "docstring": "Get list of available files from printers and local folders.",
          "line_start": 43,
          "line_end": 152,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_printer_files",
          "full_name": "FileService.get_printer_files",
          "class": "FileService",
          "signature": "(self, printer_id: str)",
          "return_type": "List[Dict[str, Any]]",
          "decorators": [],
          "docstring": "Get files available on specific printer.",
          "line_start": 154,
          "line_end": 190,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "download_file",
          "full_name": "FileService.download_file",
          "class": "FileService",
          "signature": "(self, printer_id: str, filename: str, destination_path: Optional[str])",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Download file from printer.",
          "line_start": 192,
          "line_end": 365,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_download_status",
          "full_name": "FileService.get_download_status",
          "class": "FileService",
          "signature": "(self, file_id: str)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Get download status of a file.",
          "line_start": 367,
          "line_end": 404,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_local_files",
          "full_name": "FileService.get_local_files",
          "class": "FileService",
          "signature": "(self)",
          "return_type": "List[Dict[str, Any]]",
          "decorators": [],
          "docstring": "Get list of local files only.",
          "line_start": 406,
          "line_end": 415,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "scan_local_files",
          "full_name": "FileService.scan_local_files",
          "class": "FileService",
          "signature": "(self)",
          "return_type": "List[Dict[str, Any]]",
          "decorators": [],
          "docstring": "Scan local watch folders for new files (called by file discovery task).",
          "line_start": 417,
          "line_end": 433,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_watch_status",
          "full_name": "FileService.get_watch_status",
          "class": "FileService",
          "signature": "(self)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Get file watcher status.",
          "line_start": 435,
          "line_end": 444,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "reload_watch_folders",
          "full_name": "FileService.reload_watch_folders",
          "class": "FileService",
          "signature": "(self)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Reload watch folders configuration.",
          "line_start": 446,
          "line_end": 456,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_file_statistics",
          "full_name": "FileService.get_file_statistics",
          "class": "FileService",
          "signature": "(self)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Get file management statistics.",
          "line_start": 458,
          "line_end": 536,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_get_file_type",
          "full_name": "FileService._get_file_type",
          "class": "FileService",
          "signature": "(self, filename: str)",
          "return_type": "str",
          "decorators": [],
          "docstring": "Get file type from filename extension.",
          "line_start": 538,
          "line_end": 549,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_extract_printer_info",
          "full_name": "FileService._extract_printer_info",
          "class": "FileService",
          "signature": "(self, printer: Dict[str, Any])",
          "return_type": "Dict[str, str]",
          "decorators": [],
          "docstring": "Extract manufacturer and printer model from printer configuration.\n\nArgs:\n    printer: Printer configuration dict with 'type' and 'name' fields\n\nReturns:\n    Dict with 'manufacturer' and 'printer_model' keys",
          "line_start": 551,
          "line_end": 597,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "sync_printer_files",
          "full_name": "FileService.sync_printer_files",
          "class": "FileService",
          "signature": "(self, printer_id: str)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Synchronize files from a specific printer.",
          "line_start": 599,
          "line_end": 646,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "discover_printer_files",
          "full_name": "FileService.discover_printer_files",
          "class": "FileService",
          "signature": "(self, printer_id: str)",
          "return_type": "List[Dict[str, Any]]",
          "decorators": [],
          "docstring": "Discover files on a specific printer for the background discovery task.\n\nThis method is called by the background file discovery task every 5 minutes.\nIt discovers files on the printer and stores them in the database.\n\nArgs:\n    printer_id: The ID of the printer to discover files for\n\nReturns:\n    List of file info dictionaries with filename, file_size, file_type",
          "line_start": 648,
          "line_end": 686,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_file_by_id",
          "full_name": "FileService.get_file_by_id",
          "class": "FileService",
          "signature": "(self, file_id: str)",
          "return_type": "Optional[Dict[str, Any]]",
          "decorators": [],
          "docstring": "Get file information by ID.",
          "line_start": 688,
          "line_end": 707,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "find_file_by_name",
          "full_name": "FileService.find_file_by_name",
          "class": "FileService",
          "signature": "(self, filename: str, printer_id: Optional[str])",
          "return_type": "Optional[Dict[str, Any]]",
          "decorators": [],
          "docstring": "Find file by filename, optionally filtering by printer_id.",
          "line_start": 709,
          "line_end": 730,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "delete_file",
          "full_name": "FileService.delete_file",
          "class": "FileService",
          "signature": "(self, file_id: str)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Delete a file record (for local files and downloaded files, also delete physical file).",
          "line_start": 732,
          "line_end": 780,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "cleanup_download_status",
          "full_name": "FileService.cleanup_download_status",
          "class": "FileService",
          "signature": "(self, max_age_hours: int)",
          "return_type": "",
          "decorators": [],
          "docstring": "Clean up old download status entries.",
          "line_start": 782,
          "line_end": 801,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "process_file_thumbnails",
          "full_name": "FileService.process_file_thumbnails",
          "class": "FileService",
          "signature": "(self, file_path: str, file_id: str)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Process a file to extract thumbnails and metadata using Bambu parser.\n\nArgs:\n    file_path: Local path to the file\n    file_id: File ID in database\n    \nReturns:\n    True if processing was successful, False otherwise",
          "line_start": 803,
          "line_end": 980,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_log_thumbnail_processing",
          "full_name": "FileService._log_thumbnail_processing",
          "class": "FileService",
          "signature": "(self, file_path: str, file_id: str, status: str, details: Optional[str])",
          "return_type": "",
          "decorators": [],
          "docstring": "Log a thumbnail processing attempt for debugging.",
          "line_start": 982,
          "line_end": 999,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_thumbnail_processing_log",
          "full_name": "FileService.get_thumbnail_processing_log",
          "class": "FileService",
          "signature": "(self, limit: Optional[int])",
          "return_type": "List[Dict[str, Any]]",
          "decorators": [],
          "docstring": "Get recent thumbnail processing log entries.",
          "line_start": 1001,
          "line_end": 1005,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "extract_enhanced_metadata",
          "full_name": "FileService.extract_enhanced_metadata",
          "class": "FileService",
          "signature": "(self, file_id: str)",
          "return_type": "Optional[Dict[str, Any]]",
          "decorators": [],
          "docstring": "Extract enhanced metadata from a file using BambuParser and ThreeMFAnalyzer.\n\nThis method implements Phase 1 of Issue #43 - METADATA-001.\nIt extracts comprehensive metadata including physical properties, print settings,\nmaterial requirements, cost analysis, quality metrics, and compatibility info.\n\nArgs:\n    file_id: ID of the file to analyze\n    \nReturns:\n    Enhanced metadata dictionary or None if extraction failed",
          "line_start": 1007,
          "line_end": 1164,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "from_import",
          "module": "typing",
          "name": "List",
          "alias": null,
          "line": 5
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Dict",
          "alias": null,
          "line": 5
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Any",
          "alias": null,
          "line": 5
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Optional",
          "alias": null,
          "line": 5
        },
        {
          "type": "import",
          "module": "structlog",
          "alias": null,
          "line": 6
        },
        {
          "type": "import",
          "module": "asyncio",
          "alias": null,
          "line": 7
        },
        {
          "type": "import",
          "module": "os",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "pathlib",
          "name": "Path",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "src.database.database",
          "name": "Database",
          "alias": null,
          "line": 11
        },
        {
          "type": "from_import",
          "module": "src.services.event_service",
          "name": "EventService",
          "alias": null,
          "line": 12
        },
        {
          "type": "from_import",
          "module": "src.services.file_watcher_service",
          "name": "FileWatcherService",
          "alias": null,
          "line": 13
        },
        {
          "type": "from_import",
          "module": "src.services.bambu_parser",
          "name": "BambuParser",
          "alias": null,
          "line": 14
        },
        {
          "type": "from_import",
          "module": "src.services.preview_render_service",
          "name": "PreviewRenderService",
          "alias": null,
          "line": 15
        },
        {
          "type": "from_import",
          "module": "src.utils.exceptions",
          "name": "NotFoundError",
          "alias": null,
          "line": 16
        },
        {
          "type": "from_import",
          "module": "src.models.printer",
          "name": "PrinterType",
          "alias": null,
          "line": 561
        },
        {
          "type": "import",
          "module": "base64",
          "alias": null,
          "line": 864
        },
        {
          "type": "import",
          "module": "struct",
          "alias": null,
          "line": 881
        },
        {
          "type": "import",
          "module": "base64",
          "alias": null,
          "line": 902
        },
        {
          "type": "from_import",
          "module": "src.services.threemf_analyzer",
          "name": "ThreeMFAnalyzer",
          "alias": null,
          "line": 1022
        },
        {
          "type": "from_import",
          "module": "src.models.file",
          "name": "EnhancedFileMetadata",
          "alias": null,
          "line": 1023
        },
        {
          "type": "from_import",
          "module": "src.models.file",
          "name": "PhysicalProperties",
          "alias": null,
          "line": 1023
        },
        {
          "type": "from_import",
          "module": "src.models.file",
          "name": "PrintSettings",
          "alias": null,
          "line": 1023
        },
        {
          "type": "from_import",
          "module": "src.models.file",
          "name": "MaterialRequirements",
          "alias": null,
          "line": 1023
        },
        {
          "type": "from_import",
          "module": "src.models.file",
          "name": "CostBreakdown",
          "alias": null,
          "line": 1023
        },
        {
          "type": "from_import",
          "module": "src.models.file",
          "name": "QualityMetrics",
          "alias": null,
          "line": 1023
        },
        {
          "type": "from_import",
          "module": "src.models.file",
          "name": "CompatibilityInfo",
          "alias": null,
          "line": 1023
        }
      ],
      "function_calls": [
        {
          "caller": "FileService.__init__",
          "callee": "BambuParser",
          "line": 34,
          "type": "direct"
        },
        {
          "caller": "FileService.__init__",
          "callee": "PreviewRenderService",
          "line": 35,
          "type": "direct"
        },
        {
          "caller": "FileService.get_files",
          "callee": "list_files",
          "line": 58,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_files",
          "callee": "list_printers",
          "line": 67,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_files",
          "callee": "warning",
          "line": 71,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_files",
          "callee": "str",
          "line": 71,
          "type": "direct"
        },
        {
          "caller": "FileService.get_files",
          "callee": "dict",
          "line": 75,
          "type": "direct"
        },
        {
          "caller": "FileService.get_files",
          "callee": "get",
          "line": 79,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_files",
          "callee": "hasattr",
          "line": 84,
          "type": "direct"
        },
        {
          "caller": "FileService.get_files",
          "callee": "str",
          "line": 84,
          "type": "direct"
        },
        {
          "caller": "FileService.get_files",
          "callee": "append",
          "line": 94,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_files",
          "callee": "debug",
          "line": 96,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_files",
          "callee": "len",
          "line": 96,
          "type": "direct"
        },
        {
          "caller": "FileService.get_files",
          "callee": "error",
          "line": 99,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_files",
          "callee": "str",
          "line": 99,
          "type": "direct"
        },
        {
          "caller": "FileService.get_files",
          "callee": "get_local_files",
          "line": 104,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_files",
          "callee": "get",
          "line": 108,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_files",
          "callee": "extend",
          "line": 113,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_files",
          "callee": "debug",
          "line": 114,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_files",
          "callee": "len",
          "line": 114,
          "type": "direct"
        },
        {
          "caller": "FileService.get_files",
          "callee": "error",
          "line": 116,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_files",
          "callee": "str",
          "line": 116,
          "type": "direct"
        },
        {
          "caller": "FileService.get_files",
          "callee": "get",
          "line": 120,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_files",
          "callee": "get",
          "line": 120,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_files",
          "callee": "get",
          "line": 123,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_files",
          "callee": "get",
          "line": 126,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_files",
          "callee": "bool",
          "line": 129,
          "type": "direct"
        },
        {
          "caller": "FileService.get_files",
          "callee": "get",
          "line": 129,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_files",
          "callee": "lower",
          "line": 133,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_files",
          "callee": "lower",
          "line": 134,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_files",
          "callee": "get",
          "line": 134,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_files",
          "callee": "lower",
          "line": 137,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_files",
          "callee": "sorted",
          "line": 139,
          "type": "direct"
        },
        {
          "caller": "FileService.get_files",
          "callee": "get",
          "line": 139,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_files",
          "callee": "get",
          "line": 139,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_files",
          "callee": "sorted",
          "line": 141,
          "type": "direct"
        },
        {
          "caller": "FileService.get_files",
          "callee": "get",
          "line": 141,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_files",
          "callee": "sorted",
          "line": 143,
          "type": "direct"
        },
        {
          "caller": "FileService.get_files",
          "callee": "get",
          "line": 143,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_files",
          "callee": "sorted",
          "line": 145,
          "type": "direct"
        },
        {
          "caller": "FileService.get_files",
          "callee": "get",
          "line": 145,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_printer_files",
          "callee": "warning",
          "line": 158,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_printer_files",
          "callee": "get_printer_files",
          "line": 162,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_printer_files",
          "callee": "get",
          "line": 172,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_printer_files",
          "callee": "_get_file_type",
          "line": 173,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_printer_files",
          "callee": "get",
          "line": 177,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_printer_files",
          "callee": "create_file",
          "line": 181,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_printer_files",
          "callee": "append",
          "line": 182,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_printer_files",
          "callee": "info",
          "line": 184,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_printer_files",
          "callee": "len",
          "line": 184,
          "type": "direct"
        },
        {
          "caller": "FileService.get_printer_files",
          "callee": "error",
          "line": 188,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_printer_files",
          "callee": "str",
          "line": 188,
          "type": "direct"
        },
        {
          "caller": "FileService.get_printer_files",
          "callee": "list_files",
          "line": 190,
          "type": "attribute"
        },
        {
          "caller": "FileService.download_file",
          "callee": "ValueError",
          "line": 197,
          "type": "direct"
        },
        {
          "caller": "FileService.download_file",
          "callee": "warning",
          "line": 213,
          "type": "attribute"
        },
        {
          "caller": "FileService.download_file",
          "callee": "str",
          "line": 214,
          "type": "direct"
        },
        {
          "caller": "FileService.download_file",
          "callee": "Path",
          "line": 216,
          "type": "direct"
        },
        {
          "caller": "FileService.download_file",
          "callee": "mkdir",
          "line": 218,
          "type": "attribute"
        },
        {
          "caller": "FileService.download_file",
          "callee": "debug",
          "line": 219,
          "type": "attribute"
        },
        {
          "caller": "FileService.download_file",
          "callee": "str",
          "line": 219,
          "type": "direct"
        },
        {
          "caller": "FileService.download_file",
          "callee": "error",
          "line": 222,
          "type": "attribute"
        },
        {
          "caller": "FileService.download_file",
          "callee": "str",
          "line": 223,
          "type": "direct"
        },
        {
          "caller": "FileService.download_file",
          "callee": "str",
          "line": 223,
          "type": "direct"
        },
        {
          "caller": "FileService.download_file",
          "callee": "ValueError",
          "line": 224,
          "type": "direct"
        },
        {
          "caller": "FileService.download_file",
          "callee": "str",
          "line": 225,
          "type": "direct"
        },
        {
          "caller": "FileService.download_file",
          "callee": "info",
          "line": 227,
          "type": "attribute"
        },
        {
          "caller": "FileService.download_file",
          "callee": "download_printer_file",
          "line": 234,
          "type": "attribute"
        },
        {
          "caller": "FileService.download_file",
          "callee": "update_file",
          "line": 241,
          "type": "attribute"
        },
        {
          "caller": "FileService.download_file",
          "callee": "isoformat",
          "line": 244,
          "type": "attribute"
        },
        {
          "caller": "FileService.download_file",
          "callee": "now",
          "line": 244,
          "type": "attribute"
        },
        {
          "caller": "FileService.download_file",
          "callee": "exists",
          "line": 252,
          "type": "attribute"
        },
        {
          "caller": "FileService.download_file",
          "callee": "Path",
          "line": 252,
          "type": "direct"
        },
        {
          "caller": "FileService.download_file",
          "callee": "error",
          "line": 253,
          "type": "attribute"
        },
        {
          "caller": "FileService.download_file",
          "callee": "stat",
          "line": 262,
          "type": "attribute"
        },
        {
          "caller": "FileService.download_file",
          "callee": "Path",
          "line": 262,
          "type": "direct"
        },
        {
          "caller": "FileService.download_file",
          "callee": "info",
          "line": 263,
          "type": "attribute"
        },
        {
          "caller": "FileService.download_file",
          "callee": "info",
          "line": 268,
          "type": "attribute"
        },
        {
          "caller": "FileService.download_file",
          "callee": "create_task",
          "line": 272,
          "type": "attribute"
        },
        {
          "caller": "FileService.download_file",
          "callee": "process_file_thumbnails",
          "line": 272,
          "type": "attribute"
        },
        {
          "caller": "FileService.download_file",
          "callee": "get_printer",
          "line": 278,
          "type": "attribute"
        },
        {
          "caller": "FileService.download_file",
          "callee": "get",
          "line": 279,
          "type": "attribute"
        },
        {
          "caller": "FileService.download_file",
          "callee": "_extract_printer_info",
          "line": 282,
          "type": "attribute"
        },
        {
          "caller": "FileService.download_file",
          "callee": "isoformat",
          "line": 295,
          "type": "attribute"
        },
        {
          "caller": "FileService.download_file",
          "callee": "now",
          "line": 295,
          "type": "attribute"
        },
        {
          "caller": "FileService.download_file",
          "callee": "add_file_to_library",
          "line": 299,
          "type": "attribute"
        },
        {
          "caller": "FileService.download_file",
          "callee": "Path",
          "line": 300,
          "type": "direct"
        },
        {
          "caller": "FileService.download_file",
          "callee": "info",
          "line": 305,
          "type": "attribute"
        },
        {
          "caller": "FileService.download_file",
          "callee": "error",
          "line": 313,
          "type": "attribute"
        },
        {
          "caller": "FileService.download_file",
          "callee": "str",
          "line": 316,
          "type": "direct"
        },
        {
          "caller": "FileService.download_file",
          "callee": "emit_event",
          "line": 321,
          "type": "attribute"
        },
        {
          "caller": "FileService.download_file",
          "callee": "warning",
          "line": 328,
          "type": "attribute"
        },
        {
          "caller": "FileService.download_file",
          "callee": "str",
          "line": 328,
          "type": "direct"
        },
        {
          "caller": "FileService.download_file",
          "callee": "info",
          "line": 330,
          "type": "attribute"
        },
        {
          "caller": "FileService.download_file",
          "callee": "error",
          "line": 341,
          "type": "attribute"
        },
        {
          "caller": "FileService.download_file",
          "callee": "str",
          "line": 342,
          "type": "direct"
        },
        {
          "caller": "FileService.download_file",
          "callee": "str",
          "line": 346,
          "type": "direct"
        },
        {
          "caller": "FileService.download_file",
          "callee": "error",
          "line": 358,
          "type": "attribute"
        },
        {
          "caller": "FileService.download_file",
          "callee": "str",
          "line": 358,
          "type": "direct"
        },
        {
          "caller": "FileService.download_file",
          "callee": "str",
          "line": 363,
          "type": "direct"
        },
        {
          "caller": "FileService.get_download_status",
          "callee": "get",
          "line": 375,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_download_status",
          "callee": "list_files",
          "line": 379,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_download_status",
          "callee": "get",
          "line": 384,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_download_status",
          "callee": "get",
          "line": 385,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_download_status",
          "callee": "get",
          "line": 386,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_download_status",
          "callee": "get",
          "line": 387,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_download_status",
          "callee": "error",
          "line": 398,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_download_status",
          "callee": "str",
          "line": 398,
          "type": "direct"
        },
        {
          "caller": "FileService.get_download_status",
          "callee": "str",
          "line": 403,
          "type": "direct"
        },
        {
          "caller": "FileService.get_local_files",
          "callee": "get_local_files",
          "line": 412,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_local_files",
          "callee": "error",
          "line": 414,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_local_files",
          "callee": "str",
          "line": 414,
          "type": "direct"
        },
        {
          "caller": "FileService.scan_local_files",
          "callee": "get_local_files",
          "line": 424,
          "type": "attribute"
        },
        {
          "caller": "FileService.scan_local_files",
          "callee": "debug",
          "line": 429,
          "type": "attribute"
        },
        {
          "caller": "FileService.scan_local_files",
          "callee": "len",
          "line": 429,
          "type": "direct"
        },
        {
          "caller": "FileService.scan_local_files",
          "callee": "error",
          "line": 432,
          "type": "attribute"
        },
        {
          "caller": "FileService.scan_local_files",
          "callee": "str",
          "line": 432,
          "type": "direct"
        },
        {
          "caller": "FileService.get_watch_status",
          "callee": "get_watch_status",
          "line": 441,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_watch_status",
          "callee": "error",
          "line": 443,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_watch_status",
          "callee": "str",
          "line": 443,
          "type": "direct"
        },
        {
          "caller": "FileService.get_watch_status",
          "callee": "str",
          "line": 444,
          "type": "direct"
        },
        {
          "caller": "FileService.reload_watch_folders",
          "callee": "reload_watch_folders",
          "line": 452,
          "type": "attribute"
        },
        {
          "caller": "FileService.reload_watch_folders",
          "callee": "error",
          "line": 455,
          "type": "attribute"
        },
        {
          "caller": "FileService.reload_watch_folders",
          "callee": "str",
          "line": 455,
          "type": "direct"
        },
        {
          "caller": "FileService.reload_watch_folders",
          "callee": "str",
          "line": 456,
          "type": "direct"
        },
        {
          "caller": "FileService.get_file_statistics",
          "callee": "get_files",
          "line": 462,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_file_statistics",
          "callee": "len",
          "line": 465,
          "type": "direct"
        },
        {
          "caller": "FileService.get_file_statistics",
          "callee": "get",
          "line": 468,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_file_statistics",
          "callee": "get",
          "line": 469,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_file_statistics",
          "callee": "sum",
          "line": 472,
          "type": "direct"
        },
        {
          "caller": "FileService.get_file_statistics",
          "callee": "get",
          "line": 472,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_file_statistics",
          "callee": "len",
          "line": 476,
          "type": "direct"
        },
        {
          "caller": "FileService.get_file_statistics",
          "callee": "get",
          "line": 476,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_file_statistics",
          "callee": "len",
          "line": 479,
          "type": "direct"
        },
        {
          "caller": "FileService.get_file_statistics",
          "callee": "get",
          "line": 479,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_file_statistics",
          "callee": "len",
          "line": 482,
          "type": "direct"
        },
        {
          "caller": "FileService.get_file_statistics",
          "callee": "get",
          "line": 482,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_file_statistics",
          "callee": "len",
          "line": 485,
          "type": "direct"
        },
        {
          "caller": "FileService.get_file_statistics",
          "callee": "info",
          "line": 491,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_file_statistics",
          "callee": "len",
          "line": 495,
          "type": "direct"
        },
        {
          "caller": "FileService.get_file_statistics",
          "callee": "len",
          "line": 497,
          "type": "direct"
        },
        {
          "caller": "FileService.get_file_statistics",
          "callee": "debug",
          "line": 503,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_file_statistics",
          "callee": "min",
          "line": 504,
          "type": "direct"
        },
        {
          "caller": "FileService.get_file_statistics",
          "callee": "len",
          "line": 504,
          "type": "direct"
        },
        {
          "caller": "FileService.get_file_statistics",
          "callee": "get",
          "line": 506,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_file_statistics",
          "callee": "get",
          "line": 507,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_file_statistics",
          "callee": "get",
          "line": 508,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_file_statistics",
          "callee": "get",
          "line": 509,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_file_statistics",
          "callee": "len",
          "line": 514,
          "type": "direct"
        },
        {
          "caller": "FileService.get_file_statistics",
          "callee": "len",
          "line": 515,
          "type": "direct"
        },
        {
          "caller": "FileService.get_file_statistics",
          "callee": "error",
          "line": 525,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_file_statistics",
          "callee": "str",
          "line": 525,
          "type": "direct"
        },
        {
          "caller": "FileService._get_file_type",
          "callee": "lower",
          "line": 540,
          "type": "attribute"
        },
        {
          "caller": "FileService._get_file_type",
          "callee": "Path",
          "line": 540,
          "type": "direct"
        },
        {
          "caller": "FileService._get_file_type",
          "callee": "get",
          "line": 549,
          "type": "attribute"
        },
        {
          "caller": "FileService._extract_printer_info",
          "callee": "get",
          "line": 567,
          "type": "attribute"
        },
        {
          "caller": "FileService._extract_printer_info",
          "callee": "get",
          "line": 574,
          "type": "attribute"
        },
        {
          "caller": "FileService._extract_printer_info",
          "callee": "lower",
          "line": 579,
          "type": "attribute"
        },
        {
          "caller": "FileService._extract_printer_info",
          "callee": "lower",
          "line": 579,
          "type": "attribute"
        },
        {
          "caller": "FileService._extract_printer_info",
          "callee": "lower",
          "line": 586,
          "type": "attribute"
        },
        {
          "caller": "FileService._extract_printer_info",
          "callee": "lower",
          "line": 586,
          "type": "attribute"
        },
        {
          "caller": "FileService.sync_printer_files",
          "callee": "info",
          "line": 602,
          "type": "attribute"
        },
        {
          "caller": "FileService.sync_printer_files",
          "callee": "get_printer_files",
          "line": 605,
          "type": "attribute"
        },
        {
          "caller": "FileService.sync_printer_files",
          "callee": "list_files",
          "line": 608,
          "type": "attribute"
        },
        {
          "caller": "FileService.sync_printer_files",
          "callee": "update_file",
          "line": 621,
          "type": "attribute"
        },
        {
          "caller": "FileService.sync_printer_files",
          "callee": "info",
          "line": 626,
          "type": "attribute"
        },
        {
          "caller": "FileService.sync_printer_files",
          "callee": "len",
          "line": 628,
          "type": "direct"
        },
        {
          "caller": "FileService.sync_printer_files",
          "callee": "len",
          "line": 629,
          "type": "direct"
        },
        {
          "caller": "FileService.sync_printer_files",
          "callee": "len",
          "line": 634,
          "type": "direct"
        },
        {
          "caller": "FileService.sync_printer_files",
          "callee": "len",
          "line": 635,
          "type": "direct"
        },
        {
          "caller": "FileService.sync_printer_files",
          "callee": "isoformat",
          "line": 637,
          "type": "attribute"
        },
        {
          "caller": "FileService.sync_printer_files",
          "callee": "now",
          "line": 637,
          "type": "attribute"
        },
        {
          "caller": "FileService.sync_printer_files",
          "callee": "error",
          "line": 641,
          "type": "attribute"
        },
        {
          "caller": "FileService.sync_printer_files",
          "callee": "str",
          "line": 641,
          "type": "direct"
        },
        {
          "caller": "FileService.sync_printer_files",
          "callee": "str",
          "line": 644,
          "type": "direct"
        },
        {
          "caller": "FileService.sync_printer_files",
          "callee": "isoformat",
          "line": 645,
          "type": "attribute"
        },
        {
          "caller": "FileService.sync_printer_files",
          "callee": "now",
          "line": 645,
          "type": "attribute"
        },
        {
          "caller": "FileService.discover_printer_files",
          "callee": "info",
          "line": 662,
          "type": "attribute"
        },
        {
          "caller": "FileService.discover_printer_files",
          "callee": "get_printer_files",
          "line": 665,
          "type": "attribute"
        },
        {
          "caller": "FileService.discover_printer_files",
          "callee": "append",
          "line": 670,
          "type": "attribute"
        },
        {
          "caller": "FileService.discover_printer_files",
          "callee": "get",
          "line": 672,
          "type": "attribute"
        },
        {
          "caller": "FileService.discover_printer_files",
          "callee": "get",
          "line": 673,
          "type": "attribute"
        },
        {
          "caller": "FileService.discover_printer_files",
          "callee": "get",
          "line": 675,
          "type": "attribute"
        },
        {
          "caller": "FileService.discover_printer_files",
          "callee": "info",
          "line": 678,
          "type": "attribute"
        },
        {
          "caller": "FileService.discover_printer_files",
          "callee": "len",
          "line": 680,
          "type": "direct"
        },
        {
          "caller": "FileService.discover_printer_files",
          "callee": "error",
          "line": 685,
          "type": "attribute"
        },
        {
          "caller": "FileService.discover_printer_files",
          "callee": "str",
          "line": 685,
          "type": "direct"
        },
        {
          "caller": "FileService.get_file_by_id",
          "callee": "list_files",
          "line": 692,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_file_by_id",
          "callee": "dict",
          "line": 695,
          "type": "direct"
        },
        {
          "caller": "FileService.get_file_by_id",
          "callee": "get_local_files",
          "line": 699,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_file_by_id",
          "callee": "get",
          "line": 701,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_file_by_id",
          "callee": "dict",
          "line": 702,
          "type": "direct"
        },
        {
          "caller": "FileService.get_file_by_id",
          "callee": "error",
          "line": 706,
          "type": "attribute"
        },
        {
          "caller": "FileService.get_file_by_id",
          "callee": "str",
          "line": 706,
          "type": "direct"
        },
        {
          "caller": "FileService.find_file_by_name",
          "callee": "list_files",
          "line": 713,
          "type": "attribute"
        },
        {
          "caller": "FileService.find_file_by_name",
          "callee": "get",
          "line": 715,
          "type": "attribute"
        },
        {
          "caller": "FileService.find_file_by_name",
          "callee": "dict",
          "line": 716,
          "type": "direct"
        },
        {
          "caller": "FileService.find_file_by_name",
          "callee": "get_local_files",
          "line": 720,
          "type": "attribute"
        },
        {
          "caller": "FileService.find_file_by_name",
          "callee": "get",
          "line": 722,
          "type": "attribute"
        },
        {
          "caller": "FileService.find_file_by_name",
          "callee": "get",
          "line": 724,
          "type": "attribute"
        },
        {
          "caller": "FileService.find_file_by_name",
          "callee": "dict",
          "line": 725,
          "type": "direct"
        },
        {
          "caller": "FileService.find_file_by_name",
          "callee": "error",
          "line": 729,
          "type": "attribute"
        },
        {
          "caller": "FileService.find_file_by_name",
          "callee": "str",
          "line": 729,
          "type": "direct"
        },
        {
          "caller": "FileService.delete_file",
          "callee": "get_file_by_id",
          "line": 735,
          "type": "attribute"
        },
        {
          "caller": "FileService.delete_file",
          "callee": "NotFoundError",
          "line": 737,
          "type": "direct"
        },
        {
          "caller": "FileService.delete_file",
          "callee": "get",
          "line": 741,
          "type": "attribute"
        },
        {
          "caller": "FileService.delete_file",
          "callee": "get",
          "line": 742,
          "type": "attribute"
        },
        {
          "caller": "FileService.delete_file",
          "callee": "get",
          "line": 742,
          "type": "attribute"
        },
        {
          "caller": "FileService.delete_file",
          "callee": "get",
          "line": 745,
          "type": "attribute"
        },
        {
          "caller": "FileService.delete_file",
          "callee": "Path",
          "line": 747,
          "type": "direct"
        },
        {
          "caller": "FileService.delete_file",
          "callee": "exists",
          "line": 748,
          "type": "attribute"
        },
        {
          "caller": "FileService.delete_file",
          "callee": "unlink",
          "line": 749,
          "type": "attribute"
        },
        {
          "caller": "FileService.delete_file",
          "callee": "info",
          "line": 750,
          "type": "attribute"
        },
        {
          "caller": "FileService.delete_file",
          "callee": "str",
          "line": 750,
          "type": "direct"
        },
        {
          "caller": "FileService.delete_file",
          "callee": "warning",
          "line": 752,
          "type": "attribute"
        },
        {
          "caller": "FileService.delete_file",
          "callee": "str",
          "line": 752,
          "type": "direct"
        },
        {
          "caller": "FileService.delete_file",
          "callee": "get",
          "line": 755,
          "type": "attribute"
        },
        {
          "caller": "FileService.delete_file",
          "callee": "delete_local_file",
          "line": 756,
          "type": "attribute"
        },
        {
          "caller": "FileService.delete_file",
          "callee": "update_file",
          "line": 759,
          "type": "attribute"
        },
        {
          "caller": "FileService.delete_file",
          "callee": "info",
          "line": 767,
          "type": "attribute"
        },
        {
          "caller": "FileService.delete_file",
          "callee": "emit_event",
          "line": 770,
          "type": "attribute"
        },
        {
          "caller": "FileService.delete_file",
          "callee": "get",
          "line": 772,
          "type": "attribute"
        },
        {
          "caller": "FileService.delete_file",
          "callee": "get",
          "line": 773,
          "type": "attribute"
        },
        {
          "caller": "FileService.delete_file",
          "callee": "error",
          "line": 779,
          "type": "attribute"
        },
        {
          "caller": "FileService.delete_file",
          "callee": "str",
          "line": 779,
          "type": "direct"
        },
        {
          "caller": "FileService.cleanup_download_status",
          "callee": "timestamp",
          "line": 785,
          "type": "attribute"
        },
        {
          "caller": "FileService.cleanup_download_status",
          "callee": "now",
          "line": 785,
          "type": "attribute"
        },
        {
          "caller": "FileService.cleanup_download_status",
          "callee": "items",
          "line": 789,
          "type": "attribute"
        },
        {
          "caller": "FileService.cleanup_download_status",
          "callee": "append",
          "line": 791,
          "type": "attribute"
        },
        {
          "caller": "FileService.cleanup_download_status",
          "callee": "info",
          "line": 799,
          "type": "attribute"
        },
        {
          "caller": "FileService.cleanup_download_status",
          "callee": "len",
          "line": 799,
          "type": "direct"
        },
        {
          "caller": "FileService.cleanup_download_status",
          "callee": "error",
          "line": 801,
          "type": "attribute"
        },
        {
          "caller": "FileService.cleanup_download_status",
          "callee": "str",
          "line": 801,
          "type": "direct"
        },
        {
          "caller": "FileService.process_file_thumbnails",
          "callee": "utcnow",
          "line": 814,
          "type": "attribute"
        },
        {
          "caller": "FileService.process_file_thumbnails",
          "callee": "_log_thumbnail_processing",
          "line": 818,
          "type": "attribute"
        },
        {
          "caller": "FileService.process_file_thumbnails",
          "callee": "exists",
          "line": 820,
          "type": "attribute"
        },
        {
          "caller": "FileService.process_file_thumbnails",
          "callee": "warning",
          "line": 822,
          "type": "attribute"
        },
        {
          "caller": "FileService.process_file_thumbnails",
          "callee": "_log_thumbnail_processing",
          "line": 823,
          "type": "attribute"
        },
        {
          "caller": "FileService.process_file_thumbnails",
          "callee": "parse_file",
          "line": 827,
          "type": "attribute"
        },
        {
          "caller": "FileService.process_file_thumbnails",
          "callee": "get",
          "line": 830,
          "type": "attribute"
        },
        {
          "caller": "FileService.process_file_thumbnails",
          "callee": "info",
          "line": 831,
          "type": "attribute"
        },
        {
          "caller": "FileService.process_file_thumbnails",
          "callee": "_log_thumbnail_processing",
          "line": 833,
          "type": "attribute"
        },
        {
          "caller": "FileService.process_file_thumbnails",
          "callee": "get_thumbnail_by_size",
          "line": 848,
          "type": "attribute"
        },
        {
          "caller": "FileService.process_file_thumbnails",
          "callee": "get",
          "line": 856,
          "type": "attribute"
        },
        {
          "caller": "FileService.process_file_thumbnails",
          "callee": "get",
          "line": 858,
          "type": "attribute"
        },
        {
          "caller": "FileService.process_file_thumbnails",
          "callee": "startswith",
          "line": 862,
          "type": "attribute"
        },
        {
          "caller": "FileService.process_file_thumbnails",
          "callee": "split",
          "line": 866,
          "type": "attribute"
        },
        {
          "caller": "FileService.process_file_thumbnails",
          "callee": "basename",
          "line": 866,
          "type": "attribute"
        },
        {
          "caller": "FileService.process_file_thumbnails",
          "callee": "info",
          "line": 868,
          "type": "attribute"
        },
        {
          "caller": "FileService.process_file_thumbnails",
          "callee": "get",
          "line": 872,
          "type": "attribute"
        },
        {
          "caller": "FileService.process_file_thumbnails",
          "callee": "hasattr",
          "line": 873,
          "type": "direct"
        },
        {
          "caller": "FileService.process_file_thumbnails",
          "callee": "download_thumbnail",
          "line": 874,
          "type": "attribute"
        },
        {
          "caller": "FileService.process_file_thumbnails",
          "callee": "decode",
          "line": 877,
          "type": "attribute"
        },
        {
          "caller": "FileService.process_file_thumbnails",
          "callee": "b64encode",
          "line": 877,
          "type": "attribute"
        },
        {
          "caller": "FileService.process_file_thumbnails",
          "callee": "len",
          "line": 879,
          "type": "direct"
        },
        {
          "caller": "FileService.process_file_thumbnails",
          "callee": "unpack",
          "line": 882,
          "type": "attribute"
        },
        {
          "caller": "FileService.process_file_thumbnails",
          "callee": "info",
          "line": 893,
          "type": "attribute"
        },
        {
          "caller": "FileService.process_file_thumbnails",
          "callee": "len",
          "line": 894,
          "type": "direct"
        },
        {
          "caller": "FileService.process_file_thumbnails",
          "callee": "warning",
          "line": 896,
          "type": "attribute"
        },
        {
          "caller": "FileService.process_file_thumbnails",
          "callee": "str",
          "line": 897,
          "type": "direct"
        },
        {
          "caller": "FileService.process_file_thumbnails",
          "callee": "_get_file_type",
          "line": 903,
          "type": "attribute"
        },
        {
          "caller": "FileService.process_file_thumbnails",
          "callee": "basename",
          "line": 903,
          "type": "attribute"
        },
        {
          "caller": "FileService.process_file_thumbnails",
          "callee": "info",
          "line": 904,
          "type": "attribute"
        },
        {
          "caller": "FileService.process_file_thumbnails",
          "callee": "get_or_generate_preview",
          "line": 907,
          "type": "attribute"
        },
        {
          "caller": "FileService.process_file_thumbnails",
          "callee": "decode",
          "line": 912,
          "type": "attribute"
        },
        {
          "caller": "FileService.process_file_thumbnails",
          "callee": "b64encode",
          "line": 912,
          "type": "attribute"
        },
        {
          "caller": "FileService.process_file_thumbnails",
          "callee": "info",
          "line": 917,
          "type": "attribute"
        },
        {
          "caller": "FileService.process_file_thumbnails",
          "callee": "warning",
          "line": 920,
          "type": "attribute"
        },
        {
          "caller": "FileService.process_file_thumbnails",
          "callee": "error",
          "line": 923,
          "type": "attribute"
        },
        {
          "caller": "FileService.process_file_thumbnails",
          "callee": "str",
          "line": 924,
          "type": "direct"
        },
        {
          "caller": "FileService.process_file_thumbnails",
          "callee": "get_file_by_id",
          "line": 937,
          "type": "attribute"
        },
        {
          "caller": "FileService.process_file_thumbnails",
          "callee": "get",
          "line": 939,
          "type": "attribute"
        },
        {
          "caller": "FileService.process_file_thumbnails",
          "callee": "update_file",
          "line": 945,
          "type": "attribute"
        },
        {
          "caller": "FileService.process_file_thumbnails",
          "callee": "len",
          "line": 948,
          "type": "direct"
        },
        {
          "caller": "FileService.process_file_thumbnails",
          "callee": "info",
          "line": 949,
          "type": "attribute"
        },
        {
          "caller": "FileService.process_file_thumbnails",
          "callee": "len",
          "line": 952,
          "type": "direct"
        },
        {
          "caller": "FileService.process_file_thumbnails",
          "callee": "len",
          "line": 953,
          "type": "direct"
        },
        {
          "caller": "FileService.process_file_thumbnails",
          "callee": "list",
          "line": 954,
          "type": "direct"
        },
        {
          "caller": "FileService.process_file_thumbnails",
          "callee": "keys",
          "line": 954,
          "type": "attribute"
        },
        {
          "caller": "FileService.process_file_thumbnails",
          "callee": "_log_thumbnail_processing",
          "line": 956,
          "type": "attribute"
        },
        {
          "caller": "FileService.process_file_thumbnails",
          "callee": "len",
          "line": 957,
          "type": "direct"
        },
        {
          "caller": "FileService.process_file_thumbnails",
          "callee": "emit_event",
          "line": 960,
          "type": "attribute"
        },
        {
          "caller": "FileService.process_file_thumbnails",
          "callee": "len",
          "line": 963,
          "type": "direct"
        },
        {
          "caller": "FileService.process_file_thumbnails",
          "callee": "len",
          "line": 964,
          "type": "direct"
        },
        {
          "caller": "FileService.process_file_thumbnails",
          "callee": "error",
          "line": 971,
          "type": "attribute"
        },
        {
          "caller": "FileService.process_file_thumbnails",
          "callee": "_log_thumbnail_processing",
          "line": 972,
          "type": "attribute"
        },
        {
          "caller": "FileService.process_file_thumbnails",
          "callee": "str",
          "line": 976,
          "type": "direct"
        },
        {
          "caller": "FileService.process_file_thumbnails",
          "callee": "error",
          "line": 977,
          "type": "attribute"
        },
        {
          "caller": "FileService.process_file_thumbnails",
          "callee": "str",
          "line": 978,
          "type": "direct"
        },
        {
          "caller": "FileService.process_file_thumbnails",
          "callee": "_log_thumbnail_processing",
          "line": 979,
          "type": "attribute"
        },
        {
          "caller": "FileService._log_thumbnail_processing",
          "callee": "isoformat",
          "line": 986,
          "type": "attribute"
        },
        {
          "caller": "FileService._log_thumbnail_processing",
          "callee": "utcnow",
          "line": 986,
          "type": "attribute"
        },
        {
          "caller": "FileService._log_thumbnail_processing",
          "callee": "lower",
          "line": 991,
          "type": "attribute"
        },
        {
          "caller": "FileService._log_thumbnail_processing",
          "callee": "Path",
          "line": 991,
          "type": "direct"
        },
        {
          "caller": "FileService._log_thumbnail_processing",
          "callee": "insert",
          "line": 995,
          "type": "attribute"
        },
        {
          "caller": "FileService._log_thumbnail_processing",
          "callee": "len",
          "line": 998,
          "type": "direct"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "info",
          "line": 1028,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "get_file",
          "line": 1031,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "error",
          "line": 1033,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "get",
          "line": 1036,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "exists",
          "line": 1037,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "Path",
          "line": 1037,
          "type": "direct"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "warning",
          "line": 1038,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "Path",
          "line": 1042,
          "type": "direct"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "lower",
          "line": 1043,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "ThreeMFAnalyzer",
          "line": 1050,
          "type": "direct"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "analyze_file",
          "line": 1051,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "get",
          "line": 1053,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "warning",
          "line": 1056,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "get",
          "line": 1057,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "parse_file",
          "line": 1062,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "str",
          "line": 1062,
          "type": "direct"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "get",
          "line": 1064,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "get",
          "line": 1065,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "get",
          "line": 1070,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "get",
          "line": 1071,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "get",
          "line": 1072,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "get",
          "line": 1076,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "get",
          "line": 1077,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "get",
          "line": 1078,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "get",
          "line": 1079,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "get",
          "line": 1080,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "get",
          "line": 1081,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "get",
          "line": 1081,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "get",
          "line": 1082,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "get",
          "line": 1082,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "get",
          "line": 1083,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "get",
          "line": 1083,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "get",
          "line": 1084,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "get",
          "line": 1085,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "get",
          "line": 1086,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "get",
          "line": 1087,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "get",
          "line": 1090,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "get",
          "line": 1090,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "get",
          "line": 1091,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "isinstance",
          "line": 1092,
          "type": "direct"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "get",
          "line": 1092,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "len",
          "line": 1093,
          "type": "direct"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "get",
          "line": 1093,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "get",
          "line": 1096,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "get",
          "line": 1097,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "get",
          "line": 1098,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "get",
          "line": 1101,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "get",
          "line": 1102,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "get",
          "line": 1103,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "get",
          "line": 1103,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "get",
          "line": 1106,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "get",
          "line": 1107,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "get",
          "line": 1108,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "warning",
          "line": 1113,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "warning",
          "line": 1117,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "EnhancedFileMetadata",
          "line": 1123,
          "type": "direct"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "get",
          "line": 1125,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "PhysicalProperties",
          "line": 1124,
          "type": "direct"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "get",
          "line": 1124,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "get",
          "line": 1127,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "PrintSettings",
          "line": 1126,
          "type": "direct"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "get",
          "line": 1126,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "get",
          "line": 1129,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "MaterialRequirements",
          "line": 1128,
          "type": "direct"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "get",
          "line": 1128,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "get",
          "line": 1131,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "CostBreakdown",
          "line": 1130,
          "type": "direct"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "get",
          "line": 1130,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "get",
          "line": 1133,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "QualityMetrics",
          "line": 1132,
          "type": "direct"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "get",
          "line": 1132,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "get",
          "line": 1135,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "CompatibilityInfo",
          "line": 1134,
          "type": "direct"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "get",
          "line": 1134,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "update_file_enhanced_metadata",
          "line": 1139,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "model_dump",
          "line": 1141,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "now",
          "line": 1142,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "info",
          "line": 1145,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "emit_event",
          "line": 1148,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "str",
          "line": 1150,
          "type": "direct"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "model_dump",
          "line": 1156,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "error",
          "line": 1159,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "str",
          "line": 1159,
          "type": "direct"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "error",
          "line": 1163,
          "type": "attribute"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "str",
          "line": 1163,
          "type": "direct"
        },
        {
          "caller": "FileService.extract_enhanced_metadata",
          "callee": "copy",
          "line": 1164,
          "type": "attribute"
        }
      ],
      "error": null
    },
    {
      "filepath": "src\\services\\file_watcher_service.py",
      "functions": [
        {
          "name": "__init__",
          "full_name": "PrintFileHandler.__init__",
          "class": "PrintFileHandler",
          "signature": "(self, file_watcher: 'FileWatcherService')",
          "return_type": "",
          "decorators": [],
          "docstring": "Initialize file handler.",
          "line_start": 54,
          "line_end": 59,
          "access_level": "dunder",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "should_process_file",
          "full_name": "PrintFileHandler.should_process_file",
          "class": "PrintFileHandler",
          "signature": "(self, file_path: str)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Check if file should be processed based on extension and patterns.",
          "line_start": 61,
          "line_end": 78,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_debounce_event",
          "full_name": "PrintFileHandler._debounce_event",
          "class": "PrintFileHandler",
          "signature": "(self, file_path: str)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Debounce file events to avoid duplicate processing.",
          "line_start": 80,
          "line_end": 90,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "on_created",
          "full_name": "PrintFileHandler.on_created",
          "class": "PrintFileHandler",
          "signature": "(self, event: FileSystemEvent)",
          "return_type": "",
          "decorators": [],
          "docstring": "Handle file creation events.",
          "line_start": 92,
          "line_end": 97,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "on_modified",
          "full_name": "PrintFileHandler.on_modified",
          "class": "PrintFileHandler",
          "signature": "(self, event: FileSystemEvent)",
          "return_type": "",
          "decorators": [],
          "docstring": "Handle file modification events.",
          "line_start": 99,
          "line_end": 104,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "on_deleted",
          "full_name": "PrintFileHandler.on_deleted",
          "class": "PrintFileHandler",
          "signature": "(self, event: FileSystemEvent)",
          "return_type": "",
          "decorators": [],
          "docstring": "Handle file deletion events.",
          "line_start": 106,
          "line_end": 110,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "on_moved",
          "full_name": "PrintFileHandler.on_moved",
          "class": "PrintFileHandler",
          "signature": "(self, event: FileSystemEvent)",
          "return_type": "",
          "decorators": [],
          "docstring": "Handle file move/rename events.",
          "line_start": 112,
          "line_end": 120,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "__init__",
          "full_name": "FileWatcherService.__init__",
          "class": "FileWatcherService",
          "signature": "(self, config_service: ConfigService, event_service: EventService, library_service)",
          "return_type": "",
          "decorators": [],
          "docstring": "Initialize file watcher service.",
          "line_start": 126,
          "line_end": 139,
          "access_level": "dunder",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "start",
          "full_name": "FileWatcherService.start",
          "class": "FileWatcherService",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Start file watcher service.",
          "line_start": 141,
          "line_end": 201,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "stop",
          "full_name": "FileWatcherService.stop",
          "class": "FileWatcherService",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Stop file watcher service.",
          "line_start": 203,
          "line_end": 239,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_add_watch_folder",
          "full_name": "FileWatcherService._add_watch_folder",
          "class": "FileWatcherService",
          "signature": "(self, folder_path: str, recursive: bool)",
          "return_type": "",
          "decorators": [],
          "docstring": "Add a folder to watch list.",
          "line_start": 241,
          "line_end": 278,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_initial_scan",
          "full_name": "FileWatcherService._initial_scan",
          "class": "FileWatcherService",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Perform initial scan of all watched folders.",
          "line_start": 280,
          "line_end": 292,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_scan_folder",
          "full_name": "FileWatcherService._scan_folder",
          "class": "FileWatcherService",
          "signature": "(self, folder_path: Path, recursive: bool)",
          "return_type": "",
          "decorators": [],
          "docstring": "Scan a folder for existing 3D print files.",
          "line_start": 294,
          "line_end": 308,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_process_discovered_file",
          "full_name": "FileWatcherService._process_discovered_file",
          "class": "FileWatcherService",
          "signature": "(self, file_path: str)",
          "return_type": "",
          "decorators": [],
          "docstring": "Process a discovered file and add to local files and library.",
          "line_start": 310,
          "line_end": 386,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_find_watch_folder_for_file",
          "full_name": "FileWatcherService._find_watch_folder_for_file",
          "class": "FileWatcherService",
          "signature": "(self, file_path: str)",
          "return_type": "Optional[str]",
          "decorators": [],
          "docstring": "Find which watch folder contains the given file.",
          "line_start": 388,
          "line_end": 401,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_handle_file_created",
          "full_name": "FileWatcherService._handle_file_created",
          "class": "FileWatcherService",
          "signature": "(self, file_path: str)",
          "return_type": "",
          "decorators": [],
          "docstring": "Handle file creation event.",
          "line_start": 403,
          "line_end": 405,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_handle_file_modified",
          "full_name": "FileWatcherService._handle_file_modified",
          "class": "FileWatcherService",
          "signature": "(self, file_path: str)",
          "return_type": "",
          "decorators": [],
          "docstring": "Handle file modification event.",
          "line_start": 407,
          "line_end": 427,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_handle_file_deleted",
          "full_name": "FileWatcherService._handle_file_deleted",
          "class": "FileWatcherService",
          "signature": "(self, file_path: str)",
          "return_type": "",
          "decorators": [],
          "docstring": "Handle file deletion event.",
          "line_start": 429,
          "line_end": 440,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_handle_file_moved",
          "full_name": "FileWatcherService._handle_file_moved",
          "class": "FileWatcherService",
          "signature": "(self, old_path: str, new_path: str)",
          "return_type": "",
          "decorators": [],
          "docstring": "Handle file move/rename event.",
          "line_start": 442,
          "line_end": 467,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_emit_file_event",
          "full_name": "FileWatcherService._emit_file_event",
          "class": "FileWatcherService",
          "signature": "(self, event_type: str, local_file: LocalFile)",
          "return_type": "",
          "decorators": [],
          "docstring": "Emit file event through event service.",
          "line_start": 469,
          "line_end": 489,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_local_files",
          "full_name": "FileWatcherService.get_local_files",
          "class": "FileWatcherService",
          "signature": "(self)",
          "return_type": "List[Dict[str, Any]]",
          "decorators": [],
          "docstring": "Get list of all discovered local files.",
          "line_start": 491,
          "line_end": 509,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_watch_status",
          "full_name": "FileWatcherService.get_watch_status",
          "class": "FileWatcherService",
          "signature": "(self)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Get file watcher service status.",
          "line_start": 511,
          "line_end": 518,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "reload_watch_folders",
          "full_name": "FileWatcherService.reload_watch_folders",
          "class": "FileWatcherService",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Reload watch folders from configuration.",
          "line_start": 520,
          "line_end": 537,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "os",
          "alias": null,
          "line": 6
        },
        {
          "type": "import",
          "module": "sys",
          "alias": null,
          "line": 7
        },
        {
          "type": "import",
          "module": "asyncio",
          "alias": null,
          "line": 8
        },
        {
          "type": "import",
          "module": "threading",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Dict",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "List",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Set",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Optional",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Callable",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Any",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "TYPE_CHECKING",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "pathlib",
          "name": "Path",
          "alias": null,
          "line": 11
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 12
        },
        {
          "type": "from_import",
          "module": "dataclasses",
          "name": "dataclass",
          "alias": null,
          "line": 13
        },
        {
          "type": "import",
          "module": "structlog",
          "alias": null,
          "line": 15
        },
        {
          "type": "from_import",
          "module": "watchdog.observers",
          "name": "Observer",
          "alias": null,
          "line": 16
        },
        {
          "type": "from_import",
          "module": "watchdog.events",
          "name": "FileSystemEventHandler",
          "alias": null,
          "line": 17
        },
        {
          "type": "from_import",
          "module": "watchdog.events",
          "name": "FileSystemEvent",
          "alias": null,
          "line": 17
        },
        {
          "type": "from_import",
          "module": "watchdog.observers.polling",
          "name": "PollingObserver",
          "alias": null,
          "line": 21
        },
        {
          "type": "from_import",
          "module": "watchdog.observers",
          "name": "Observer",
          "alias": "ObserverType",
          "line": 27
        },
        {
          "type": "from_import",
          "module": "src.services.event_service",
          "name": "EventService",
          "alias": null,
          "line": 29
        },
        {
          "type": "from_import",
          "module": "src.services.config_service",
          "name": "ConfigService",
          "alias": null,
          "line": 30
        }
      ],
      "function_calls": [
        {
          "caller": "PrintFileHandler.__init__",
          "callee": "__init__",
          "line": 56,
          "type": "attribute"
        },
        {
          "caller": "PrintFileHandler.__init__",
          "callee": "super",
          "line": 56,
          "type": "direct"
        },
        {
          "caller": "PrintFileHandler.should_process_file",
          "callee": "Path",
          "line": 63,
          "type": "direct"
        },
        {
          "caller": "PrintFileHandler.should_process_file",
          "callee": "lower",
          "line": 66,
          "type": "attribute"
        },
        {
          "caller": "PrintFileHandler.should_process_file",
          "callee": "startswith",
          "line": 71,
          "type": "attribute"
        },
        {
          "caller": "PrintFileHandler.should_process_file",
          "callee": "endswith",
          "line": 72,
          "type": "attribute"
        },
        {
          "caller": "PrintFileHandler.should_process_file",
          "callee": "startswith",
          "line": 74,
          "type": "attribute"
        },
        {
          "caller": "PrintFileHandler.should_process_file",
          "callee": "startswith",
          "line": 75,
          "type": "attribute"
        },
        {
          "caller": "PrintFileHandler._debounce_event",
          "callee": "now",
          "line": 82,
          "type": "attribute"
        },
        {
          "caller": "PrintFileHandler._debounce_event",
          "callee": "total_seconds",
          "line": 86,
          "type": "attribute"
        },
        {
          "caller": "PrintFileHandler.on_created",
          "callee": "should_process_file",
          "line": 94,
          "type": "attribute"
        },
        {
          "caller": "PrintFileHandler.on_created",
          "callee": "_debounce_event",
          "line": 95,
          "type": "attribute"
        },
        {
          "caller": "PrintFileHandler.on_created",
          "callee": "info",
          "line": 96,
          "type": "attribute"
        },
        {
          "caller": "PrintFileHandler.on_created",
          "callee": "create_task",
          "line": 97,
          "type": "attribute"
        },
        {
          "caller": "PrintFileHandler.on_created",
          "callee": "_handle_file_created",
          "line": 97,
          "type": "attribute"
        },
        {
          "caller": "PrintFileHandler.on_modified",
          "callee": "should_process_file",
          "line": 101,
          "type": "attribute"
        },
        {
          "caller": "PrintFileHandler.on_modified",
          "callee": "_debounce_event",
          "line": 102,
          "type": "attribute"
        },
        {
          "caller": "PrintFileHandler.on_modified",
          "callee": "debug",
          "line": 103,
          "type": "attribute"
        },
        {
          "caller": "PrintFileHandler.on_modified",
          "callee": "create_task",
          "line": 104,
          "type": "attribute"
        },
        {
          "caller": "PrintFileHandler.on_modified",
          "callee": "_handle_file_modified",
          "line": 104,
          "type": "attribute"
        },
        {
          "caller": "PrintFileHandler.on_deleted",
          "callee": "should_process_file",
          "line": 108,
          "type": "attribute"
        },
        {
          "caller": "PrintFileHandler.on_deleted",
          "callee": "info",
          "line": 109,
          "type": "attribute"
        },
        {
          "caller": "PrintFileHandler.on_deleted",
          "callee": "create_task",
          "line": 110,
          "type": "attribute"
        },
        {
          "caller": "PrintFileHandler.on_deleted",
          "callee": "_handle_file_deleted",
          "line": 110,
          "type": "attribute"
        },
        {
          "caller": "PrintFileHandler.on_moved",
          "callee": "hasattr",
          "line": 114,
          "type": "direct"
        },
        {
          "caller": "PrintFileHandler.on_moved",
          "callee": "should_process_file",
          "line": 115,
          "type": "attribute"
        },
        {
          "caller": "PrintFileHandler.on_moved",
          "callee": "info",
          "line": 116,
          "type": "attribute"
        },
        {
          "caller": "PrintFileHandler.on_moved",
          "callee": "create_task",
          "line": 118,
          "type": "attribute"
        },
        {
          "caller": "PrintFileHandler.on_moved",
          "callee": "_handle_file_moved",
          "line": 119,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService.__init__",
          "callee": "Lock",
          "line": 136,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService.__init__",
          "callee": "PrintFileHandler",
          "line": 139,
          "type": "direct"
        },
        {
          "caller": "FileWatcherService.start",
          "callee": "warning",
          "line": 144,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService.start",
          "callee": "debug",
          "line": 147,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService.start",
          "callee": "type",
          "line": 147,
          "type": "direct"
        },
        {
          "caller": "FileWatcherService.start",
          "callee": "type",
          "line": 147,
          "type": "direct"
        },
        {
          "caller": "FileWatcherService.start",
          "callee": "is_watch_folders_enabled",
          "line": 149,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService.start",
          "callee": "info",
          "line": 150,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService.start",
          "callee": "Observer",
          "line": 156,
          "type": "direct"
        },
        {
          "caller": "FileWatcherService.start",
          "callee": "warning",
          "line": 158,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService.start",
          "callee": "str",
          "line": 158,
          "type": "direct"
        },
        {
          "caller": "FileWatcherService.start",
          "callee": "WindowsObserver",
          "line": 160,
          "type": "direct"
        },
        {
          "caller": "FileWatcherService.start",
          "callee": "get_watch_folders",
          "line": 163,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService.start",
          "callee": "is_recursive_watching_enabled",
          "line": 164,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService.start",
          "callee": "_add_watch_folder",
          "line": 167,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService.start",
          "callee": "start",
          "line": 173,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService.start",
          "callee": "info",
          "line": 176,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService.start",
          "callee": "len",
          "line": 177,
          "type": "direct"
        },
        {
          "caller": "FileWatcherService.start",
          "callee": "type",
          "line": 179,
          "type": "direct"
        },
        {
          "caller": "FileWatcherService.start",
          "callee": "warning",
          "line": 181,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService.start",
          "callee": "str",
          "line": 182,
          "type": "direct"
        },
        {
          "caller": "FileWatcherService.start",
          "callee": "type",
          "line": 183,
          "type": "direct"
        },
        {
          "caller": "FileWatcherService.start",
          "callee": "stop",
          "line": 188,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService.start",
          "callee": "_initial_scan",
          "line": 195,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService.start",
          "callee": "error",
          "line": 198,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService.start",
          "callee": "str",
          "line": 198,
          "type": "direct"
        },
        {
          "caller": "FileWatcherService.start",
          "callee": "info",
          "line": 201,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService.stop",
          "callee": "stop",
          "line": 213,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService.stop",
          "callee": "hasattr",
          "line": 216,
          "type": "direct"
        },
        {
          "caller": "FileWatcherService.stop",
          "callee": "is_alive",
          "line": 216,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService.stop",
          "callee": "get_running_loop",
          "line": 218,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService.stop",
          "callee": "run_in_executor",
          "line": 219,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService.stop",
          "callee": "join",
          "line": 221,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService.stop",
          "callee": "hasattr",
          "line": 225,
          "type": "direct"
        },
        {
          "caller": "FileWatcherService.stop",
          "callee": "is_alive",
          "line": 225,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService.stop",
          "callee": "warning",
          "line": 226,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService.stop",
          "callee": "warning",
          "line": 229,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService.stop",
          "callee": "str",
          "line": 229,
          "type": "direct"
        },
        {
          "caller": "FileWatcherService.stop",
          "callee": "clear",
          "line": 233,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService.stop",
          "callee": "info",
          "line": 236,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService.stop",
          "callee": "error",
          "line": 239,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService.stop",
          "callee": "str",
          "line": 239,
          "type": "direct"
        },
        {
          "caller": "FileWatcherService._add_watch_folder",
          "callee": "Path",
          "line": 244,
          "type": "direct"
        },
        {
          "caller": "FileWatcherService._add_watch_folder",
          "callee": "validate_watch_folder",
          "line": 247,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService._add_watch_folder",
          "callee": "str",
          "line": 247,
          "type": "direct"
        },
        {
          "caller": "FileWatcherService._add_watch_folder",
          "callee": "error",
          "line": 249,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService._add_watch_folder",
          "callee": "schedule",
          "line": 258,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService._add_watch_folder",
          "callee": "str",
          "line": 260,
          "type": "direct"
        },
        {
          "caller": "FileWatcherService._add_watch_folder",
          "callee": "info",
          "line": 263,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService._add_watch_folder",
          "callee": "info",
          "line": 266,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService._add_watch_folder",
          "callee": "error",
          "line": 277,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService._add_watch_folder",
          "callee": "str",
          "line": 278,
          "type": "direct"
        },
        {
          "caller": "FileWatcherService._initial_scan",
          "callee": "info",
          "line": 282,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService._initial_scan",
          "callee": "items",
          "line": 284,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService._initial_scan",
          "callee": "_scan_folder",
          "line": 286,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService._initial_scan",
          "callee": "error",
          "line": 289,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService._initial_scan",
          "callee": "str",
          "line": 290,
          "type": "direct"
        },
        {
          "caller": "FileWatcherService._initial_scan",
          "callee": "info",
          "line": 292,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService._initial_scan",
          "callee": "len",
          "line": 292,
          "type": "direct"
        },
        {
          "caller": "FileWatcherService._scan_folder",
          "callee": "glob",
          "line": 302,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService._scan_folder",
          "callee": "is_file",
          "line": 303,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService._scan_folder",
          "callee": "should_process_file",
          "line": 303,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService._scan_folder",
          "callee": "str",
          "line": 303,
          "type": "direct"
        },
        {
          "caller": "FileWatcherService._scan_folder",
          "callee": "_process_discovered_file",
          "line": 304,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService._scan_folder",
          "callee": "str",
          "line": 304,
          "type": "direct"
        },
        {
          "caller": "FileWatcherService._scan_folder",
          "callee": "error",
          "line": 307,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService._scan_folder",
          "callee": "str",
          "line": 308,
          "type": "direct"
        },
        {
          "caller": "FileWatcherService._scan_folder",
          "callee": "str",
          "line": 308,
          "type": "direct"
        },
        {
          "caller": "FileWatcherService._process_discovered_file",
          "callee": "Path",
          "line": 313,
          "type": "direct"
        },
        {
          "caller": "FileWatcherService._process_discovered_file",
          "callee": "exists",
          "line": 315,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService._process_discovered_file",
          "callee": "stat",
          "line": 318,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService._process_discovered_file",
          "callee": "_find_watch_folder_for_file",
          "line": 321,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService._process_discovered_file",
          "callee": "warning",
          "line": 323,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService._process_discovered_file",
          "callee": "Path",
          "line": 327,
          "type": "direct"
        },
        {
          "caller": "FileWatcherService._process_discovered_file",
          "callee": "relative_to",
          "line": 329,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService._process_discovered_file",
          "callee": "Path",
          "line": 331,
          "type": "direct"
        },
        {
          "caller": "FileWatcherService._process_discovered_file",
          "callee": "abs",
          "line": 334,
          "type": "direct"
        },
        {
          "caller": "FileWatcherService._process_discovered_file",
          "callee": "hash",
          "line": 334,
          "type": "direct"
        },
        {
          "caller": "FileWatcherService._process_discovered_file",
          "callee": "LocalFile",
          "line": 337,
          "type": "direct"
        },
        {
          "caller": "FileWatcherService._process_discovered_file",
          "callee": "str",
          "line": 340,
          "type": "direct"
        },
        {
          "caller": "FileWatcherService._process_discovered_file",
          "callee": "lower",
          "line": 342,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService._process_discovered_file",
          "callee": "fromtimestamp",
          "line": 343,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService._process_discovered_file",
          "callee": "str",
          "line": 345,
          "type": "direct"
        },
        {
          "caller": "FileWatcherService._process_discovered_file",
          "callee": "str",
          "line": 357,
          "type": "direct"
        },
        {
          "caller": "FileWatcherService._process_discovered_file",
          "callee": "isoformat",
          "line": 358,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService._process_discovered_file",
          "callee": "now",
          "line": 358,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService._process_discovered_file",
          "callee": "add_file_to_library",
          "line": 362,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService._process_discovered_file",
          "callee": "info",
          "line": 368,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService._process_discovered_file",
          "callee": "error",
          "line": 373,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService._process_discovered_file",
          "callee": "str",
          "line": 375,
          "type": "direct"
        },
        {
          "caller": "FileWatcherService._process_discovered_file",
          "callee": "_emit_file_event",
          "line": 379,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService._process_discovered_file",
          "callee": "debug",
          "line": 381,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService._process_discovered_file",
          "callee": "error",
          "line": 385,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService._process_discovered_file",
          "callee": "str",
          "line": 386,
          "type": "direct"
        },
        {
          "caller": "FileWatcherService._find_watch_folder_for_file",
          "callee": "Path",
          "line": 390,
          "type": "direct"
        },
        {
          "caller": "FileWatcherService._find_watch_folder_for_file",
          "callee": "keys",
          "line": 392,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService._find_watch_folder_for_file",
          "callee": "Path",
          "line": 393,
          "type": "direct"
        },
        {
          "caller": "FileWatcherService._find_watch_folder_for_file",
          "callee": "relative_to",
          "line": 396,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService._handle_file_created",
          "callee": "_process_discovered_file",
          "line": 405,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService._handle_file_modified",
          "callee": "values",
          "line": 410,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService._handle_file_modified",
          "callee": "Path",
          "line": 414,
          "type": "direct"
        },
        {
          "caller": "FileWatcherService._handle_file_modified",
          "callee": "exists",
          "line": 415,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService._handle_file_modified",
          "callee": "stat",
          "line": 416,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService._handle_file_modified",
          "callee": "fromtimestamp",
          "line": 418,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService._handle_file_modified",
          "callee": "_emit_file_event",
          "line": 420,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService._handle_file_modified",
          "callee": "debug",
          "line": 422,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService._handle_file_modified",
          "callee": "error",
          "line": 425,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService._handle_file_modified",
          "callee": "str",
          "line": 426,
          "type": "direct"
        },
        {
          "caller": "FileWatcherService._handle_file_deleted",
          "callee": "list",
          "line": 432,
          "type": "direct"
        },
        {
          "caller": "FileWatcherService._handle_file_deleted",
          "callee": "items",
          "line": 432,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService._handle_file_deleted",
          "callee": "_emit_file_event",
          "line": 436,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService._handle_file_deleted",
          "callee": "debug",
          "line": 438,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService._handle_file_moved",
          "callee": "values",
          "line": 445,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService._handle_file_moved",
          "callee": "Path",
          "line": 448,
          "type": "direct"
        },
        {
          "caller": "FileWatcherService._handle_file_moved",
          "callee": "str",
          "line": 449,
          "type": "direct"
        },
        {
          "caller": "FileWatcherService._handle_file_moved",
          "callee": "_find_watch_folder_for_file",
          "line": 453,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService._handle_file_moved",
          "callee": "Path",
          "line": 455,
          "type": "direct"
        },
        {
          "caller": "FileWatcherService._handle_file_moved",
          "callee": "relative_to",
          "line": 457,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService._handle_file_moved",
          "callee": "str",
          "line": 458,
          "type": "direct"
        },
        {
          "caller": "FileWatcherService._handle_file_moved",
          "callee": "_emit_file_event",
          "line": 462,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService._handle_file_moved",
          "callee": "debug",
          "line": 464,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService._emit_file_event",
          "callee": "isoformat",
          "line": 479,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService._emit_file_event",
          "callee": "emit_event",
          "line": 485,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService._emit_file_event",
          "callee": "error",
          "line": 488,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService._emit_file_event",
          "callee": "str",
          "line": 489,
          "type": "direct"
        },
        {
          "caller": "FileWatcherService.get_local_files",
          "callee": "values",
          "line": 495,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService.get_local_files",
          "callee": "append",
          "line": 496,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService.get_local_files",
          "callee": "isoformat",
          "line": 502,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService.get_watch_status",
          "callee": "list",
          "line": 515,
          "type": "direct"
        },
        {
          "caller": "FileWatcherService.get_watch_status",
          "callee": "keys",
          "line": 515,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService.get_watch_status",
          "callee": "len",
          "line": 516,
          "type": "direct"
        },
        {
          "caller": "FileWatcherService.get_watch_status",
          "callee": "list",
          "line": 517,
          "type": "direct"
        },
        {
          "caller": "FileWatcherService.reload_watch_folders",
          "callee": "warning",
          "line": 523,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService.reload_watch_folders",
          "callee": "stop",
          "line": 528,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService.reload_watch_folders",
          "callee": "start",
          "line": 531,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService.reload_watch_folders",
          "callee": "info",
          "line": 533,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService.reload_watch_folders",
          "callee": "error",
          "line": 536,
          "type": "attribute"
        },
        {
          "caller": "FileWatcherService.reload_watch_folders",
          "callee": "str",
          "line": 536,
          "type": "direct"
        }
      ],
      "error": null
    },
    {
      "filepath": "src\\services\\idea_service.py",
      "functions": [
        {
          "name": "__init__",
          "full_name": "IdeaService.__init__",
          "class": "IdeaService",
          "signature": "(self, db: Database)",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 20,
          "line_end": 22,
          "access_level": "dunder",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "create_idea",
          "full_name": "IdeaService.create_idea",
          "class": "IdeaService",
          "signature": "(self, idea_data: Dict[str, Any])",
          "return_type": "Optional[str]",
          "decorators": [],
          "docstring": "Create a new idea.",
          "line_start": 24,
          "line_end": 61,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_idea",
          "full_name": "IdeaService.get_idea",
          "class": "IdeaService",
          "signature": "(self, idea_id: str)",
          "return_type": "Optional[Idea]",
          "decorators": [],
          "docstring": "Get idea by ID.",
          "line_start": 63,
          "line_end": 86,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "list_ideas",
          "full_name": "IdeaService.list_ideas",
          "class": "IdeaService",
          "signature": "(self, filters: Optional[Dict[str, Any]], page: int, page_size: int)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "List ideas with filtering and pagination.",
          "line_start": 88,
          "line_end": 132,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "update_idea",
          "full_name": "IdeaService.update_idea",
          "class": "IdeaService",
          "signature": "(self, idea_id: str, updates: Dict[str, Any])",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Update an idea.",
          "line_start": 134,
          "line_end": 163,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "delete_idea",
          "full_name": "IdeaService.delete_idea",
          "class": "IdeaService",
          "signature": "(self, idea_id: str)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Delete an idea.",
          "line_start": 165,
          "line_end": 175,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "update_idea_status",
          "full_name": "IdeaService.update_idea_status",
          "class": "IdeaService",
          "signature": "(self, idea_id: str, status: str)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Update idea status.",
          "line_start": 177,
          "line_end": 187,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_all_tags",
          "full_name": "IdeaService.get_all_tags",
          "class": "IdeaService",
          "signature": "(self)",
          "return_type": "List[Dict[str, Any]]",
          "decorators": [],
          "docstring": "Get all available tags with usage counts.",
          "line_start": 189,
          "line_end": 195,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_statistics",
          "full_name": "IdeaService.get_statistics",
          "class": "IdeaService",
          "signature": "(self)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Get idea statistics.",
          "line_start": 197,
          "line_end": 203,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "import_from_url",
          "full_name": "IdeaService.import_from_url",
          "class": "IdeaService",
          "signature": "(self, url: str, additional_data: Optional[Dict[str, Any]])",
          "return_type": "Optional[str]",
          "decorators": [],
          "docstring": "Import an idea from an external URL.",
          "line_start": 205,
          "line_end": 231,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_extract_url_metadata",
          "full_name": "IdeaService._extract_url_metadata",
          "class": "IdeaService",
          "signature": "(self, url: str)",
          "return_type": "Optional[Dict[str, Any]]",
          "decorators": [],
          "docstring": "Extract metadata from external platform URLs.",
          "line_start": 233,
          "line_end": 239,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "cache_trending",
          "full_name": "IdeaService.cache_trending",
          "class": "IdeaService",
          "signature": "(self, platform: str, models: List[Dict[str, Any]], cache_duration_hours: int)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Cache trending models from external platforms.",
          "line_start": 242,
          "line_end": 270,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_trending",
          "full_name": "IdeaService.get_trending",
          "class": "IdeaService",
          "signature": "(self, platform: Optional[str], category: Optional[str])",
          "return_type": "List[Dict[str, Any]]",
          "decorators": [],
          "docstring": "Get trending models from cache.",
          "line_start": 272,
          "line_end": 281,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "save_trending_as_idea",
          "full_name": "IdeaService.save_trending_as_idea",
          "class": "IdeaService",
          "signature": "(self, trending_id: str, additional_data: Optional[Dict[str, Any]])",
          "return_type": "Optional[str]",
          "decorators": [],
          "docstring": "Save a trending model as a personal idea.",
          "line_start": 283,
          "line_end": 318,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "cleanup_expired_trending",
          "full_name": "IdeaService.cleanup_expired_trending",
          "class": "IdeaService",
          "signature": "(self)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Clean up expired trending cache entries.",
          "line_start": 320,
          "line_end": 330,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "search_ideas",
          "full_name": "IdeaService.search_ideas",
          "class": "IdeaService",
          "signature": "(self, query: str, filters: Optional[Dict[str, Any]])",
          "return_type": "List[Dict[str, Any]]",
          "decorators": [],
          "docstring": "Search ideas by title and description.",
          "line_start": 332,
          "line_end": 353,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "uuid",
          "alias": null,
          "line": 4
        },
        {
          "type": "import",
          "module": "json",
          "alias": null,
          "line": 5
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Optional",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "List",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Dict",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Any",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "timedelta",
          "alias": null,
          "line": 7
        },
        {
          "type": "import",
          "module": "structlog",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "src.database.database",
          "name": "Database",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "src.models.idea",
          "name": "Idea",
          "alias": null,
          "line": 11
        },
        {
          "type": "from_import",
          "module": "src.models.idea",
          "name": "TrendingItem",
          "alias": null,
          "line": 11
        },
        {
          "type": "from_import",
          "module": "src.services.url_parser_service",
          "name": "UrlParserService",
          "alias": null,
          "line": 12
        }
      ],
      "function_calls": [
        {
          "caller": "IdeaService.__init__",
          "callee": "UrlParserService",
          "line": 22,
          "type": "direct"
        },
        {
          "caller": "IdeaService.create_idea",
          "callee": "str",
          "line": 29,
          "type": "direct"
        },
        {
          "caller": "IdeaService.create_idea",
          "callee": "uuid4",
          "line": 29,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.create_idea",
          "callee": "get",
          "line": 32,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.create_idea",
          "callee": "ValueError",
          "line": 33,
          "type": "direct"
        },
        {
          "caller": "IdeaService.create_idea",
          "callee": "from_dict",
          "line": 36,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.create_idea",
          "callee": "validate",
          "line": 37,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.create_idea",
          "callee": "ValueError",
          "line": 38,
          "type": "direct"
        },
        {
          "caller": "IdeaService.create_idea",
          "callee": "to_dict",
          "line": 41,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.create_idea",
          "callee": "get",
          "line": 44,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.create_idea",
          "callee": "dumps",
          "line": 45,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.create_idea",
          "callee": "create_idea",
          "line": 48,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.create_idea",
          "callee": "RuntimeError",
          "line": 50,
          "type": "direct"
        },
        {
          "caller": "IdeaService.create_idea",
          "callee": "get",
          "line": 53,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.create_idea",
          "callee": "add_idea_tags",
          "line": 54,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.create_idea",
          "callee": "info",
          "line": 56,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.create_idea",
          "callee": "error",
          "line": 60,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.create_idea",
          "callee": "str",
          "line": 60,
          "type": "direct"
        },
        {
          "caller": "IdeaService.get_idea",
          "callee": "get_idea",
          "line": 67,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.get_idea",
          "callee": "get",
          "line": 72,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.get_idea",
          "callee": "loads",
          "line": 74,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.get_idea",
          "callee": "get_idea_tags",
          "line": 79,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.get_idea",
          "callee": "from_dict",
          "line": 82,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.get_idea",
          "callee": "error",
          "line": 85,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.get_idea",
          "callee": "str",
          "line": 85,
          "type": "direct"
        },
        {
          "caller": "IdeaService.list_ideas",
          "callee": "list_ideas",
          "line": 96,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.list_ideas",
          "callee": "get",
          "line": 97,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.list_ideas",
          "callee": "get",
          "line": 98,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.list_ideas",
          "callee": "get",
          "line": 99,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.list_ideas",
          "callee": "get",
          "line": 100,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.list_ideas",
          "callee": "get",
          "line": 108,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.list_ideas",
          "callee": "loads",
          "line": 110,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.list_ideas",
          "callee": "get_idea_tags",
          "line": 115,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.list_ideas",
          "callee": "append",
          "line": 118,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.list_ideas",
          "callee": "from_dict",
          "line": 118,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.list_ideas",
          "callee": "to_dict",
          "line": 121,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.list_ideas",
          "callee": "len",
          "line": 127,
          "type": "direct"
        },
        {
          "caller": "IdeaService.list_ideas",
          "callee": "error",
          "line": 131,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.list_ideas",
          "callee": "str",
          "line": 131,
          "type": "direct"
        },
        {
          "caller": "IdeaService.update_idea",
          "callee": "dumps",
          "line": 139,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.update_idea",
          "callee": "pop",
          "line": 142,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.update_idea",
          "callee": "update_idea",
          "line": 145,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.update_idea",
          "callee": "get_idea_tags",
          "line": 152,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.update_idea",
          "callee": "remove_idea_tags",
          "line": 154,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.update_idea",
          "callee": "add_idea_tags",
          "line": 156,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.update_idea",
          "callee": "info",
          "line": 158,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.update_idea",
          "callee": "error",
          "line": 162,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.update_idea",
          "callee": "str",
          "line": 162,
          "type": "direct"
        },
        {
          "caller": "IdeaService.delete_idea",
          "callee": "delete_idea",
          "line": 168,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.delete_idea",
          "callee": "info",
          "line": 170,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.delete_idea",
          "callee": "error",
          "line": 174,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.delete_idea",
          "callee": "str",
          "line": 174,
          "type": "direct"
        },
        {
          "caller": "IdeaService.update_idea_status",
          "callee": "update_idea_status",
          "line": 180,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.update_idea_status",
          "callee": "info",
          "line": 182,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.update_idea_status",
          "callee": "error",
          "line": 186,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.update_idea_status",
          "callee": "str",
          "line": 186,
          "type": "direct"
        },
        {
          "caller": "IdeaService.get_all_tags",
          "callee": "get_all_tags",
          "line": 192,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.get_all_tags",
          "callee": "error",
          "line": 194,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.get_all_tags",
          "callee": "str",
          "line": 194,
          "type": "direct"
        },
        {
          "caller": "IdeaService.get_statistics",
          "callee": "get_idea_statistics",
          "line": 200,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.get_statistics",
          "callee": "error",
          "line": 202,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.get_statistics",
          "callee": "str",
          "line": 202,
          "type": "direct"
        },
        {
          "caller": "IdeaService.import_from_url",
          "callee": "_extract_url_metadata",
          "line": 209,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.import_from_url",
          "callee": "ValueError",
          "line": 211,
          "type": "direct"
        },
        {
          "caller": "IdeaService.import_from_url",
          "callee": "get",
          "line": 215,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.import_from_url",
          "callee": "get",
          "line": 216,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.import_from_url",
          "callee": "get",
          "line": 217,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.import_from_url",
          "callee": "get",
          "line": 219,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.import_from_url",
          "callee": "update",
          "line": 225,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.import_from_url",
          "callee": "create_idea",
          "line": 227,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.import_from_url",
          "callee": "error",
          "line": 230,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.import_from_url",
          "callee": "str",
          "line": 230,
          "type": "direct"
        },
        {
          "caller": "IdeaService._extract_url_metadata",
          "callee": "parse_url",
          "line": 236,
          "type": "attribute"
        },
        {
          "caller": "IdeaService._extract_url_metadata",
          "callee": "error",
          "line": 238,
          "type": "attribute"
        },
        {
          "caller": "IdeaService._extract_url_metadata",
          "callee": "str",
          "line": 238,
          "type": "direct"
        },
        {
          "caller": "IdeaService.cache_trending",
          "callee": "now",
          "line": 246,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.cache_trending",
          "callee": "timedelta",
          "line": 246,
          "type": "direct"
        },
        {
          "caller": "IdeaService.cache_trending",
          "callee": "get",
          "line": 250,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.cache_trending",
          "callee": "uuid4",
          "line": 250,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.cache_trending",
          "callee": "str",
          "line": 252,
          "type": "direct"
        },
        {
          "caller": "IdeaService.cache_trending",
          "callee": "get",
          "line": 252,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.cache_trending",
          "callee": "uuid4",
          "line": 252,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.cache_trending",
          "callee": "get",
          "line": 255,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.cache_trending",
          "callee": "get",
          "line": 256,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.cache_trending",
          "callee": "get",
          "line": 257,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.cache_trending",
          "callee": "get",
          "line": 258,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.cache_trending",
          "callee": "get",
          "line": 259,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.cache_trending",
          "callee": "isoformat",
          "line": 260,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.cache_trending",
          "callee": "upsert_trending",
          "line": 263,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.cache_trending",
          "callee": "info",
          "line": 265,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.cache_trending",
          "callee": "len",
          "line": 265,
          "type": "direct"
        },
        {
          "caller": "IdeaService.cache_trending",
          "callee": "error",
          "line": 269,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.cache_trending",
          "callee": "str",
          "line": 269,
          "type": "direct"
        },
        {
          "caller": "IdeaService.get_trending",
          "callee": "get_trending",
          "line": 276,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.get_trending",
          "callee": "to_dict",
          "line": 277,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.get_trending",
          "callee": "from_dict",
          "line": 277,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.get_trending",
          "callee": "error",
          "line": 280,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.get_trending",
          "callee": "str",
          "line": 280,
          "type": "direct"
        },
        {
          "caller": "IdeaService.save_trending_as_idea",
          "callee": "get_trending",
          "line": 288,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.save_trending_as_idea",
          "callee": "next",
          "line": 289,
          "type": "direct"
        },
        {
          "caller": "IdeaService.save_trending_as_idea",
          "callee": "ValueError",
          "line": 292,
          "type": "direct"
        },
        {
          "caller": "IdeaService.save_trending_as_idea",
          "callee": "get",
          "line": 300,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.save_trending_as_idea",
          "callee": "get",
          "line": 304,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.save_trending_as_idea",
          "callee": "get",
          "line": 305,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.save_trending_as_idea",
          "callee": "get",
          "line": 306,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.save_trending_as_idea",
          "callee": "update",
          "line": 312,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.save_trending_as_idea",
          "callee": "create_idea",
          "line": 314,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.save_trending_as_idea",
          "callee": "error",
          "line": 317,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.save_trending_as_idea",
          "callee": "str",
          "line": 317,
          "type": "direct"
        },
        {
          "caller": "IdeaService.cleanup_expired_trending",
          "callee": "clean_expired_trending",
          "line": 323,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.cleanup_expired_trending",
          "callee": "info",
          "line": 325,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.cleanup_expired_trending",
          "callee": "error",
          "line": 329,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.cleanup_expired_trending",
          "callee": "str",
          "line": 329,
          "type": "direct"
        },
        {
          "caller": "IdeaService.search_ideas",
          "callee": "list_ideas",
          "line": 336,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.search_ideas",
          "callee": "lower",
          "line": 340,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.search_ideas",
          "callee": "lower",
          "line": 344,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.search_ideas",
          "callee": "get",
          "line": 345,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.search_ideas",
          "callee": "lower",
          "line": 345,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.search_ideas",
          "callee": "any",
          "line": 346,
          "type": "direct"
        },
        {
          "caller": "IdeaService.search_ideas",
          "callee": "lower",
          "line": 346,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.search_ideas",
          "callee": "get",
          "line": 346,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.search_ideas",
          "callee": "append",
          "line": 347,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.search_ideas",
          "callee": "error",
          "line": 352,
          "type": "attribute"
        },
        {
          "caller": "IdeaService.search_ideas",
          "callee": "str",
          "line": 352,
          "type": "direct"
        }
      ],
      "error": null
    },
    {
      "filepath": "src\\services\\job_service.py",
      "functions": [
        {
          "name": "__init__",
          "full_name": "JobService.__init__",
          "class": "JobService",
          "signature": "(self, database: Database, event_service: EventService)",
          "return_type": "",
          "decorators": [],
          "docstring": "Initialize job service.",
          "line_start": 20,
          "line_end": 23,
          "access_level": "dunder",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_jobs",
          "full_name": "JobService.get_jobs",
          "class": "JobService",
          "signature": "(self, limit: int, offset: int)",
          "return_type": "List[Dict[str, Any]]",
          "decorators": [],
          "docstring": "Get list of print jobs.",
          "line_start": 25,
          "line_end": 78,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "list_jobs",
          "full_name": "JobService.list_jobs",
          "class": "JobService",
          "signature": "(self, printer_id, status, is_business, limit: int, offset: int)",
          "return_type": "List[Dict[str, Any]]",
          "decorators": [],
          "docstring": "List jobs with optional filtering.",
          "line_start": 80,
          "line_end": 140,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_job",
          "full_name": "JobService.get_job",
          "class": "JobService",
          "signature": "(self, job_id)",
          "return_type": "Optional[Dict[str, Any]]",
          "decorators": [],
          "docstring": "Get specific job by ID.",
          "line_start": 142,
          "line_end": 165,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "delete_job",
          "full_name": "JobService.delete_job",
          "class": "JobService",
          "signature": "(self, job_id)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Delete a job record.",
          "line_start": 167,
          "line_end": 191,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_active_jobs",
          "full_name": "JobService.get_active_jobs",
          "class": "JobService",
          "signature": "(self)",
          "return_type": "List[Dict[str, Any]]",
          "decorators": [],
          "docstring": "Get currently active/running jobs.",
          "line_start": 193,
          "line_end": 228,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "create_job",
          "full_name": "JobService.create_job",
          "class": "JobService",
          "signature": "(self, job_data: Dict[str, Any])",
          "return_type": "str",
          "decorators": [],
          "docstring": "Create a new print job.",
          "line_start": 230,
          "line_end": 285,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "update_job_status",
          "full_name": "JobService.update_job_status",
          "class": "JobService",
          "signature": "(self, job_id: str, status: str, data: Dict[str, Any])",
          "return_type": "",
          "decorators": [],
          "docstring": "Update job status.",
          "line_start": 287,
          "line_end": 337,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_job_statistics",
          "full_name": "JobService.get_job_statistics",
          "class": "JobService",
          "signature": "(self)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Get job statistics for dashboard.",
          "line_start": 339,
          "line_end": 389,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_jobs_by_date_range",
          "full_name": "JobService.get_jobs_by_date_range",
          "class": "JobService",
          "signature": "(self, start_date: str, end_date: str, is_business: Optional[bool])",
          "return_type": "List[Dict[str, Any]]",
          "decorators": [],
          "docstring": "Get jobs within a date range for reporting purposes.",
          "line_start": 391,
          "line_end": 424,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_business_jobs",
          "full_name": "JobService.get_business_jobs",
          "class": "JobService",
          "signature": "(self, limit: int, offset: int)",
          "return_type": "List[Dict[str, Any]]",
          "decorators": [],
          "docstring": "Get business jobs specifically.",
          "line_start": 426,
          "line_end": 428,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_private_jobs",
          "full_name": "JobService.get_private_jobs",
          "class": "JobService",
          "signature": "(self, limit: int, offset: int)",
          "return_type": "List[Dict[str, Any]]",
          "decorators": [],
          "docstring": "Get private jobs specifically.",
          "line_start": 430,
          "line_end": 432,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "calculate_material_costs",
          "full_name": "JobService.calculate_material_costs",
          "class": "JobService",
          "signature": "(self, job_id: str, material_cost_per_gram: float, power_cost_per_hour: float)",
          "return_type": "Dict[str, float]",
          "decorators": [],
          "docstring": "Calculate material and power costs for a job.",
          "line_start": 434,
          "line_end": 465,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_printer_jobs",
          "full_name": "JobService.get_printer_jobs",
          "class": "JobService",
          "signature": "(self, printer_id: str, limit: int, offset: int)",
          "return_type": "List[Dict[str, Any]]",
          "decorators": [],
          "docstring": "Get all jobs for a specific printer.",
          "line_start": 467,
          "line_end": 469,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "update_job_progress",
          "full_name": "JobService.update_job_progress",
          "class": "JobService",
          "signature": "(self, job_id: str, progress: int, material_used: Optional[float])",
          "return_type": "",
          "decorators": [],
          "docstring": "Update job progress and optionally material usage.",
          "line_start": 471,
          "line_end": 499,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "from_import",
          "module": "typing",
          "name": "List",
          "alias": null,
          "line": 5
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Dict",
          "alias": null,
          "line": 5
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Any",
          "alias": null,
          "line": 5
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Optional",
          "alias": null,
          "line": 5
        },
        {
          "type": "import",
          "module": "json",
          "alias": null,
          "line": 6
        },
        {
          "type": "import",
          "module": "uuid",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 8
        },
        {
          "type": "import",
          "module": "structlog",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "src.database.database",
          "name": "Database",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "src.services.event_service",
          "name": "EventService",
          "alias": null,
          "line": 11
        },
        {
          "type": "from_import",
          "module": "src.models.job",
          "name": "Job",
          "alias": null,
          "line": 12
        },
        {
          "type": "from_import",
          "module": "src.models.job",
          "name": "JobStatus",
          "alias": null,
          "line": 12
        },
        {
          "type": "from_import",
          "module": "src.models.job",
          "name": "JobCreate",
          "alias": null,
          "line": 12
        },
        {
          "type": "from_import",
          "module": "src.models.job",
          "name": "JobUpdate",
          "alias": null,
          "line": 12
        }
      ],
      "function_calls": [
        {
          "caller": "JobService.get_jobs",
          "callee": "list_jobs",
          "line": 28,
          "type": "attribute"
        },
        {
          "caller": "JobService.get_jobs",
          "callee": "get",
          "line": 41,
          "type": "attribute"
        },
        {
          "caller": "JobService.get_jobs",
          "callee": "error",
          "line": 42,
          "type": "attribute"
        },
        {
          "caller": "JobService.get_jobs",
          "callee": "get",
          "line": 43,
          "type": "attribute"
        },
        {
          "caller": "JobService.get_jobs",
          "callee": "get",
          "line": 44,
          "type": "attribute"
        },
        {
          "caller": "JobService.get_jobs",
          "callee": "get",
          "line": 50,
          "type": "attribute"
        },
        {
          "caller": "JobService.get_jobs",
          "callee": "loads",
          "line": 51,
          "type": "attribute"
        },
        {
          "caller": "JobService.get_jobs",
          "callee": "get",
          "line": 55,
          "type": "attribute"
        },
        {
          "caller": "JobService.get_jobs",
          "callee": "fromisoformat",
          "line": 56,
          "type": "attribute"
        },
        {
          "caller": "JobService.get_jobs",
          "callee": "Job",
          "line": 58,
          "type": "direct"
        },
        {
          "caller": "JobService.get_jobs",
          "callee": "append",
          "line": 59,
          "type": "attribute"
        },
        {
          "caller": "JobService.get_jobs",
          "callee": "dict",
          "line": 59,
          "type": "attribute"
        },
        {
          "caller": "JobService.get_jobs",
          "callee": "error",
          "line": 61,
          "type": "attribute"
        },
        {
          "caller": "JobService.get_jobs",
          "callee": "get",
          "line": 62,
          "type": "attribute"
        },
        {
          "caller": "JobService.get_jobs",
          "callee": "str",
          "line": 63,
          "type": "direct"
        },
        {
          "caller": "JobService.get_jobs",
          "callee": "type",
          "line": 64,
          "type": "direct"
        },
        {
          "caller": "JobService.get_jobs",
          "callee": "warning",
          "line": 69,
          "type": "attribute"
        },
        {
          "caller": "JobService.get_jobs",
          "callee": "len",
          "line": 71,
          "type": "direct"
        },
        {
          "caller": "JobService.get_jobs",
          "callee": "info",
          "line": 73,
          "type": "attribute"
        },
        {
          "caller": "JobService.get_jobs",
          "callee": "len",
          "line": 73,
          "type": "direct"
        },
        {
          "caller": "JobService.get_jobs",
          "callee": "len",
          "line": 73,
          "type": "direct"
        },
        {
          "caller": "JobService.get_jobs",
          "callee": "error",
          "line": 77,
          "type": "attribute"
        },
        {
          "caller": "JobService.get_jobs",
          "callee": "str",
          "line": 77,
          "type": "direct"
        },
        {
          "caller": "JobService.list_jobs",
          "callee": "list_jobs",
          "line": 84,
          "type": "attribute"
        },
        {
          "caller": "JobService.list_jobs",
          "callee": "get",
          "line": 98,
          "type": "attribute"
        },
        {
          "caller": "JobService.list_jobs",
          "callee": "error",
          "line": 99,
          "type": "attribute"
        },
        {
          "caller": "JobService.list_jobs",
          "callee": "get",
          "line": 100,
          "type": "attribute"
        },
        {
          "caller": "JobService.list_jobs",
          "callee": "get",
          "line": 101,
          "type": "attribute"
        },
        {
          "caller": "JobService.list_jobs",
          "callee": "get",
          "line": 106,
          "type": "attribute"
        },
        {
          "caller": "JobService.list_jobs",
          "callee": "loads",
          "line": 107,
          "type": "attribute"
        },
        {
          "caller": "JobService.list_jobs",
          "callee": "get",
          "line": 111,
          "type": "attribute"
        },
        {
          "caller": "JobService.list_jobs",
          "callee": "fromisoformat",
          "line": 112,
          "type": "attribute"
        },
        {
          "caller": "JobService.list_jobs",
          "callee": "Job",
          "line": 114,
          "type": "direct"
        },
        {
          "caller": "JobService.list_jobs",
          "callee": "append",
          "line": 115,
          "type": "attribute"
        },
        {
          "caller": "JobService.list_jobs",
          "callee": "dict",
          "line": 115,
          "type": "attribute"
        },
        {
          "caller": "JobService.list_jobs",
          "callee": "error",
          "line": 117,
          "type": "attribute"
        },
        {
          "caller": "JobService.list_jobs",
          "callee": "get",
          "line": 118,
          "type": "attribute"
        },
        {
          "caller": "JobService.list_jobs",
          "callee": "str",
          "line": 119,
          "type": "direct"
        },
        {
          "caller": "JobService.list_jobs",
          "callee": "type",
          "line": 120,
          "type": "direct"
        },
        {
          "caller": "JobService.list_jobs",
          "callee": "warning",
          "line": 125,
          "type": "attribute"
        },
        {
          "caller": "JobService.list_jobs",
          "callee": "len",
          "line": 127,
          "type": "direct"
        },
        {
          "caller": "JobService.list_jobs",
          "callee": "info",
          "line": 129,
          "type": "attribute"
        },
        {
          "caller": "JobService.list_jobs",
          "callee": "len",
          "line": 133,
          "type": "direct"
        },
        {
          "caller": "JobService.list_jobs",
          "callee": "error",
          "line": 139,
          "type": "attribute"
        },
        {
          "caller": "JobService.list_jobs",
          "callee": "str",
          "line": 139,
          "type": "direct"
        },
        {
          "caller": "JobService.get_job",
          "callee": "get_job",
          "line": 145,
          "type": "attribute"
        },
        {
          "caller": "JobService.get_job",
          "callee": "str",
          "line": 145,
          "type": "direct"
        },
        {
          "caller": "JobService.get_job",
          "callee": "get",
          "line": 150,
          "type": "attribute"
        },
        {
          "caller": "JobService.get_job",
          "callee": "loads",
          "line": 151,
          "type": "attribute"
        },
        {
          "caller": "JobService.get_job",
          "callee": "get",
          "line": 155,
          "type": "attribute"
        },
        {
          "caller": "JobService.get_job",
          "callee": "fromisoformat",
          "line": 156,
          "type": "attribute"
        },
        {
          "caller": "JobService.get_job",
          "callee": "Job",
          "line": 159,
          "type": "direct"
        },
        {
          "caller": "JobService.get_job",
          "callee": "info",
          "line": 160,
          "type": "attribute"
        },
        {
          "caller": "JobService.get_job",
          "callee": "dict",
          "line": 161,
          "type": "attribute"
        },
        {
          "caller": "JobService.get_job",
          "callee": "error",
          "line": 164,
          "type": "attribute"
        },
        {
          "caller": "JobService.get_job",
          "callee": "str",
          "line": 164,
          "type": "direct"
        },
        {
          "caller": "JobService.delete_job",
          "callee": "get_job",
          "line": 171,
          "type": "attribute"
        },
        {
          "caller": "JobService.delete_job",
          "callee": "str",
          "line": 171,
          "type": "direct"
        },
        {
          "caller": "JobService.delete_job",
          "callee": "warning",
          "line": 173,
          "type": "attribute"
        },
        {
          "caller": "JobService.delete_job",
          "callee": "delete_job",
          "line": 177,
          "type": "attribute"
        },
        {
          "caller": "JobService.delete_job",
          "callee": "str",
          "line": 177,
          "type": "direct"
        },
        {
          "caller": "JobService.delete_job",
          "callee": "info",
          "line": 180,
          "type": "attribute"
        },
        {
          "caller": "JobService.delete_job",
          "callee": "emit_event",
          "line": 182,
          "type": "attribute"
        },
        {
          "caller": "JobService.delete_job",
          "callee": "str",
          "line": 183,
          "type": "direct"
        },
        {
          "caller": "JobService.delete_job",
          "callee": "isoformat",
          "line": 184,
          "type": "attribute"
        },
        {
          "caller": "JobService.delete_job",
          "callee": "now",
          "line": 184,
          "type": "attribute"
        },
        {
          "caller": "JobService.delete_job",
          "callee": "error",
          "line": 190,
          "type": "attribute"
        },
        {
          "caller": "JobService.delete_job",
          "callee": "str",
          "line": 190,
          "type": "direct"
        },
        {
          "caller": "JobService.get_active_jobs",
          "callee": "list_jobs",
          "line": 201,
          "type": "attribute"
        },
        {
          "caller": "JobService.get_active_jobs",
          "callee": "extend",
          "line": 202,
          "type": "attribute"
        },
        {
          "caller": "JobService.get_active_jobs",
          "callee": "get",
          "line": 209,
          "type": "attribute"
        },
        {
          "caller": "JobService.get_active_jobs",
          "callee": "loads",
          "line": 210,
          "type": "attribute"
        },
        {
          "caller": "JobService.get_active_jobs",
          "callee": "get",
          "line": 214,
          "type": "attribute"
        },
        {
          "caller": "JobService.get_active_jobs",
          "callee": "fromisoformat",
          "line": 215,
          "type": "attribute"
        },
        {
          "caller": "JobService.get_active_jobs",
          "callee": "Job",
          "line": 217,
          "type": "direct"
        },
        {
          "caller": "JobService.get_active_jobs",
          "callee": "append",
          "line": 218,
          "type": "attribute"
        },
        {
          "caller": "JobService.get_active_jobs",
          "callee": "dict",
          "line": 218,
          "type": "attribute"
        },
        {
          "caller": "JobService.get_active_jobs",
          "callee": "warning",
          "line": 220,
          "type": "attribute"
        },
        {
          "caller": "JobService.get_active_jobs",
          "callee": "get",
          "line": 220,
          "type": "attribute"
        },
        {
          "caller": "JobService.get_active_jobs",
          "callee": "str",
          "line": 220,
          "type": "direct"
        },
        {
          "caller": "JobService.get_active_jobs",
          "callee": "info",
          "line": 223,
          "type": "attribute"
        },
        {
          "caller": "JobService.get_active_jobs",
          "callee": "len",
          "line": 223,
          "type": "direct"
        },
        {
          "caller": "JobService.get_active_jobs",
          "callee": "error",
          "line": 227,
          "type": "attribute"
        },
        {
          "caller": "JobService.get_active_jobs",
          "callee": "str",
          "line": 227,
          "type": "direct"
        },
        {
          "caller": "JobService.create_job",
          "callee": "isinstance",
          "line": 234,
          "type": "direct"
        },
        {
          "caller": "JobService.create_job",
          "callee": "JobCreate",
          "line": 235,
          "type": "direct"
        },
        {
          "caller": "JobService.create_job",
          "callee": "str",
          "line": 240,
          "type": "direct"
        },
        {
          "caller": "JobService.create_job",
          "callee": "uuid4",
          "line": 240,
          "type": "attribute"
        },
        {
          "caller": "JobService.create_job",
          "callee": "ValueError",
          "line": 242,
          "type": "direct"
        },
        {
          "caller": "JobService.create_job",
          "callee": "dumps",
          "line": 254,
          "type": "attribute"
        },
        {
          "caller": "JobService.create_job",
          "callee": "get",
          "line": 260,
          "type": "attribute"
        },
        {
          "caller": "JobService.create_job",
          "callee": "ValueError",
          "line": 261,
          "type": "direct"
        },
        {
          "caller": "JobService.create_job",
          "callee": "create_job",
          "line": 264,
          "type": "attribute"
        },
        {
          "caller": "JobService.create_job",
          "callee": "info",
          "line": 267,
          "type": "attribute"
        },
        {
          "caller": "JobService.create_job",
          "callee": "emit_event",
          "line": 270,
          "type": "attribute"
        },
        {
          "caller": "JobService.create_job",
          "callee": "isoformat",
          "line": 275,
          "type": "attribute"
        },
        {
          "caller": "JobService.create_job",
          "callee": "now",
          "line": 275,
          "type": "attribute"
        },
        {
          "caller": "JobService.create_job",
          "callee": "error",
          "line": 280,
          "type": "attribute"
        },
        {
          "caller": "JobService.create_job",
          "callee": "Exception",
          "line": 281,
          "type": "direct"
        },
        {
          "caller": "JobService.create_job",
          "callee": "error",
          "line": 284,
          "type": "attribute"
        },
        {
          "caller": "JobService.create_job",
          "callee": "str",
          "line": 284,
          "type": "direct"
        },
        {
          "caller": "JobService.create_job",
          "callee": "type",
          "line": 284,
          "type": "direct"
        },
        {
          "caller": "JobService.update_job_status",
          "callee": "ValueError",
          "line": 292,
          "type": "direct"
        },
        {
          "caller": "JobService.update_job_status",
          "callee": "isoformat",
          "line": 297,
          "type": "attribute"
        },
        {
          "caller": "JobService.update_job_status",
          "callee": "now",
          "line": 297,
          "type": "attribute"
        },
        {
          "caller": "JobService.update_job_status",
          "callee": "isoformat",
          "line": 316,
          "type": "attribute"
        },
        {
          "caller": "JobService.update_job_status",
          "callee": "now",
          "line": 316,
          "type": "attribute"
        },
        {
          "caller": "JobService.update_job_status",
          "callee": "isoformat",
          "line": 318,
          "type": "attribute"
        },
        {
          "caller": "JobService.update_job_status",
          "callee": "now",
          "line": 318,
          "type": "attribute"
        },
        {
          "caller": "JobService.update_job_status",
          "callee": "update_job",
          "line": 321,
          "type": "attribute"
        },
        {
          "caller": "JobService.update_job_status",
          "callee": "str",
          "line": 321,
          "type": "direct"
        },
        {
          "caller": "JobService.update_job_status",
          "callee": "info",
          "line": 324,
          "type": "attribute"
        },
        {
          "caller": "JobService.update_job_status",
          "callee": "emit_event",
          "line": 327,
          "type": "attribute"
        },
        {
          "caller": "JobService.update_job_status",
          "callee": "str",
          "line": 328,
          "type": "direct"
        },
        {
          "caller": "JobService.update_job_status",
          "callee": "isoformat",
          "line": 331,
          "type": "attribute"
        },
        {
          "caller": "JobService.update_job_status",
          "callee": "now",
          "line": 331,
          "type": "attribute"
        },
        {
          "caller": "JobService.update_job_status",
          "callee": "error",
          "line": 334,
          "type": "attribute"
        },
        {
          "caller": "JobService.update_job_status",
          "callee": "error",
          "line": 337,
          "type": "attribute"
        },
        {
          "caller": "JobService.update_job_status",
          "callee": "str",
          "line": 337,
          "type": "direct"
        },
        {
          "caller": "JobService.get_job_statistics",
          "callee": "get_job_statistics",
          "line": 343,
          "type": "attribute"
        },
        {
          "caller": "JobService.get_job_statistics",
          "callee": "get",
          "line": 347,
          "type": "attribute"
        },
        {
          "caller": "JobService.get_job_statistics",
          "callee": "get",
          "line": 348,
          "type": "attribute"
        },
        {
          "caller": "JobService.get_job_statistics",
          "callee": "get",
          "line": 349,
          "type": "attribute"
        },
        {
          "caller": "JobService.get_job_statistics",
          "callee": "items",
          "line": 375,
          "type": "attribute"
        },
        {
          "caller": "JobService.get_job_statistics",
          "callee": "info",
          "line": 379,
          "type": "attribute"
        },
        {
          "caller": "JobService.get_job_statistics",
          "callee": "error",
          "line": 383,
          "type": "attribute"
        },
        {
          "caller": "JobService.get_job_statistics",
          "callee": "str",
          "line": 383,
          "type": "direct"
        },
        {
          "caller": "JobService.get_jobs_by_date_range",
          "callee": "get_jobs_by_date_range",
          "line": 394,
          "type": "attribute"
        },
        {
          "caller": "JobService.get_jobs_by_date_range",
          "callee": "get",
          "line": 401,
          "type": "attribute"
        },
        {
          "caller": "JobService.get_jobs_by_date_range",
          "callee": "loads",
          "line": 402,
          "type": "attribute"
        },
        {
          "caller": "JobService.get_jobs_by_date_range",
          "callee": "get",
          "line": 406,
          "type": "attribute"
        },
        {
          "caller": "JobService.get_jobs_by_date_range",
          "callee": "fromisoformat",
          "line": 407,
          "type": "attribute"
        },
        {
          "caller": "JobService.get_jobs_by_date_range",
          "callee": "Job",
          "line": 409,
          "type": "direct"
        },
        {
          "caller": "JobService.get_jobs_by_date_range",
          "callee": "append",
          "line": 410,
          "type": "attribute"
        },
        {
          "caller": "JobService.get_jobs_by_date_range",
          "callee": "dict",
          "line": 410,
          "type": "attribute"
        },
        {
          "caller": "JobService.get_jobs_by_date_range",
          "callee": "warning",
          "line": 412,
          "type": "attribute"
        },
        {
          "caller": "JobService.get_jobs_by_date_range",
          "callee": "get",
          "line": 412,
          "type": "attribute"
        },
        {
          "caller": "JobService.get_jobs_by_date_range",
          "callee": "str",
          "line": 412,
          "type": "direct"
        },
        {
          "caller": "JobService.get_jobs_by_date_range",
          "callee": "info",
          "line": 415,
          "type": "attribute"
        },
        {
          "caller": "JobService.get_jobs_by_date_range",
          "callee": "len",
          "line": 419,
          "type": "direct"
        },
        {
          "caller": "JobService.get_jobs_by_date_range",
          "callee": "error",
          "line": 423,
          "type": "attribute"
        },
        {
          "caller": "JobService.get_jobs_by_date_range",
          "callee": "str",
          "line": 423,
          "type": "direct"
        },
        {
          "caller": "JobService.get_business_jobs",
          "callee": "list_jobs",
          "line": 428,
          "type": "attribute"
        },
        {
          "caller": "JobService.get_private_jobs",
          "callee": "list_jobs",
          "line": 432,
          "type": "attribute"
        },
        {
          "caller": "JobService.calculate_material_costs",
          "callee": "get_job",
          "line": 437,
          "type": "attribute"
        },
        {
          "caller": "JobService.calculate_material_costs",
          "callee": "get",
          "line": 444,
          "type": "attribute"
        },
        {
          "caller": "JobService.calculate_material_costs",
          "callee": "get",
          "line": 448,
          "type": "attribute"
        },
        {
          "caller": "JobService.calculate_material_costs",
          "callee": "update_job",
          "line": 455,
          "type": "attribute"
        },
        {
          "caller": "JobService.calculate_material_costs",
          "callee": "info",
          "line": 460,
          "type": "attribute"
        },
        {
          "caller": "JobService.calculate_material_costs",
          "callee": "error",
          "line": 464,
          "type": "attribute"
        },
        {
          "caller": "JobService.calculate_material_costs",
          "callee": "str",
          "line": 464,
          "type": "direct"
        },
        {
          "caller": "JobService.calculate_material_costs",
          "callee": "str",
          "line": 465,
          "type": "direct"
        },
        {
          "caller": "JobService.get_printer_jobs",
          "callee": "list_jobs",
          "line": 469,
          "type": "attribute"
        },
        {
          "caller": "JobService.update_job_progress",
          "callee": "max",
          "line": 475,
          "type": "direct"
        },
        {
          "caller": "JobService.update_job_progress",
          "callee": "min",
          "line": 475,
          "type": "direct"
        },
        {
          "caller": "JobService.update_job_progress",
          "callee": "isoformat",
          "line": 476,
          "type": "attribute"
        },
        {
          "caller": "JobService.update_job_progress",
          "callee": "now",
          "line": 476,
          "type": "attribute"
        },
        {
          "caller": "JobService.update_job_progress",
          "callee": "update_job",
          "line": 482,
          "type": "attribute"
        },
        {
          "caller": "JobService.update_job_progress",
          "callee": "str",
          "line": 482,
          "type": "direct"
        },
        {
          "caller": "JobService.update_job_progress",
          "callee": "info",
          "line": 485,
          "type": "attribute"
        },
        {
          "caller": "JobService.update_job_progress",
          "callee": "emit_event",
          "line": 488,
          "type": "attribute"
        },
        {
          "caller": "JobService.update_job_progress",
          "callee": "str",
          "line": 489,
          "type": "direct"
        },
        {
          "caller": "JobService.update_job_progress",
          "callee": "isoformat",
          "line": 492,
          "type": "attribute"
        },
        {
          "caller": "JobService.update_job_progress",
          "callee": "now",
          "line": 492,
          "type": "attribute"
        },
        {
          "caller": "JobService.update_job_progress",
          "callee": "error",
          "line": 498,
          "type": "attribute"
        },
        {
          "caller": "JobService.update_job_progress",
          "callee": "str",
          "line": 498,
          "type": "direct"
        }
      ],
      "error": null
    },
    {
      "filepath": "src\\services\\library_service.py",
      "functions": [
        {
          "name": "__init__",
          "full_name": "LibraryService.__init__",
          "class": "LibraryService",
          "signature": "(self, database, config_service, event_service)",
          "return_type": "",
          "decorators": [],
          "docstring": "Initialize library service.\n\nArgs:\n    database: Database instance for storage\n    config_service: Configuration service\n    event_service: Event service for notifications",
          "line_start": 24,
          "line_end": 50,
          "access_level": "dunder",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "initialize",
          "full_name": "LibraryService.initialize",
          "class": "LibraryService",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Initialize library folders and verify configuration.",
          "line_start": 52,
          "line_end": 87,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "calculate_checksum",
          "full_name": "LibraryService.calculate_checksum",
          "class": "LibraryService",
          "signature": "(self, file_path: Path, algorithm: str)",
          "return_type": "str",
          "decorators": [],
          "docstring": "Calculate file checksum.\n\nArgs:\n    file_path: Path to file\n    algorithm: Hash algorithm (sha256, md5)\n\nReturns:\n    Hexadecimal checksum string",
          "line_start": 89,
          "line_end": 104,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_calculate_checksum_sync",
          "full_name": "LibraryService._calculate_checksum_sync",
          "class": "LibraryService",
          "signature": "(self, file_path: Path, algorithm: str)",
          "return_type": "str",
          "decorators": [],
          "docstring": "Synchronous checksum calculation.",
          "line_start": 106,
          "line_end": 132,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_library_path_for_file",
          "full_name": "LibraryService.get_library_path_for_file",
          "class": "LibraryService",
          "signature": "(self, checksum: str, source_type: str, original_filename: str, printer_name: str)",
          "return_type": "Path",
          "decorators": [],
          "docstring": "Get library storage path for a file based on source type.\nUses natural filenames without checksum-based sharding.\n\nArgs:\n    checksum: File checksum (not used in path anymore)\n    source_type: Source type (printer, watch_folder, upload)\n    original_filename: Original filename (required)\n    printer_name: Printer name (required for printer source type)\n\nReturns:\n    Path object for library storage location",
          "line_start": 134,
          "line_end": 167,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_resolve_filename_conflict",
          "full_name": "LibraryService._resolve_filename_conflict",
          "class": "LibraryService",
          "signature": "(self, target_path: Path)",
          "return_type": "Path",
          "decorators": [],
          "docstring": "Resolve filename conflict by appending _1, _2, etc.\n\nArgs:\n    target_path: Desired target path\n\nReturns:\n    Resolved path that doesn't conflict with existing files",
          "line_start": 169,
          "line_end": 200,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_check_duplicate",
          "full_name": "LibraryService._check_duplicate",
          "class": "LibraryService",
          "signature": "(self, checksum: str)",
          "return_type": "Optional[Dict[str, Any]]",
          "decorators": [],
          "docstring": "Check if a file with this checksum already exists (duplicate detection).\n\nArgs:\n    checksum: File checksum to check\n\nReturns:\n    Original file record if duplicate found, None otherwise",
          "line_start": 202,
          "line_end": 213,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "add_file_to_library",
          "full_name": "LibraryService.add_file_to_library",
          "class": "LibraryService",
          "signature": "(self, source_path: Path, source_info: Dict[str, Any], copy_file: bool, calculate_hash: bool)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Add a file to the library.\n\nArgs:\n    source_path: Path to source file\n    source_info: Dictionary with source information:\n        - type: 'printer', 'watch_folder', 'upload'\n        - printer_id: ID of printer (for printer source)\n        - printer_name: Name of printer (for printer source)\n        - folder_path: Path to watch folder (for watch_folder source)\n        - relative_path: Relative path within folder\n    copy_file: Whether to copy file to library (False to move)\n    calculate_hash: Whether to calculate checksum (False if already known)\n\nReturns:\n    Dictionary with file information",
          "line_start": 215,
          "line_end": 423,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_file_by_checksum",
          "full_name": "LibraryService.get_file_by_checksum",
          "class": "LibraryService",
          "signature": "(self, checksum: str)",
          "return_type": "Optional[Dict[str, Any]]",
          "decorators": [],
          "docstring": "Get file from library by checksum.\n\nArgs:\n    checksum: File checksum\n\nReturns:\n    File record or None if not found",
          "line_start": 425,
          "line_end": 435,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_file_by_id",
          "full_name": "LibraryService.get_file_by_id",
          "class": "LibraryService",
          "signature": "(self, file_id: str)",
          "return_type": "Optional[Dict[str, Any]]",
          "decorators": [],
          "docstring": "Get file from library by ID.\n\nArgs:\n    file_id: File database ID\n\nReturns:\n    File record or None if not found",
          "line_start": 437,
          "line_end": 447,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "list_files",
          "full_name": "LibraryService.list_files",
          "class": "LibraryService",
          "signature": "(self, filters: Dict[str, Any], page: int, limit: int)",
          "return_type": "Tuple[List[Dict[str, Any]], Dict[str, Any]]",
          "decorators": [],
          "docstring": "List files in library with filters and pagination.\n\nArgs:\n    filters: Filter dictionary:\n        - source_type: Filter by source type\n        - file_type: Filter by file extension\n        - status: Filter by status\n        - search: Search query (filename)\n        - has_thumbnail: Filter by thumbnail presence\n        - has_metadata: Filter by metadata presence\n    page: Page number (1-indexed)\n    limit: Items per page\n\nReturns:\n    Tuple of (files list, pagination info)",
          "line_start": 449,
          "line_end": 468,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "add_file_source",
          "full_name": "LibraryService.add_file_source",
          "class": "LibraryService",
          "signature": "(self, checksum: str, source_info: Dict[str, Any])",
          "return_type": "",
          "decorators": [],
          "docstring": "Add a source to an existing file.\n\nArgs:\n    checksum: File checksum\n    source_info: Source information dictionary",
          "line_start": 470,
          "line_end": 516,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "delete_file",
          "full_name": "LibraryService.delete_file",
          "class": "LibraryService",
          "signature": "(self, checksum: str, delete_physical: bool)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Delete file from library.\n\nArgs:\n    checksum: File checksum\n    delete_physical: Whether to delete physical file\n\nReturns:\n    True if successful",
          "line_start": 518,
          "line_end": 558,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_library_statistics",
          "full_name": "LibraryService.get_library_statistics",
          "class": "LibraryService",
          "signature": "(self)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Get library statistics.\n\nReturns:\n    Statistics dictionary",
          "line_start": 560,
          "line_end": 567,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_extract_metadata_async",
          "full_name": "LibraryService._extract_metadata_async",
          "class": "LibraryService",
          "signature": "(self, file_id: str, checksum: str)",
          "return_type": "",
          "decorators": [],
          "docstring": "Asynchronously extract metadata from file.\nInternal method called after file is added to library.\n\nArgs:\n    file_id: File database ID\n    checksum: File checksum",
          "line_start": 569,
          "line_end": 623,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "reprocess_file",
          "full_name": "LibraryService.reprocess_file",
          "class": "LibraryService",
          "signature": "(self, checksum: str)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Reprocess file metadata.\n\nArgs:\n    checksum: File checksum\n\nReturns:\n    True if reprocessing started successfully",
          "line_start": 625,
          "line_end": 649,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "hashlib",
          "alias": null,
          "line": 6
        },
        {
          "type": "import",
          "module": "asyncio",
          "alias": null,
          "line": 7
        },
        {
          "type": "import",
          "module": "shutil",
          "alias": null,
          "line": 8
        },
        {
          "type": "import",
          "module": "os",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "pathlib",
          "name": "Path",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Optional",
          "alias": null,
          "line": 11
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "List",
          "alias": null,
          "line": 11
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Dict",
          "alias": null,
          "line": 11
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Any",
          "alias": null,
          "line": 11
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Tuple",
          "alias": null,
          "line": 11
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 12
        },
        {
          "type": "from_import",
          "module": "uuid",
          "name": "uuid4",
          "alias": null,
          "line": 13
        },
        {
          "type": "import",
          "module": "json",
          "alias": null,
          "line": 14
        },
        {
          "type": "import",
          "module": "structlog",
          "alias": null,
          "line": 16
        }
      ],
      "function_calls": [
        {
          "caller": "LibraryService.__init__",
          "callee": "Path",
          "line": 38,
          "type": "direct"
        },
        {
          "caller": "LibraryService.__init__",
          "callee": "getattr",
          "line": 38,
          "type": "direct"
        },
        {
          "caller": "LibraryService.__init__",
          "callee": "getattr",
          "line": 39,
          "type": "direct"
        },
        {
          "caller": "LibraryService.__init__",
          "callee": "getattr",
          "line": 40,
          "type": "direct"
        },
        {
          "caller": "LibraryService.__init__",
          "callee": "getattr",
          "line": 41,
          "type": "direct"
        },
        {
          "caller": "LibraryService.__init__",
          "callee": "getattr",
          "line": 42,
          "type": "direct"
        },
        {
          "caller": "LibraryService.__init__",
          "callee": "getattr",
          "line": 43,
          "type": "direct"
        },
        {
          "caller": "LibraryService.__init__",
          "callee": "set",
          "line": 46,
          "type": "direct"
        },
        {
          "caller": "LibraryService.__init__",
          "callee": "info",
          "line": 48,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.__init__",
          "callee": "str",
          "line": 49,
          "type": "direct"
        },
        {
          "caller": "LibraryService.initialize",
          "callee": "info",
          "line": 55,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.initialize",
          "callee": "mkdir",
          "line": 70,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.initialize",
          "callee": "debug",
          "line": 71,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.initialize",
          "callee": "str",
          "line": 71,
          "type": "direct"
        },
        {
          "caller": "LibraryService.initialize",
          "callee": "write_text",
          "line": 76,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.initialize",
          "callee": "unlink",
          "line": 77,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.initialize",
          "callee": "info",
          "line": 78,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.initialize",
          "callee": "error",
          "line": 80,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.initialize",
          "callee": "str",
          "line": 80,
          "type": "direct"
        },
        {
          "caller": "LibraryService.initialize",
          "callee": "info",
          "line": 83,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.initialize",
          "callee": "error",
          "line": 86,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.initialize",
          "callee": "str",
          "line": 86,
          "type": "direct"
        },
        {
          "caller": "LibraryService.calculate_checksum",
          "callee": "to_thread",
          "line": 104,
          "type": "attribute"
        },
        {
          "caller": "LibraryService._calculate_checksum_sync",
          "callee": "sha256",
          "line": 109,
          "type": "attribute"
        },
        {
          "caller": "LibraryService._calculate_checksum_sync",
          "callee": "md5",
          "line": 111,
          "type": "attribute"
        },
        {
          "caller": "LibraryService._calculate_checksum_sync",
          "callee": "ValueError",
          "line": 113,
          "type": "direct"
        },
        {
          "caller": "LibraryService._calculate_checksum_sync",
          "callee": "stat",
          "line": 115,
          "type": "attribute"
        },
        {
          "caller": "LibraryService._calculate_checksum_sync",
          "callee": "open",
          "line": 118,
          "type": "direct"
        },
        {
          "caller": "LibraryService._calculate_checksum_sync",
          "callee": "read",
          "line": 120,
          "type": "attribute"
        },
        {
          "caller": "LibraryService._calculate_checksum_sync",
          "callee": "update",
          "line": 121,
          "type": "attribute"
        },
        {
          "caller": "LibraryService._calculate_checksum_sync",
          "callee": "len",
          "line": 122,
          "type": "direct"
        },
        {
          "caller": "LibraryService._calculate_checksum_sync",
          "callee": "debug",
          "line": 128,
          "type": "attribute"
        },
        {
          "caller": "LibraryService._calculate_checksum_sync",
          "callee": "str",
          "line": 129,
          "type": "direct"
        },
        {
          "caller": "LibraryService._calculate_checksum_sync",
          "callee": "hexdigest",
          "line": 132,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.get_library_path_for_file",
          "callee": "ValueError",
          "line": 150,
          "type": "direct"
        },
        {
          "caller": "LibraryService.get_library_path_for_file",
          "callee": "ValueError",
          "line": 167,
          "type": "direct"
        },
        {
          "caller": "LibraryService._resolve_filename_conflict",
          "callee": "exists",
          "line": 179,
          "type": "attribute"
        },
        {
          "caller": "LibraryService._resolve_filename_conflict",
          "callee": "exists",
          "line": 191,
          "type": "attribute"
        },
        {
          "caller": "LibraryService._resolve_filename_conflict",
          "callee": "info",
          "line": 192,
          "type": "attribute"
        },
        {
          "caller": "LibraryService._resolve_filename_conflict",
          "callee": "RuntimeError",
          "line": 200,
          "type": "direct"
        },
        {
          "caller": "LibraryService._check_duplicate",
          "callee": "get_file_by_checksum",
          "line": 212,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "exists",
          "line": 235,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "FileNotFoundError",
          "line": 236,
          "type": "direct"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "get",
          "line": 239,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "ValueError",
          "line": 241,
          "type": "direct"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "info",
          "line": 245,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "str",
          "line": 245,
          "type": "direct"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "calculate_checksum",
          "line": 246,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "info",
          "line": 247,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "str",
          "line": 247,
          "type": "direct"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "get",
          "line": 249,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "ValueError",
          "line": 251,
          "type": "direct"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "_check_duplicate",
          "line": 254,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "info",
          "line": 259,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "info",
          "line": 267,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "info",
          "line": 269,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "stat",
          "line": 274,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "disk_usage",
          "line": 276,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "IOError",
          "line": 280,
          "type": "direct"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "get",
          "line": 286,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "get_library_path_for_file",
          "line": 287,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "_resolve_filename_conflict",
          "line": 295,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "mkdir",
          "line": 298,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "debug",
          "line": 302,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "str",
          "line": 303,
          "type": "direct"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "str",
          "line": 304,
          "type": "direct"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "to_thread",
          "line": 305,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "debug",
          "line": 307,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "str",
          "line": 308,
          "type": "direct"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "str",
          "line": 309,
          "type": "direct"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "to_thread",
          "line": 310,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "calculate_checksum",
          "line": 313,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "unlink",
          "line": 316,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "ValueError",
          "line": 317,
          "type": "direct"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "stat",
          "line": 320,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "lower",
          "line": 322,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "str",
          "line": 330,
          "type": "direct"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "uuid4",
          "line": 330,
          "type": "direct"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "str",
          "line": 334,
          "type": "direct"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "uuid4",
          "line": 334,
          "type": "direct"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "lower",
          "line": 340,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "str",
          "line": 347,
          "type": "direct"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "relative_to",
          "line": 347,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "dumps",
          "line": 350,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "isoformat",
          "line": 352,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "now",
          "line": 352,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "isoformat",
          "line": 353,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "fromtimestamp",
          "line": 353,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "create_library_file",
          "line": 362,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "get_file_by_checksum",
          "line": 367,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "info",
          "line": 369,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "unlink",
          "line": 372,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "add_file_source",
          "line": 373,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "unlink",
          "line": 377,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "RuntimeError",
          "line": 378,
          "type": "direct"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "exists",
          "line": 382,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "unlink",
          "line": 383,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "error",
          "line": 384,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "str",
          "line": 384,
          "type": "direct"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "add_file_source",
          "line": 388,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "get",
          "line": 392,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "update_library_file",
          "line": 393,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "info",
          "line": 396,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "info",
          "line": 400,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "str",
          "line": 402,
          "type": "direct"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "emit_event",
          "line": 406,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "create_task",
          "line": 415,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "_extract_metadata_async",
          "line": 415,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "error",
          "line": 420,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "str",
          "line": 421,
          "type": "direct"
        },
        {
          "caller": "LibraryService.add_file_to_library",
          "callee": "str",
          "line": 422,
          "type": "direct"
        },
        {
          "caller": "LibraryService.get_file_by_checksum",
          "callee": "get_library_file_by_checksum",
          "line": 435,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.get_file_by_id",
          "callee": "get_library_file",
          "line": 447,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.list_files",
          "callee": "list_library_files",
          "line": 468,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_source",
          "callee": "get_file_by_checksum",
          "line": 479,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_source",
          "callee": "ValueError",
          "line": 481,
          "type": "direct"
        },
        {
          "caller": "LibraryService.add_file_source",
          "callee": "loads",
          "line": 484,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_source",
          "callee": "get",
          "line": 484,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_source",
          "callee": "get",
          "line": 487,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_source",
          "callee": "get",
          "line": 487,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_source",
          "callee": "get",
          "line": 487,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_source",
          "callee": "get",
          "line": 488,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_source",
          "callee": "get",
          "line": 488,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_source",
          "callee": "get",
          "line": 488,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_source",
          "callee": "isoformat",
          "line": 493,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_source",
          "callee": "now",
          "line": 493,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_source",
          "callee": "append",
          "line": 495,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_source",
          "callee": "update_library_file",
          "line": 498,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_source",
          "callee": "dumps",
          "line": 499,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_source",
          "callee": "info",
          "line": 502,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_source",
          "callee": "get",
          "line": 502,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_source",
          "callee": "create_library_file_source",
          "line": 505,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_source",
          "callee": "get",
          "line": 507,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_source",
          "callee": "get",
          "line": 508,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_source",
          "callee": "get",
          "line": 508,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_source",
          "callee": "get",
          "line": 509,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_source",
          "callee": "get",
          "line": 509,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_source",
          "callee": "get",
          "line": 510,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_source",
          "callee": "get",
          "line": 511,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_source",
          "callee": "get",
          "line": 512,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_source",
          "callee": "get",
          "line": 513,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_source",
          "callee": "get",
          "line": 514,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_source",
          "callee": "isoformat",
          "line": 514,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_source",
          "callee": "now",
          "line": 514,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.add_file_source",
          "callee": "dumps",
          "line": 515,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.delete_file",
          "callee": "get_file_by_checksum",
          "line": 530,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.delete_file",
          "callee": "warning",
          "line": 532,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.delete_file",
          "callee": "exists",
          "line": 538,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.delete_file",
          "callee": "unlink",
          "line": 539,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.delete_file",
          "callee": "info",
          "line": 540,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.delete_file",
          "callee": "str",
          "line": 540,
          "type": "direct"
        },
        {
          "caller": "LibraryService.delete_file",
          "callee": "delete_library_file",
          "line": 543,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.delete_file",
          "callee": "delete_library_file_sources",
          "line": 544,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.delete_file",
          "callee": "info",
          "line": 546,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.delete_file",
          "callee": "emit_event",
          "line": 549,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.delete_file",
          "callee": "get",
          "line": 551,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.delete_file",
          "callee": "error",
          "line": 557,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.delete_file",
          "callee": "str",
          "line": 557,
          "type": "direct"
        },
        {
          "caller": "LibraryService.get_library_statistics",
          "callee": "get_library_stats",
          "line": 567,
          "type": "attribute"
        },
        {
          "caller": "LibraryService._extract_metadata_async",
          "callee": "debug",
          "line": 581,
          "type": "attribute"
        },
        {
          "caller": "LibraryService._extract_metadata_async",
          "callee": "add",
          "line": 584,
          "type": "attribute"
        },
        {
          "caller": "LibraryService._extract_metadata_async",
          "callee": "update_library_file",
          "line": 587,
          "type": "attribute"
        },
        {
          "caller": "LibraryService._extract_metadata_async",
          "callee": "get_file_by_checksum",
          "line": 592,
          "type": "attribute"
        },
        {
          "caller": "LibraryService._extract_metadata_async",
          "callee": "info",
          "line": 602,
          "type": "attribute"
        },
        {
          "caller": "LibraryService._extract_metadata_async",
          "callee": "update_library_file",
          "line": 608,
          "type": "attribute"
        },
        {
          "caller": "LibraryService._extract_metadata_async",
          "callee": "isoformat",
          "line": 610,
          "type": "attribute"
        },
        {
          "caller": "LibraryService._extract_metadata_async",
          "callee": "now",
          "line": 610,
          "type": "attribute"
        },
        {
          "caller": "LibraryService._extract_metadata_async",
          "callee": "info",
          "line": 613,
          "type": "attribute"
        },
        {
          "caller": "LibraryService._extract_metadata_async",
          "callee": "error",
          "line": 616,
          "type": "attribute"
        },
        {
          "caller": "LibraryService._extract_metadata_async",
          "callee": "str",
          "line": 616,
          "type": "direct"
        },
        {
          "caller": "LibraryService._extract_metadata_async",
          "callee": "update_library_file",
          "line": 617,
          "type": "attribute"
        },
        {
          "caller": "LibraryService._extract_metadata_async",
          "callee": "str",
          "line": 619,
          "type": "direct"
        },
        {
          "caller": "LibraryService._extract_metadata_async",
          "callee": "discard",
          "line": 623,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.reprocess_file",
          "callee": "get_file_by_checksum",
          "line": 636,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.reprocess_file",
          "callee": "warning",
          "line": 638,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.reprocess_file",
          "callee": "create_task",
          "line": 642,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.reprocess_file",
          "callee": "_extract_metadata_async",
          "line": 642,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.reprocess_file",
          "callee": "info",
          "line": 644,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.reprocess_file",
          "callee": "error",
          "line": 648,
          "type": "attribute"
        },
        {
          "caller": "LibraryService.reprocess_file",
          "callee": "str",
          "line": 648,
          "type": "direct"
        }
      ],
      "error": null
    },
    {
      "filepath": "src\\services\\material_service.py",
      "functions": [
        {
          "name": "__init__",
          "full_name": "MaterialService.__init__",
          "class": "MaterialService",
          "signature": "(self, db: Database, event_service: EventService)",
          "return_type": "",
          "decorators": [],
          "docstring": "Initialize material service.",
          "line_start": 39,
          "line_end": 44,
          "access_level": "dunder",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "initialize",
          "full_name": "MaterialService.initialize",
          "class": "MaterialService",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Initialize material service and create tables.",
          "line_start": 46,
          "line_end": 54,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_create_tables",
          "full_name": "MaterialService._create_tables",
          "class": "MaterialService",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Create material-related database tables.",
          "line_start": 56,
          "line_end": 106,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_load_materials",
          "full_name": "MaterialService._load_materials",
          "class": "MaterialService",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Load materials from database into cache.",
          "line_start": 108,
          "line_end": 117,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_row_to_material",
          "full_name": "MaterialService._row_to_material",
          "class": "MaterialService",
          "signature": "(self, row)",
          "return_type": "MaterialSpool",
          "decorators": [],
          "docstring": "Convert database row to MaterialSpool.",
          "line_start": 119,
          "line_end": 137,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "create_material",
          "full_name": "MaterialService.create_material",
          "class": "MaterialService",
          "signature": "(self, material_data: MaterialCreate)",
          "return_type": "MaterialSpool",
          "decorators": [],
          "docstring": "Create a new material spool.",
          "line_start": 139,
          "line_end": 182,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "update_material",
          "full_name": "MaterialService.update_material",
          "class": "MaterialService",
          "signature": "(self, material_id: str, update_data: MaterialUpdate)",
          "return_type": "Optional[MaterialSpool]",
          "decorators": [],
          "docstring": "Update material spool.",
          "line_start": 184,
          "line_end": 222,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "record_consumption",
          "full_name": "MaterialService.record_consumption",
          "class": "MaterialService",
          "signature": "(self, job_id: str, material_id: str, weight_grams: float, printer_id: str, file_name: Optional[str], print_time_hours: Optional[float])",
          "return_type": "MaterialConsumption",
          "decorators": [],
          "docstring": "Record material consumption for a job.",
          "line_start": 224,
          "line_end": 282,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_material",
          "full_name": "MaterialService.get_material",
          "class": "MaterialService",
          "signature": "(self, material_id: str)",
          "return_type": "Optional[MaterialSpool]",
          "decorators": [],
          "docstring": "Get material by ID.",
          "line_start": 284,
          "line_end": 286,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_all_materials",
          "full_name": "MaterialService.get_all_materials",
          "class": "MaterialService",
          "signature": "(self)",
          "return_type": "List[MaterialSpool]",
          "decorators": [],
          "docstring": "Get all materials.",
          "line_start": 288,
          "line_end": 290,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_materials_by_type",
          "full_name": "MaterialService.get_materials_by_type",
          "class": "MaterialService",
          "signature": "(self, material_type: MaterialType)",
          "return_type": "List[MaterialSpool]",
          "decorators": [],
          "docstring": "Get materials by type.",
          "line_start": 292,
          "line_end": 294,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_materials_by_printer",
          "full_name": "MaterialService.get_materials_by_printer",
          "class": "MaterialService",
          "signature": "(self, printer_id: str)",
          "return_type": "List[MaterialSpool]",
          "decorators": [],
          "docstring": "Get materials loaded in a specific printer.",
          "line_start": 296,
          "line_end": 298,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_low_stock_materials",
          "full_name": "MaterialService.get_low_stock_materials",
          "class": "MaterialService",
          "signature": "(self, threshold: float)",
          "return_type": "List[MaterialSpool]",
          "decorators": [],
          "docstring": "Get materials below stock threshold percentage.",
          "line_start": 300,
          "line_end": 302,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_statistics",
          "full_name": "MaterialService.get_statistics",
          "class": "MaterialService",
          "signature": "(self)",
          "return_type": "MaterialStats",
          "decorators": [],
          "docstring": "Get material statistics.",
          "line_start": 304,
          "line_end": 384,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_calculate_consumption_period",
          "full_name": "MaterialService._calculate_consumption_period",
          "class": "MaterialService",
          "signature": "(self, days: int)",
          "return_type": "float",
          "decorators": [],
          "docstring": "Calculate total consumption in kg for a period.",
          "line_start": 386,
          "line_end": 400,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "generate_report",
          "full_name": "MaterialService.generate_report",
          "class": "MaterialService",
          "signature": "(self, start_date: datetime, end_date: datetime)",
          "return_type": "MaterialReport",
          "decorators": [],
          "docstring": "Generate material consumption report for a period.",
          "line_start": 402,
          "line_end": 511,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "export_inventory",
          "full_name": "MaterialService.export_inventory",
          "class": "MaterialService",
          "signature": "(self, file_path: Path)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Export material inventory to CSV.",
          "line_start": 513,
          "line_end": 537,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "cleanup",
          "full_name": "MaterialService.cleanup",
          "class": "MaterialService",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Clean up material service resources.",
          "line_start": 539,
          "line_end": 542,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "asyncio",
          "alias": null,
          "line": 6
        },
        {
          "type": "import",
          "module": "json",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "timedelta",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "decimal",
          "name": "Decimal",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "pathlib",
          "name": "Path",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Dict",
          "alias": null,
          "line": 11
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "List",
          "alias": null,
          "line": 11
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Optional",
          "alias": null,
          "line": 11
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Any",
          "alias": null,
          "line": 11
        },
        {
          "type": "from_import",
          "module": "uuid",
          "name": "uuid4",
          "alias": null,
          "line": 12
        },
        {
          "type": "import",
          "module": "aiofiles",
          "alias": null,
          "line": 14
        },
        {
          "type": "import",
          "module": "structlog",
          "alias": null,
          "line": 15
        },
        {
          "type": "from_import",
          "module": "sqlalchemy",
          "name": "text",
          "alias": null,
          "line": 16
        },
        {
          "type": "from_import",
          "module": "src.database.database",
          "name": "Database",
          "alias": null,
          "line": 18
        },
        {
          "type": "from_import",
          "module": "src.models.material",
          "name": "MaterialSpool",
          "alias": null,
          "line": 19
        },
        {
          "type": "from_import",
          "module": "src.models.material",
          "name": "MaterialCreate",
          "alias": null,
          "line": 19
        },
        {
          "type": "from_import",
          "module": "src.models.material",
          "name": "MaterialUpdate",
          "alias": null,
          "line": 19
        },
        {
          "type": "from_import",
          "module": "src.models.material",
          "name": "MaterialConsumption",
          "alias": null,
          "line": 19
        },
        {
          "type": "from_import",
          "module": "src.models.material",
          "name": "MaterialStats",
          "alias": null,
          "line": 19
        },
        {
          "type": "from_import",
          "module": "src.models.material",
          "name": "MaterialReport",
          "alias": null,
          "line": 19
        },
        {
          "type": "from_import",
          "module": "src.models.material",
          "name": "MaterialType",
          "alias": null,
          "line": 19
        },
        {
          "type": "from_import",
          "module": "src.models.material",
          "name": "MaterialBrand",
          "alias": null,
          "line": 19
        },
        {
          "type": "from_import",
          "module": "src.models.material",
          "name": "MaterialColor",
          "alias": null,
          "line": 19
        },
        {
          "type": "from_import",
          "module": "src.services.event_service",
          "name": "EventService",
          "alias": null,
          "line": 30
        }
      ],
      "function_calls": [
        {
          "caller": "MaterialService.initialize",
          "callee": "_create_tables",
          "line": 49,
          "type": "attribute"
        },
        {
          "caller": "MaterialService.initialize",
          "callee": "_load_materials",
          "line": 50,
          "type": "attribute"
        },
        {
          "caller": "MaterialService.initialize",
          "callee": "info",
          "line": 51,
          "type": "attribute"
        },
        {
          "caller": "MaterialService.initialize",
          "callee": "error",
          "line": 53,
          "type": "attribute"
        },
        {
          "caller": "MaterialService._create_tables",
          "callee": "connection",
          "line": 58,
          "type": "attribute"
        },
        {
          "caller": "MaterialService._create_tables",
          "callee": "execute",
          "line": 60,
          "type": "attribute"
        },
        {
          "caller": "MaterialService._create_tables",
          "callee": "execute",
          "line": 82,
          "type": "attribute"
        },
        {
          "caller": "MaterialService._create_tables",
          "callee": "execute",
          "line": 100,
          "type": "attribute"
        },
        {
          "caller": "MaterialService._create_tables",
          "callee": "execute",
          "line": 101,
          "type": "attribute"
        },
        {
          "caller": "MaterialService._create_tables",
          "callee": "execute",
          "line": 102,
          "type": "attribute"
        },
        {
          "caller": "MaterialService._create_tables",
          "callee": "execute",
          "line": 103,
          "type": "attribute"
        },
        {
          "caller": "MaterialService._create_tables",
          "callee": "execute",
          "line": 104,
          "type": "attribute"
        },
        {
          "caller": "MaterialService._create_tables",
          "callee": "commit",
          "line": 106,
          "type": "attribute"
        },
        {
          "caller": "MaterialService._load_materials",
          "callee": "get_connection",
          "line": 110,
          "type": "attribute"
        },
        {
          "caller": "MaterialService._load_materials",
          "callee": "execute",
          "line": 111,
          "type": "attribute"
        },
        {
          "caller": "MaterialService._load_materials",
          "callee": "fetchall",
          "line": 112,
          "type": "attribute"
        },
        {
          "caller": "MaterialService._load_materials",
          "callee": "clear",
          "line": 114,
          "type": "attribute"
        },
        {
          "caller": "MaterialService._load_materials",
          "callee": "_row_to_material",
          "line": 116,
          "type": "attribute"
        },
        {
          "caller": "MaterialService._row_to_material",
          "callee": "MaterialSpool",
          "line": 121,
          "type": "direct"
        },
        {
          "caller": "MaterialService._row_to_material",
          "callee": "MaterialType",
          "line": 123,
          "type": "direct"
        },
        {
          "caller": "MaterialService._row_to_material",
          "callee": "MaterialBrand",
          "line": 124,
          "type": "direct"
        },
        {
          "caller": "MaterialService._row_to_material",
          "callee": "MaterialColor",
          "line": 125,
          "type": "direct"
        },
        {
          "caller": "MaterialService._row_to_material",
          "callee": "Decimal",
          "line": 129,
          "type": "direct"
        },
        {
          "caller": "MaterialService._row_to_material",
          "callee": "str",
          "line": 129,
          "type": "direct"
        },
        {
          "caller": "MaterialService._row_to_material",
          "callee": "fromisoformat",
          "line": 130,
          "type": "attribute"
        },
        {
          "caller": "MaterialService._row_to_material",
          "callee": "fromisoformat",
          "line": 135,
          "type": "attribute"
        },
        {
          "caller": "MaterialService._row_to_material",
          "callee": "fromisoformat",
          "line": 136,
          "type": "attribute"
        },
        {
          "caller": "MaterialService.create_material",
          "callee": "str",
          "line": 141,
          "type": "direct"
        },
        {
          "caller": "MaterialService.create_material",
          "callee": "uuid4",
          "line": 141,
          "type": "direct"
        },
        {
          "caller": "MaterialService.create_material",
          "callee": "now",
          "line": 142,
          "type": "attribute"
        },
        {
          "caller": "MaterialService.create_material",
          "callee": "MaterialSpool",
          "line": 144,
          "type": "direct"
        },
        {
          "caller": "MaterialService.create_material",
          "callee": "get_connection",
          "line": 162,
          "type": "attribute"
        },
        {
          "caller": "MaterialService.create_material",
          "callee": "execute",
          "line": 163,
          "type": "attribute"
        },
        {
          "caller": "MaterialService.create_material",
          "callee": "str",
          "line": 172,
          "type": "direct"
        },
        {
          "caller": "MaterialService.create_material",
          "callee": "isoformat",
          "line": 173,
          "type": "attribute"
        },
        {
          "caller": "MaterialService.create_material",
          "callee": "isoformat",
          "line": 175,
          "type": "attribute"
        },
        {
          "caller": "MaterialService.create_material",
          "callee": "isoformat",
          "line": 175,
          "type": "attribute"
        },
        {
          "caller": "MaterialService.create_material",
          "callee": "commit",
          "line": 177,
          "type": "attribute"
        },
        {
          "caller": "MaterialService.create_material",
          "callee": "emit_event",
          "line": 180,
          "type": "attribute"
        },
        {
          "caller": "MaterialService.update_material",
          "callee": "model_dump",
          "line": 190,
          "type": "attribute"
        },
        {
          "caller": "MaterialService.update_material",
          "callee": "items",
          "line": 196,
          "type": "attribute"
        },
        {
          "caller": "MaterialService.update_material",
          "callee": "hasattr",
          "line": 197,
          "type": "direct"
        },
        {
          "caller": "MaterialService.update_material",
          "callee": "setattr",
          "line": 198,
          "type": "direct"
        },
        {
          "caller": "MaterialService.update_material",
          "callee": "now",
          "line": 200,
          "type": "attribute"
        },
        {
          "caller": "MaterialService.update_material",
          "callee": "get_connection",
          "line": 203,
          "type": "attribute"
        },
        {
          "caller": "MaterialService.update_material",
          "callee": "items",
          "line": 206,
          "type": "attribute"
        },
        {
          "caller": "MaterialService.update_material",
          "callee": "append",
          "line": 207,
          "type": "attribute"
        },
        {
          "caller": "MaterialService.update_material",
          "callee": "isinstance",
          "line": 208,
          "type": "direct"
        },
        {
          "caller": "MaterialService.update_material",
          "callee": "append",
          "line": 209,
          "type": "attribute"
        },
        {
          "caller": "MaterialService.update_material",
          "callee": "str",
          "line": 209,
          "type": "direct"
        },
        {
          "caller": "MaterialService.update_material",
          "callee": "append",
          "line": 211,
          "type": "attribute"
        },
        {
          "caller": "MaterialService.update_material",
          "callee": "append",
          "line": 213,
          "type": "attribute"
        },
        {
          "caller": "MaterialService.update_material",
          "callee": "append",
          "line": 214,
          "type": "attribute"
        },
        {
          "caller": "MaterialService.update_material",
          "callee": "isoformat",
          "line": 214,
          "type": "attribute"
        },
        {
          "caller": "MaterialService.update_material",
          "callee": "append",
          "line": 215,
          "type": "attribute"
        },
        {
          "caller": "MaterialService.update_material",
          "callee": "join",
          "line": 217,
          "type": "attribute"
        },
        {
          "caller": "MaterialService.update_material",
          "callee": "execute",
          "line": 218,
          "type": "attribute"
        },
        {
          "caller": "MaterialService.update_material",
          "callee": "commit",
          "line": 219,
          "type": "attribute"
        },
        {
          "caller": "MaterialService.update_material",
          "callee": "emit_event",
          "line": 221,
          "type": "attribute"
        },
        {
          "caller": "MaterialService.record_consumption",
          "callee": "ValueError",
          "line": 230,
          "type": "direct"
        },
        {
          "caller": "MaterialService.record_consumption",
          "callee": "Decimal",
          "line": 234,
          "type": "direct"
        },
        {
          "caller": "MaterialService.record_consumption",
          "callee": "str",
          "line": 234,
          "type": "direct"
        },
        {
          "caller": "MaterialService.record_consumption",
          "callee": "MaterialConsumption",
          "line": 236,
          "type": "direct"
        },
        {
          "caller": "MaterialService.record_consumption",
          "callee": "max",
          "line": 247,
          "type": "direct"
        },
        {
          "caller": "MaterialService.record_consumption",
          "callee": "now",
          "line": 248,
          "type": "attribute"
        },
        {
          "caller": "MaterialService.record_consumption",
          "callee": "get_connection",
          "line": 250,
          "type": "attribute"
        },
        {
          "caller": "MaterialService.record_consumption",
          "callee": "str",
          "line": 252,
          "type": "direct"
        },
        {
          "caller": "MaterialService.record_consumption",
          "callee": "uuid4",
          "line": 252,
          "type": "direct"
        },
        {
          "caller": "MaterialService.record_consumption",
          "callee": "execute",
          "line": 253,
          "type": "attribute"
        },
        {
          "caller": "MaterialService.record_consumption",
          "callee": "str",
          "line": 260,
          "type": "direct"
        },
        {
          "caller": "MaterialService.record_consumption",
          "callee": "isoformat",
          "line": 261,
          "type": "attribute"
        },
        {
          "caller": "MaterialService.record_consumption",
          "callee": "execute",
          "line": 266,
          "type": "attribute"
        },
        {
          "caller": "MaterialService.record_consumption",
          "callee": "isoformat",
          "line": 270,
          "type": "attribute"
        },
        {
          "caller": "MaterialService.record_consumption",
          "callee": "commit",
          "line": 272,
          "type": "attribute"
        },
        {
          "caller": "MaterialService.record_consumption",
          "callee": "emit_event",
          "line": 276,
          "type": "attribute"
        },
        {
          "caller": "MaterialService.get_material",
          "callee": "get",
          "line": 286,
          "type": "attribute"
        },
        {
          "caller": "MaterialService.get_all_materials",
          "callee": "list",
          "line": 290,
          "type": "direct"
        },
        {
          "caller": "MaterialService.get_all_materials",
          "callee": "values",
          "line": 290,
          "type": "attribute"
        },
        {
          "caller": "MaterialService.get_materials_by_type",
          "callee": "values",
          "line": 294,
          "type": "attribute"
        },
        {
          "caller": "MaterialService.get_materials_by_printer",
          "callee": "values",
          "line": 298,
          "type": "attribute"
        },
        {
          "caller": "MaterialService.get_low_stock_materials",
          "callee": "values",
          "line": 302,
          "type": "attribute"
        },
        {
          "caller": "MaterialService.get_statistics",
          "callee": "list",
          "line": 306,
          "type": "direct"
        },
        {
          "caller": "MaterialService.get_statistics",
          "callee": "values",
          "line": 306,
          "type": "attribute"
        },
        {
          "caller": "MaterialService.get_statistics",
          "callee": "MaterialStats",
          "line": 309,
          "type": "direct"
        },
        {
          "caller": "MaterialService.get_statistics",
          "callee": "Decimal",
          "line": 313,
          "type": "direct"
        },
        {
          "caller": "MaterialService.get_statistics",
          "callee": "Decimal",
          "line": 314,
          "type": "direct"
        },
        {
          "caller": "MaterialService.get_statistics",
          "callee": "sum",
          "line": 324,
          "type": "direct"
        },
        {
          "caller": "MaterialService.get_statistics",
          "callee": "sum",
          "line": 325,
          "type": "direct"
        },
        {
          "caller": "MaterialService.get_statistics",
          "callee": "sum",
          "line": 326,
          "type": "direct"
        },
        {
          "caller": "MaterialService.get_statistics",
          "callee": "sum",
          "line": 327,
          "type": "direct"
        },
        {
          "caller": "MaterialService.get_statistics",
          "callee": "Decimal",
          "line": 338,
          "type": "direct"
        },
        {
          "caller": "MaterialService.get_statistics",
          "callee": "get",
          "line": 363,
          "type": "attribute"
        },
        {
          "caller": "MaterialService.get_statistics",
          "callee": "_calculate_consumption_period",
          "line": 369,
          "type": "attribute"
        },
        {
          "caller": "MaterialService.get_statistics",
          "callee": "MaterialStats",
          "line": 372,
          "type": "direct"
        },
        {
          "caller": "MaterialService.get_statistics",
          "callee": "len",
          "line": 373,
          "type": "direct"
        },
        {
          "caller": "MaterialService._calculate_consumption_period",
          "callee": "now",
          "line": 388,
          "type": "attribute"
        },
        {
          "caller": "MaterialService._calculate_consumption_period",
          "callee": "timedelta",
          "line": 388,
          "type": "direct"
        },
        {
          "caller": "MaterialService._calculate_consumption_period",
          "callee": "get_connection",
          "line": 390,
          "type": "attribute"
        },
        {
          "caller": "MaterialService._calculate_consumption_period",
          "callee": "execute",
          "line": 391,
          "type": "attribute"
        },
        {
          "caller": "MaterialService._calculate_consumption_period",
          "callee": "isoformat",
          "line": 395,
          "type": "attribute"
        },
        {
          "caller": "MaterialService._calculate_consumption_period",
          "callee": "fetchone",
          "line": 397,
          "type": "attribute"
        },
        {
          "caller": "MaterialService.generate_report",
          "callee": "get_connection",
          "line": 404,
          "type": "attribute"
        },
        {
          "caller": "MaterialService.generate_report",
          "callee": "execute",
          "line": 406,
          "type": "attribute"
        },
        {
          "caller": "MaterialService.generate_report",
          "callee": "isoformat",
          "line": 413,
          "type": "attribute"
        },
        {
          "caller": "MaterialService.generate_report",
          "callee": "isoformat",
          "line": 413,
          "type": "attribute"
        },
        {
          "caller": "MaterialService.generate_report",
          "callee": "fetchall",
          "line": 415,
          "type": "attribute"
        },
        {
          "caller": "MaterialService.generate_report",
          "callee": "MaterialReport",
          "line": 418,
          "type": "direct"
        },
        {
          "caller": "MaterialService.generate_report",
          "callee": "Decimal",
          "line": 422,
          "type": "direct"
        },
        {
          "caller": "MaterialService.generate_report",
          "callee": "sum",
          "line": 431,
          "type": "direct"
        },
        {
          "caller": "MaterialService.generate_report",
          "callee": "sum",
          "line": 432,
          "type": "direct"
        },
        {
          "caller": "MaterialService.generate_report",
          "callee": "Decimal",
          "line": 432,
          "type": "direct"
        },
        {
          "caller": "MaterialService.generate_report",
          "callee": "str",
          "line": 432,
          "type": "direct"
        },
        {
          "caller": "MaterialService.generate_report",
          "callee": "Decimal",
          "line": 441,
          "type": "direct"
        },
        {
          "caller": "MaterialService.generate_report",
          "callee": "Decimal",
          "line": 445,
          "type": "direct"
        },
        {
          "caller": "MaterialService.generate_report",
          "callee": "str",
          "line": 445,
          "type": "direct"
        },
        {
          "caller": "MaterialService.generate_report",
          "callee": "Decimal",
          "line": 455,
          "type": "direct"
        },
        {
          "caller": "MaterialService.generate_report",
          "callee": "Decimal",
          "line": 459,
          "type": "direct"
        },
        {
          "caller": "MaterialService.generate_report",
          "callee": "str",
          "line": 459,
          "type": "direct"
        },
        {
          "caller": "MaterialService.generate_report",
          "callee": "Decimal",
          "line": 463,
          "type": "direct"
        },
        {
          "caller": "MaterialService.generate_report",
          "callee": "Decimal",
          "line": 464,
          "type": "direct"
        },
        {
          "caller": "MaterialService.generate_report",
          "callee": "get",
          "line": 467,
          "type": "attribute"
        },
        {
          "caller": "MaterialService.generate_report",
          "callee": "Decimal",
          "line": 469,
          "type": "direct"
        },
        {
          "caller": "MaterialService.generate_report",
          "callee": "str",
          "line": 469,
          "type": "direct"
        },
        {
          "caller": "MaterialService.generate_report",
          "callee": "get",
          "line": 479,
          "type": "attribute"
        },
        {
          "caller": "MaterialService.generate_report",
          "callee": "Decimal",
          "line": 481,
          "type": "direct"
        },
        {
          "caller": "MaterialService.generate_report",
          "callee": "Decimal",
          "line": 484,
          "type": "direct"
        },
        {
          "caller": "MaterialService.generate_report",
          "callee": "str",
          "line": 484,
          "type": "direct"
        },
        {
          "caller": "MaterialService.generate_report",
          "callee": "sorted",
          "line": 486,
          "type": "direct"
        },
        {
          "caller": "MaterialService.generate_report",
          "callee": "values",
          "line": 486,
          "type": "attribute"
        },
        {
          "caller": "MaterialService.generate_report",
          "callee": "sum",
          "line": 491,
          "type": "direct"
        },
        {
          "caller": "MaterialService.generate_report",
          "callee": "float",
          "line": 497,
          "type": "direct"
        },
        {
          "caller": "MaterialService.generate_report",
          "callee": "len",
          "line": 497,
          "type": "direct"
        },
        {
          "caller": "MaterialService.generate_report",
          "callee": "set",
          "line": 497,
          "type": "direct"
        },
        {
          "caller": "MaterialService.generate_report",
          "callee": "MaterialReport",
          "line": 501,
          "type": "direct"
        },
        {
          "caller": "MaterialService.export_inventory",
          "callee": "list",
          "line": 516,
          "type": "direct"
        },
        {
          "caller": "MaterialService.export_inventory",
          "callee": "values",
          "line": 516,
          "type": "attribute"
        },
        {
          "caller": "MaterialService.export_inventory",
          "callee": "append",
          "line": 523,
          "type": "attribute"
        },
        {
          "caller": "MaterialService.export_inventory",
          "callee": "open",
          "line": 529,
          "type": "attribute"
        },
        {
          "caller": "MaterialService.export_inventory",
          "callee": "write",
          "line": 530,
          "type": "attribute"
        },
        {
          "caller": "MaterialService.export_inventory",
          "callee": "join",
          "line": 530,
          "type": "attribute"
        },
        {
          "caller": "MaterialService.export_inventory",
          "callee": "info",
          "line": 532,
          "type": "attribute"
        },
        {
          "caller": "MaterialService.export_inventory",
          "callee": "len",
          "line": 532,
          "type": "direct"
        },
        {
          "caller": "MaterialService.export_inventory",
          "callee": "error",
          "line": 536,
          "type": "attribute"
        },
        {
          "caller": "MaterialService.cleanup",
          "callee": "clear",
          "line": 541,
          "type": "attribute"
        },
        {
          "caller": "MaterialService.cleanup",
          "callee": "info",
          "line": 542,
          "type": "attribute"
        }
      ],
      "error": null
    },
    {
      "filepath": "src\\services\\migration_service.py",
      "functions": [
        {
          "name": "__init__",
          "full_name": "MigrationService.__init__",
          "class": "MigrationService",
          "signature": "(self, database: Database)",
          "return_type": "",
          "decorators": [],
          "docstring": "Initialize migration service.",
          "line_start": 19,
          "line_end": 23,
          "access_level": "dunder",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "run_migrations",
          "full_name": "MigrationService.run_migrations",
          "class": "MigrationService",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Run all pending database migrations.",
          "line_start": 25,
          "line_end": 58,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_ensure_migrations_table",
          "full_name": "MigrationService._ensure_migrations_table",
          "class": "MigrationService",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Ensure migrations tracking table exists.",
          "line_start": 60,
          "line_end": 79,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_get_completed_migrations",
          "full_name": "MigrationService._get_completed_migrations",
          "class": "MigrationService",
          "signature": "(self)",
          "return_type": "set",
          "decorators": [],
          "docstring": "Get set of completed migration names.",
          "line_start": 81,
          "line_end": 100,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_get_migration_files",
          "full_name": "MigrationService._get_migration_files",
          "class": "MigrationService",
          "signature": "(self)",
          "return_type": "List[Path]",
          "decorators": [],
          "docstring": "Get sorted list of migration files.",
          "line_start": 102,
          "line_end": 116,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_run_migration_file",
          "full_name": "MigrationService._run_migration_file",
          "class": "MigrationService",
          "signature": "(self, migration_file: Path, migration_name: str)",
          "return_type": "",
          "decorators": [],
          "docstring": "Run a single migration file.",
          "line_start": 118,
          "line_end": 150,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_migration_status",
          "full_name": "MigrationService.get_migration_status",
          "class": "MigrationService",
          "signature": "(self)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Get migration status information.",
          "line_start": 152,
          "line_end": 175,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "force_run_migration",
          "full_name": "MigrationService.force_run_migration",
          "class": "MigrationService",
          "signature": "(self, migration_name: str)",
          "return_type": "",
          "decorators": [],
          "docstring": "Force run a specific migration (for development/debugging).",
          "line_start": 177,
          "line_end": 194,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "sqlite3",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "pathlib",
          "name": "Path",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "List",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Dict",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Any",
          "alias": null,
          "line": 8
        },
        {
          "type": "import",
          "module": "structlog",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "src.database.database",
          "name": "Database",
          "alias": null,
          "line": 11
        }
      ],
      "function_calls": [
        {
          "caller": "MigrationService.__init__",
          "callee": "Path",
          "line": 22,
          "type": "direct"
        },
        {
          "caller": "MigrationService.__init__",
          "callee": "mkdir",
          "line": 23,
          "type": "attribute"
        },
        {
          "caller": "MigrationService.run_migrations",
          "callee": "warning",
          "line": 29,
          "type": "attribute"
        },
        {
          "caller": "MigrationService.run_migrations",
          "callee": "info",
          "line": 32,
          "type": "attribute"
        },
        {
          "caller": "MigrationService.run_migrations",
          "callee": "_ensure_migrations_table",
          "line": 35,
          "type": "attribute"
        },
        {
          "caller": "MigrationService.run_migrations",
          "callee": "_get_completed_migrations",
          "line": 38,
          "type": "attribute"
        },
        {
          "caller": "MigrationService.run_migrations",
          "callee": "_get_migration_files",
          "line": 41,
          "type": "attribute"
        },
        {
          "caller": "MigrationService.run_migrations",
          "callee": "_run_migration_file",
          "line": 49,
          "type": "attribute"
        },
        {
          "caller": "MigrationService.run_migrations",
          "callee": "info",
          "line": 52,
          "type": "attribute"
        },
        {
          "caller": "MigrationService.run_migrations",
          "callee": "len",
          "line": 53,
          "type": "direct"
        },
        {
          "caller": "MigrationService.run_migrations",
          "callee": "error",
          "line": 57,
          "type": "attribute"
        },
        {
          "caller": "MigrationService.run_migrations",
          "callee": "str",
          "line": 57,
          "type": "direct"
        },
        {
          "caller": "MigrationService._ensure_migrations_table",
          "callee": "RuntimeError",
          "line": 64,
          "type": "direct"
        },
        {
          "caller": "MigrationService._ensure_migrations_table",
          "callee": "get_connection",
          "line": 66,
          "type": "attribute"
        },
        {
          "caller": "MigrationService._ensure_migrations_table",
          "callee": "execute",
          "line": 67,
          "type": "attribute"
        },
        {
          "caller": "MigrationService._ensure_migrations_table",
          "callee": "commit",
          "line": 75,
          "type": "attribute"
        },
        {
          "caller": "MigrationService._ensure_migrations_table",
          "callee": "error",
          "line": 78,
          "type": "attribute"
        },
        {
          "caller": "MigrationService._ensure_migrations_table",
          "callee": "str",
          "line": 78,
          "type": "direct"
        },
        {
          "caller": "MigrationService._get_completed_migrations",
          "callee": "RuntimeError",
          "line": 85,
          "type": "direct"
        },
        {
          "caller": "MigrationService._get_completed_migrations",
          "callee": "get_connection",
          "line": 87,
          "type": "attribute"
        },
        {
          "caller": "MigrationService._get_completed_migrations",
          "callee": "execute",
          "line": 91,
          "type": "attribute"
        },
        {
          "caller": "MigrationService._get_completed_migrations",
          "callee": "fetchall",
          "line": 92,
          "type": "attribute"
        },
        {
          "caller": "MigrationService._get_completed_migrations",
          "callee": "set",
          "line": 96,
          "type": "direct"
        },
        {
          "caller": "MigrationService._get_completed_migrations",
          "callee": "error",
          "line": 99,
          "type": "attribute"
        },
        {
          "caller": "MigrationService._get_completed_migrations",
          "callee": "str",
          "line": 99,
          "type": "direct"
        },
        {
          "caller": "MigrationService._get_migration_files",
          "callee": "list",
          "line": 105,
          "type": "direct"
        },
        {
          "caller": "MigrationService._get_migration_files",
          "callee": "glob",
          "line": 105,
          "type": "attribute"
        },
        {
          "caller": "MigrationService._get_migration_files",
          "callee": "sort",
          "line": 106,
          "type": "attribute"
        },
        {
          "caller": "MigrationService._get_migration_files",
          "callee": "debug",
          "line": 108,
          "type": "attribute"
        },
        {
          "caller": "MigrationService._get_migration_files",
          "callee": "len",
          "line": 109,
          "type": "direct"
        },
        {
          "caller": "MigrationService._get_migration_files",
          "callee": "error",
          "line": 115,
          "type": "attribute"
        },
        {
          "caller": "MigrationService._get_migration_files",
          "callee": "str",
          "line": 115,
          "type": "direct"
        },
        {
          "caller": "MigrationService._run_migration_file",
          "callee": "RuntimeError",
          "line": 122,
          "type": "direct"
        },
        {
          "caller": "MigrationService._run_migration_file",
          "callee": "info",
          "line": 124,
          "type": "attribute"
        },
        {
          "caller": "MigrationService._run_migration_file",
          "callee": "read_text",
          "line": 127,
          "type": "attribute"
        },
        {
          "caller": "MigrationService._run_migration_file",
          "callee": "get_connection",
          "line": 130,
          "type": "attribute"
        },
        {
          "caller": "MigrationService._run_migration_file",
          "callee": "executescript",
          "line": 133,
          "type": "attribute"
        },
        {
          "caller": "MigrationService._run_migration_file",
          "callee": "execute",
          "line": 136,
          "type": "attribute"
        },
        {
          "caller": "MigrationService._run_migration_file",
          "callee": "commit",
          "line": 142,
          "type": "attribute"
        },
        {
          "caller": "MigrationService._run_migration_file",
          "callee": "info",
          "line": 144,
          "type": "attribute"
        },
        {
          "caller": "MigrationService._run_migration_file",
          "callee": "error",
          "line": 147,
          "type": "attribute"
        },
        {
          "caller": "MigrationService._run_migration_file",
          "callee": "str",
          "line": 149,
          "type": "direct"
        },
        {
          "caller": "MigrationService.get_migration_status",
          "callee": "_get_completed_migrations",
          "line": 158,
          "type": "attribute"
        },
        {
          "caller": "MigrationService.get_migration_status",
          "callee": "_get_migration_files",
          "line": 159,
          "type": "attribute"
        },
        {
          "caller": "MigrationService.get_migration_status",
          "callee": "len",
          "line": 165,
          "type": "direct"
        },
        {
          "caller": "MigrationService.get_migration_status",
          "callee": "len",
          "line": 166,
          "type": "direct"
        },
        {
          "caller": "MigrationService.get_migration_status",
          "callee": "len",
          "line": 167,
          "type": "direct"
        },
        {
          "caller": "MigrationService.get_migration_status",
          "callee": "sorted",
          "line": 168,
          "type": "direct"
        },
        {
          "caller": "MigrationService.get_migration_status",
          "callee": "sorted",
          "line": 169,
          "type": "direct"
        },
        {
          "caller": "MigrationService.get_migration_status",
          "callee": "error",
          "line": 174,
          "type": "attribute"
        },
        {
          "caller": "MigrationService.get_migration_status",
          "callee": "str",
          "line": 174,
          "type": "direct"
        },
        {
          "caller": "MigrationService.force_run_migration",
          "callee": "RuntimeError",
          "line": 181,
          "type": "direct"
        },
        {
          "caller": "MigrationService.force_run_migration",
          "callee": "exists",
          "line": 185,
          "type": "attribute"
        },
        {
          "caller": "MigrationService.force_run_migration",
          "callee": "ValueError",
          "line": 186,
          "type": "direct"
        },
        {
          "caller": "MigrationService.force_run_migration",
          "callee": "_run_migration_file",
          "line": 188,
          "type": "attribute"
        },
        {
          "caller": "MigrationService.force_run_migration",
          "callee": "info",
          "line": 189,
          "type": "attribute"
        },
        {
          "caller": "MigrationService.force_run_migration",
          "callee": "error",
          "line": 192,
          "type": "attribute"
        },
        {
          "caller": "MigrationService.force_run_migration",
          "callee": "str",
          "line": 193,
          "type": "direct"
        }
      ],
      "error": null
    },
    {
      "filepath": "src\\services\\monitoring_service.py",
      "functions": [
        {
          "name": "__init__",
          "full_name": "MonitoringService.__init__",
          "class": "MonitoringService",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 21,
          "line_end": 38,
          "access_level": "dunder",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "start_monitoring",
          "full_name": "MonitoringService.start_monitoring",
          "class": "MonitoringService",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Start the monitoring service.",
          "line_start": 40,
          "line_end": 49,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_error_monitoring_loop",
          "full_name": "MonitoringService._error_monitoring_loop",
          "class": "MonitoringService",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Monitor error rates and patterns.",
          "line_start": 51,
          "line_end": 59,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_health_check_loop",
          "full_name": "MonitoringService._health_check_loop",
          "class": "MonitoringService",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Perform periodic health checks.",
          "line_start": 61,
          "line_end": 69,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_cleanup_old_logs_loop",
          "full_name": "MonitoringService._cleanup_old_logs_loop",
          "class": "MonitoringService",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Clean up old log files.",
          "line_start": 71,
          "line_end": 79,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_check_error_rates",
          "full_name": "MonitoringService._check_error_rates",
          "class": "MonitoringService",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Check error rates and trigger alerts if necessary.",
          "line_start": 81,
          "line_end": 118,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_check_error_patterns",
          "full_name": "MonitoringService._check_error_patterns",
          "class": "MonitoringService",
          "signature": "(self, stats: Dict[str, Any])",
          "return_type": "",
          "decorators": [],
          "docstring": "Check for concerning error patterns.",
          "line_start": 120,
          "line_end": 144,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_perform_health_checks",
          "full_name": "MonitoringService._perform_health_checks",
          "class": "MonitoringService",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Perform system health checks.",
          "line_start": 146,
          "line_end": 171,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_check_database_health",
          "full_name": "MonitoringService._check_database_health",
          "class": "MonitoringService",
          "signature": "(self)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Check database health.",
          "line_start": 173,
          "line_end": 205,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_check_file_system_health",
          "full_name": "MonitoringService._check_file_system_health",
          "class": "MonitoringService",
          "signature": "(self)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Check file system health.",
          "line_start": 207,
          "line_end": 236,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_trigger_alert",
          "full_name": "MonitoringService._trigger_alert",
          "class": "MonitoringService",
          "signature": "(self, alert_type: str, message: str, context: Dict[str, Any])",
          "return_type": "",
          "decorators": [],
          "docstring": "Trigger an alert with cooldown.",
          "line_start": 238,
          "line_end": 270,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_store_alert",
          "full_name": "MonitoringService._store_alert",
          "class": "MonitoringService",
          "signature": "(self, alert_type: str, message: str, context: Dict[str, Any])",
          "return_type": "",
          "decorators": [],
          "docstring": "Store alert information to file.",
          "line_start": 272,
          "line_end": 289,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_cleanup_old_logs",
          "full_name": "MonitoringService._cleanup_old_logs",
          "class": "MonitoringService",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Clean up old log files.",
          "line_start": 291,
          "line_end": 315,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_monitoring_status",
          "full_name": "MonitoringService.get_monitoring_status",
          "class": "MonitoringService",
          "signature": "(self)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Get current monitoring status.",
          "line_start": 317,
          "line_end": 362,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "asyncio",
          "alias": null,
          "line": 5
        },
        {
          "type": "import",
          "module": "structlog",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "timedelta",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Dict",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Any",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "List",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Optional",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "pathlib",
          "name": "Path",
          "alias": null,
          "line": 9
        },
        {
          "type": "import",
          "module": "json",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "src.utils.error_handling",
          "name": "error_handler",
          "alias": null,
          "line": 12
        },
        {
          "type": "from_import",
          "module": "src.utils.error_handling",
          "name": "ErrorSeverity",
          "alias": null,
          "line": 12
        },
        {
          "type": "from_import",
          "module": "src.utils.config",
          "name": "get_settings",
          "alias": null,
          "line": 13
        },
        {
          "type": "from_import",
          "module": "database.database",
          "name": "Database",
          "alias": null,
          "line": 177
        },
        {
          "type": "import",
          "module": "shutil",
          "alias": null,
          "line": 219
        }
      ],
      "function_calls": [
        {
          "caller": "MonitoringService.__init__",
          "callee": "get_settings",
          "line": 22,
          "type": "direct"
        },
        {
          "caller": "MonitoringService.start_monitoring",
          "callee": "info",
          "line": 42,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService.start_monitoring",
          "callee": "create_task",
          "line": 45,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService.start_monitoring",
          "callee": "_error_monitoring_loop",
          "line": 45,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService.start_monitoring",
          "callee": "create_task",
          "line": 46,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService.start_monitoring",
          "callee": "_health_check_loop",
          "line": 46,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService.start_monitoring",
          "callee": "create_task",
          "line": 47,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService.start_monitoring",
          "callee": "_cleanup_old_logs_loop",
          "line": 47,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService.start_monitoring",
          "callee": "info",
          "line": 49,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._error_monitoring_loop",
          "callee": "_check_error_rates",
          "line": 55,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._error_monitoring_loop",
          "callee": "sleep",
          "line": 56,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._error_monitoring_loop",
          "callee": "error",
          "line": 58,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._error_monitoring_loop",
          "callee": "str",
          "line": 58,
          "type": "direct"
        },
        {
          "caller": "MonitoringService._error_monitoring_loop",
          "callee": "sleep",
          "line": 59,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._health_check_loop",
          "callee": "_perform_health_checks",
          "line": 65,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._health_check_loop",
          "callee": "sleep",
          "line": 66,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._health_check_loop",
          "callee": "error",
          "line": 68,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._health_check_loop",
          "callee": "str",
          "line": 68,
          "type": "direct"
        },
        {
          "caller": "MonitoringService._health_check_loop",
          "callee": "sleep",
          "line": 69,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._cleanup_old_logs_loop",
          "callee": "_cleanup_old_logs",
          "line": 75,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._cleanup_old_logs_loop",
          "callee": "sleep",
          "line": 76,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._cleanup_old_logs_loop",
          "callee": "error",
          "line": 78,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._cleanup_old_logs_loop",
          "callee": "str",
          "line": 78,
          "type": "direct"
        },
        {
          "caller": "MonitoringService._cleanup_old_logs_loop",
          "callee": "sleep",
          "line": 79,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._check_error_rates",
          "callee": "get_error_statistics",
          "line": 85,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._check_error_rates",
          "callee": "get",
          "line": 89,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._check_error_rates",
          "callee": "_trigger_alert",
          "line": 91,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._check_error_rates",
          "callee": "get",
          "line": 98,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._check_error_rates",
          "callee": "_trigger_alert",
          "line": 100,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._check_error_rates",
          "callee": "_trigger_alert",
          "line": 108,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._check_error_rates",
          "callee": "_check_error_patterns",
          "line": 115,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._check_error_rates",
          "callee": "error",
          "line": 118,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._check_error_rates",
          "callee": "str",
          "line": 118,
          "type": "direct"
        },
        {
          "caller": "MonitoringService._check_error_patterns",
          "callee": "items",
          "line": 126,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._check_error_patterns",
          "callee": "_trigger_alert",
          "line": 128,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._check_error_patterns",
          "callee": "items",
          "line": 135,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._check_error_patterns",
          "callee": "_trigger_alert",
          "line": 137,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._check_error_patterns",
          "callee": "error",
          "line": 144,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._check_error_patterns",
          "callee": "str",
          "line": 144,
          "type": "direct"
        },
        {
          "caller": "MonitoringService._perform_health_checks",
          "callee": "_check_database_health",
          "line": 153,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._perform_health_checks",
          "callee": "_check_file_system_health",
          "line": 157,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._perform_health_checks",
          "callee": "items",
          "line": 160,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._perform_health_checks",
          "callee": "_trigger_alert",
          "line": 162,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._perform_health_checks",
          "callee": "join",
          "line": 164,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._perform_health_checks",
          "callee": "debug",
          "line": 168,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._perform_health_checks",
          "callee": "error",
          "line": 171,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._perform_health_checks",
          "callee": "str",
          "line": 171,
          "type": "direct"
        },
        {
          "caller": "MonitoringService._check_database_health",
          "callee": "Database",
          "line": 179,
          "type": "direct"
        },
        {
          "caller": "MonitoringService._check_database_health",
          "callee": "execute_query",
          "line": 182,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._check_database_health",
          "callee": "Path",
          "line": 185,
          "type": "direct"
        },
        {
          "caller": "MonitoringService._check_database_health",
          "callee": "exists",
          "line": 186,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._check_database_health",
          "callee": "stat",
          "line": 187,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._check_database_health",
          "callee": "isoformat",
          "line": 191,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._check_database_health",
          "callee": "now",
          "line": 191,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._check_database_health",
          "callee": "isoformat",
          "line": 197,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._check_database_health",
          "callee": "now",
          "line": 197,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._check_database_health",
          "callee": "str",
          "line": 203,
          "type": "direct"
        },
        {
          "caller": "MonitoringService._check_database_health",
          "callee": "isoformat",
          "line": 204,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._check_database_health",
          "callee": "now",
          "line": 204,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._check_file_system_health",
          "callee": "Path",
          "line": 211,
          "type": "direct"
        },
        {
          "caller": "MonitoringService._check_file_system_health",
          "callee": "mkdir",
          "line": 212,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._check_file_system_health",
          "callee": "write_text",
          "line": 215,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._check_file_system_health",
          "callee": "unlink",
          "line": 216,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._check_file_system_health",
          "callee": "disk_usage",
          "line": 220,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._check_file_system_health",
          "callee": "isoformat",
          "line": 228,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._check_file_system_health",
          "callee": "now",
          "line": 228,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._check_file_system_health",
          "callee": "str",
          "line": 234,
          "type": "direct"
        },
        {
          "caller": "MonitoringService._check_file_system_health",
          "callee": "isoformat",
          "line": 235,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._check_file_system_health",
          "callee": "now",
          "line": 235,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._trigger_alert",
          "callee": "timestamp",
          "line": 241,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._trigger_alert",
          "callee": "now",
          "line": 241,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._trigger_alert",
          "callee": "get",
          "line": 242,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._trigger_alert",
          "callee": "warning",
          "line": 252,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._trigger_alert",
          "callee": "isoformat",
          "line": 257,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._trigger_alert",
          "callee": "now",
          "line": 257,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._trigger_alert",
          "callee": "_store_alert",
          "line": 261,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._trigger_alert",
          "callee": "error",
          "line": 270,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._trigger_alert",
          "callee": "str",
          "line": 270,
          "type": "direct"
        },
        {
          "caller": "MonitoringService._store_alert",
          "callee": "Path",
          "line": 275,
          "type": "direct"
        },
        {
          "caller": "MonitoringService._store_alert",
          "callee": "mkdir",
          "line": 276,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._store_alert",
          "callee": "isoformat",
          "line": 279,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._store_alert",
          "callee": "now",
          "line": 279,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._store_alert",
          "callee": "open",
          "line": 285,
          "type": "direct"
        },
        {
          "caller": "MonitoringService._store_alert",
          "callee": "write",
          "line": 286,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._store_alert",
          "callee": "dumps",
          "line": 286,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._store_alert",
          "callee": "error",
          "line": 289,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._store_alert",
          "callee": "str",
          "line": 289,
          "type": "direct"
        },
        {
          "caller": "MonitoringService._cleanup_old_logs",
          "callee": "Path",
          "line": 294,
          "type": "direct"
        },
        {
          "caller": "MonitoringService._cleanup_old_logs",
          "callee": "exists",
          "line": 295,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._cleanup_old_logs",
          "callee": "now",
          "line": 299,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._cleanup_old_logs",
          "callee": "timedelta",
          "line": 299,
          "type": "direct"
        },
        {
          "caller": "MonitoringService._cleanup_old_logs",
          "callee": "timestamp",
          "line": 300,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._cleanup_old_logs",
          "callee": "glob",
          "line": 303,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._cleanup_old_logs",
          "callee": "stat",
          "line": 305,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._cleanup_old_logs",
          "callee": "unlink",
          "line": 306,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._cleanup_old_logs",
          "callee": "warning",
          "line": 309,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._cleanup_old_logs",
          "callee": "str",
          "line": 309,
          "type": "direct"
        },
        {
          "caller": "MonitoringService._cleanup_old_logs",
          "callee": "info",
          "line": 312,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._cleanup_old_logs",
          "callee": "error",
          "line": 315,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService._cleanup_old_logs",
          "callee": "str",
          "line": 315,
          "type": "direct"
        },
        {
          "caller": "MonitoringService.get_monitoring_status",
          "callee": "get_error_statistics",
          "line": 321,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService.get_monitoring_status",
          "callee": "Path",
          "line": 324,
          "type": "direct"
        },
        {
          "caller": "MonitoringService.get_monitoring_status",
          "callee": "exists",
          "line": 326,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService.get_monitoring_status",
          "callee": "open",
          "line": 328,
          "type": "direct"
        },
        {
          "caller": "MonitoringService.get_monitoring_status",
          "callee": "readlines",
          "line": 329,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService.get_monitoring_status",
          "callee": "loads",
          "line": 334,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService.get_monitoring_status",
          "callee": "strip",
          "line": 334,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService.get_monitoring_status",
          "callee": "append",
          "line": 335,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService.get_monitoring_status",
          "callee": "_check_database_health",
          "line": 343,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService.get_monitoring_status",
          "callee": "_check_file_system_health",
          "line": 344,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService.get_monitoring_status",
          "callee": "isoformat",
          "line": 349,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService.get_monitoring_status",
          "callee": "now",
          "line": 349,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService.get_monitoring_status",
          "callee": "list",
          "line": 351,
          "type": "direct"
        },
        {
          "caller": "MonitoringService.get_monitoring_status",
          "callee": "reversed",
          "line": 351,
          "type": "direct"
        },
        {
          "caller": "MonitoringService.get_monitoring_status",
          "callee": "error",
          "line": 357,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService.get_monitoring_status",
          "callee": "str",
          "line": 357,
          "type": "direct"
        },
        {
          "caller": "MonitoringService.get_monitoring_status",
          "callee": "str",
          "line": 360,
          "type": "direct"
        },
        {
          "caller": "MonitoringService.get_monitoring_status",
          "callee": "isoformat",
          "line": 361,
          "type": "attribute"
        },
        {
          "caller": "MonitoringService.get_monitoring_status",
          "callee": "now",
          "line": 361,
          "type": "attribute"
        }
      ],
      "error": null
    },
    {
      "filepath": "src\\services\\preview_render_service.py",
      "functions": [
        {
          "name": "__init__",
          "full_name": "PreviewRenderService.__init__",
          "class": "PreviewRenderService",
          "signature": "(self, cache_dir: str)",
          "return_type": "",
          "decorators": [],
          "docstring": "Initialize preview render service.",
          "line_start": 37,
          "line_end": 84,
          "access_level": "dunder",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_or_generate_preview",
          "full_name": "PreviewRenderService.get_or_generate_preview",
          "class": "PreviewRenderService",
          "signature": "(self, file_path: str, file_type: str, size: Tuple[int, int])",
          "return_type": "Optional[bytes]",
          "decorators": [],
          "docstring": "Get cached preview or generate new one.\n\nArgs:\n    file_path: Path to the 3D file\n    file_type: Type of file (stl, gcode, bgcode, 3mf)\n    size: Desired thumbnail size (width, height)\n\nReturns:\n    PNG image as bytes, or None if generation failed",
          "line_start": 86,
          "line_end": 150,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_render_file",
          "full_name": "PreviewRenderService._render_file",
          "class": "PreviewRenderService",
          "signature": "(self, file_path: str, file_type: str, size: Tuple[int, int])",
          "return_type": "Optional[bytes]",
          "decorators": [],
          "docstring": "Render file to PNG bytes (synchronous, run in executor).\n\nArgs:\n    file_path: Path to the file\n    file_type: File type (stl, gcode, bgcode)\n    size: Desired size\n\nReturns:\n    PNG bytes or None",
          "line_start": 152,
          "line_end": 179,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_render_stl",
          "full_name": "PreviewRenderService._render_stl",
          "class": "PreviewRenderService",
          "signature": "(self, file_path: str, size: Tuple[int, int])",
          "return_type": "Optional[bytes]",
          "decorators": [],
          "docstring": "Render STL file to PNG thumbnail.\n\nArgs:\n    file_path: Path to STL file\n    size: Desired thumbnail size\n\nReturns:\n    PNG image as bytes",
          "line_start": 181,
          "line_end": 262,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_render_3mf",
          "full_name": "PreviewRenderService._render_3mf",
          "class": "PreviewRenderService",
          "signature": "(self, file_path: str, size: Tuple[int, int])",
          "return_type": "Optional[bytes]",
          "decorators": [],
          "docstring": "Render 3MF file by extracting and rendering its meshes.\n\nArgs:\n    file_path: Path to 3MF file\n    size: Desired thumbnail size\n\nReturns:\n    PNG image as bytes",
          "line_start": 264,
          "line_end": 296,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_render_mesh_common",
          "full_name": "PreviewRenderService._render_mesh_common",
          "class": "PreviewRenderService",
          "signature": "(self, mesh: 'trimesh.Trimesh', size: Tuple[int, int])",
          "return_type": "Optional[bytes]",
          "decorators": [],
          "docstring": "Common mesh rendering logic for any trimesh object.\n\nArgs:\n    mesh: Trimesh object\n    size: Desired size\n\nReturns:\n    PNG bytes",
          "line_start": 298,
          "line_end": 370,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_render_gcode_toolpath",
          "full_name": "PreviewRenderService._render_gcode_toolpath",
          "class": "PreviewRenderService",
          "signature": "(self, file_path: str, size: Tuple[int, int])",
          "return_type": "Optional[bytes]",
          "decorators": [],
          "docstring": "Render GCODE toolpath visualization with optional print optimization.\n\nArgs:\n    file_path: Path to GCODE file\n    size: Desired size\n\nReturns:\n    PNG bytes or None",
          "line_start": 372,
          "line_end": 477,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_get_cache_key",
          "full_name": "PreviewRenderService._get_cache_key",
          "class": "PreviewRenderService",
          "signature": "(self, file_path: str, size: Tuple[int, int])",
          "return_type": "str",
          "decorators": [],
          "docstring": "Generate cache key for a file and size.\n\nArgs:\n    file_path: File path\n    size: Thumbnail size\n\nReturns:\n    Cache key hash",
          "line_start": 479,
          "line_end": 497,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "clear_cache",
          "full_name": "PreviewRenderService.clear_cache",
          "class": "PreviewRenderService",
          "signature": "(self, older_than_days: Optional[int])",
          "return_type": "int",
          "decorators": [],
          "docstring": "Clear preview cache.\n\nArgs:\n    older_than_days: Only clear files older than this many days.\n                   If None, clear all.\n\nReturns:\n    Number of files removed",
          "line_start": 499,
          "line_end": 535,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_statistics",
          "full_name": "PreviewRenderService.get_statistics",
          "class": "PreviewRenderService",
          "signature": "(self)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Get rendering statistics.",
          "line_start": 537,
          "line_end": 549,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "update_config",
          "full_name": "PreviewRenderService.update_config",
          "class": "PreviewRenderService",
          "signature": "(self, config: Dict[str, Any])",
          "return_type": "None",
          "decorators": [],
          "docstring": "Update service configuration.\n\nArgs:\n    config: Configuration dictionary",
          "line_start": 551,
          "line_end": 573,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "asyncio",
          "alias": null,
          "line": 5
        },
        {
          "type": "import",
          "module": "hashlib",
          "alias": null,
          "line": 6
        },
        {
          "type": "import",
          "module": "os",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "timedelta",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "functools",
          "name": "lru_cache",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "io",
          "name": "BytesIO",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "pathlib",
          "name": "Path",
          "alias": null,
          "line": 11
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Optional",
          "alias": null,
          "line": 12
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Tuple",
          "alias": null,
          "line": 12
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Dict",
          "alias": null,
          "line": 12
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Any",
          "alias": null,
          "line": 12
        },
        {
          "type": "import",
          "module": "structlog",
          "alias": null,
          "line": 14
        },
        {
          "type": "from_import",
          "module": "utils.gcode_analyzer",
          "name": "GcodeAnalyzer",
          "alias": null,
          "line": 16
        },
        {
          "type": "from_import",
          "module": "utils.config",
          "name": "get_settings",
          "alias": null,
          "line": 17
        },
        {
          "type": "import",
          "module": "trimesh",
          "alias": null,
          "line": 23
        },
        {
          "type": "import",
          "module": "numpy",
          "alias": "np",
          "line": 24
        },
        {
          "type": "from_import",
          "module": "matplotlib",
          "name": "pyplot",
          "alias": "plt",
          "line": 25
        },
        {
          "type": "from_import",
          "module": "matplotlib.backends.backend_agg",
          "name": "FigureCanvasAgg",
          "alias": null,
          "line": 26
        },
        {
          "type": "from_import",
          "module": "mpl_toolkits.mplot3d",
          "name": "Axes3D",
          "alias": null,
          "line": 27
        }
      ],
      "function_calls": [
        {
          "caller": "PreviewRenderService.__init__",
          "callee": "Path",
          "line": 39,
          "type": "direct"
        },
        {
          "caller": "PreviewRenderService.__init__",
          "callee": "mkdir",
          "line": 40,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService.__init__",
          "callee": "get_settings",
          "line": 60,
          "type": "direct"
        },
        {
          "caller": "PreviewRenderService.__init__",
          "callee": "GcodeAnalyzer",
          "line": 73,
          "type": "direct"
        },
        {
          "caller": "PreviewRenderService.__init__",
          "callee": "timedelta",
          "line": 76,
          "type": "direct"
        },
        {
          "caller": "PreviewRenderService.get_or_generate_preview",
          "callee": "warning",
          "line": 104,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService.get_or_generate_preview",
          "callee": "_get_cache_key",
          "line": 109,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService.get_or_generate_preview",
          "callee": "exists",
          "line": 112,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService.get_or_generate_preview",
          "callee": "now",
          "line": 114,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService.get_or_generate_preview",
          "callee": "fromtimestamp",
          "line": 114,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService.get_or_generate_preview",
          "callee": "stat",
          "line": 114,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService.get_or_generate_preview",
          "callee": "debug",
          "line": 116,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService.get_or_generate_preview",
          "callee": "open",
          "line": 117,
          "type": "direct"
        },
        {
          "caller": "PreviewRenderService.get_or_generate_preview",
          "callee": "read",
          "line": 119,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService.get_or_generate_preview",
          "callee": "info",
          "line": 122,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService.get_or_generate_preview",
          "callee": "get_event_loop",
          "line": 125,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService.get_or_generate_preview",
          "callee": "wait_for",
          "line": 126,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService.get_or_generate_preview",
          "callee": "run_in_executor",
          "line": 127,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService.get_or_generate_preview",
          "callee": "open",
          "line": 133,
          "type": "direct"
        },
        {
          "caller": "PreviewRenderService.get_or_generate_preview",
          "callee": "write",
          "line": 134,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService.get_or_generate_preview",
          "callee": "info",
          "line": 137,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService.get_or_generate_preview",
          "callee": "error",
          "line": 144,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService.get_or_generate_preview",
          "callee": "error",
          "line": 148,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_file",
          "callee": "lower",
          "line": 169,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_file",
          "callee": "_render_stl",
          "line": 172,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_file",
          "callee": "_render_3mf",
          "line": 174,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_file",
          "callee": "_render_gcode_toolpath",
          "line": 176,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_file",
          "callee": "warning",
          "line": 178,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_stl",
          "callee": "load_mesh",
          "line": 194,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_stl",
          "callee": "max",
          "line": 201,
          "type": "direct"
        },
        {
          "caller": "PreviewRenderService._render_stl",
          "callee": "figure",
          "line": 209,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_stl",
          "callee": "add_subplot",
          "line": 210,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_stl",
          "callee": "set_facecolor",
          "line": 213,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_stl",
          "callee": "set_facecolor",
          "line": 214,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_stl",
          "callee": "plot_trisurf",
          "line": 217,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_stl",
          "callee": "view_init",
          "line": 231,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_stl",
          "callee": "set_axis_off",
          "line": 234,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_stl",
          "callee": "set_xlim",
          "line": 238,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_stl",
          "callee": "set_ylim",
          "line": 239,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_stl",
          "callee": "set_zlim",
          "line": 240,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_stl",
          "callee": "BytesIO",
          "line": 243,
          "type": "direct"
        },
        {
          "caller": "PreviewRenderService._render_stl",
          "callee": "savefig",
          "line": 244,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_stl",
          "callee": "close",
          "line": 252,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_stl",
          "callee": "seek",
          "line": 254,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_stl",
          "callee": "read",
          "line": 255,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_stl",
          "callee": "warning",
          "line": 257,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_stl",
          "callee": "error",
          "line": 261,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_3mf",
          "callee": "load",
          "line": 277,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_3mf",
          "callee": "isinstance",
          "line": 280,
          "type": "direct"
        },
        {
          "caller": "PreviewRenderService._render_3mf",
          "callee": "concatenate",
          "line": 282,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_3mf",
          "callee": "values",
          "line": 283,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_3mf",
          "callee": "isinstance",
          "line": 283,
          "type": "direct"
        },
        {
          "caller": "PreviewRenderService._render_3mf",
          "callee": "_render_mesh_common",
          "line": 289,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_3mf",
          "callee": "warning",
          "line": 291,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_3mf",
          "callee": "error",
          "line": 295,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_mesh_common",
          "callee": "max",
          "line": 314,
          "type": "direct"
        },
        {
          "caller": "PreviewRenderService._render_mesh_common",
          "callee": "figure",
          "line": 322,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_mesh_common",
          "callee": "add_subplot",
          "line": 323,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_mesh_common",
          "callee": "set_facecolor",
          "line": 326,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_mesh_common",
          "callee": "set_facecolor",
          "line": 327,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_mesh_common",
          "callee": "plot_trisurf",
          "line": 330,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_mesh_common",
          "callee": "view_init",
          "line": 344,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_mesh_common",
          "callee": "set_axis_off",
          "line": 345,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_mesh_common",
          "callee": "set_xlim",
          "line": 349,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_mesh_common",
          "callee": "set_ylim",
          "line": 350,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_mesh_common",
          "callee": "set_zlim",
          "line": 351,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_mesh_common",
          "callee": "BytesIO",
          "line": 354,
          "type": "direct"
        },
        {
          "caller": "PreviewRenderService._render_mesh_common",
          "callee": "savefig",
          "line": 355,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_mesh_common",
          "callee": "close",
          "line": 363,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_mesh_common",
          "callee": "seek",
          "line": 365,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_mesh_common",
          "callee": "read",
          "line": 366,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_mesh_common",
          "callee": "error",
          "line": 369,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_gcode_toolpath",
          "callee": "info",
          "line": 384,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_gcode_toolpath",
          "callee": "open",
          "line": 388,
          "type": "direct"
        },
        {
          "caller": "PreviewRenderService._render_gcode_toolpath",
          "callee": "enumerate",
          "line": 390,
          "type": "direct"
        },
        {
          "caller": "PreviewRenderService._render_gcode_toolpath",
          "callee": "append",
          "line": 397,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_gcode_toolpath",
          "callee": "rstrip",
          "line": 397,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_gcode_toolpath",
          "callee": "len",
          "line": 401,
          "type": "direct"
        },
        {
          "caller": "PreviewRenderService._render_gcode_toolpath",
          "callee": "get_optimized_gcode_lines",
          "line": 402,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_gcode_toolpath",
          "callee": "len",
          "line": 405,
          "type": "direct"
        },
        {
          "caller": "PreviewRenderService._render_gcode_toolpath",
          "callee": "open",
          "line": 406,
          "type": "direct"
        },
        {
          "caller": "PreviewRenderService._render_gcode_toolpath",
          "callee": "readlines",
          "line": 407,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_gcode_toolpath",
          "callee": "len",
          "line": 408,
          "type": "direct"
        },
        {
          "caller": "PreviewRenderService._render_gcode_toolpath",
          "callee": "min",
          "line": 409,
          "type": "direct"
        },
        {
          "caller": "PreviewRenderService._render_gcode_toolpath",
          "callee": "len",
          "line": 409,
          "type": "direct"
        },
        {
          "caller": "PreviewRenderService._render_gcode_toolpath",
          "callee": "rstrip",
          "line": 410,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_gcode_toolpath",
          "callee": "info",
          "line": 412,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_gcode_toolpath",
          "callee": "len",
          "line": 412,
          "type": "direct"
        },
        {
          "caller": "PreviewRenderService._render_gcode_toolpath",
          "callee": "startswith",
          "line": 420,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_gcode_toolpath",
          "callee": "startswith",
          "line": 420,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_gcode_toolpath",
          "callee": "split",
          "line": 421,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_gcode_toolpath",
          "callee": "strip",
          "line": 421,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_gcode_toolpath",
          "callee": "startswith",
          "line": 424,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_gcode_toolpath",
          "callee": "float",
          "line": 425,
          "type": "direct"
        },
        {
          "caller": "PreviewRenderService._render_gcode_toolpath",
          "callee": "startswith",
          "line": 426,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_gcode_toolpath",
          "callee": "float",
          "line": 427,
          "type": "direct"
        },
        {
          "caller": "PreviewRenderService._render_gcode_toolpath",
          "callee": "startswith",
          "line": 428,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_gcode_toolpath",
          "callee": "float",
          "line": 429,
          "type": "direct"
        },
        {
          "caller": "PreviewRenderService._render_gcode_toolpath",
          "callee": "append",
          "line": 433,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_gcode_toolpath",
          "callee": "copy",
          "line": 433,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_gcode_toolpath",
          "callee": "warning",
          "line": 436,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_gcode_toolpath",
          "callee": "array",
          "line": 440,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_gcode_toolpath",
          "callee": "debug",
          "line": 441,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_gcode_toolpath",
          "callee": "len",
          "line": 441,
          "type": "direct"
        },
        {
          "caller": "PreviewRenderService._render_gcode_toolpath",
          "callee": "figure",
          "line": 448,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_gcode_toolpath",
          "callee": "add_subplot",
          "line": 449,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_gcode_toolpath",
          "callee": "plot",
          "line": 452,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_gcode_toolpath",
          "callee": "set_facecolor",
          "line": 456,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_gcode_toolpath",
          "callee": "set_facecolor",
          "line": 457,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_gcode_toolpath",
          "callee": "set_axis_off",
          "line": 458,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_gcode_toolpath",
          "callee": "len",
          "line": 461,
          "type": "direct"
        },
        {
          "caller": "PreviewRenderService._render_gcode_toolpath",
          "callee": "set_xlim",
          "line": 462,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_gcode_toolpath",
          "callee": "min",
          "line": 462,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_gcode_toolpath",
          "callee": "max",
          "line": 462,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_gcode_toolpath",
          "callee": "set_ylim",
          "line": 463,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_gcode_toolpath",
          "callee": "min",
          "line": 463,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_gcode_toolpath",
          "callee": "max",
          "line": 463,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_gcode_toolpath",
          "callee": "set_zlim",
          "line": 464,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_gcode_toolpath",
          "callee": "min",
          "line": 464,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_gcode_toolpath",
          "callee": "max",
          "line": 464,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_gcode_toolpath",
          "callee": "BytesIO",
          "line": 467,
          "type": "direct"
        },
        {
          "caller": "PreviewRenderService._render_gcode_toolpath",
          "callee": "savefig",
          "line": 468,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_gcode_toolpath",
          "callee": "close",
          "line": 470,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_gcode_toolpath",
          "callee": "seek",
          "line": 472,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_gcode_toolpath",
          "callee": "read",
          "line": 473,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._render_gcode_toolpath",
          "callee": "error",
          "line": 476,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._get_cache_key",
          "callee": "getmtime",
          "line": 492,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._get_cache_key",
          "callee": "hexdigest",
          "line": 497,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._get_cache_key",
          "callee": "md5",
          "line": 497,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService._get_cache_key",
          "callee": "encode",
          "line": 497,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService.clear_cache",
          "callee": "now",
          "line": 515,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService.clear_cache",
          "callee": "timedelta",
          "line": 515,
          "type": "direct"
        },
        {
          "caller": "PreviewRenderService.clear_cache",
          "callee": "glob",
          "line": 517,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService.clear_cache",
          "callee": "is_file",
          "line": 518,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService.clear_cache",
          "callee": "unlink",
          "line": 521,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService.clear_cache",
          "callee": "fromtimestamp",
          "line": 525,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService.clear_cache",
          "callee": "stat",
          "line": 525,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService.clear_cache",
          "callee": "unlink",
          "line": 527,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService.clear_cache",
          "callee": "info",
          "line": 530,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService.clear_cache",
          "callee": "error",
          "line": 533,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService.get_statistics",
          "callee": "sum",
          "line": 539,
          "type": "direct"
        },
        {
          "caller": "PreviewRenderService.get_statistics",
          "callee": "stat",
          "line": 540,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService.get_statistics",
          "callee": "glob",
          "line": 540,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService.get_statistics",
          "callee": "is_file",
          "line": 540,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService.get_statistics",
          "callee": "len",
          "line": 542,
          "type": "direct"
        },
        {
          "caller": "PreviewRenderService.get_statistics",
          "callee": "list",
          "line": 542,
          "type": "direct"
        },
        {
          "caller": "PreviewRenderService.get_statistics",
          "callee": "glob",
          "line": 542,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService.get_statistics",
          "callee": "round",
          "line": 546,
          "type": "direct"
        },
        {
          "caller": "PreviewRenderService.update_config",
          "callee": "update",
          "line": 559,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService.update_config",
          "callee": "update",
          "line": 562,
          "type": "attribute"
        },
        {
          "caller": "PreviewRenderService.update_config",
          "callee": "timedelta",
          "line": 568,
          "type": "direct"
        },
        {
          "caller": "PreviewRenderService.update_config",
          "callee": "info",
          "line": 573,
          "type": "attribute"
        }
      ],
      "error": null
    },
    {
      "filepath": "src\\services\\printer_service.py",
      "functions": [
        {
          "name": "__init__",
          "full_name": "PrinterService.__init__",
          "class": "PrinterService",
          "signature": "(self, database: Database, event_service: EventService, config_service: ConfigService, file_service)",
          "return_type": "",
          "decorators": [],
          "docstring": "Initialize printer service.",
          "line_start": 24,
          "line_end": 33,
          "access_level": "dunder",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "initialize",
          "full_name": "PrinterService.initialize",
          "class": "PrinterService",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Initialize printer service and load configured printers.",
          "line_start": 35,
          "line_end": 39,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_load_printers",
          "full_name": "PrinterService._load_printers",
          "class": "PrinterService",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Load printer configurations and create instances.",
          "line_start": 42,
          "line_end": 68,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_create_printer_instance",
          "full_name": "PrinterService._create_printer_instance",
          "class": "PrinterService",
          "signature": "(self, printer_id: str, config)",
          "return_type": "Optional[BasePrinter]",
          "decorators": [],
          "docstring": "Create printer instance based on configuration.",
          "line_start": 70,
          "line_end": 91,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_sync_database_printers",
          "full_name": "PrinterService._sync_database_printers",
          "class": "PrinterService",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Sync printer configurations with database.",
          "line_start": 93,
          "line_end": 114,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_handle_status_update",
          "full_name": "PrinterService._handle_status_update",
          "class": "PrinterService",
          "signature": "(self, status: PrinterStatusUpdate)",
          "return_type": "",
          "decorators": [],
          "docstring": "Handle status updates from printers.",
          "line_start": 116,
          "line_end": 163,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_is_print_file",
          "full_name": "PrinterService._is_print_file",
          "class": "PrinterService",
          "signature": "(self, filename: str)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Heuristic: check if filename has a known printable extension.",
          "line_start": 165,
          "line_end": 170,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_attempt_download_current_job",
          "full_name": "PrinterService._attempt_download_current_job",
          "class": "PrinterService",
          "signature": "(self, printer_id: str, filename: str)",
          "return_type": "",
          "decorators": [],
          "docstring": "Attempt to download the currently printing file so thumbnail extraction can occur.",
          "line_start": 172,
          "line_end": 242,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_attempt",
          "full_name": "PrinterService._attempt",
          "class": "PrinterService",
          "signature": "(name: str)",
          "return_type": "Optional[Dict[str, Any]]",
          "decorators": [],
          "docstring": "",
          "line_start": 178,
          "line_end": 183,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_store_status_update",
          "full_name": "PrinterService._store_status_update",
          "class": "PrinterService",
          "signature": "(self, status: PrinterStatusUpdate)",
          "return_type": "",
          "decorators": [],
          "docstring": "Store status update in database for history.",
          "line_start": 245,
          "line_end": 252,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "list_printers",
          "full_name": "PrinterService.list_printers",
          "class": "PrinterService",
          "signature": "(self)",
          "return_type": "List[Printer]",
          "decorators": [],
          "docstring": "Get list of all configured printers as Printer objects.",
          "line_start": 254,
          "line_end": 286,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_printers",
          "full_name": "PrinterService.get_printers",
          "class": "PrinterService",
          "signature": "(self)",
          "return_type": "List[Dict[str, Any]]",
          "decorators": [],
          "docstring": "Get list of all configured printers as dictionaries (legacy method).",
          "line_start": 288,
          "line_end": 303,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_printer",
          "full_name": "PrinterService.get_printer",
          "class": "PrinterService",
          "signature": "(self, printer_id: str)",
          "return_type": "Optional[Printer]",
          "decorators": [],
          "docstring": "Get specific printer by ID as domain model.",
          "line_start": 305,
          "line_end": 331,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_printer_driver",
          "full_name": "PrinterService.get_printer_driver",
          "class": "PrinterService",
          "signature": "(self, printer_id: str)",
          "return_type": "Optional[BasePrinter]",
          "decorators": [],
          "docstring": "Get printer driver instance for direct access.",
          "line_start": 333,
          "line_end": 335,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_printer_status",
          "full_name": "PrinterService.get_printer_status",
          "class": "PrinterService",
          "signature": "(self, printer_id: str)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Get current status of a printer.",
          "line_start": 337,
          "line_end": 368,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "connect_printer",
          "full_name": "PrinterService.connect_printer",
          "class": "PrinterService",
          "signature": "(self, printer_id: str)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Connect to a specific printer.",
          "line_start": 370,
          "line_end": 389,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "disconnect_printer",
          "full_name": "PrinterService.disconnect_printer",
          "class": "PrinterService",
          "signature": "(self, printer_id: str)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Disconnect from a specific printer.",
          "line_start": 391,
          "line_end": 402,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_connect_and_monitor_printer",
          "full_name": "PrinterService._connect_and_monitor_printer",
          "class": "PrinterService",
          "signature": "(self, printer_id: str, instance: BasePrinter)",
          "return_type": "",
          "decorators": [],
          "docstring": "Connect to printer and start monitoring (background task helper).",
          "line_start": 404,
          "line_end": 428,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "start_monitoring",
          "full_name": "PrinterService.start_monitoring",
          "class": "PrinterService",
          "signature": "(self, printer_id: Optional[str])",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Start printer monitoring for all or specific printer.",
          "line_start": 430,
          "line_end": 473,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "stop_monitoring",
          "full_name": "PrinterService.stop_monitoring",
          "class": "PrinterService",
          "signature": "(self, printer_id: Optional[str])",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Stop printer monitoring for all or specific printer.",
          "line_start": 475,
          "line_end": 500,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_printer_files",
          "full_name": "PrinterService.get_printer_files",
          "class": "PrinterService",
          "signature": "(self, printer_id: str)",
          "return_type": "List[Dict[str, Any]]",
          "decorators": [],
          "docstring": "Get list of files available on printer.",
          "line_start": 502,
          "line_end": 524,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "download_printer_file",
          "full_name": "PrinterService.download_printer_file",
          "class": "PrinterService",
          "signature": "(self, printer_id: str, filename: str, local_path: str)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Download a file from printer.",
          "line_start": 526,
          "line_end": 550,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "download_current_job_file",
          "full_name": "PrinterService.download_current_job_file",
          "class": "PrinterService",
          "signature": "(self, printer_id: str)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Download (and process) the currently printing job file to generate a thumbnail.\n\nLogic:\n  1. Get current status\n  2. If no active job -> return informative response\n  3. If file already known & has thumbnail -> return existing\n  4. If file known but no thumbnail & local path present -> process thumbnails directly\n  5. Else attempt download from printer (FileService handles async thumbnail processing)",
          "line_start": 552,
          "line_end": 621,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "health_check",
          "full_name": "PrinterService.health_check",
          "class": "PrinterService",
          "signature": "(self)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Check health of all printer connections.",
          "line_start": 623,
          "line_end": 651,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "shutdown",
          "full_name": "PrinterService.shutdown",
          "class": "PrinterService",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Gracefully shutdown printer service.",
          "line_start": 653,
          "line_end": 668,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "create_printer",
          "full_name": "PrinterService.create_printer",
          "class": "PrinterService",
          "signature": "(self, name: str, printer_type: PrinterType, connection_config: Dict[str, Any], location: Optional[str], description: Optional[str])",
          "return_type": "Printer",
          "decorators": [],
          "docstring": "Create a new printer configuration.",
          "line_start": 671,
          "line_end": 721,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "update_printer",
          "full_name": "PrinterService.update_printer",
          "class": "PrinterService",
          "signature": "(self, printer_id: UUID)",
          "return_type": "Optional[Printer]",
          "decorators": [],
          "docstring": "Update printer configuration.",
          "line_start": 723,
          "line_end": 773,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "delete_printer",
          "full_name": "PrinterService.delete_printer",
          "class": "PrinterService",
          "signature": "(self, printer_id: UUID)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Delete a printer configuration.",
          "line_start": 775,
          "line_end": 787,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "pause_printer",
          "full_name": "PrinterService.pause_printer",
          "class": "PrinterService",
          "signature": "(self, printer_id: str)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Pause printing on a specific printer.",
          "line_start": 789,
          "line_end": 801,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "resume_printer",
          "full_name": "PrinterService.resume_printer",
          "class": "PrinterService",
          "signature": "(self, printer_id: str)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Resume printing on a specific printer.",
          "line_start": 803,
          "line_end": 815,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "stop_printer",
          "full_name": "PrinterService.stop_printer",
          "class": "PrinterService",
          "signature": "(self, printer_id: str)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Stop/cancel printing on a specific printer.",
          "line_start": 817,
          "line_end": 829,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "start_printer_monitoring",
          "full_name": "PrinterService.start_printer_monitoring",
          "class": "PrinterService",
          "signature": "(self, printer_id: str)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Start monitoring for a specific printer.",
          "line_start": 831,
          "line_end": 847,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "stop_printer_monitoring",
          "full_name": "PrinterService.stop_printer_monitoring",
          "class": "PrinterService",
          "signature": "(self, printer_id: str)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Stop monitoring for a specific printer.",
          "line_start": 849,
          "line_end": 862,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "asyncio",
          "alias": null,
          "line": 5
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "List",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Dict",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Any",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Optional",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "uuid",
          "name": "uuid4",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "uuid",
          "name": "UUID",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 8
        },
        {
          "type": "import",
          "module": "structlog",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "src.database.database",
          "name": "Database",
          "alias": null,
          "line": 11
        },
        {
          "type": "from_import",
          "module": "src.services.event_service",
          "name": "EventService",
          "alias": null,
          "line": 12
        },
        {
          "type": "from_import",
          "module": "src.services.config_service",
          "name": "ConfigService",
          "alias": null,
          "line": 13
        },
        {
          "type": "from_import",
          "module": "src.models.printer",
          "name": "PrinterType",
          "alias": null,
          "line": 14
        },
        {
          "type": "from_import",
          "module": "src.models.printer",
          "name": "PrinterStatus",
          "alias": null,
          "line": 14
        },
        {
          "type": "from_import",
          "module": "src.models.printer",
          "name": "PrinterStatusUpdate",
          "alias": null,
          "line": 14
        },
        {
          "type": "from_import",
          "module": "src.models.printer",
          "name": "Printer",
          "alias": null,
          "line": 14
        },
        {
          "type": "from_import",
          "module": "src.printers",
          "name": "BambuLabPrinter",
          "alias": null,
          "line": 15
        },
        {
          "type": "from_import",
          "module": "src.printers",
          "name": "PrusaPrinter",
          "alias": null,
          "line": 15
        },
        {
          "type": "from_import",
          "module": "src.printers",
          "name": "BasePrinter",
          "alias": null,
          "line": 15
        },
        {
          "type": "from_import",
          "module": "src.utils.exceptions",
          "name": "PrinterConnectionError",
          "alias": null,
          "line": 16
        },
        {
          "type": "from_import",
          "module": "src.utils.exceptions",
          "name": "NotFoundError",
          "alias": null,
          "line": 16
        },
        {
          "type": "import",
          "module": "os",
          "alias": "_os",
          "line": 169
        },
        {
          "type": "import",
          "module": "re",
          "alias": "_re",
          "line": 217
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 346
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 380
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 412
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 443
        }
      ],
      "function_calls": [
        {
          "caller": "PrinterService.initialize",
          "callee": "info",
          "line": 37,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.initialize",
          "callee": "_load_printers",
          "line": 38,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.initialize",
          "callee": "_sync_database_printers",
          "line": 39,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._load_printers",
          "callee": "get_active_printers",
          "line": 44,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._load_printers",
          "callee": "items",
          "line": 46,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._load_printers",
          "callee": "_create_printer_instance",
          "line": 49,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._load_printers",
          "callee": "add_status_callback",
          "line": 55,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._load_printers",
          "callee": "create_task",
          "line": 56,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._load_printers",
          "callee": "_handle_status_update",
          "line": 57,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._load_printers",
          "callee": "info",
          "line": 61,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._load_printers",
          "callee": "error",
          "line": 65,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._load_printers",
          "callee": "str",
          "line": 66,
          "type": "direct"
        },
        {
          "caller": "PrinterService._load_printers",
          "callee": "info",
          "line": 68,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._load_printers",
          "callee": "len",
          "line": 68,
          "type": "direct"
        },
        {
          "caller": "PrinterService._create_printer_instance",
          "callee": "BambuLabPrinter",
          "line": 73,
          "type": "direct"
        },
        {
          "caller": "PrinterService._create_printer_instance",
          "callee": "PrusaPrinter",
          "line": 82,
          "type": "direct"
        },
        {
          "caller": "PrinterService._create_printer_instance",
          "callee": "warning",
          "line": 90,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._sync_database_printers",
          "callee": "cursor",
          "line": 95,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._sync_database_printers",
          "callee": "items",
          "line": 96,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._sync_database_printers",
          "callee": "execute",
          "line": 98,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._sync_database_printers",
          "callee": "replace",
          "line": 105,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._sync_database_printers",
          "callee": "lower",
          "line": 105,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._sync_database_printers",
          "callee": "getattr",
          "line": 105,
          "type": "direct"
        },
        {
          "caller": "PrinterService._sync_database_printers",
          "callee": "getattr",
          "line": 107,
          "type": "direct"
        },
        {
          "caller": "PrinterService._sync_database_printers",
          "callee": "getattr",
          "line": 108,
          "type": "direct"
        },
        {
          "caller": "PrinterService._sync_database_printers",
          "callee": "getattr",
          "line": 109,
          "type": "direct"
        },
        {
          "caller": "PrinterService._sync_database_printers",
          "callee": "commit",
          "line": 113,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._sync_database_printers",
          "callee": "info",
          "line": 114,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._handle_status_update",
          "callee": "_store_status_update",
          "line": 119,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._handle_status_update",
          "callee": "emit_event",
          "line": 122,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._handle_status_update",
          "callee": "isoformat",
          "line": 133,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._handle_status_update",
          "callee": "set",
          "line": 149,
          "type": "direct"
        },
        {
          "caller": "PrinterService._handle_status_update",
          "callee": "startswith",
          "line": 152,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._handle_status_update",
          "callee": "split",
          "line": 153,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._handle_status_update",
          "callee": "_is_print_file",
          "line": 158,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._handle_status_update",
          "callee": "add",
          "line": 160,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._handle_status_update",
          "callee": "create_task",
          "line": 161,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._handle_status_update",
          "callee": "_attempt_download_current_job",
          "line": 161,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._handle_status_update",
          "callee": "debug",
          "line": 163,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._handle_status_update",
          "callee": "str",
          "line": 163,
          "type": "direct"
        },
        {
          "caller": "PrinterService._is_print_file",
          "callee": "lower",
          "line": 168,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._is_print_file",
          "callee": "splitext",
          "line": 170,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._attempt_download_current_job",
          "callee": "info",
          "line": 175,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._attempt",
          "callee": "download_file",
          "line": 180,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._attempt",
          "callee": "debug",
          "line": 182,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._attempt",
          "callee": "str",
          "line": 182,
          "type": "direct"
        },
        {
          "caller": "PrinterService._attempt",
          "callee": "str",
          "line": 183,
          "type": "direct"
        },
        {
          "caller": "PrinterService._attempt_download_current_job",
          "callee": "_attempt",
          "line": 187,
          "type": "direct"
        },
        {
          "caller": "PrinterService._attempt_download_current_job",
          "callee": "append",
          "line": 188,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._attempt_download_current_job",
          "callee": "get",
          "line": 190,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._attempt_download_current_job",
          "callee": "info",
          "line": 191,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._attempt_download_current_job",
          "callee": "get_printer_files",
          "line": 196,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._attempt_download_current_job",
          "callee": "debug",
          "line": 199,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._attempt_download_current_job",
          "callee": "str",
          "line": 199,
          "type": "direct"
        },
        {
          "caller": "PrinterService._attempt_download_current_job",
          "callee": "strip",
          "line": 201,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._attempt_download_current_job",
          "callee": "lower",
          "line": 201,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._attempt_download_current_job",
          "callee": "set",
          "line": 203,
          "type": "direct"
        },
        {
          "caller": "PrinterService._attempt_download_current_job",
          "callee": "get",
          "line": 206,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._attempt_download_current_job",
          "callee": "lower",
          "line": 207,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._attempt_download_current_job",
          "callee": "add",
          "line": 208,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._attempt_download_current_job",
          "callee": "strip",
          "line": 210,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._attempt_download_current_job",
          "callee": "replace",
          "line": 210,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._attempt_download_current_job",
          "callee": "replace",
          "line": 210,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._attempt_download_current_job",
          "callee": "replace",
          "line": 210,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._attempt_download_current_job",
          "callee": "replace",
          "line": 210,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._attempt_download_current_job",
          "callee": "add",
          "line": 212,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._attempt_download_current_job",
          "callee": "replace",
          "line": 213,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._attempt_download_current_job",
          "callee": "add",
          "line": 215,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._attempt_download_current_job",
          "callee": "strip",
          "line": 218,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._attempt_download_current_job",
          "callee": "sub",
          "line": 218,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._attempt_download_current_job",
          "callee": "add",
          "line": 220,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._attempt_download_current_job",
          "callee": "get",
          "line": 223,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._attempt_download_current_job",
          "callee": "startswith",
          "line": 224,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._attempt_download_current_job",
          "callee": "lower",
          "line": 224,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._attempt_download_current_job",
          "callee": "abs",
          "line": 224,
          "type": "direct"
        },
        {
          "caller": "PrinterService._attempt_download_current_job",
          "callee": "len",
          "line": 224,
          "type": "direct"
        },
        {
          "caller": "PrinterService._attempt_download_current_job",
          "callee": "len",
          "line": 224,
          "type": "direct"
        },
        {
          "caller": "PrinterService._attempt_download_current_job",
          "callee": "add",
          "line": 225,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._attempt_download_current_job",
          "callee": "get",
          "line": 229,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._attempt_download_current_job",
          "callee": "set",
          "line": 229,
          "type": "direct"
        },
        {
          "caller": "PrinterService._attempt_download_current_job",
          "callee": "add",
          "line": 231,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._attempt_download_current_job",
          "callee": "_attempt",
          "line": 232,
          "type": "direct"
        },
        {
          "caller": "PrinterService._attempt_download_current_job",
          "callee": "append",
          "line": 233,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._attempt_download_current_job",
          "callee": "get",
          "line": 234,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._attempt_download_current_job",
          "callee": "info",
          "line": 235,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._attempt_download_current_job",
          "callee": "get",
          "line": 239,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._attempt_download_current_job",
          "callee": "warning",
          "line": 240,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._attempt_download_current_job",
          "callee": "get",
          "line": 240,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._attempt_download_current_job",
          "callee": "get",
          "line": 240,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._attempt_download_current_job",
          "callee": "warning",
          "line": 242,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._attempt_download_current_job",
          "callee": "str",
          "line": 242,
          "type": "direct"
        },
        {
          "caller": "PrinterService._store_status_update",
          "callee": "info",
          "line": 249,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.list_printers",
          "callee": "items",
          "line": 258,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.list_printers",
          "callee": "now",
          "line": 270,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.list_printers",
          "callee": "Printer",
          "line": 272,
          "type": "direct"
        },
        {
          "caller": "PrinterService.list_printers",
          "callee": "lower",
          "line": 275,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.list_printers",
          "callee": "type",
          "line": 275,
          "type": "direct"
        },
        {
          "caller": "PrinterService.list_printers",
          "callee": "getattr",
          "line": 277,
          "type": "direct"
        },
        {
          "caller": "PrinterService.list_printers",
          "callee": "getattr",
          "line": 278,
          "type": "direct"
        },
        {
          "caller": "PrinterService.list_printers",
          "callee": "getattr",
          "line": 279,
          "type": "direct"
        },
        {
          "caller": "PrinterService.list_printers",
          "callee": "append",
          "line": 284,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.get_printers",
          "callee": "items",
          "line": 292,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.get_printers",
          "callee": "replace",
          "line": 296,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.get_printers",
          "callee": "lower",
          "line": 296,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.get_printers",
          "callee": "type",
          "line": 296,
          "type": "direct"
        },
        {
          "caller": "PrinterService.get_printers",
          "callee": "dict",
          "line": 299,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.get_printers",
          "callee": "append",
          "line": 301,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.get_printer",
          "callee": "get",
          "line": 307,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.get_printer",
          "callee": "Printer",
          "line": 320,
          "type": "direct"
        },
        {
          "caller": "PrinterService.get_printer",
          "callee": "lower",
          "line": 323,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.get_printer",
          "callee": "type",
          "line": 323,
          "type": "direct"
        },
        {
          "caller": "PrinterService.get_printer",
          "callee": "getattr",
          "line": 325,
          "type": "direct"
        },
        {
          "caller": "PrinterService.get_printer",
          "callee": "getattr",
          "line": 326,
          "type": "direct"
        },
        {
          "caller": "PrinterService.get_printer",
          "callee": "getattr",
          "line": 327,
          "type": "direct"
        },
        {
          "caller": "PrinterService.get_printer_driver",
          "callee": "get",
          "line": 335,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.get_printer_status",
          "callee": "get",
          "line": 339,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.get_printer_status",
          "callee": "NotFoundError",
          "line": 341,
          "type": "direct"
        },
        {
          "caller": "PrinterService.get_printer_status",
          "callee": "get_status",
          "line": 344,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.get_printer_status",
          "callee": "update_printer_status",
          "line": 347,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.get_printer_status",
          "callee": "lower",
          "line": 349,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.get_printer_status",
          "callee": "now",
          "line": 350,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.get_printer_status",
          "callee": "isoformat",
          "line": 360,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.get_printer_status",
          "callee": "error",
          "line": 363,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.get_printer_status",
          "callee": "str",
          "line": 363,
          "type": "direct"
        },
        {
          "caller": "PrinterService.get_printer_status",
          "callee": "str",
          "line": 367,
          "type": "direct"
        },
        {
          "caller": "PrinterService.connect_printer",
          "callee": "get",
          "line": 372,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.connect_printer",
          "callee": "NotFoundError",
          "line": 374,
          "type": "direct"
        },
        {
          "caller": "PrinterService.connect_printer",
          "callee": "connect",
          "line": 377,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.connect_printer",
          "callee": "update_printer_status",
          "line": 381,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.connect_printer",
          "callee": "now",
          "line": 384,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.connect_printer",
          "callee": "error",
          "line": 388,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.connect_printer",
          "callee": "str",
          "line": 388,
          "type": "direct"
        },
        {
          "caller": "PrinterService.connect_printer",
          "callee": "PrinterConnectionError",
          "line": 389,
          "type": "direct"
        },
        {
          "caller": "PrinterService.connect_printer",
          "callee": "str",
          "line": 389,
          "type": "direct"
        },
        {
          "caller": "PrinterService.disconnect_printer",
          "callee": "get",
          "line": 393,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.disconnect_printer",
          "callee": "NotFoundError",
          "line": 395,
          "type": "direct"
        },
        {
          "caller": "PrinterService.disconnect_printer",
          "callee": "disconnect",
          "line": 398,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.disconnect_printer",
          "callee": "error",
          "line": 401,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.disconnect_printer",
          "callee": "str",
          "line": 401,
          "type": "direct"
        },
        {
          "caller": "PrinterService._connect_and_monitor_printer",
          "callee": "info",
          "line": 408,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._connect_and_monitor_printer",
          "callee": "connect",
          "line": 409,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._connect_and_monitor_printer",
          "callee": "update_printer_status",
          "line": 413,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._connect_and_monitor_printer",
          "callee": "now",
          "line": 416,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._connect_and_monitor_printer",
          "callee": "info",
          "line": 418,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._connect_and_monitor_printer",
          "callee": "warning",
          "line": 420,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._connect_and_monitor_printer",
          "callee": "start_monitoring",
          "line": 423,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._connect_and_monitor_printer",
          "callee": "info",
          "line": 424,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._connect_and_monitor_printer",
          "callee": "error",
          "line": 427,
          "type": "attribute"
        },
        {
          "caller": "PrinterService._connect_and_monitor_printer",
          "callee": "str",
          "line": 428,
          "type": "direct"
        },
        {
          "caller": "PrinterService.start_monitoring",
          "callee": "get",
          "line": 434,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.start_monitoring",
          "callee": "NotFoundError",
          "line": 436,
          "type": "direct"
        },
        {
          "caller": "PrinterService.start_monitoring",
          "callee": "connect",
          "line": 440,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.start_monitoring",
          "callee": "update_printer_status",
          "line": 444,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.start_monitoring",
          "callee": "now",
          "line": 447,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.start_monitoring",
          "callee": "start_monitoring",
          "line": 449,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.start_monitoring",
          "callee": "info",
          "line": 450,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.start_monitoring",
          "callee": "error",
          "line": 453,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.start_monitoring",
          "callee": "str",
          "line": 453,
          "type": "direct"
        },
        {
          "caller": "PrinterService.start_monitoring",
          "callee": "items",
          "line": 459,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.start_monitoring",
          "callee": "create_task",
          "line": 461,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.start_monitoring",
          "callee": "_connect_and_monitor_printer",
          "line": 462,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.start_monitoring",
          "callee": "append",
          "line": 464,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.start_monitoring",
          "callee": "info",
          "line": 468,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.start_monitoring",
          "callee": "len",
          "line": 469,
          "type": "direct"
        },
        {
          "caller": "PrinterService.start_monitoring",
          "callee": "len",
          "line": 472,
          "type": "direct"
        },
        {
          "caller": "PrinterService.stop_monitoring",
          "callee": "get",
          "line": 479,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.stop_monitoring",
          "callee": "NotFoundError",
          "line": 481,
          "type": "direct"
        },
        {
          "caller": "PrinterService.stop_monitoring",
          "callee": "stop_monitoring",
          "line": 484,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.stop_monitoring",
          "callee": "info",
          "line": 485,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.stop_monitoring",
          "callee": "error",
          "line": 488,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.stop_monitoring",
          "callee": "str",
          "line": 488,
          "type": "direct"
        },
        {
          "caller": "PrinterService.stop_monitoring",
          "callee": "items",
          "line": 492,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.stop_monitoring",
          "callee": "stop_monitoring",
          "line": 494,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.stop_monitoring",
          "callee": "error",
          "line": 496,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.stop_monitoring",
          "callee": "str",
          "line": 496,
          "type": "direct"
        },
        {
          "caller": "PrinterService.stop_monitoring",
          "callee": "info",
          "line": 499,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.get_printer_files",
          "callee": "get",
          "line": 504,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.get_printer_files",
          "callee": "NotFoundError",
          "line": 506,
          "type": "direct"
        },
        {
          "caller": "PrinterService.get_printer_files",
          "callee": "connect",
          "line": 509,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.get_printer_files",
          "callee": "list_files",
          "line": 512,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.get_printer_files",
          "callee": "isoformat",
          "line": 517,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.get_printer_files",
          "callee": "error",
          "line": 523,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.get_printer_files",
          "callee": "str",
          "line": 523,
          "type": "direct"
        },
        {
          "caller": "PrinterService.get_printer_files",
          "callee": "PrinterConnectionError",
          "line": 524,
          "type": "direct"
        },
        {
          "caller": "PrinterService.get_printer_files",
          "callee": "str",
          "line": 524,
          "type": "direct"
        },
        {
          "caller": "PrinterService.download_printer_file",
          "callee": "get",
          "line": 528,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.download_printer_file",
          "callee": "NotFoundError",
          "line": 530,
          "type": "direct"
        },
        {
          "caller": "PrinterService.download_printer_file",
          "callee": "connect",
          "line": 533,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.download_printer_file",
          "callee": "download_file",
          "line": 538,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.download_printer_file",
          "callee": "get",
          "line": 539,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.download_printer_file",
          "callee": "error",
          "line": 541,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.download_printer_file",
          "callee": "str",
          "line": 542,
          "type": "direct"
        },
        {
          "caller": "PrinterService.download_printer_file",
          "callee": "download_file",
          "line": 546,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.download_printer_file",
          "callee": "error",
          "line": 548,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.download_printer_file",
          "callee": "str",
          "line": 549,
          "type": "direct"
        },
        {
          "caller": "PrinterService.download_current_job_file",
          "callee": "get",
          "line": 565,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.download_current_job_file",
          "callee": "NotFoundError",
          "line": 567,
          "type": "direct"
        },
        {
          "caller": "PrinterService.download_current_job_file",
          "callee": "connect",
          "line": 572,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.download_current_job_file",
          "callee": "get_status",
          "line": 577,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.download_current_job_file",
          "callee": "startswith",
          "line": 585,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.download_current_job_file",
          "callee": "split",
          "line": 586,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.download_current_job_file",
          "callee": "find_file_by_name",
          "line": 591,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.download_current_job_file",
          "callee": "get",
          "line": 595,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.download_current_job_file",
          "callee": "get",
          "line": 598,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.download_current_job_file",
          "callee": "get",
          "line": 603,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.download_current_job_file",
          "callee": "get",
          "line": 603,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.download_current_job_file",
          "callee": "process_file_thumbnails",
          "line": 604,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.download_current_job_file",
          "callee": "get",
          "line": 604,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.download_current_job_file",
          "callee": "get",
          "line": 604,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.download_current_job_file",
          "callee": "get",
          "line": 607,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.download_current_job_file",
          "callee": "download_file",
          "line": 613,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.download_current_job_file",
          "callee": "get",
          "line": 615,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.download_current_job_file",
          "callee": "get",
          "line": 616,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.download_current_job_file",
          "callee": "get",
          "line": 617,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.health_check",
          "callee": "len",
          "line": 628,
          "type": "direct"
        },
        {
          "caller": "PrinterService.health_check",
          "callee": "items",
          "line": 634,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.health_check",
          "callee": "health_check",
          "line": 636,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.health_check",
          "callee": "isoformat",
          "line": 646,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.health_check",
          "callee": "getattr",
          "line": 648,
          "type": "direct"
        },
        {
          "caller": "PrinterService.shutdown",
          "callee": "info",
          "line": 655,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.shutdown",
          "callee": "stop_monitoring",
          "line": 658,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.shutdown",
          "callee": "items",
          "line": 661,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.shutdown",
          "callee": "disconnect",
          "line": 663,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.shutdown",
          "callee": "error",
          "line": 665,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.shutdown",
          "callee": "str",
          "line": 665,
          "type": "direct"
        },
        {
          "caller": "PrinterService.shutdown",
          "callee": "clear",
          "line": 667,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.shutdown",
          "callee": "info",
          "line": 668,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.create_printer",
          "callee": "str",
          "line": 676,
          "type": "direct"
        },
        {
          "caller": "PrinterService.create_printer",
          "callee": "uuid4",
          "line": 676,
          "type": "direct"
        },
        {
          "caller": "PrinterService.create_printer",
          "callee": "add_printer",
          "line": 689,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.create_printer",
          "callee": "ValueError",
          "line": 690,
          "type": "direct"
        },
        {
          "caller": "PrinterService.create_printer",
          "callee": "get_printer",
          "line": 693,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.create_printer",
          "callee": "_create_printer_instance",
          "line": 695,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.create_printer",
          "callee": "create_printer",
          "line": 700,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.create_printer",
          "callee": "get",
          "line": 704,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.create_printer",
          "callee": "get",
          "line": 705,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.create_printer",
          "callee": "get",
          "line": 706,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.create_printer",
          "callee": "get",
          "line": 707,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.create_printer",
          "callee": "Printer",
          "line": 711,
          "type": "direct"
        },
        {
          "caller": "PrinterService.create_printer",
          "callee": "get",
          "line": 715,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.create_printer",
          "callee": "get",
          "line": 716,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.create_printer",
          "callee": "get",
          "line": 717,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.create_printer",
          "callee": "get",
          "line": 718,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.update_printer",
          "callee": "str",
          "line": 725,
          "type": "direct"
        },
        {
          "caller": "PrinterService.update_printer",
          "callee": "get_printer",
          "line": 728,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.update_printer",
          "callee": "to_dict",
          "line": 733,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.update_printer",
          "callee": "update",
          "line": 739,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.update_printer",
          "callee": "add_printer",
          "line": 744,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.update_printer",
          "callee": "disconnect",
          "line": 751,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.update_printer",
          "callee": "get_printer",
          "line": 753,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.update_printer",
          "callee": "_create_printer_instance",
          "line": 755,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.update_printer",
          "callee": "get_printer",
          "line": 760,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.update_printer",
          "callee": "Printer",
          "line": 762,
          "type": "direct"
        },
        {
          "caller": "PrinterService.delete_printer",
          "callee": "str",
          "line": 777,
          "type": "direct"
        },
        {
          "caller": "PrinterService.delete_printer",
          "callee": "disconnect",
          "line": 783,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.delete_printer",
          "callee": "remove_printer",
          "line": 787,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.pause_printer",
          "callee": "get",
          "line": 791,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.pause_printer",
          "callee": "NotFoundError",
          "line": 793,
          "type": "direct"
        },
        {
          "caller": "PrinterService.pause_printer",
          "callee": "connect",
          "line": 797,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.pause_printer",
          "callee": "pause_print",
          "line": 798,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.pause_printer",
          "callee": "error",
          "line": 800,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.pause_printer",
          "callee": "str",
          "line": 800,
          "type": "direct"
        },
        {
          "caller": "PrinterService.pause_printer",
          "callee": "PrinterConnectionError",
          "line": 801,
          "type": "direct"
        },
        {
          "caller": "PrinterService.pause_printer",
          "callee": "str",
          "line": 801,
          "type": "direct"
        },
        {
          "caller": "PrinterService.resume_printer",
          "callee": "get",
          "line": 805,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.resume_printer",
          "callee": "NotFoundError",
          "line": 807,
          "type": "direct"
        },
        {
          "caller": "PrinterService.resume_printer",
          "callee": "connect",
          "line": 811,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.resume_printer",
          "callee": "resume_print",
          "line": 812,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.resume_printer",
          "callee": "error",
          "line": 814,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.resume_printer",
          "callee": "str",
          "line": 814,
          "type": "direct"
        },
        {
          "caller": "PrinterService.resume_printer",
          "callee": "PrinterConnectionError",
          "line": 815,
          "type": "direct"
        },
        {
          "caller": "PrinterService.resume_printer",
          "callee": "str",
          "line": 815,
          "type": "direct"
        },
        {
          "caller": "PrinterService.stop_printer",
          "callee": "get",
          "line": 819,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.stop_printer",
          "callee": "NotFoundError",
          "line": 821,
          "type": "direct"
        },
        {
          "caller": "PrinterService.stop_printer",
          "callee": "connect",
          "line": 825,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.stop_printer",
          "callee": "stop_print",
          "line": 826,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.stop_printer",
          "callee": "error",
          "line": 828,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.stop_printer",
          "callee": "str",
          "line": 828,
          "type": "direct"
        },
        {
          "caller": "PrinterService.stop_printer",
          "callee": "PrinterConnectionError",
          "line": 829,
          "type": "direct"
        },
        {
          "caller": "PrinterService.stop_printer",
          "callee": "str",
          "line": 829,
          "type": "direct"
        },
        {
          "caller": "PrinterService.start_printer_monitoring",
          "callee": "get",
          "line": 833,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.start_printer_monitoring",
          "callee": "NotFoundError",
          "line": 835,
          "type": "direct"
        },
        {
          "caller": "PrinterService.start_printer_monitoring",
          "callee": "connect",
          "line": 839,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.start_printer_monitoring",
          "callee": "info",
          "line": 843,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.start_printer_monitoring",
          "callee": "error",
          "line": 846,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.start_printer_monitoring",
          "callee": "str",
          "line": 846,
          "type": "direct"
        },
        {
          "caller": "PrinterService.stop_printer_monitoring",
          "callee": "get",
          "line": 851,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.stop_printer_monitoring",
          "callee": "NotFoundError",
          "line": 853,
          "type": "direct"
        },
        {
          "caller": "PrinterService.stop_printer_monitoring",
          "callee": "info",
          "line": 858,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.stop_printer_monitoring",
          "callee": "error",
          "line": 861,
          "type": "attribute"
        },
        {
          "caller": "PrinterService.stop_printer_monitoring",
          "callee": "str",
          "line": 861,
          "type": "direct"
        }
      ],
      "error": null
    },
    {
      "filepath": "src\\services\\threemf_analyzer.py",
      "functions": [
        {
          "name": "__init__",
          "full_name": "ThreeMFAnalyzer.__init__",
          "class": "ThreeMFAnalyzer",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Initialize the 3MF analyzer.",
          "line_start": 18,
          "line_end": 20,
          "access_level": "dunder",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "analyze_file",
          "full_name": "ThreeMFAnalyzer.analyze_file",
          "class": "ThreeMFAnalyzer",
          "signature": "(self, file_path: Path)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Analyze 3MF file and extract comprehensive metadata.\n\nArgs:\n    file_path: Path to the 3MF file\n    \nReturns:\n    Dictionary containing extracted metadata organized by category",
          "line_start": 22,
          "line_end": 71,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_analyze_model_geometry",
          "full_name": "ThreeMFAnalyzer._analyze_model_geometry",
          "class": "ThreeMFAnalyzer",
          "signature": "(self, zip_file: zipfile.ZipFile)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Extract physical properties from 3MF model files.",
          "line_start": 73,
          "line_end": 120,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_analyze_print_settings",
          "full_name": "ThreeMFAnalyzer._analyze_print_settings",
          "class": "ThreeMFAnalyzer",
          "signature": "(self, zip_file: zipfile.ZipFile)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Extract print settings from configuration files.",
          "line_start": 122,
          "line_end": 175,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_analyze_material_usage",
          "full_name": "ThreeMFAnalyzer._analyze_material_usage",
          "class": "ThreeMFAnalyzer",
          "signature": "(self, zip_file: zipfile.ZipFile)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Extract material and filament information.",
          "line_start": 177,
          "line_end": 228,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_analyze_compatibility",
          "full_name": "ThreeMFAnalyzer._analyze_compatibility",
          "class": "ThreeMFAnalyzer",
          "signature": "(self, zip_file: zipfile.ZipFile)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Extract compatibility information.",
          "line_start": 230,
          "line_end": 262,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_calculate_costs",
          "full_name": "ThreeMFAnalyzer._calculate_costs",
          "class": "ThreeMFAnalyzer",
          "signature": "(self, metadata: Dict[str, Any])",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Calculate comprehensive cost breakdown.",
          "line_start": 264,
          "line_end": 319,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_assess_quality",
          "full_name": "ThreeMFAnalyzer._assess_quality",
          "class": "ThreeMFAnalyzer",
          "signature": "(self, metadata: Dict[str, Any])",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Assess print quality and difficulty metrics.",
          "line_start": 321,
          "line_end": 390,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_safe_extract",
          "full_name": "ThreeMFAnalyzer._safe_extract",
          "class": "ThreeMFAnalyzer",
          "signature": "(self, data: dict, key: str, default: Any, as_int: bool)",
          "return_type": "Any",
          "decorators": [],
          "docstring": "Safely extract value from config dict, handling list values.",
          "line_start": 392,
          "line_end": 414,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "json",
          "alias": null,
          "line": 5
        },
        {
          "type": "import",
          "module": "zipfile",
          "alias": null,
          "line": 6
        },
        {
          "type": "import",
          "module": "xml.etree.ElementTree",
          "alias": "ET",
          "line": 7
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Dict",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Any",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "List",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Optional",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Tuple",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "pathlib",
          "name": "Path",
          "alias": null,
          "line": 9
        },
        {
          "type": "import",
          "module": "structlog",
          "alias": null,
          "line": 10
        }
      ],
      "function_calls": [
        {
          "caller": "ThreeMFAnalyzer.analyze_file",
          "callee": "ZipFile",
          "line": 43,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer.analyze_file",
          "callee": "_analyze_model_geometry",
          "line": 45,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer.analyze_file",
          "callee": "_analyze_print_settings",
          "line": 46,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer.analyze_file",
          "callee": "_analyze_material_usage",
          "line": 47,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer.analyze_file",
          "callee": "_analyze_compatibility",
          "line": 48,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer.analyze_file",
          "callee": "_calculate_costs",
          "line": 51,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer.analyze_file",
          "callee": "_assess_quality",
          "line": 52,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer.analyze_file",
          "callee": "info",
          "line": 55,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer.analyze_file",
          "callee": "str",
          "line": 56,
          "type": "direct"
        },
        {
          "caller": "ThreeMFAnalyzer.analyze_file",
          "callee": "get",
          "line": 57,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer.analyze_file",
          "callee": "error",
          "line": 60,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer.analyze_file",
          "callee": "str",
          "line": 60,
          "type": "direct"
        },
        {
          "caller": "ThreeMFAnalyzer.analyze_file",
          "callee": "error",
          "line": 63,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer.analyze_file",
          "callee": "str",
          "line": 63,
          "type": "direct"
        },
        {
          "caller": "ThreeMFAnalyzer.analyze_file",
          "callee": "error",
          "line": 66,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer.analyze_file",
          "callee": "str",
          "line": 67,
          "type": "direct"
        },
        {
          "caller": "ThreeMFAnalyzer.analyze_file",
          "callee": "str",
          "line": 68,
          "type": "direct"
        },
        {
          "caller": "ThreeMFAnalyzer.analyze_file",
          "callee": "str",
          "line": 69,
          "type": "direct"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_model_geometry",
          "callee": "namelist",
          "line": 79,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_model_geometry",
          "callee": "open",
          "line": 80,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_model_geometry",
          "callee": "loads",
          "line": 81,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_model_geometry",
          "callee": "decode",
          "line": 81,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_model_geometry",
          "callee": "read",
          "line": 81,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_model_geometry",
          "callee": "round",
          "line": 86,
          "type": "direct"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_model_geometry",
          "callee": "round",
          "line": 87,
          "type": "direct"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_model_geometry",
          "callee": "len",
          "line": 99,
          "type": "direct"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_model_geometry",
          "callee": "get",
          "line": 101,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_model_geometry",
          "callee": "get",
          "line": 106,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_model_geometry",
          "callee": "get",
          "line": 107,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_model_geometry",
          "callee": "round",
          "line": 109,
          "type": "direct"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_model_geometry",
          "callee": "debug",
          "line": 111,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_model_geometry",
          "callee": "get",
          "line": 112,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_model_geometry",
          "callee": "get",
          "line": 113,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_model_geometry",
          "callee": "debug",
          "line": 116,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_model_geometry",
          "callee": "warning",
          "line": 118,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_model_geometry",
          "callee": "str",
          "line": 118,
          "type": "direct"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_print_settings",
          "callee": "namelist",
          "line": 128,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_print_settings",
          "callee": "open",
          "line": 129,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_print_settings",
          "callee": "loads",
          "line": 130,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_print_settings",
          "callee": "decode",
          "line": 130,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_print_settings",
          "callee": "read",
          "line": 130,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_print_settings",
          "callee": "_safe_extract",
          "line": 133,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_print_settings",
          "callee": "_safe_extract",
          "line": 134,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_print_settings",
          "callee": "_safe_extract",
          "line": 135,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_print_settings",
          "callee": "_safe_extract",
          "line": 136,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_print_settings",
          "callee": "_safe_extract",
          "line": 137,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_print_settings",
          "callee": "_safe_extract",
          "line": 138,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_print_settings",
          "callee": "_safe_extract",
          "line": 141,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_print_settings",
          "callee": "isinstance",
          "line": 142,
          "type": "direct"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_print_settings",
          "callee": "float",
          "line": 143,
          "type": "direct"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_print_settings",
          "callee": "rstrip",
          "line": 143,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_print_settings",
          "callee": "float",
          "line": 145,
          "type": "direct"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_print_settings",
          "callee": "_safe_extract",
          "line": 147,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_print_settings",
          "callee": "get",
          "line": 148,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_print_settings",
          "callee": "_safe_extract",
          "line": 151,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_print_settings",
          "callee": "_safe_extract",
          "line": 152,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_print_settings",
          "callee": "_safe_extract",
          "line": 153,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_print_settings",
          "callee": "_safe_extract",
          "line": 156,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_print_settings",
          "callee": "_safe_extract",
          "line": 157,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_print_settings",
          "callee": "_safe_extract",
          "line": 158,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_print_settings",
          "callee": "round",
          "line": 162,
          "type": "direct"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_print_settings",
          "callee": "debug",
          "line": 166,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_print_settings",
          "callee": "get",
          "line": 167,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_print_settings",
          "callee": "get",
          "line": 168,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_print_settings",
          "callee": "debug",
          "line": 171,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_print_settings",
          "callee": "warning",
          "line": 173,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_print_settings",
          "callee": "str",
          "line": 173,
          "type": "direct"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_material_usage",
          "callee": "namelist",
          "line": 183,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_material_usage",
          "callee": "open",
          "line": 184,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_material_usage",
          "callee": "decode",
          "line": 185,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_material_usage",
          "callee": "read",
          "line": 185,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_material_usage",
          "callee": "fromstring",
          "line": 188,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_material_usage",
          "callee": "find",
          "line": 189,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_material_usage",
          "callee": "find",
          "line": 193,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_material_usage",
          "callee": "float",
          "line": 195,
          "type": "direct"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_material_usage",
          "callee": "get",
          "line": 195,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_material_usage",
          "callee": "find",
          "line": 197,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_material_usage",
          "callee": "int",
          "line": 199,
          "type": "direct"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_material_usage",
          "callee": "get",
          "line": 199,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_material_usage",
          "callee": "find",
          "line": 201,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_material_usage",
          "callee": "get",
          "line": 203,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_material_usage",
          "callee": "find",
          "line": 206,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_material_usage",
          "callee": "split",
          "line": 208,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_material_usage",
          "callee": "get",
          "line": 208,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_material_usage",
          "callee": "int",
          "line": 210,
          "type": "direct"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_material_usage",
          "callee": "isdigit",
          "line": 210,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_material_usage",
          "callee": "namelist",
          "line": 214,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_material_usage",
          "callee": "open",
          "line": 215,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_material_usage",
          "callee": "loads",
          "line": 216,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_material_usage",
          "callee": "decode",
          "line": 216,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_material_usage",
          "callee": "read",
          "line": 216,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_material_usage",
          "callee": "get",
          "line": 218,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_material_usage",
          "callee": "get",
          "line": 219,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_material_usage",
          "callee": "debug",
          "line": 221,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_material_usage",
          "callee": "get",
          "line": 222,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_material_usage",
          "callee": "len",
          "line": 223,
          "type": "direct"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_material_usage",
          "callee": "get",
          "line": 223,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_material_usage",
          "callee": "warning",
          "line": 226,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_material_usage",
          "callee": "str",
          "line": 226,
          "type": "direct"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_compatibility",
          "callee": "namelist",
          "line": 236,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_compatibility",
          "callee": "open",
          "line": 237,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_compatibility",
          "callee": "loads",
          "line": 238,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_compatibility",
          "callee": "decode",
          "line": 238,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_compatibility",
          "callee": "read",
          "line": 238,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_compatibility",
          "callee": "get",
          "line": 241,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_compatibility",
          "callee": "isinstance",
          "line": 242,
          "type": "direct"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_compatibility",
          "callee": "isinstance",
          "line": 244,
          "type": "direct"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_compatibility",
          "callee": "strip",
          "line": 246,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_compatibility",
          "callee": "split",
          "line": 246,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_compatibility",
          "callee": "get",
          "line": 250,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_compatibility",
          "callee": "debug",
          "line": 256,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_compatibility",
          "callee": "len",
          "line": 257,
          "type": "direct"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_compatibility",
          "callee": "get",
          "line": 257,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_compatibility",
          "callee": "warning",
          "line": 260,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._analyze_compatibility",
          "callee": "str",
          "line": 260,
          "type": "direct"
        },
        {
          "caller": "ThreeMFAnalyzer._calculate_costs",
          "callee": "get",
          "line": 276,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._calculate_costs",
          "callee": "get",
          "line": 276,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._calculate_costs",
          "callee": "round",
          "line": 280,
          "type": "direct"
        },
        {
          "caller": "ThreeMFAnalyzer._calculate_costs",
          "callee": "round",
          "line": 281,
          "type": "direct"
        },
        {
          "caller": "ThreeMFAnalyzer._calculate_costs",
          "callee": "get",
          "line": 284,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._calculate_costs",
          "callee": "get",
          "line": 284,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._calculate_costs",
          "callee": "get",
          "line": 285,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._calculate_costs",
          "callee": "get",
          "line": 285,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._calculate_costs",
          "callee": "round",
          "line": 298,
          "type": "direct"
        },
        {
          "caller": "ThreeMFAnalyzer._calculate_costs",
          "callee": "round",
          "line": 301,
          "type": "direct"
        },
        {
          "caller": "ThreeMFAnalyzer._calculate_costs",
          "callee": "round",
          "line": 307,
          "type": "direct"
        },
        {
          "caller": "ThreeMFAnalyzer._calculate_costs",
          "callee": "debug",
          "line": 311,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._calculate_costs",
          "callee": "warning",
          "line": 317,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._calculate_costs",
          "callee": "str",
          "line": 317,
          "type": "direct"
        },
        {
          "caller": "ThreeMFAnalyzer._assess_quality",
          "callee": "get",
          "line": 330,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._assess_quality",
          "callee": "get",
          "line": 331,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._assess_quality",
          "callee": "get",
          "line": 337,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._assess_quality",
          "callee": "get",
          "line": 346,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._assess_quality",
          "callee": "get",
          "line": 346,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._assess_quality",
          "callee": "lower",
          "line": 350,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._assess_quality",
          "callee": "get",
          "line": 350,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._assess_quality",
          "callee": "any",
          "line": 351,
          "type": "direct"
        },
        {
          "caller": "ThreeMFAnalyzer._assess_quality",
          "callee": "get",
          "line": 355,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._assess_quality",
          "callee": "get",
          "line": 359,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._assess_quality",
          "callee": "len",
          "line": 360,
          "type": "direct"
        },
        {
          "caller": "ThreeMFAnalyzer._assess_quality",
          "callee": "len",
          "line": 361,
          "type": "direct"
        },
        {
          "caller": "ThreeMFAnalyzer._assess_quality",
          "callee": "max",
          "line": 364,
          "type": "direct"
        },
        {
          "caller": "ThreeMFAnalyzer._assess_quality",
          "callee": "min",
          "line": 364,
          "type": "direct"
        },
        {
          "caller": "ThreeMFAnalyzer._assess_quality",
          "callee": "round",
          "line": 378,
          "type": "direct"
        },
        {
          "caller": "ThreeMFAnalyzer._assess_quality",
          "callee": "max",
          "line": 379,
          "type": "direct"
        },
        {
          "caller": "ThreeMFAnalyzer._assess_quality",
          "callee": "debug",
          "line": 382,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._assess_quality",
          "callee": "warning",
          "line": 388,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._assess_quality",
          "callee": "str",
          "line": 388,
          "type": "direct"
        },
        {
          "caller": "ThreeMFAnalyzer._safe_extract",
          "callee": "get",
          "line": 394,
          "type": "attribute"
        },
        {
          "caller": "ThreeMFAnalyzer._safe_extract",
          "callee": "isinstance",
          "line": 397,
          "type": "direct"
        },
        {
          "caller": "ThreeMFAnalyzer._safe_extract",
          "callee": "len",
          "line": 397,
          "type": "direct"
        },
        {
          "caller": "ThreeMFAnalyzer._safe_extract",
          "callee": "isinstance",
          "line": 403,
          "type": "direct"
        },
        {
          "caller": "ThreeMFAnalyzer._safe_extract",
          "callee": "int",
          "line": 403,
          "type": "direct"
        },
        {
          "caller": "ThreeMFAnalyzer._safe_extract",
          "callee": "float",
          "line": 403,
          "type": "direct"
        },
        {
          "caller": "ThreeMFAnalyzer._safe_extract",
          "callee": "int",
          "line": 403,
          "type": "direct"
        },
        {
          "caller": "ThreeMFAnalyzer._safe_extract",
          "callee": "isinstance",
          "line": 408,
          "type": "direct"
        },
        {
          "caller": "ThreeMFAnalyzer._safe_extract",
          "callee": "float",
          "line": 410,
          "type": "direct"
        }
      ],
      "error": null
    },
    {
      "filepath": "src\\services\\thumbnail_service.py",
      "functions": [
        {
          "name": "__init__",
          "full_name": "ThumbnailService.__init__",
          "class": "ThumbnailService",
          "signature": "(self, event_service: EventService)",
          "return_type": "",
          "decorators": [],
          "docstring": "Initialize thumbnail service.",
          "line_start": 27,
          "line_end": 35,
          "access_level": "dunder",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_get_session",
          "full_name": "ThumbnailService._get_session",
          "class": "ThumbnailService",
          "signature": "(self)",
          "return_type": "aiohttp.ClientSession",
          "decorators": [],
          "docstring": "Get or create HTTP session.",
          "line_start": 37,
          "line_end": 45,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_get_cache_path",
          "full_name": "ThumbnailService._get_cache_path",
          "class": "ThumbnailService",
          "signature": "(self, url: str, source_type: str)",
          "return_type": "Path",
          "decorators": [],
          "docstring": "Generate cache file path for a URL.",
          "line_start": 47,
          "line_end": 64,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "download_thumbnail",
          "full_name": "ThumbnailService.download_thumbnail",
          "class": "ThumbnailService",
          "signature": "(self, url: str, source_type: str, force_refresh: bool)",
          "return_type": "Optional[str]",
          "decorators": [],
          "docstring": "Download and cache a thumbnail from URL.",
          "line_start": 66,
          "line_end": 108,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_process_and_save_image",
          "full_name": "ThumbnailService._process_and_save_image",
          "class": "ThumbnailService",
          "signature": "(self, image_data: bytes, cache_path: Path, original_url: str)",
          "return_type": "Optional[Path]",
          "decorators": [],
          "docstring": "Process and save image data to cache.",
          "line_start": 110,
          "line_end": 159,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_thumbnail",
          "full_name": "ThumbnailService.get_thumbnail",
          "class": "ThumbnailService",
          "signature": "(self, url: str, source_type: str, auto_download: bool)",
          "return_type": "Optional[str]",
          "decorators": [],
          "docstring": "Get thumbnail path, downloading if necessary.",
          "line_start": 161,
          "line_end": 179,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "cache_multiple_thumbnails",
          "full_name": "ThumbnailService.cache_multiple_thumbnails",
          "class": "ThumbnailService",
          "signature": "(self, url_list: list[Dict[str, str]], max_concurrent: int)",
          "return_type": "Dict[str, Optional[str]]",
          "decorators": [],
          "docstring": "Cache multiple thumbnails concurrently.",
          "line_start": 181,
          "line_end": 208,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "download_single",
          "full_name": "ThumbnailService.download_single",
          "class": "ThumbnailService",
          "signature": "(item: Dict[str, str])",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 187,
          "line_end": 192,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "cleanup_expired",
          "full_name": "ThumbnailService.cleanup_expired",
          "class": "ThumbnailService",
          "signature": "(self)",
          "return_type": "int",
          "decorators": [],
          "docstring": "Clean up expired thumbnail cache files.",
          "line_start": 210,
          "line_end": 231,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_cache_statistics",
          "full_name": "ThumbnailService.get_cache_statistics",
          "class": "ThumbnailService",
          "signature": "(self)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Get cache statistics.",
          "line_start": 233,
          "line_end": 285,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "clear_cache",
          "full_name": "ThumbnailService.clear_cache",
          "class": "ThumbnailService",
          "signature": "(self, source_type: Optional[str])",
          "return_type": "int",
          "decorators": [],
          "docstring": "Clear thumbnail cache for all or specific source type.",
          "line_start": 287,
          "line_end": 313,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "cleanup",
          "full_name": "ThumbnailService.cleanup",
          "class": "ThumbnailService",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Clean up thumbnail service resources.",
          "line_start": 315,
          "line_end": 321,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "asyncio",
          "alias": null,
          "line": 6
        },
        {
          "type": "import",
          "module": "hashlib",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "timedelta",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "pathlib",
          "name": "Path",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Optional",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Dict",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Any",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "urllib.parse",
          "name": "urlparse",
          "alias": null,
          "line": 11
        },
        {
          "type": "import",
          "module": "aiofiles",
          "alias": null,
          "line": 13
        },
        {
          "type": "import",
          "module": "aiohttp",
          "alias": null,
          "line": 14
        },
        {
          "type": "import",
          "module": "structlog",
          "alias": null,
          "line": 15
        },
        {
          "type": "from_import",
          "module": "PIL",
          "name": "Image",
          "alias": null,
          "line": 16
        },
        {
          "type": "from_import",
          "module": "src.services.event_service",
          "name": "EventService",
          "alias": null,
          "line": 18
        }
      ],
      "function_calls": [
        {
          "caller": "ThumbnailService.__init__",
          "callee": "Path",
          "line": 31,
          "type": "direct"
        },
        {
          "caller": "ThumbnailService.__init__",
          "callee": "mkdir",
          "line": 32,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService.__init__",
          "callee": "timedelta",
          "line": 35,
          "type": "direct"
        },
        {
          "caller": "ThumbnailService._get_session",
          "callee": "ClientTimeout",
          "line": 43,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService._get_session",
          "callee": "ClientSession",
          "line": 44,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService._get_cache_path",
          "callee": "hexdigest",
          "line": 50,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService._get_cache_path",
          "callee": "md5",
          "line": 50,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService._get_cache_path",
          "callee": "encode",
          "line": 50,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService._get_cache_path",
          "callee": "urlparse",
          "line": 53,
          "type": "direct"
        },
        {
          "caller": "ThumbnailService._get_cache_path",
          "callee": "split",
          "line": 54,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService._get_cache_path",
          "callee": "len",
          "line": 55,
          "type": "direct"
        },
        {
          "caller": "ThumbnailService._get_cache_path",
          "callee": "lower",
          "line": 55,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService._get_cache_path",
          "callee": "lower",
          "line": 56,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService._get_cache_path",
          "callee": "mkdir",
          "line": 62,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService.download_thumbnail",
          "callee": "_get_cache_path",
          "line": 70,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService.download_thumbnail",
          "callee": "exists",
          "line": 73,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService.download_thumbnail",
          "callee": "now",
          "line": 75,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService.download_thumbnail",
          "callee": "fromtimestamp",
          "line": 75,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService.download_thumbnail",
          "callee": "stat",
          "line": 75,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService.download_thumbnail",
          "callee": "debug",
          "line": 77,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService.download_thumbnail",
          "callee": "str",
          "line": 78,
          "type": "direct"
        },
        {
          "caller": "ThumbnailService.download_thumbnail",
          "callee": "_get_session",
          "line": 81,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService.download_thumbnail",
          "callee": "get",
          "line": 82,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService.download_thumbnail",
          "callee": "get",
          "line": 84,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService.download_thumbnail",
          "callee": "startswith",
          "line": 86,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService.download_thumbnail",
          "callee": "warning",
          "line": 87,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService.download_thumbnail",
          "callee": "read",
          "line": 91,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService.download_thumbnail",
          "callee": "_process_and_save_image",
          "line": 94,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService.download_thumbnail",
          "callee": "info",
          "line": 99,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService.download_thumbnail",
          "callee": "str",
          "line": 100,
          "type": "direct"
        },
        {
          "caller": "ThumbnailService.download_thumbnail",
          "callee": "warning",
          "line": 103,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService.download_thumbnail",
          "callee": "error",
          "line": 106,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService._process_and_save_image",
          "callee": "with_suffix",
          "line": 115,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService._process_and_save_image",
          "callee": "open",
          "line": 118,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService._process_and_save_image",
          "callee": "write",
          "line": 119,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService._process_and_save_image",
          "callee": "open",
          "line": 122,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService._process_and_save_image",
          "callee": "new",
          "line": 126,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService._process_and_save_image",
          "callee": "paste",
          "line": 128,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService._process_and_save_image",
          "callee": "split",
          "line": 128,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService._process_and_save_image",
          "callee": "paste",
          "line": 130,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService._process_and_save_image",
          "callee": "thumbnail",
          "line": 135,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService._process_and_save_image",
          "callee": "with_suffix",
          "line": 138,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService._process_and_save_image",
          "callee": "save",
          "line": 139,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService._process_and_save_image",
          "callee": "unlink",
          "line": 142,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService._process_and_save_image",
          "callee": "emit_event",
          "line": 145,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService._process_and_save_image",
          "callee": "str",
          "line": 147,
          "type": "direct"
        },
        {
          "caller": "ThumbnailService._process_and_save_image",
          "callee": "stat",
          "line": 149,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService._process_and_save_image",
          "callee": "error",
          "line": 155,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService._process_and_save_image",
          "callee": "locals",
          "line": 157,
          "type": "direct"
        },
        {
          "caller": "ThumbnailService._process_and_save_image",
          "callee": "unlink",
          "line": 158,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService.get_thumbnail",
          "callee": "_get_cache_path",
          "line": 164,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService.get_thumbnail",
          "callee": "exists",
          "line": 167,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService.get_thumbnail",
          "callee": "str",
          "line": 168,
          "type": "direct"
        },
        {
          "caller": "ThumbnailService.get_thumbnail",
          "callee": "with_suffix",
          "line": 171,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService.get_thumbnail",
          "callee": "exists",
          "line": 172,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService.get_thumbnail",
          "callee": "str",
          "line": 173,
          "type": "direct"
        },
        {
          "caller": "ThumbnailService.get_thumbnail",
          "callee": "download_thumbnail",
          "line": 177,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService.cache_multiple_thumbnails",
          "callee": "Semaphore",
          "line": 184,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService.download_single",
          "callee": "get",
          "line": 190,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService.download_single",
          "callee": "download_thumbnail",
          "line": 191,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService.cache_multiple_thumbnails",
          "callee": "download_single",
          "line": 195,
          "type": "direct"
        },
        {
          "caller": "ThumbnailService.cache_multiple_thumbnails",
          "callee": "gather",
          "line": 198,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService.cache_multiple_thumbnails",
          "callee": "isinstance",
          "line": 202,
          "type": "direct"
        },
        {
          "caller": "ThumbnailService.cache_multiple_thumbnails",
          "callee": "warning",
          "line": 203,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService.cleanup_expired",
          "callee": "now",
          "line": 213,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService.cleanup_expired",
          "callee": "rglob",
          "line": 216,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService.cleanup_expired",
          "callee": "is_file",
          "line": 217,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService.cleanup_expired",
          "callee": "fromtimestamp",
          "line": 218,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService.cleanup_expired",
          "callee": "stat",
          "line": 218,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService.cleanup_expired",
          "callee": "unlink",
          "line": 221,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService.cleanup_expired",
          "callee": "warning",
          "line": 224,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService.cleanup_expired",
          "callee": "info",
          "line": 226,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService.cleanup_expired",
          "callee": "error",
          "line": 229,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService.get_cache_statistics",
          "callee": "rglob",
          "line": 248,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService.get_cache_statistics",
          "callee": "is_file",
          "line": 249,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService.get_cache_statistics",
          "callee": "stat",
          "line": 253,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService.get_cache_statistics",
          "callee": "fromtimestamp",
          "line": 267,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService.get_cache_statistics",
          "callee": "stat",
          "line": 267,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService.get_cache_statistics",
          "callee": "str",
          "line": 270,
          "type": "direct"
        },
        {
          "caller": "ThumbnailService.get_cache_statistics",
          "callee": "str",
          "line": 273,
          "type": "direct"
        },
        {
          "caller": "ThumbnailService.get_cache_statistics",
          "callee": "round",
          "line": 278,
          "type": "direct"
        },
        {
          "caller": "ThumbnailService.get_cache_statistics",
          "callee": "values",
          "line": 279,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService.get_cache_statistics",
          "callee": "round",
          "line": 280,
          "type": "direct"
        },
        {
          "caller": "ThumbnailService.get_cache_statistics",
          "callee": "error",
          "line": 283,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService.clear_cache",
          "callee": "exists",
          "line": 295,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService.clear_cache",
          "callee": "iterdir",
          "line": 296,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService.clear_cache",
          "callee": "is_file",
          "line": 297,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService.clear_cache",
          "callee": "unlink",
          "line": 298,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService.clear_cache",
          "callee": "rglob",
          "line": 302,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService.clear_cache",
          "callee": "is_file",
          "line": 303,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService.clear_cache",
          "callee": "unlink",
          "line": 304,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService.clear_cache",
          "callee": "info",
          "line": 307,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService.clear_cache",
          "callee": "error",
          "line": 311,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService.cleanup",
          "callee": "close",
          "line": 318,
          "type": "attribute"
        },
        {
          "caller": "ThumbnailService.cleanup",
          "callee": "info",
          "line": 321,
          "type": "attribute"
        }
      ],
      "error": null
    },
    {
      "filepath": "src\\services\\trending_service.py",
      "functions": [
        {
          "name": "__init__",
          "full_name": "TrendingService.__init__",
          "class": "TrendingService",
          "signature": "(self, db: Database, event_service: EventService)",
          "return_type": "",
          "decorators": [],
          "docstring": "Initialize trending service.",
          "line_start": 34,
          "line_end": 53,
          "access_level": "dunder",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "initialize",
          "full_name": "TrendingService.initialize",
          "class": "TrendingService",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Initialize trending service and create tables.",
          "line_start": 55,
          "line_end": 63,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_create_tables",
          "full_name": "TrendingService._create_tables",
          "class": "TrendingService",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Create trending-related database tables.",
          "line_start": 65,
          "line_end": 93,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_retry_with_backoff",
          "full_name": "TrendingService._retry_with_backoff",
          "class": "TrendingService",
          "signature": "(self, func)",
          "return_type": "",
          "decorators": [],
          "docstring": "Retry function with exponential backoff and header-specific error handling.",
          "line_start": 95,
          "line_end": 148,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_get_session",
          "full_name": "TrendingService._get_session",
          "class": "TrendingService",
          "signature": "(self)",
          "return_type": "aiohttp.ClientSession",
          "decorators": [],
          "docstring": "Get or create HTTP session with proper error handling.",
          "line_start": 150,
          "line_end": 185,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_close_session",
          "full_name": "TrendingService._close_session",
          "class": "TrendingService",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Close and recreate HTTP session for error recovery.",
          "line_start": 187,
          "line_end": 195,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_start_refresh_task",
          "full_name": "TrendingService._start_refresh_task",
          "class": "TrendingService",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Start background task for periodic refresh.",
          "line_start": 197,
          "line_end": 200,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_refresh_loop",
          "full_name": "TrendingService._refresh_loop",
          "class": "TrendingService",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Background loop for refreshing trending data.",
          "line_start": 202,
          "line_end": 217,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_needs_refresh",
          "full_name": "TrendingService._needs_refresh",
          "class": "TrendingService",
          "signature": "(self)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Check if trending cache needs refresh.",
          "line_start": 219,
          "line_end": 237,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_fetch_url",
          "full_name": "TrendingService._fetch_url",
          "class": "TrendingService",
          "signature": "(self, url: str)",
          "return_type": "str",
          "decorators": [],
          "docstring": "Fetch URL content with retry logic, chunked reading, and metrics tracking.",
          "line_start": 239,
          "line_end": 283,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_fetch",
          "full_name": "TrendingService._fetch",
          "class": "TrendingService",
          "signature": "()",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 243,
          "line_end": 273,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "fetch_makerworld_trending",
          "full_name": "TrendingService.fetch_makerworld_trending",
          "class": "TrendingService",
          "signature": "(self)",
          "return_type": "List[Dict[str, Any]]",
          "decorators": [],
          "docstring": "Fetch trending models from MakerWorld with retry logic.",
          "line_start": 285,
          "line_end": 328,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "fetch_printables_trending",
          "full_name": "TrendingService.fetch_printables_trending",
          "class": "TrendingService",
          "signature": "(self)",
          "return_type": "List[Dict[str, Any]]",
          "decorators": [],
          "docstring": "Fetch trending models from Printables with retry logic.",
          "line_start": 330,
          "line_end": 374,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_extract_id_from_url",
          "full_name": "TrendingService._extract_id_from_url",
          "class": "TrendingService",
          "signature": "(self, url: str, platform: str)",
          "return_type": "Optional[str]",
          "decorators": [],
          "docstring": "Extract model ID from URL.",
          "line_start": 376,
          "line_end": 387,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_parse_count",
          "full_name": "TrendingService._parse_count",
          "class": "TrendingService",
          "signature": "(self, text: str)",
          "return_type": "int",
          "decorators": [],
          "docstring": "Parse count from text (handles K, M suffixes).",
          "line_start": 389,
          "line_end": 407,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "save_trending_items",
          "full_name": "TrendingService.save_trending_items",
          "class": "TrendingService",
          "signature": "(self, items: List[Dict[str, Any]], platform: str)",
          "return_type": "",
          "decorators": [],
          "docstring": "Save trending items to cache.",
          "line_start": 409,
          "line_end": 464,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_trending",
          "full_name": "TrendingService.get_trending",
          "class": "TrendingService",
          "signature": "(self, platform: Optional[str], category: Optional[str], limit: int)",
          "return_type": "List[Dict[str, Any]]",
          "decorators": [],
          "docstring": "Get trending models from cache.",
          "line_start": 466,
          "line_end": 492,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "refresh_all_platforms",
          "full_name": "TrendingService.refresh_all_platforms",
          "class": "TrendingService",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Refresh trending data for all platforms.",
          "line_start": 494,
          "line_end": 522,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "cleanup_expired",
          "full_name": "TrendingService.cleanup_expired",
          "class": "TrendingService",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Remove expired cache entries.",
          "line_start": 524,
          "line_end": 546,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "save_as_idea",
          "full_name": "TrendingService.save_as_idea",
          "class": "TrendingService",
          "signature": "(self, trending_id: str, user_notes: Optional[str])",
          "return_type": "str",
          "decorators": [],
          "docstring": "Save a trending item as an idea.",
          "line_start": 548,
          "line_end": 593,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_statistics",
          "full_name": "TrendingService.get_statistics",
          "class": "TrendingService",
          "signature": "(self)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Get trending cache statistics with performance metrics.",
          "line_start": 595,
          "line_end": 650,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "cleanup",
          "full_name": "TrendingService.cleanup",
          "class": "TrendingService",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Clean up trending service resources.",
          "line_start": 652,
          "line_end": 660,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "asyncio",
          "alias": null,
          "line": 6
        },
        {
          "type": "import",
          "module": "json",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "timedelta",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "pathlib",
          "name": "Path",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Dict",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "List",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Optional",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Any",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "uuid",
          "name": "uuid4",
          "alias": null,
          "line": 11
        },
        {
          "type": "import",
          "module": "aiofiles",
          "alias": null,
          "line": 13
        },
        {
          "type": "import",
          "module": "aiohttp",
          "alias": null,
          "line": 14
        },
        {
          "type": "import",
          "module": "structlog",
          "alias": null,
          "line": 15
        },
        {
          "type": "from_import",
          "module": "bs4",
          "name": "BeautifulSoup",
          "alias": null,
          "line": 16
        },
        {
          "type": "from_import",
          "module": "src.database.database",
          "name": "Database",
          "alias": null,
          "line": 18
        },
        {
          "type": "from_import",
          "module": "src.services.event_service",
          "name": "EventService",
          "alias": null,
          "line": 19
        },
        {
          "type": "import",
          "module": "re",
          "alias": null,
          "line": 378
        },
        {
          "type": "import",
          "module": "re",
          "alias": null,
          "line": 403
        }
      ],
      "function_calls": [
        {
          "caller": "TrendingService.__init__",
          "callee": "Path",
          "line": 39,
          "type": "direct"
        },
        {
          "caller": "TrendingService.__init__",
          "callee": "mkdir",
          "line": 40,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.initialize",
          "callee": "_create_tables",
          "line": 58,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.initialize",
          "callee": "_start_refresh_task",
          "line": 59,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.initialize",
          "callee": "info",
          "line": 60,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.initialize",
          "callee": "error",
          "line": 62,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._create_tables",
          "callee": "connection",
          "line": 67,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._create_tables",
          "callee": "execute",
          "line": 68,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._create_tables",
          "callee": "execute",
          "line": 89,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._create_tables",
          "callee": "execute",
          "line": 90,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._create_tables",
          "callee": "execute",
          "line": 91,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._create_tables",
          "callee": "commit",
          "line": 93,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._retry_with_backoff",
          "callee": "range",
          "line": 99,
          "type": "direct"
        },
        {
          "caller": "TrendingService._retry_with_backoff",
          "callee": "func",
          "line": 101,
          "type": "direct"
        },
        {
          "caller": "TrendingService._retry_with_backoff",
          "callee": "lower",
          "line": 105,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._retry_with_backoff",
          "callee": "str",
          "line": 105,
          "type": "direct"
        },
        {
          "caller": "TrendingService._retry_with_backoff",
          "callee": "warning",
          "line": 106,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._retry_with_backoff",
          "callee": "_close_session",
          "line": 109,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._retry_with_backoff",
          "callee": "min",
          "line": 111,
          "type": "direct"
        },
        {
          "caller": "TrendingService._retry_with_backoff",
          "callee": "warning",
          "line": 112,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._retry_with_backoff",
          "callee": "str",
          "line": 117,
          "type": "direct"
        },
        {
          "caller": "TrendingService._retry_with_backoff",
          "callee": "sleep",
          "line": 119,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._retry_with_backoff",
          "callee": "error",
          "line": 121,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._retry_with_backoff",
          "callee": "str",
          "line": 122,
          "type": "direct"
        },
        {
          "caller": "TrendingService._retry_with_backoff",
          "callee": "lower",
          "line": 125,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._retry_with_backoff",
          "callee": "str",
          "line": 125,
          "type": "direct"
        },
        {
          "caller": "TrendingService._retry_with_backoff",
          "callee": "any",
          "line": 127,
          "type": "direct"
        },
        {
          "caller": "TrendingService._retry_with_backoff",
          "callee": "error",
          "line": 128,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._retry_with_backoff",
          "callee": "_close_session",
          "line": 130,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._retry_with_backoff",
          "callee": "min",
          "line": 133,
          "type": "direct"
        },
        {
          "caller": "TrendingService._retry_with_backoff",
          "callee": "warning",
          "line": 134,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._retry_with_backoff",
          "callee": "str",
          "line": 138,
          "type": "direct"
        },
        {
          "caller": "TrendingService._retry_with_backoff",
          "callee": "sleep",
          "line": 140,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._retry_with_backoff",
          "callee": "error",
          "line": 142,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._retry_with_backoff",
          "callee": "str",
          "line": 142,
          "type": "direct"
        },
        {
          "caller": "TrendingService._retry_with_backoff",
          "callee": "error",
          "line": 145,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._get_session",
          "callee": "ClientTimeout",
          "line": 163,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._get_session",
          "callee": "TCPConnector",
          "line": 166,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._get_session",
          "callee": "ClientSession",
          "line": 174,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._get_session",
          "callee": "debug",
          "line": 181,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._get_session",
          "callee": "error",
          "line": 183,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._close_session",
          "callee": "close",
          "line": 191,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._close_session",
          "callee": "debug",
          "line": 192,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._close_session",
          "callee": "warning",
          "line": 194,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._start_refresh_task",
          "callee": "create_task",
          "line": 200,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._start_refresh_task",
          "callee": "_refresh_loop",
          "line": 200,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._refresh_loop",
          "callee": "_needs_refresh",
          "line": 207,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._refresh_loop",
          "callee": "refresh_all_platforms",
          "line": 208,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._refresh_loop",
          "callee": "sleep",
          "line": 211,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._refresh_loop",
          "callee": "error",
          "line": 216,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._refresh_loop",
          "callee": "sleep",
          "line": 217,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._needs_refresh",
          "callee": "connection",
          "line": 221,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._needs_refresh",
          "callee": "execute",
          "line": 222,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._needs_refresh",
          "callee": "fetchone",
          "line": 227,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._needs_refresh",
          "callee": "fromisoformat",
          "line": 233,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._needs_refresh",
          "callee": "now",
          "line": 234,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._fetch",
          "callee": "_get_session",
          "line": 244,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._fetch",
          "callee": "get",
          "line": 247,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._fetch",
          "callee": "raise_for_status",
          "line": 248,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._fetch",
          "callee": "get",
          "line": 251,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._fetch",
          "callee": "int",
          "line": 252,
          "type": "direct"
        },
        {
          "caller": "TrendingService._fetch",
          "callee": "warning",
          "line": 253,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._fetch",
          "callee": "iter_chunked",
          "line": 260,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._fetch",
          "callee": "len",
          "line": 261,
          "type": "direct"
        },
        {
          "caller": "TrendingService._fetch",
          "callee": "ClientPayloadError",
          "line": 263,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._fetch",
          "callee": "append",
          "line": 264,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._fetch",
          "callee": "join",
          "line": 267,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._fetch",
          "callee": "get_encoding",
          "line": 268,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._fetch",
          "callee": "decode",
          "line": 270,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._fetch",
          "callee": "decode",
          "line": 273,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._fetch_url",
          "callee": "_retry_with_backoff",
          "line": 276,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._fetch_url",
          "callee": "isoformat",
          "line": 278,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._fetch_url",
          "callee": "now",
          "line": 278,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._fetch_url",
          "callee": "str",
          "line": 282,
          "type": "direct"
        },
        {
          "caller": "TrendingService.fetch_makerworld_trending",
          "callee": "_fetch_url",
          "line": 293,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.fetch_makerworld_trending",
          "callee": "BeautifulSoup",
          "line": 294,
          "type": "direct"
        },
        {
          "caller": "TrendingService.fetch_makerworld_trending",
          "callee": "find_all",
          "line": 297,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.fetch_makerworld_trending",
          "callee": "find",
          "line": 302,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.fetch_makerworld_trending",
          "callee": "find",
          "line": 303,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.fetch_makerworld_trending",
          "callee": "find",
          "line": 304,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.fetch_makerworld_trending",
          "callee": "find",
          "line": 305,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.fetch_makerworld_trending",
          "callee": "_extract_id_from_url",
          "line": 309,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.fetch_makerworld_trending",
          "callee": "append",
          "line": 311,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.fetch_makerworld_trending",
          "callee": "str",
          "line": 313,
          "type": "direct"
        },
        {
          "caller": "TrendingService.fetch_makerworld_trending",
          "callee": "uuid4",
          "line": 313,
          "type": "direct"
        },
        {
          "caller": "TrendingService.fetch_makerworld_trending",
          "callee": "strip",
          "line": 314,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.fetch_makerworld_trending",
          "callee": "strip",
          "line": 316,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.fetch_makerworld_trending",
          "callee": "_parse_count",
          "line": 317,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.fetch_makerworld_trending",
          "callee": "warning",
          "line": 321,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.fetch_makerworld_trending",
          "callee": "info",
          "line": 323,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.fetch_makerworld_trending",
          "callee": "len",
          "line": 323,
          "type": "direct"
        },
        {
          "caller": "TrendingService.fetch_makerworld_trending",
          "callee": "error",
          "line": 326,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.fetch_printables_trending",
          "callee": "_fetch_url",
          "line": 338,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.fetch_printables_trending",
          "callee": "BeautifulSoup",
          "line": 339,
          "type": "direct"
        },
        {
          "caller": "TrendingService.fetch_printables_trending",
          "callee": "find_all",
          "line": 342,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.fetch_printables_trending",
          "callee": "find",
          "line": 346,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.fetch_printables_trending",
          "callee": "find",
          "line": 347,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.fetch_printables_trending",
          "callee": "find",
          "line": 348,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.fetch_printables_trending",
          "callee": "find",
          "line": 349,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.fetch_printables_trending",
          "callee": "find",
          "line": 350,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.fetch_printables_trending",
          "callee": "_extract_id_from_url",
          "line": 354,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.fetch_printables_trending",
          "callee": "append",
          "line": 356,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.fetch_printables_trending",
          "callee": "str",
          "line": 358,
          "type": "direct"
        },
        {
          "caller": "TrendingService.fetch_printables_trending",
          "callee": "uuid4",
          "line": 358,
          "type": "direct"
        },
        {
          "caller": "TrendingService.fetch_printables_trending",
          "callee": "strip",
          "line": 359,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.fetch_printables_trending",
          "callee": "strip",
          "line": 361,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.fetch_printables_trending",
          "callee": "_parse_count",
          "line": 362,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.fetch_printables_trending",
          "callee": "_parse_count",
          "line": 363,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.fetch_printables_trending",
          "callee": "warning",
          "line": 367,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.fetch_printables_trending",
          "callee": "info",
          "line": 369,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.fetch_printables_trending",
          "callee": "len",
          "line": 369,
          "type": "direct"
        },
        {
          "caller": "TrendingService.fetch_printables_trending",
          "callee": "error",
          "line": 372,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._extract_id_from_url",
          "callee": "search",
          "line": 381,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._extract_id_from_url",
          "callee": "group",
          "line": 382,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._extract_id_from_url",
          "callee": "search",
          "line": 384,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._extract_id_from_url",
          "callee": "group",
          "line": 385,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._parse_count",
          "callee": "upper",
          "line": 394,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._parse_count",
          "callee": "strip",
          "line": 394,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._parse_count",
          "callee": "int",
          "line": 398,
          "type": "direct"
        },
        {
          "caller": "TrendingService._parse_count",
          "callee": "float",
          "line": 398,
          "type": "direct"
        },
        {
          "caller": "TrendingService._parse_count",
          "callee": "replace",
          "line": 398,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._parse_count",
          "callee": "int",
          "line": 400,
          "type": "direct"
        },
        {
          "caller": "TrendingService._parse_count",
          "callee": "float",
          "line": 400,
          "type": "direct"
        },
        {
          "caller": "TrendingService._parse_count",
          "callee": "replace",
          "line": 400,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._parse_count",
          "callee": "findall",
          "line": 404,
          "type": "attribute"
        },
        {
          "caller": "TrendingService._parse_count",
          "callee": "int",
          "line": 405,
          "type": "direct"
        },
        {
          "caller": "TrendingService.save_trending_items",
          "callee": "now",
          "line": 411,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.save_trending_items",
          "callee": "timedelta",
          "line": 411,
          "type": "direct"
        },
        {
          "caller": "TrendingService.save_trending_items",
          "callee": "connection",
          "line": 413,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.save_trending_items",
          "callee": "str",
          "line": 416,
          "type": "direct"
        },
        {
          "caller": "TrendingService.save_trending_items",
          "callee": "uuid4",
          "line": 416,
          "type": "direct"
        },
        {
          "caller": "TrendingService.save_trending_items",
          "callee": "execute",
          "line": 419,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.save_trending_items",
          "callee": "fetchone",
          "line": 424,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.save_trending_items",
          "callee": "execute",
          "line": 428,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.save_trending_items",
          "callee": "get",
          "line": 436,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.save_trending_items",
          "callee": "get",
          "line": 436,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.save_trending_items",
          "callee": "get",
          "line": 437,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.save_trending_items",
          "callee": "get",
          "line": 437,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.save_trending_items",
          "callee": "isoformat",
          "line": 438,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.save_trending_items",
          "callee": "now",
          "line": 438,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.save_trending_items",
          "callee": "isoformat",
          "line": 438,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.save_trending_items",
          "callee": "dumps",
          "line": 439,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.save_trending_items",
          "callee": "get",
          "line": 439,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.save_trending_items",
          "callee": "execute",
          "line": 444,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.save_trending_items",
          "callee": "get",
          "line": 453,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.save_trending_items",
          "callee": "get",
          "line": 454,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.save_trending_items",
          "callee": "get",
          "line": 455,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.save_trending_items",
          "callee": "get",
          "line": 455,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.save_trending_items",
          "callee": "get",
          "line": 456,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.save_trending_items",
          "callee": "get",
          "line": 456,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.save_trending_items",
          "callee": "isoformat",
          "line": 457,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.save_trending_items",
          "callee": "now",
          "line": 457,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.save_trending_items",
          "callee": "isoformat",
          "line": 457,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.save_trending_items",
          "callee": "dumps",
          "line": 458,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.save_trending_items",
          "callee": "get",
          "line": 458,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.save_trending_items",
          "callee": "warning",
          "line": 462,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.save_trending_items",
          "callee": "commit",
          "line": 464,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.get_trending",
          "callee": "append",
          "line": 479,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.get_trending",
          "callee": "append",
          "line": 483,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.get_trending",
          "callee": "append",
          "line": 486,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.get_trending",
          "callee": "connection",
          "line": 488,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.get_trending",
          "callee": "execute",
          "line": 489,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.get_trending",
          "callee": "fetchall",
          "line": 490,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.get_trending",
          "callee": "dict",
          "line": 492,
          "type": "direct"
        },
        {
          "caller": "TrendingService.refresh_all_platforms",
          "callee": "info",
          "line": 496,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.refresh_all_platforms",
          "callee": "fetch_makerworld_trending",
          "line": 500,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.refresh_all_platforms",
          "callee": "fetch_printables_trending",
          "line": 501,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.refresh_all_platforms",
          "callee": "save_trending_items",
          "line": 505,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.refresh_all_platforms",
          "callee": "info",
          "line": 506,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.refresh_all_platforms",
          "callee": "len",
          "line": 506,
          "type": "direct"
        },
        {
          "caller": "TrendingService.refresh_all_platforms",
          "callee": "save_trending_items",
          "line": 509,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.refresh_all_platforms",
          "callee": "info",
          "line": 510,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.refresh_all_platforms",
          "callee": "len",
          "line": 510,
          "type": "direct"
        },
        {
          "caller": "TrendingService.refresh_all_platforms",
          "callee": "cleanup_expired",
          "line": 513,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.refresh_all_platforms",
          "callee": "emit_event",
          "line": 516,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.refresh_all_platforms",
          "callee": "isoformat",
          "line": 518,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.refresh_all_platforms",
          "callee": "now",
          "line": 518,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.refresh_all_platforms",
          "callee": "error",
          "line": 522,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.cleanup_expired",
          "callee": "connection",
          "line": 526,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.cleanup_expired",
          "callee": "execute",
          "line": 528,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.cleanup_expired",
          "callee": "execute",
          "line": 534,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.cleanup_expired",
          "callee": "fetchall",
          "line": 535,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.cleanup_expired",
          "callee": "glob",
          "line": 539,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.cleanup_expired",
          "callee": "str",
          "line": 540,
          "type": "direct"
        },
        {
          "caller": "TrendingService.cleanup_expired",
          "callee": "unlink",
          "line": 542,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.cleanup_expired",
          "callee": "commit",
          "line": 546,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.save_as_idea",
          "callee": "connection",
          "line": 550,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.save_as_idea",
          "callee": "execute",
          "line": 552,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.save_as_idea",
          "callee": "fetchone",
          "line": 556,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.save_as_idea",
          "callee": "ValueError",
          "line": 558,
          "type": "direct"
        },
        {
          "caller": "TrendingService.save_as_idea",
          "callee": "str",
          "line": 561,
          "type": "direct"
        },
        {
          "caller": "TrendingService.save_as_idea",
          "callee": "uuid4",
          "line": 561,
          "type": "direct"
        },
        {
          "caller": "TrendingService.save_as_idea",
          "callee": "execute",
          "line": 563,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.save_as_idea",
          "callee": "isoformat",
          "line": 574,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.save_as_idea",
          "callee": "now",
          "line": 574,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.save_as_idea",
          "callee": "dumps",
          "line": 575,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.save_as_idea",
          "callee": "commit",
          "line": 584,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.save_as_idea",
          "callee": "emit_event",
          "line": 587,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.get_statistics",
          "callee": "connection",
          "line": 597,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.get_statistics",
          "callee": "execute",
          "line": 599,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.get_statistics",
          "callee": "fetchone",
          "line": 600,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.get_statistics",
          "callee": "execute",
          "line": 603,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.get_statistics",
          "callee": "fetchone",
          "line": 607,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.get_statistics",
          "callee": "execute",
          "line": 610,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.get_statistics",
          "callee": "fetchall",
          "line": 616,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.get_statistics",
          "callee": "execute",
          "line": 619,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.get_statistics",
          "callee": "fetchall",
          "line": 625,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.cleanup",
          "callee": "cancel",
          "line": 655,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.cleanup",
          "callee": "close",
          "line": 658,
          "type": "attribute"
        },
        {
          "caller": "TrendingService.cleanup",
          "callee": "info",
          "line": 660,
          "type": "attribute"
        }
      ],
      "error": null
    },
    {
      "filepath": "src\\services\\url_parser_service.py",
      "functions": [
        {
          "name": "__init__",
          "full_name": "UrlParserService.__init__",
          "class": "UrlParserService",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 19,
          "line_end": 20,
          "access_level": "dunder",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_get_session",
          "full_name": "UrlParserService._get_session",
          "class": "UrlParserService",
          "signature": "(self)",
          "return_type": "aiohttp.ClientSession",
          "decorators": [],
          "docstring": "Get or create HTTP session.",
          "line_start": 22,
          "line_end": 30,
          "access_level": "private",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "close",
          "full_name": "UrlParserService.close",
          "class": "UrlParserService",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Close HTTP session.",
          "line_start": 32,
          "line_end": 36,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "detect_platform",
          "full_name": "UrlParserService.detect_platform",
          "class": "UrlParserService",
          "signature": "(self, url: str)",
          "return_type": "Optional[str]",
          "decorators": [],
          "docstring": "Detect the platform from URL.",
          "line_start": 38,
          "line_end": 53,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "extract_model_id",
          "full_name": "UrlParserService.extract_model_id",
          "class": "UrlParserService",
          "signature": "(self, url: str, platform: str)",
          "return_type": "Optional[str]",
          "decorators": [],
          "docstring": "Extract model ID from URL based on platform.",
          "line_start": 55,
          "line_end": 87,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "fetch_page_title",
          "full_name": "UrlParserService.fetch_page_title",
          "class": "UrlParserService",
          "signature": "(self, url: str)",
          "return_type": "Optional[str]",
          "decorators": [],
          "docstring": "Fetch the page title from URL.",
          "line_start": 89,
          "line_end": 108,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_clean_title",
          "full_name": "UrlParserService._clean_title",
          "class": "UrlParserService",
          "signature": "(self, title: str)",
          "return_type": "str",
          "decorators": [],
          "docstring": "Clean up page title by removing platform-specific suffixes.",
          "line_start": 110,
          "line_end": 127,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "extract_creator_from_title",
          "full_name": "UrlParserService.extract_creator_from_title",
          "class": "UrlParserService",
          "signature": "(self, title: str, platform: str)",
          "return_type": "Optional[str]",
          "decorators": [],
          "docstring": "Extract creator name from page title if available.",
          "line_start": 129,
          "line_end": 142,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "parse_url",
          "full_name": "UrlParserService.parse_url",
          "class": "UrlParserService",
          "signature": "(self, url: str)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Parse URL and extract available metadata.",
          "line_start": 144,
          "line_end": 196,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_platform_info",
          "full_name": "UrlParserService.get_platform_info",
          "class": "UrlParserService",
          "signature": "(self, platform: str)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Get information about a specific platform.",
          "line_start": 198,
          "line_end": 241,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "validate_url",
          "full_name": "UrlParserService.validate_url",
          "class": "UrlParserService",
          "signature": "(self, url: str)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Validate if URL is from a supported platform.",
          "line_start": 243,
          "line_end": 254,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_supported_platforms",
          "full_name": "UrlParserService.get_supported_platforms",
          "class": "UrlParserService",
          "signature": "(self)",
          "return_type": "list[str]",
          "decorators": [],
          "docstring": "Get list of supported platforms.",
          "line_start": 256,
          "line_end": 258,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "re",
          "alias": null,
          "line": 5
        },
        {
          "type": "import",
          "module": "urllib.parse",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Optional",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Dict",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Any",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 8
        },
        {
          "type": "import",
          "module": "structlog",
          "alias": null,
          "line": 9
        },
        {
          "type": "import",
          "module": "aiohttp",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "bs4",
          "name": "BeautifulSoup",
          "alias": null,
          "line": 11
        }
      ],
      "function_calls": [
        {
          "caller": "UrlParserService._get_session",
          "callee": "ClientTimeout",
          "line": 28,
          "type": "attribute"
        },
        {
          "caller": "UrlParserService._get_session",
          "callee": "ClientSession",
          "line": 29,
          "type": "attribute"
        },
        {
          "caller": "UrlParserService.close",
          "callee": "close",
          "line": 35,
          "type": "attribute"
        },
        {
          "caller": "UrlParserService.detect_platform",
          "callee": "lower",
          "line": 40,
          "type": "attribute"
        },
        {
          "caller": "UrlParserService.extract_model_id",
          "callee": "search",
          "line": 60,
          "type": "attribute"
        },
        {
          "caller": "UrlParserService.extract_model_id",
          "callee": "group",
          "line": 61,
          "type": "attribute"
        },
        {
          "caller": "UrlParserService.extract_model_id",
          "callee": "search",
          "line": 65,
          "type": "attribute"
        },
        {
          "caller": "UrlParserService.extract_model_id",
          "callee": "group",
          "line": 66,
          "type": "attribute"
        },
        {
          "caller": "UrlParserService.extract_model_id",
          "callee": "search",
          "line": 70,
          "type": "attribute"
        },
        {
          "caller": "UrlParserService.extract_model_id",
          "callee": "group",
          "line": 71,
          "type": "attribute"
        },
        {
          "caller": "UrlParserService.extract_model_id",
          "callee": "search",
          "line": 75,
          "type": "attribute"
        },
        {
          "caller": "UrlParserService.extract_model_id",
          "callee": "group",
          "line": 76,
          "type": "attribute"
        },
        {
          "caller": "UrlParserService.extract_model_id",
          "callee": "urlparse",
          "line": 81,
          "type": "attribute"
        },
        {
          "caller": "UrlParserService.extract_model_id",
          "callee": "split",
          "line": 82,
          "type": "attribute"
        },
        {
          "caller": "UrlParserService.extract_model_id",
          "callee": "warning",
          "line": 85,
          "type": "attribute"
        },
        {
          "caller": "UrlParserService.extract_model_id",
          "callee": "str",
          "line": 85,
          "type": "direct"
        },
        {
          "caller": "UrlParserService.fetch_page_title",
          "callee": "_get_session",
          "line": 92,
          "type": "attribute"
        },
        {
          "caller": "UrlParserService.fetch_page_title",
          "callee": "get",
          "line": 93,
          "type": "attribute"
        },
        {
          "caller": "UrlParserService.fetch_page_title",
          "callee": "text",
          "line": 95,
          "type": "attribute"
        },
        {
          "caller": "UrlParserService.fetch_page_title",
          "callee": "BeautifulSoup",
          "line": 96,
          "type": "direct"
        },
        {
          "caller": "UrlParserService.fetch_page_title",
          "callee": "find",
          "line": 98,
          "type": "attribute"
        },
        {
          "caller": "UrlParserService.fetch_page_title",
          "callee": "strip",
          "line": 100,
          "type": "attribute"
        },
        {
          "caller": "UrlParserService.fetch_page_title",
          "callee": "get_text",
          "line": 100,
          "type": "attribute"
        },
        {
          "caller": "UrlParserService.fetch_page_title",
          "callee": "_clean_title",
          "line": 102,
          "type": "attribute"
        },
        {
          "caller": "UrlParserService.fetch_page_title",
          "callee": "warning",
          "line": 106,
          "type": "attribute"
        },
        {
          "caller": "UrlParserService.fetch_page_title",
          "callee": "str",
          "line": 106,
          "type": "direct"
        },
        {
          "caller": "UrlParserService._clean_title",
          "callee": "sub",
          "line": 125,
          "type": "attribute"
        },
        {
          "caller": "UrlParserService._clean_title",
          "callee": "strip",
          "line": 127,
          "type": "attribute"
        },
        {
          "caller": "UrlParserService.extract_creator_from_title",
          "callee": "search",
          "line": 134,
          "type": "attribute"
        },
        {
          "caller": "UrlParserService.extract_creator_from_title",
          "callee": "strip",
          "line": 135,
          "type": "attribute"
        },
        {
          "caller": "UrlParserService.extract_creator_from_title",
          "callee": "group",
          "line": 135,
          "type": "attribute"
        },
        {
          "caller": "UrlParserService.extract_creator_from_title",
          "callee": "warning",
          "line": 140,
          "type": "attribute"
        },
        {
          "caller": "UrlParserService.extract_creator_from_title",
          "callee": "str",
          "line": 140,
          "type": "direct"
        },
        {
          "caller": "UrlParserService.parse_url",
          "callee": "urlparse",
          "line": 148,
          "type": "attribute"
        },
        {
          "caller": "UrlParserService.parse_url",
          "callee": "ValueError",
          "line": 150,
          "type": "direct"
        },
        {
          "caller": "UrlParserService.parse_url",
          "callee": "detect_platform",
          "line": 153,
          "type": "attribute"
        },
        {
          "caller": "UrlParserService.parse_url",
          "callee": "extract_model_id",
          "line": 159,
          "type": "attribute"
        },
        {
          "caller": "UrlParserService.parse_url",
          "callee": "fetch_page_title",
          "line": 162,
          "type": "attribute"
        },
        {
          "caller": "UrlParserService.parse_url",
          "callee": "_clean_title",
          "line": 168,
          "type": "attribute"
        },
        {
          "caller": "UrlParserService.parse_url",
          "callee": "extract_creator_from_title",
          "line": 169,
          "type": "attribute"
        },
        {
          "caller": "UrlParserService.parse_url",
          "callee": "title",
          "line": 176,
          "type": "attribute"
        },
        {
          "caller": "UrlParserService.parse_url",
          "callee": "isoformat",
          "line": 179,
          "type": "attribute"
        },
        {
          "caller": "UrlParserService.parse_url",
          "callee": "now",
          "line": 179,
          "type": "attribute"
        },
        {
          "caller": "UrlParserService.parse_url",
          "callee": "info",
          "line": 183,
          "type": "attribute"
        },
        {
          "caller": "UrlParserService.parse_url",
          "callee": "error",
          "line": 187,
          "type": "attribute"
        },
        {
          "caller": "UrlParserService.parse_url",
          "callee": "str",
          "line": 187,
          "type": "direct"
        },
        {
          "caller": "UrlParserService.parse_url",
          "callee": "str",
          "line": 194,
          "type": "direct"
        },
        {
          "caller": "UrlParserService.parse_url",
          "callee": "isoformat",
          "line": 195,
          "type": "attribute"
        },
        {
          "caller": "UrlParserService.parse_url",
          "callee": "now",
          "line": 195,
          "type": "attribute"
        },
        {
          "caller": "UrlParserService.get_platform_info",
          "callee": "get",
          "line": 238,
          "type": "attribute"
        },
        {
          "caller": "UrlParserService.get_platform_info",
          "callee": "title",
          "line": 239,
          "type": "attribute"
        },
        {
          "caller": "UrlParserService.validate_url",
          "callee": "urlparse",
          "line": 246,
          "type": "attribute"
        },
        {
          "caller": "UrlParserService.validate_url",
          "callee": "detect_platform",
          "line": 250,
          "type": "attribute"
        }
      ],
      "error": null
    },
    {
      "filepath": "src\\services\\watch_folder_db_service.py",
      "functions": [
        {
          "name": "__init__",
          "full_name": "WatchFolderDbService.__init__",
          "class": "WatchFolderDbService",
          "signature": "(self, database: Database)",
          "return_type": "",
          "decorators": [],
          "docstring": "Initialize the database service.",
          "line_start": 21,
          "line_end": 23,
          "access_level": "dunder",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "create_watch_folder",
          "full_name": "WatchFolderDbService.create_watch_folder",
          "class": "WatchFolderDbService",
          "signature": "(self, watch_folder: WatchFolder)",
          "return_type": "int",
          "decorators": [],
          "docstring": "Create a new watch folder in database.",
          "line_start": 25,
          "line_end": 66,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_watch_folder_by_id",
          "full_name": "WatchFolderDbService.get_watch_folder_by_id",
          "class": "WatchFolderDbService",
          "signature": "(self, folder_id: int)",
          "return_type": "Optional[WatchFolder]",
          "decorators": [],
          "docstring": "Get watch folder by ID.",
          "line_start": 68,
          "line_end": 84,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_watch_folder_by_path",
          "full_name": "WatchFolderDbService.get_watch_folder_by_path",
          "class": "WatchFolderDbService",
          "signature": "(self, folder_path: str)",
          "return_type": "Optional[WatchFolder]",
          "decorators": [],
          "docstring": "Get watch folder by path.",
          "line_start": 86,
          "line_end": 102,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_all_watch_folders",
          "full_name": "WatchFolderDbService.get_all_watch_folders",
          "class": "WatchFolderDbService",
          "signature": "(self, active_only: bool)",
          "return_type": "List[WatchFolder]",
          "decorators": [],
          "docstring": "Get all watch folders.",
          "line_start": 104,
          "line_end": 123,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "update_watch_folder",
          "full_name": "WatchFolderDbService.update_watch_folder",
          "class": "WatchFolderDbService",
          "signature": "(self, folder_id: int, updates: Dict[str, Any])",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Update watch folder fields.",
          "line_start": 125,
          "line_end": 171,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "delete_watch_folder",
          "full_name": "WatchFolderDbService.delete_watch_folder",
          "class": "WatchFolderDbService",
          "signature": "(self, folder_id: int)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Delete watch folder from database.",
          "line_start": 173,
          "line_end": 192,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "delete_watch_folder_by_path",
          "full_name": "WatchFolderDbService.delete_watch_folder_by_path",
          "class": "WatchFolderDbService",
          "signature": "(self, folder_path: str)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Delete watch folder by path.",
          "line_start": 194,
          "line_end": 213,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_active_folder_paths",
          "full_name": "WatchFolderDbService.get_active_folder_paths",
          "class": "WatchFolderDbService",
          "signature": "(self)",
          "return_type": "List[str]",
          "decorators": [],
          "docstring": "Get list of active watch folder paths.",
          "line_start": 215,
          "line_end": 228,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "update_folder_statistics",
          "full_name": "WatchFolderDbService.update_folder_statistics",
          "class": "WatchFolderDbService",
          "signature": "(self, folder_path: str, file_count: int)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Update folder file count and last scan time.",
          "line_start": 230,
          "line_end": 251,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "validate_and_update_folder",
          "full_name": "WatchFolderDbService.validate_and_update_folder",
          "class": "WatchFolderDbService",
          "signature": "(self, folder_path: str, is_valid: bool, error_message: Optional[str])",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Update folder validation status.",
          "line_start": 253,
          "line_end": 275,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "migrate_env_folders",
          "full_name": "WatchFolderDbService.migrate_env_folders",
          "class": "WatchFolderDbService",
          "signature": "(self, folder_paths: List[str])",
          "return_type": "int",
          "decorators": [],
          "docstring": "Migrate folders from environment variables to database.",
          "line_start": 277,
          "line_end": 309,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "sqlite3",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "List",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Optional",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Dict",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Any",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "pathlib",
          "name": "Path",
          "alias": null,
          "line": 9
        },
        {
          "type": "import",
          "module": "structlog",
          "alias": null,
          "line": 11
        },
        {
          "type": "from_import",
          "module": "src.database.database",
          "name": "Database",
          "alias": null,
          "line": 12
        },
        {
          "type": "from_import",
          "module": "src.models.watch_folder",
          "name": "WatchFolder",
          "alias": null,
          "line": 13
        },
        {
          "type": "from_import",
          "module": "src.models.watch_folder",
          "name": "WatchFolderSource",
          "alias": null,
          "line": 13
        }
      ],
      "function_calls": [
        {
          "caller": "WatchFolderDbService.create_watch_folder",
          "callee": "RuntimeError",
          "line": 29,
          "type": "direct"
        },
        {
          "caller": "WatchFolderDbService.create_watch_folder",
          "callee": "get_connection",
          "line": 31,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.create_watch_folder",
          "callee": "execute",
          "line": 32,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.create_watch_folder",
          "callee": "isoformat",
          "line": 45,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.create_watch_folder",
          "callee": "isoformat",
          "line": 48,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.create_watch_folder",
          "callee": "commit",
          "line": 53,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.create_watch_folder",
          "callee": "info",
          "line": 55,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.create_watch_folder",
          "callee": "error",
          "line": 60,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.create_watch_folder",
          "callee": "str",
          "line": 61,
          "type": "direct"
        },
        {
          "caller": "WatchFolderDbService.create_watch_folder",
          "callee": "ValueError",
          "line": 62,
          "type": "direct"
        },
        {
          "caller": "WatchFolderDbService.create_watch_folder",
          "callee": "error",
          "line": 64,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.create_watch_folder",
          "callee": "str",
          "line": 65,
          "type": "direct"
        },
        {
          "caller": "WatchFolderDbService.get_watch_folder_by_id",
          "callee": "RuntimeError",
          "line": 72,
          "type": "direct"
        },
        {
          "caller": "WatchFolderDbService.get_watch_folder_by_id",
          "callee": "get_connection",
          "line": 74,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.get_watch_folder_by_id",
          "callee": "execute",
          "line": 75,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.get_watch_folder_by_id",
          "callee": "fetchone",
          "line": 76,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.get_watch_folder_by_id",
          "callee": "from_db_row",
          "line": 79,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.get_watch_folder_by_id",
          "callee": "error",
          "line": 83,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.get_watch_folder_by_id",
          "callee": "str",
          "line": 83,
          "type": "direct"
        },
        {
          "caller": "WatchFolderDbService.get_watch_folder_by_path",
          "callee": "RuntimeError",
          "line": 90,
          "type": "direct"
        },
        {
          "caller": "WatchFolderDbService.get_watch_folder_by_path",
          "callee": "get_connection",
          "line": 92,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.get_watch_folder_by_path",
          "callee": "execute",
          "line": 93,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.get_watch_folder_by_path",
          "callee": "fetchone",
          "line": 94,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.get_watch_folder_by_path",
          "callee": "from_db_row",
          "line": 97,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.get_watch_folder_by_path",
          "callee": "error",
          "line": 101,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.get_watch_folder_by_path",
          "callee": "str",
          "line": 101,
          "type": "direct"
        },
        {
          "caller": "WatchFolderDbService.get_all_watch_folders",
          "callee": "RuntimeError",
          "line": 108,
          "type": "direct"
        },
        {
          "caller": "WatchFolderDbService.get_all_watch_folders",
          "callee": "get_connection",
          "line": 110,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.get_all_watch_folders",
          "callee": "execute",
          "line": 117,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.get_all_watch_folders",
          "callee": "fetchall",
          "line": 118,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.get_all_watch_folders",
          "callee": "from_db_row",
          "line": 119,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.get_all_watch_folders",
          "callee": "error",
          "line": 122,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.get_all_watch_folders",
          "callee": "str",
          "line": 122,
          "type": "direct"
        },
        {
          "caller": "WatchFolderDbService.update_watch_folder",
          "callee": "RuntimeError",
          "line": 129,
          "type": "direct"
        },
        {
          "caller": "WatchFolderDbService.update_watch_folder",
          "callee": "items",
          "line": 138,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.update_watch_folder",
          "callee": "append",
          "line": 140,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.update_watch_folder",
          "callee": "append",
          "line": 141,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.update_watch_folder",
          "callee": "append",
          "line": 143,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.update_watch_folder",
          "callee": "append",
          "line": 144,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.update_watch_folder",
          "callee": "bool",
          "line": 144,
          "type": "direct"
        },
        {
          "caller": "WatchFolderDbService.update_watch_folder",
          "callee": "append",
          "line": 146,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.update_watch_folder",
          "callee": "append",
          "line": 147,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.update_watch_folder",
          "callee": "int",
          "line": 147,
          "type": "direct"
        },
        {
          "caller": "WatchFolderDbService.update_watch_folder",
          "callee": "append",
          "line": 149,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.update_watch_folder",
          "callee": "append",
          "line": 150,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.update_watch_folder",
          "callee": "isinstance",
          "line": 150,
          "type": "direct"
        },
        {
          "caller": "WatchFolderDbService.update_watch_folder",
          "callee": "isoformat",
          "line": 150,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.update_watch_folder",
          "callee": "append",
          "line": 155,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.update_watch_folder",
          "callee": "get_connection",
          "line": 157,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.update_watch_folder",
          "callee": "join",
          "line": 158,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.update_watch_folder",
          "callee": "execute",
          "line": 159,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.update_watch_folder",
          "callee": "commit",
          "line": 162,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.update_watch_folder",
          "callee": "info",
          "line": 165,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.update_watch_folder",
          "callee": "list",
          "line": 165,
          "type": "direct"
        },
        {
          "caller": "WatchFolderDbService.update_watch_folder",
          "callee": "keys",
          "line": 165,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.update_watch_folder",
          "callee": "error",
          "line": 170,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.update_watch_folder",
          "callee": "str",
          "line": 170,
          "type": "direct"
        },
        {
          "caller": "WatchFolderDbService.delete_watch_folder",
          "callee": "RuntimeError",
          "line": 177,
          "type": "direct"
        },
        {
          "caller": "WatchFolderDbService.delete_watch_folder",
          "callee": "get_connection",
          "line": 179,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.delete_watch_folder",
          "callee": "execute",
          "line": 180,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.delete_watch_folder",
          "callee": "commit",
          "line": 183,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.delete_watch_folder",
          "callee": "info",
          "line": 186,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.delete_watch_folder",
          "callee": "error",
          "line": 191,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.delete_watch_folder",
          "callee": "str",
          "line": 191,
          "type": "direct"
        },
        {
          "caller": "WatchFolderDbService.delete_watch_folder_by_path",
          "callee": "RuntimeError",
          "line": 198,
          "type": "direct"
        },
        {
          "caller": "WatchFolderDbService.delete_watch_folder_by_path",
          "callee": "get_connection",
          "line": 200,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.delete_watch_folder_by_path",
          "callee": "execute",
          "line": 201,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.delete_watch_folder_by_path",
          "callee": "commit",
          "line": 204,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.delete_watch_folder_by_path",
          "callee": "info",
          "line": 207,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.delete_watch_folder_by_path",
          "callee": "error",
          "line": 212,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.delete_watch_folder_by_path",
          "callee": "str",
          "line": 212,
          "type": "direct"
        },
        {
          "caller": "WatchFolderDbService.get_active_folder_paths",
          "callee": "RuntimeError",
          "line": 219,
          "type": "direct"
        },
        {
          "caller": "WatchFolderDbService.get_active_folder_paths",
          "callee": "get_connection",
          "line": 221,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.get_active_folder_paths",
          "callee": "execute",
          "line": 222,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.get_active_folder_paths",
          "callee": "fetchall",
          "line": 223,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.get_active_folder_paths",
          "callee": "error",
          "line": 227,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.get_active_folder_paths",
          "callee": "str",
          "line": 227,
          "type": "direct"
        },
        {
          "caller": "WatchFolderDbService.update_folder_statistics",
          "callee": "RuntimeError",
          "line": 234,
          "type": "direct"
        },
        {
          "caller": "WatchFolderDbService.update_folder_statistics",
          "callee": "now",
          "line": 236,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.update_folder_statistics",
          "callee": "get_connection",
          "line": 237,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.update_folder_statistics",
          "callee": "execute",
          "line": 238,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.update_folder_statistics",
          "callee": "isoformat",
          "line": 242,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.update_folder_statistics",
          "callee": "commit",
          "line": 245,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.update_folder_statistics",
          "callee": "error",
          "line": 249,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.update_folder_statistics",
          "callee": "str",
          "line": 250,
          "type": "direct"
        },
        {
          "caller": "WatchFolderDbService.validate_and_update_folder",
          "callee": "RuntimeError",
          "line": 258,
          "type": "direct"
        },
        {
          "caller": "WatchFolderDbService.validate_and_update_folder",
          "callee": "now",
          "line": 260,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.validate_and_update_folder",
          "callee": "get_connection",
          "line": 261,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.validate_and_update_folder",
          "callee": "execute",
          "line": 262,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.validate_and_update_folder",
          "callee": "isoformat",
          "line": 266,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.validate_and_update_folder",
          "callee": "commit",
          "line": 269,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.validate_and_update_folder",
          "callee": "error",
          "line": 273,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.validate_and_update_folder",
          "callee": "str",
          "line": 274,
          "type": "direct"
        },
        {
          "caller": "WatchFolderDbService.migrate_env_folders",
          "callee": "get_watch_folder_by_path",
          "line": 284,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.migrate_env_folders",
          "callee": "debug",
          "line": 286,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.migrate_env_folders",
          "callee": "WatchFolder",
          "line": 290,
          "type": "direct"
        },
        {
          "caller": "WatchFolderDbService.migrate_env_folders",
          "callee": "Path",
          "line": 293,
          "type": "direct"
        },
        {
          "caller": "WatchFolderDbService.migrate_env_folders",
          "callee": "create_watch_folder",
          "line": 297,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.migrate_env_folders",
          "callee": "info",
          "line": 299,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.migrate_env_folders",
          "callee": "info",
          "line": 304,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.migrate_env_folders",
          "callee": "error",
          "line": 308,
          "type": "attribute"
        },
        {
          "caller": "WatchFolderDbService.migrate_env_folders",
          "callee": "str",
          "line": 308,
          "type": "direct"
        }
      ],
      "error": null
    },
    {
      "filepath": "src\\utils\\__init__.py",
      "functions": [],
      "imports": [],
      "function_calls": [],
      "error": null
    },
    {
      "filepath": "src\\utils\\config.py",
      "functions": [
        {
          "name": "validate_secret_key",
          "full_name": "PrinternizerSettings.validate_secret_key",
          "class": "PrinternizerSettings",
          "signature": "(cls, v)",
          "return_type": "",
          "decorators": [
            "validator('secret_key')"
          ],
          "docstring": "Validate and generate secure secret key if needed.",
          "line_start": 90,
          "line_end": 102,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "validate_library_path",
          "full_name": "PrinternizerSettings.validate_library_path",
          "class": "PrinternizerSettings",
          "signature": "(cls, v)",
          "return_type": "",
          "decorators": [
            "validator('library_path')"
          ],
          "docstring": "Validate library path is absolute.",
          "line_start": 105,
          "line_end": 121,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "cors_origins_list",
          "full_name": "PrinternizerSettings.cors_origins_list",
          "class": "PrinternizerSettings",
          "signature": "(self)",
          "return_type": "List[str]",
          "decorators": [
            "property"
          ],
          "docstring": "Get CORS origins as list.",
          "line_start": 124,
          "line_end": 128,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": true,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "watch_folders_list",
          "full_name": "PrinternizerSettings.watch_folders_list",
          "class": "PrinternizerSettings",
          "signature": "(self)",
          "return_type": "List[str]",
          "decorators": [
            "property"
          ],
          "docstring": "Get watch folders as list.",
          "line_start": 131,
          "line_end": 135,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": true,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "is_homeassistant_addon",
          "full_name": "PrinternizerSettings.is_homeassistant_addon",
          "class": "PrinternizerSettings",
          "signature": "(self)",
          "return_type": "bool",
          "decorators": [
            "property"
          ],
          "docstring": "Check if running as Home Assistant addon.",
          "line_start": 138,
          "line_end": 140,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": true,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "mqtt_available",
          "full_name": "PrinternizerSettings.mqtt_available",
          "class": "PrinternizerSettings",
          "signature": "(self)",
          "return_type": "bool",
          "decorators": [
            "property"
          ],
          "docstring": "Check if MQTT configuration is available.",
          "line_start": 143,
          "line_end": 145,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": true,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_settings",
          "full_name": "get_settings",
          "class": null,
          "signature": "()",
          "return_type": "PrinternizerSettings",
          "decorators": [],
          "docstring": "Get global settings instance.",
          "line_start": 157,
          "line_end": 162,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "reload_settings",
          "full_name": "reload_settings",
          "class": null,
          "signature": "()",
          "return_type": "PrinternizerSettings",
          "decorators": [],
          "docstring": "Reload settings from environment.",
          "line_start": 165,
          "line_end": 169,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "os",
          "alias": null,
          "line": 6
        },
        {
          "type": "import",
          "module": "secrets",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Optional",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "List",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "pydantic",
          "name": "Field",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "pydantic",
          "name": "validator",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "pydantic_settings",
          "name": "BaseSettings",
          "alias": null,
          "line": 10
        },
        {
          "type": "import",
          "module": "structlog",
          "alias": null,
          "line": 11
        },
        {
          "type": "from_import",
          "module": "pathlib",
          "name": "Path",
          "alias": null,
          "line": 110
        }
      ],
      "function_calls": [
        {
          "caller": "PrinternizerSettings.validate_secret_key",
          "callee": "token_urlsafe",
          "line": 94,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerSettings.validate_secret_key",
          "callee": "warning",
          "line": 95,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerSettings.validate_secret_key",
          "callee": "info",
          "line": 96,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerSettings.validate_secret_key",
          "callee": "len",
          "line": 100,
          "type": "direct"
        },
        {
          "caller": "PrinternizerSettings.validate_secret_key",
          "callee": "ValueError",
          "line": 101,
          "type": "direct"
        },
        {
          "caller": "PrinternizerSettings.validate_secret_key",
          "callee": "validator",
          "line": 89,
          "type": "direct"
        },
        {
          "caller": "PrinternizerSettings.validate_library_path",
          "callee": "Path",
          "line": 111,
          "type": "direct"
        },
        {
          "caller": "PrinternizerSettings.validate_library_path",
          "callee": "is_absolute",
          "line": 114,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerSettings.validate_library_path",
          "callee": "warning",
          "line": 115,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerSettings.validate_library_path",
          "callee": "absolute",
          "line": 117,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerSettings.validate_library_path",
          "callee": "str",
          "line": 119,
          "type": "direct"
        },
        {
          "caller": "PrinternizerSettings.validate_library_path",
          "callee": "absolute",
          "line": 119,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerSettings.validate_library_path",
          "callee": "validator",
          "line": 104,
          "type": "direct"
        },
        {
          "caller": "PrinternizerSettings.cors_origins_list",
          "callee": "strip",
          "line": 128,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerSettings.cors_origins_list",
          "callee": "split",
          "line": 128,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerSettings.cors_origins_list",
          "callee": "strip",
          "line": 128,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerSettings.watch_folders_list",
          "callee": "strip",
          "line": 135,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerSettings.watch_folders_list",
          "callee": "split",
          "line": 135,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerSettings.watch_folders_list",
          "callee": "strip",
          "line": 135,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerSettings.is_homeassistant_addon",
          "callee": "exists",
          "line": 140,
          "type": "attribute"
        },
        {
          "caller": "get_settings",
          "callee": "PrinternizerSettings",
          "line": 161,
          "type": "direct"
        },
        {
          "caller": "reload_settings",
          "callee": "PrinternizerSettings",
          "line": 168,
          "type": "direct"
        }
      ],
      "error": null
    },
    {
      "filepath": "src\\utils\\dependencies.py",
      "functions": [
        {
          "name": "get_database",
          "full_name": "get_database",
          "class": null,
          "signature": "(request: Request)",
          "return_type": "Database",
          "decorators": [],
          "docstring": "Get database instance from app state.",
          "line_start": 19,
          "line_end": 21,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_config_service",
          "full_name": "get_config_service",
          "class": null,
          "signature": "(request: Request)",
          "return_type": "ConfigService",
          "decorators": [],
          "docstring": "Get config service instance from app state.",
          "line_start": 24,
          "line_end": 26,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_event_service",
          "full_name": "get_event_service",
          "class": null,
          "signature": "(request: Request)",
          "return_type": "EventService",
          "decorators": [],
          "docstring": "Get event service instance from app state.",
          "line_start": 29,
          "line_end": 31,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_printer_service",
          "full_name": "get_printer_service",
          "class": null,
          "signature": "(request: Request)",
          "return_type": "PrinterService",
          "decorators": [],
          "docstring": "Get printer service instance from app state.",
          "line_start": 34,
          "line_end": 36,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_job_service",
          "full_name": "get_job_service",
          "class": null,
          "signature": "(database: Database, event_service: EventService)",
          "return_type": "JobService",
          "decorators": [],
          "docstring": "Get job service instance.",
          "line_start": 39,
          "line_end": 44,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_file_service",
          "full_name": "get_file_service",
          "class": null,
          "signature": "(request: Request)",
          "return_type": "FileService",
          "decorators": [],
          "docstring": "Get file service instance from app state.",
          "line_start": 47,
          "line_end": 49,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_analytics_service",
          "full_name": "get_analytics_service",
          "class": null,
          "signature": "(database: Database)",
          "return_type": "AnalyticsService",
          "decorators": [],
          "docstring": "Get analytics service instance.",
          "line_start": 52,
          "line_end": 56,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_idea_service",
          "full_name": "get_idea_service",
          "class": null,
          "signature": "(database: Database)",
          "return_type": "IdeaService",
          "decorators": [],
          "docstring": "Get idea service instance.",
          "line_start": 59,
          "line_end": 63,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_trending_service",
          "full_name": "get_trending_service",
          "class": null,
          "signature": "(request: Request)",
          "return_type": "TrendingService",
          "decorators": [],
          "docstring": "Get trending service instance from app state.",
          "line_start": 66,
          "line_end": 68,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_thumbnail_service",
          "full_name": "get_thumbnail_service",
          "class": null,
          "signature": "(request: Request)",
          "return_type": "ThumbnailService",
          "decorators": [],
          "docstring": "Get thumbnail service instance from app state.",
          "line_start": 71,
          "line_end": 73,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_url_parser_service",
          "full_name": "get_url_parser_service",
          "class": null,
          "signature": "(request: Request)",
          "return_type": "UrlParserService",
          "decorators": [],
          "docstring": "Get URL parser service instance from app state.",
          "line_start": 76,
          "line_end": 78,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "Depends",
          "alias": null,
          "line": 3
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "Request",
          "alias": null,
          "line": 3
        },
        {
          "type": "from_import",
          "module": "src.database.database",
          "name": "Database",
          "alias": null,
          "line": 5
        },
        {
          "type": "from_import",
          "module": "src.services.config_service",
          "name": "ConfigService",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "src.services.printer_service",
          "name": "PrinterService",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "src.services.job_service",
          "name": "JobService",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "src.services.file_service",
          "name": "FileService",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "src.services.analytics_service",
          "name": "AnalyticsService",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "src.services.event_service",
          "name": "EventService",
          "alias": null,
          "line": 11
        },
        {
          "type": "from_import",
          "module": "src.services.file_watcher_service",
          "name": "FileWatcherService",
          "alias": null,
          "line": 12
        },
        {
          "type": "from_import",
          "module": "src.services.idea_service",
          "name": "IdeaService",
          "alias": null,
          "line": 13
        },
        {
          "type": "from_import",
          "module": "src.services.trending_service",
          "name": "TrendingService",
          "alias": null,
          "line": 14
        },
        {
          "type": "from_import",
          "module": "src.services.thumbnail_service",
          "name": "ThumbnailService",
          "alias": null,
          "line": 15
        },
        {
          "type": "from_import",
          "module": "src.services.url_parser_service",
          "name": "UrlParserService",
          "alias": null,
          "line": 16
        }
      ],
      "function_calls": [
        {
          "caller": "get_job_service",
          "callee": "Depends",
          "line": 40,
          "type": "direct"
        },
        {
          "caller": "get_job_service",
          "callee": "Depends",
          "line": 41,
          "type": "direct"
        },
        {
          "caller": "get_job_service",
          "callee": "JobService",
          "line": 44,
          "type": "direct"
        },
        {
          "caller": "get_analytics_service",
          "callee": "Depends",
          "line": 53,
          "type": "direct"
        },
        {
          "caller": "get_analytics_service",
          "callee": "AnalyticsService",
          "line": 56,
          "type": "direct"
        },
        {
          "caller": "get_idea_service",
          "callee": "Depends",
          "line": 60,
          "type": "direct"
        },
        {
          "caller": "get_idea_service",
          "callee": "IdeaService",
          "line": 63,
          "type": "direct"
        }
      ],
      "error": null
    },
    {
      "filepath": "src\\utils\\error_handling.py",
      "functions": [
        {
          "name": "__init__",
          "full_name": "ErrorHandler.__init__",
          "class": "ErrorHandler",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 45,
          "line_end": 47,
          "access_level": "dunder",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "ensure_log_directory",
          "full_name": "ErrorHandler.ensure_log_directory",
          "class": "ErrorHandler",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Ensure the log directory exists.",
          "line_start": 49,
          "line_end": 51,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "handle_error",
          "full_name": "ErrorHandler.handle_error",
          "class": "ErrorHandler",
          "signature": "(self, error: Exception, category: ErrorCategory, severity: ErrorSeverity, context: Optional[Dict[str, Any]], user_message: Optional[str], should_log_to_file: bool)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Handle an error with comprehensive logging and context.\n\nArgs:\n    error: The exception that occurred\n    category: Category of the error\n    severity: Severity level\n    context: Additional context information\n    user_message: User-friendly error message\n    should_log_to_file: Whether to log to file\n    \nReturns:\n    Dict containing error information",
          "line_start": 53,
          "line_end": 107,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_generate_error_id",
          "full_name": "ErrorHandler._generate_error_id",
          "class": "ErrorHandler",
          "signature": "(self)",
          "return_type": "str",
          "decorators": [],
          "docstring": "Generate unique error ID.",
          "line_start": 109,
          "line_end": 111,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_get_log_level",
          "full_name": "ErrorHandler._get_log_level",
          "class": "ErrorHandler",
          "signature": "(self, severity: ErrorSeverity)",
          "return_type": "str",
          "decorators": [],
          "docstring": "Map severity to log level.",
          "line_start": 113,
          "line_end": 121,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_generate_user_message",
          "full_name": "ErrorHandler._generate_user_message",
          "class": "ErrorHandler",
          "signature": "(self, category: ErrorCategory, error: Exception)",
          "return_type": "str",
          "decorators": [],
          "docstring": "Generate user-friendly error message.",
          "line_start": 123,
          "line_end": 138,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_log_to_file",
          "full_name": "ErrorHandler._log_to_file",
          "class": "ErrorHandler",
          "signature": "(self, error_info: Dict[str, Any])",
          "return_type": "",
          "decorators": [],
          "docstring": "Log error information to file.",
          "line_start": 140,
          "line_end": 146,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_handle_critical_error",
          "full_name": "ErrorHandler._handle_critical_error",
          "class": "ErrorHandler",
          "signature": "(self, error_info: Dict[str, Any])",
          "return_type": "",
          "decorators": [],
          "docstring": "Handle critical errors with special alerting.",
          "line_start": 148,
          "line_end": 156,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_error_statistics",
          "full_name": "ErrorHandler.get_error_statistics",
          "class": "ErrorHandler",
          "signature": "(self, hours: int)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Get error statistics from log file.",
          "line_start": 164,
          "line_end": 187,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_empty_stats",
          "full_name": "ErrorHandler._empty_stats",
          "class": "ErrorHandler",
          "signature": "(self, hours: int)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Return empty statistics structure.",
          "line_start": 189,
          "line_end": 198,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_calculate_statistics",
          "full_name": "ErrorHandler._calculate_statistics",
          "class": "ErrorHandler",
          "signature": "(self, errors: list, hours: int)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Calculate error statistics from error list.",
          "line_start": 200,
          "line_end": 226,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "handle_exceptions",
          "full_name": "handle_exceptions",
          "class": null,
          "signature": "(category: ErrorCategory, severity: ErrorSeverity, user_message: Optional[str], reraise: bool)",
          "return_type": "",
          "decorators": [],
          "docstring": "Decorator to automatically handle exceptions in functions.\n\nArgs:\n    category: Error category\n    severity: Error severity\n    user_message: User-friendly message\n    reraise: Whether to re-raise the exception",
          "line_start": 233,
          "line_end": 291,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "decorator",
          "full_name": "decorator",
          "class": null,
          "signature": "(func: Callable)",
          "return_type": "Callable",
          "decorators": [],
          "docstring": "",
          "line_start": 248,
          "line_end": 289,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "sync_wrapper",
          "full_name": "sync_wrapper",
          "class": null,
          "signature": "()",
          "return_type": "",
          "decorators": [
            "functools.wraps(func)"
          ],
          "docstring": "",
          "line_start": 250,
          "line_end": 267,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "async_wrapper",
          "full_name": "async_wrapper",
          "class": null,
          "signature": "()",
          "return_type": "",
          "decorators": [
            "functools.wraps(func)"
          ],
          "docstring": "",
          "line_start": 270,
          "line_end": 287,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "report_error",
          "full_name": "ErrorReportingMixin.report_error",
          "class": "ErrorReportingMixin",
          "signature": "(self, error: Exception, category: ErrorCategory, severity: ErrorSeverity, context: Optional[Dict[str, Any]], user_message: Optional[str])",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Report an error through the global error handler.",
          "line_start": 297,
          "line_end": 312,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "handle_database_error",
          "full_name": "handle_database_error",
          "class": null,
          "signature": "(error: Exception, context: Optional[Dict[str, Any]])",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Handle database-related errors.",
          "line_start": 316,
          "line_end": 323,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "handle_api_error",
          "full_name": "handle_api_error",
          "class": null,
          "signature": "(error: Exception, context: Optional[Dict[str, Any]])",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Handle API-related errors.",
          "line_start": 326,
          "line_end": 333,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "handle_printer_error",
          "full_name": "handle_printer_error",
          "class": null,
          "signature": "(error: Exception, context: Optional[Dict[str, Any]])",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Handle printer-related errors.",
          "line_start": 336,
          "line_end": 343,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "handle_file_error",
          "full_name": "handle_file_error",
          "class": null,
          "signature": "(error: Exception, context: Optional[Dict[str, Any]])",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Handle file operation errors.",
          "line_start": 346,
          "line_end": 353,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "handle_validation_error",
          "full_name": "handle_validation_error",
          "class": null,
          "signature": "(error: Exception, context: Optional[Dict[str, Any]])",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Handle validation errors.",
          "line_start": 356,
          "line_end": 363,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "structlog",
          "alias": null,
          "line": 5
        },
        {
          "type": "import",
          "module": "traceback",
          "alias": null,
          "line": 6
        },
        {
          "type": "import",
          "module": "functools",
          "alias": null,
          "line": 7
        },
        {
          "type": "import",
          "module": "asyncio",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Any",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Callable",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Dict",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Optional",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Type",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Union",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "enum",
          "name": "Enum",
          "alias": null,
          "line": 11
        },
        {
          "type": "from_import",
          "module": "pathlib",
          "name": "Path",
          "alias": null,
          "line": 12
        },
        {
          "type": "import",
          "module": "json",
          "alias": null,
          "line": 13
        },
        {
          "type": "import",
          "module": "sys",
          "alias": null,
          "line": 14
        }
      ],
      "function_calls": [
        {
          "caller": "ErrorHandler.__init__",
          "callee": "Path",
          "line": 46,
          "type": "direct"
        },
        {
          "caller": "ErrorHandler.__init__",
          "callee": "ensure_log_directory",
          "line": 47,
          "type": "attribute"
        },
        {
          "caller": "ErrorHandler.ensure_log_directory",
          "callee": "mkdir",
          "line": 51,
          "type": "attribute"
        },
        {
          "caller": "ErrorHandler.handle_error",
          "callee": "_generate_error_id",
          "line": 77,
          "type": "attribute"
        },
        {
          "caller": "ErrorHandler.handle_error",
          "callee": "isoformat",
          "line": 78,
          "type": "attribute"
        },
        {
          "caller": "ErrorHandler.handle_error",
          "callee": "now",
          "line": 78,
          "type": "attribute"
        },
        {
          "caller": "ErrorHandler.handle_error",
          "callee": "type",
          "line": 81,
          "type": "direct"
        },
        {
          "caller": "ErrorHandler.handle_error",
          "callee": "str",
          "line": 82,
          "type": "direct"
        },
        {
          "caller": "ErrorHandler.handle_error",
          "callee": "format_exc",
          "line": 83,
          "type": "attribute"
        },
        {
          "caller": "ErrorHandler.handle_error",
          "callee": "_generate_user_message",
          "line": 85,
          "type": "attribute"
        },
        {
          "caller": "ErrorHandler.handle_error",
          "callee": "_get_log_level",
          "line": 89,
          "type": "attribute"
        },
        {
          "caller": "ErrorHandler.handle_error",
          "callee": "getattr",
          "line": 90,
          "type": "direct"
        },
        {
          "caller": "ErrorHandler.handle_error",
          "callee": "title",
          "line": 91,
          "type": "attribute"
        },
        {
          "caller": "ErrorHandler.handle_error",
          "callee": "_log_to_file",
          "line": 101,
          "type": "attribute"
        },
        {
          "caller": "ErrorHandler.handle_error",
          "callee": "_handle_critical_error",
          "line": 105,
          "type": "attribute"
        },
        {
          "caller": "ErrorHandler._generate_error_id",
          "callee": "int",
          "line": 111,
          "type": "direct"
        },
        {
          "caller": "ErrorHandler._generate_error_id",
          "callee": "timestamp",
          "line": 111,
          "type": "attribute"
        },
        {
          "caller": "ErrorHandler._generate_error_id",
          "callee": "now",
          "line": 111,
          "type": "attribute"
        },
        {
          "caller": "ErrorHandler._generate_error_id",
          "callee": "id",
          "line": 111,
          "type": "direct"
        },
        {
          "caller": "ErrorHandler._generate_error_id",
          "callee": "object",
          "line": 111,
          "type": "direct"
        },
        {
          "caller": "ErrorHandler._get_log_level",
          "callee": "get",
          "line": 121,
          "type": "attribute"
        },
        {
          "caller": "ErrorHandler._generate_user_message",
          "callee": "get",
          "line": 138,
          "type": "attribute"
        },
        {
          "caller": "ErrorHandler._log_to_file",
          "callee": "open",
          "line": 143,
          "type": "direct"
        },
        {
          "caller": "ErrorHandler._log_to_file",
          "callee": "write",
          "line": 144,
          "type": "attribute"
        },
        {
          "caller": "ErrorHandler._log_to_file",
          "callee": "dumps",
          "line": 144,
          "type": "attribute"
        },
        {
          "caller": "ErrorHandler._log_to_file",
          "callee": "error",
          "line": 146,
          "type": "attribute"
        },
        {
          "caller": "ErrorHandler._log_to_file",
          "callee": "str",
          "line": 146,
          "type": "direct"
        },
        {
          "caller": "ErrorHandler._handle_critical_error",
          "callee": "critical",
          "line": 150,
          "type": "attribute"
        },
        {
          "caller": "ErrorHandler.get_error_statistics",
          "callee": "exists",
          "line": 167,
          "type": "attribute"
        },
        {
          "caller": "ErrorHandler.get_error_statistics",
          "callee": "_empty_stats",
          "line": 168,
          "type": "attribute"
        },
        {
          "caller": "ErrorHandler.get_error_statistics",
          "callee": "timestamp",
          "line": 170,
          "type": "attribute"
        },
        {
          "caller": "ErrorHandler.get_error_statistics",
          "callee": "now",
          "line": 170,
          "type": "attribute"
        },
        {
          "caller": "ErrorHandler.get_error_statistics",
          "callee": "open",
          "line": 173,
          "type": "direct"
        },
        {
          "caller": "ErrorHandler.get_error_statistics",
          "callee": "loads",
          "line": 176,
          "type": "attribute"
        },
        {
          "caller": "ErrorHandler.get_error_statistics",
          "callee": "strip",
          "line": 176,
          "type": "attribute"
        },
        {
          "caller": "ErrorHandler.get_error_statistics",
          "callee": "timestamp",
          "line": 177,
          "type": "attribute"
        },
        {
          "caller": "ErrorHandler.get_error_statistics",
          "callee": "fromisoformat",
          "line": 177,
          "type": "attribute"
        },
        {
          "caller": "ErrorHandler.get_error_statistics",
          "callee": "append",
          "line": 179,
          "type": "attribute"
        },
        {
          "caller": "ErrorHandler.get_error_statistics",
          "callee": "_calculate_statistics",
          "line": 183,
          "type": "attribute"
        },
        {
          "caller": "ErrorHandler.get_error_statistics",
          "callee": "error",
          "line": 186,
          "type": "attribute"
        },
        {
          "caller": "ErrorHandler.get_error_statistics",
          "callee": "str",
          "line": 186,
          "type": "direct"
        },
        {
          "caller": "ErrorHandler.get_error_statistics",
          "callee": "_empty_stats",
          "line": 187,
          "type": "attribute"
        },
        {
          "caller": "ErrorHandler._calculate_statistics",
          "callee": "get",
          "line": 208,
          "type": "attribute"
        },
        {
          "caller": "ErrorHandler._calculate_statistics",
          "callee": "get",
          "line": 209,
          "type": "attribute"
        },
        {
          "caller": "ErrorHandler._calculate_statistics",
          "callee": "get",
          "line": 212,
          "type": "attribute"
        },
        {
          "caller": "ErrorHandler._calculate_statistics",
          "callee": "get",
          "line": 213,
          "type": "attribute"
        },
        {
          "caller": "ErrorHandler._calculate_statistics",
          "callee": "get",
          "line": 216,
          "type": "attribute"
        },
        {
          "caller": "ErrorHandler._calculate_statistics",
          "callee": "get",
          "line": 217,
          "type": "attribute"
        },
        {
          "caller": "ErrorHandler._calculate_statistics",
          "callee": "len",
          "line": 221,
          "type": "direct"
        },
        {
          "caller": "sync_wrapper",
          "callee": "func",
          "line": 252,
          "type": "direct"
        },
        {
          "caller": "sync_wrapper",
          "callee": "handle_error",
          "line": 254,
          "type": "attribute"
        },
        {
          "caller": "sync_wrapper",
          "callee": "str",
          "line": 260,
          "type": "direct"
        },
        {
          "caller": "sync_wrapper",
          "callee": "str",
          "line": 261,
          "type": "direct"
        },
        {
          "caller": "sync_wrapper",
          "callee": "wraps",
          "line": 249,
          "type": "attribute"
        },
        {
          "caller": "async_wrapper",
          "callee": "func",
          "line": 272,
          "type": "direct"
        },
        {
          "caller": "async_wrapper",
          "callee": "handle_error",
          "line": 274,
          "type": "attribute"
        },
        {
          "caller": "async_wrapper",
          "callee": "str",
          "line": 280,
          "type": "direct"
        },
        {
          "caller": "async_wrapper",
          "callee": "str",
          "line": 281,
          "type": "direct"
        },
        {
          "caller": "async_wrapper",
          "callee": "wraps",
          "line": 269,
          "type": "attribute"
        },
        {
          "caller": "decorator",
          "callee": "iscoroutinefunction",
          "line": 289,
          "type": "attribute"
        },
        {
          "caller": "ErrorReportingMixin.report_error",
          "callee": "handle_error",
          "line": 306,
          "type": "attribute"
        },
        {
          "caller": "handle_database_error",
          "callee": "handle_error",
          "line": 318,
          "type": "attribute"
        },
        {
          "caller": "handle_api_error",
          "callee": "handle_error",
          "line": 328,
          "type": "attribute"
        },
        {
          "caller": "handle_printer_error",
          "callee": "handle_error",
          "line": 338,
          "type": "attribute"
        },
        {
          "caller": "handle_file_error",
          "callee": "handle_error",
          "line": 348,
          "type": "attribute"
        },
        {
          "caller": "handle_validation_error",
          "callee": "handle_error",
          "line": 358,
          "type": "attribute"
        }
      ],
      "error": null
    },
    {
      "filepath": "src\\utils\\exceptions.py",
      "functions": [
        {
          "name": "__init__",
          "full_name": "PrinternizerException.__init__",
          "class": "PrinternizerException",
          "signature": "(self, message: str, error_code: str, status_code: int, details: Optional[Dict[str, Any]])",
          "return_type": "",
          "decorators": [],
          "docstring": "Initialize exception with structured error information.",
          "line_start": 12,
          "line_end": 25,
          "access_level": "dunder",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "__init__",
          "full_name": "ConfigurationError.__init__",
          "class": "ConfigurationError",
          "signature": "(self, message: str, details: Optional[Dict[str, Any]])",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 31,
          "line_end": 37,
          "access_level": "dunder",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "__init__",
          "full_name": "DatabaseError.__init__",
          "class": "DatabaseError",
          "signature": "(self, message: str, details: Optional[Dict[str, Any]])",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 43,
          "line_end": 49,
          "access_level": "dunder",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "__init__",
          "full_name": "PrinterConnectionError.__init__",
          "class": "PrinterConnectionError",
          "signature": "(self, printer_id: str, message: str, details: Optional[Dict[str, Any]])",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 55,
          "line_end": 61,
          "access_level": "dunder",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "__init__",
          "full_name": "FileOperationError.__init__",
          "class": "FileOperationError",
          "signature": "(self, operation: str, filename: str, message: str, details: Optional[Dict[str, Any]])",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 67,
          "line_end": 73,
          "access_level": "dunder",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "__init__",
          "full_name": "ValidationError.__init__",
          "class": "ValidationError",
          "signature": "(self, field: str, message: str, details: Optional[Dict[str, Any]])",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 79,
          "line_end": 85,
          "access_level": "dunder",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "__init__",
          "full_name": "AuthenticationError.__init__",
          "class": "AuthenticationError",
          "signature": "(self, message: str, details: Optional[Dict[str, Any]])",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 91,
          "line_end": 97,
          "access_level": "dunder",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "__init__",
          "full_name": "AuthorizationError.__init__",
          "class": "AuthorizationError",
          "signature": "(self, message: str, details: Optional[Dict[str, Any]])",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 103,
          "line_end": 109,
          "access_level": "dunder",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "__init__",
          "full_name": "NotFoundError.__init__",
          "class": "NotFoundError",
          "signature": "(self, resource_type: str, resource_id: str, details: Optional[Dict[str, Any]])",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 115,
          "line_end": 121,
          "access_level": "dunder",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 5
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Optional",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Dict",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Any",
          "alias": null,
          "line": 6
        }
      ],
      "function_calls": [
        {
          "caller": "PrinternizerException.__init__",
          "callee": "__init__",
          "line": 20,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerException.__init__",
          "callee": "super",
          "line": 20,
          "type": "direct"
        },
        {
          "caller": "PrinternizerException.__init__",
          "callee": "now",
          "line": 25,
          "type": "attribute"
        },
        {
          "caller": "ConfigurationError.__init__",
          "callee": "__init__",
          "line": 32,
          "type": "attribute"
        },
        {
          "caller": "ConfigurationError.__init__",
          "callee": "super",
          "line": 32,
          "type": "direct"
        },
        {
          "caller": "DatabaseError.__init__",
          "callee": "__init__",
          "line": 44,
          "type": "attribute"
        },
        {
          "caller": "DatabaseError.__init__",
          "callee": "super",
          "line": 44,
          "type": "direct"
        },
        {
          "caller": "PrinterConnectionError.__init__",
          "callee": "__init__",
          "line": 56,
          "type": "attribute"
        },
        {
          "caller": "PrinterConnectionError.__init__",
          "callee": "super",
          "line": 56,
          "type": "direct"
        },
        {
          "caller": "FileOperationError.__init__",
          "callee": "__init__",
          "line": 68,
          "type": "attribute"
        },
        {
          "caller": "FileOperationError.__init__",
          "callee": "super",
          "line": 68,
          "type": "direct"
        },
        {
          "caller": "ValidationError.__init__",
          "callee": "__init__",
          "line": 80,
          "type": "attribute"
        },
        {
          "caller": "ValidationError.__init__",
          "callee": "super",
          "line": 80,
          "type": "direct"
        },
        {
          "caller": "AuthenticationError.__init__",
          "callee": "__init__",
          "line": 92,
          "type": "attribute"
        },
        {
          "caller": "AuthenticationError.__init__",
          "callee": "super",
          "line": 92,
          "type": "direct"
        },
        {
          "caller": "AuthorizationError.__init__",
          "callee": "__init__",
          "line": 104,
          "type": "attribute"
        },
        {
          "caller": "AuthorizationError.__init__",
          "callee": "super",
          "line": 104,
          "type": "direct"
        },
        {
          "caller": "NotFoundError.__init__",
          "callee": "__init__",
          "line": 116,
          "type": "attribute"
        },
        {
          "caller": "NotFoundError.__init__",
          "callee": "super",
          "line": 116,
          "type": "direct"
        }
      ],
      "error": null
    },
    {
      "filepath": "src\\utils\\gcode_analyzer.py",
      "functions": [
        {
          "name": "__init__",
          "full_name": "GcodeAnalyzer.__init__",
          "class": "GcodeAnalyzer",
          "signature": "(self, optimize_enabled: bool)",
          "return_type": "",
          "decorators": [],
          "docstring": "Initialize G-code analyzer.\n\nArgs:\n    optimize_enabled: Whether to enable print optimization",
          "line_start": 36,
          "line_end": 43,
          "access_level": "dunder",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "find_print_start_line",
          "full_name": "GcodeAnalyzer.find_print_start_line",
          "class": "GcodeAnalyzer",
          "signature": "(self, gcode_lines: List[str])",
          "return_type": "Optional[int]",
          "decorators": [],
          "docstring": "Find the line number where actual printing starts.\n\nArgs:\n    gcode_lines: List of G-code lines\n    \nReturns:\n    Line index where printing starts, or None if not found",
          "line_start": 45,
          "line_end": 107,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_is_likely_print_move",
          "full_name": "GcodeAnalyzer._is_likely_print_move",
          "class": "GcodeAnalyzer",
          "signature": "(self, gcode_line: str)",
          "return_type": "bool",
          "decorators": [],
          "docstring": "Determine if a G1 line is likely a print move vs priming.\n\nArgs:\n    gcode_line: Upper-case G-code line\n    \nReturns:\n    True if this looks like an actual print move",
          "line_start": 109,
          "line_end": 151,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_optimized_gcode_lines",
          "full_name": "GcodeAnalyzer.get_optimized_gcode_lines",
          "class": "GcodeAnalyzer",
          "signature": "(self, gcode_lines: List[str])",
          "return_type": "List[str]",
          "decorators": [],
          "docstring": "Get G-code lines with warmup phase removed.\n\nArgs:\n    gcode_lines: Original G-code lines\n    \nReturns:\n    Optimized G-code lines (or original if optimization not possible)",
          "line_start": 153,
          "line_end": 176,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "analyze_gcode_file",
          "full_name": "GcodeAnalyzer.analyze_gcode_file",
          "class": "GcodeAnalyzer",
          "signature": "(self, file_path: str, max_lines: int)",
          "return_type": "dict",
          "decorators": [],
          "docstring": "Analyze a G-code file and return optimization info.\n\nArgs:\n    file_path: Path to G-code file\n    max_lines: Maximum lines to analyze (for performance)\n    \nReturns:\n    Dictionary with analysis results",
          "line_start": 178,
          "line_end": 216,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "re",
          "alias": null,
          "line": 5
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "List",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Optional",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Tuple",
          "alias": null,
          "line": 6
        },
        {
          "type": "import",
          "module": "structlog",
          "alias": null,
          "line": 7
        }
      ],
      "function_calls": [
        {
          "caller": "GcodeAnalyzer.find_print_start_line",
          "callee": "enumerate",
          "line": 63,
          "type": "direct"
        },
        {
          "caller": "GcodeAnalyzer.find_print_start_line",
          "callee": "upper",
          "line": 64,
          "type": "attribute"
        },
        {
          "caller": "GcodeAnalyzer.find_print_start_line",
          "callee": "strip",
          "line": 64,
          "type": "attribute"
        },
        {
          "caller": "GcodeAnalyzer.find_print_start_line",
          "callee": "strip",
          "line": 65,
          "type": "attribute"
        },
        {
          "caller": "GcodeAnalyzer.find_print_start_line",
          "callee": "upper",
          "line": 69,
          "type": "attribute"
        },
        {
          "caller": "GcodeAnalyzer.find_print_start_line",
          "callee": "debug",
          "line": 70,
          "type": "attribute"
        },
        {
          "caller": "GcodeAnalyzer.find_print_start_line",
          "callee": "startswith",
          "line": 74,
          "type": "attribute"
        },
        {
          "caller": "GcodeAnalyzer.find_print_start_line",
          "callee": "startswith",
          "line": 74,
          "type": "attribute"
        },
        {
          "caller": "GcodeAnalyzer.find_print_start_line",
          "callee": "startswith",
          "line": 76,
          "type": "attribute"
        },
        {
          "caller": "GcodeAnalyzer.find_print_start_line",
          "callee": "startswith",
          "line": 76,
          "type": "attribute"
        },
        {
          "caller": "GcodeAnalyzer.find_print_start_line",
          "callee": "match",
          "line": 81,
          "type": "attribute"
        },
        {
          "caller": "GcodeAnalyzer.find_print_start_line",
          "callee": "startswith",
          "line": 85,
          "type": "attribute"
        },
        {
          "caller": "GcodeAnalyzer.find_print_start_line",
          "callee": "_is_likely_print_move",
          "line": 92,
          "type": "attribute"
        },
        {
          "caller": "GcodeAnalyzer.find_print_start_line",
          "callee": "debug",
          "line": 93,
          "type": "attribute"
        },
        {
          "caller": "GcodeAnalyzer.find_print_start_line",
          "callee": "debug",
          "line": 106,
          "type": "attribute"
        },
        {
          "caller": "GcodeAnalyzer._is_likely_print_move",
          "callee": "search",
          "line": 120,
          "type": "attribute"
        },
        {
          "caller": "GcodeAnalyzer._is_likely_print_move",
          "callee": "float",
          "line": 123,
          "type": "direct"
        },
        {
          "caller": "GcodeAnalyzer._is_likely_print_move",
          "callee": "group",
          "line": 123,
          "type": "attribute"
        },
        {
          "caller": "GcodeAnalyzer._is_likely_print_move",
          "callee": "abs",
          "line": 125,
          "type": "direct"
        },
        {
          "caller": "GcodeAnalyzer._is_likely_print_move",
          "callee": "search",
          "line": 131,
          "type": "attribute"
        },
        {
          "caller": "GcodeAnalyzer._is_likely_print_move",
          "callee": "search",
          "line": 132,
          "type": "attribute"
        },
        {
          "caller": "GcodeAnalyzer._is_likely_print_move",
          "callee": "float",
          "line": 136,
          "type": "direct"
        },
        {
          "caller": "GcodeAnalyzer._is_likely_print_move",
          "callee": "group",
          "line": 136,
          "type": "attribute"
        },
        {
          "caller": "GcodeAnalyzer._is_likely_print_move",
          "callee": "float",
          "line": 137,
          "type": "direct"
        },
        {
          "caller": "GcodeAnalyzer._is_likely_print_move",
          "callee": "group",
          "line": 137,
          "type": "attribute"
        },
        {
          "caller": "GcodeAnalyzer.get_optimized_gcode_lines",
          "callee": "find_print_start_line",
          "line": 166,
          "type": "attribute"
        },
        {
          "caller": "GcodeAnalyzer.get_optimized_gcode_lines",
          "callee": "debug",
          "line": 169,
          "type": "attribute"
        },
        {
          "caller": "GcodeAnalyzer.get_optimized_gcode_lines",
          "callee": "info",
          "line": 173,
          "type": "attribute"
        },
        {
          "caller": "GcodeAnalyzer.get_optimized_gcode_lines",
          "callee": "len",
          "line": 174,
          "type": "direct"
        },
        {
          "caller": "GcodeAnalyzer.analyze_gcode_file",
          "callee": "open",
          "line": 190,
          "type": "direct"
        },
        {
          "caller": "GcodeAnalyzer.analyze_gcode_file",
          "callee": "enumerate",
          "line": 192,
          "type": "direct"
        },
        {
          "caller": "GcodeAnalyzer.analyze_gcode_file",
          "callee": "append",
          "line": 195,
          "type": "attribute"
        },
        {
          "caller": "GcodeAnalyzer.analyze_gcode_file",
          "callee": "rstrip",
          "line": 195,
          "type": "attribute"
        },
        {
          "caller": "GcodeAnalyzer.analyze_gcode_file",
          "callee": "find_print_start_line",
          "line": 197,
          "type": "attribute"
        },
        {
          "caller": "GcodeAnalyzer.analyze_gcode_file",
          "callee": "len",
          "line": 200,
          "type": "direct"
        },
        {
          "caller": "GcodeAnalyzer.analyze_gcode_file",
          "callee": "error",
          "line": 208,
          "type": "attribute"
        },
        {
          "caller": "GcodeAnalyzer.analyze_gcode_file",
          "callee": "str",
          "line": 215,
          "type": "direct"
        }
      ],
      "error": null
    },
    {
      "filepath": "src\\utils\\logging_config.py",
      "functions": [
        {
          "name": "setup_logging",
          "full_name": "setup_logging",
          "class": null,
          "signature": "(log_level: str, log_file: str)",
          "return_type": "",
          "decorators": [],
          "docstring": "Set up structured logging for Printernizer.",
          "line_start": 12,
          "line_end": 63,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_logger",
          "full_name": "get_logger",
          "class": null,
          "signature": "(name: str)",
          "return_type": "structlog.BoundLogger",
          "decorators": [],
          "docstring": "Get a structured logger instance.",
          "line_start": 66,
          "line_end": 68,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "logging",
          "alias": null,
          "line": 5
        },
        {
          "type": "import",
          "module": "sys",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Any",
          "alias": null,
          "line": 7
        },
        {
          "type": "import",
          "module": "structlog",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "pathlib",
          "name": "Path",
          "alias": null,
          "line": 9
        }
      ],
      "function_calls": [
        {
          "caller": "setup_logging",
          "callee": "basicConfig",
          "line": 16,
          "type": "attribute"
        },
        {
          "caller": "setup_logging",
          "callee": "getattr",
          "line": 19,
          "type": "direct"
        },
        {
          "caller": "setup_logging",
          "callee": "upper",
          "line": 19,
          "type": "attribute"
        },
        {
          "caller": "setup_logging",
          "callee": "PositionalArgumentsFormatter",
          "line": 27,
          "type": "attribute"
        },
        {
          "caller": "setup_logging",
          "callee": "TimeStamper",
          "line": 28,
          "type": "attribute"
        },
        {
          "caller": "setup_logging",
          "callee": "StackInfoRenderer",
          "line": 29,
          "type": "attribute"
        },
        {
          "caller": "setup_logging",
          "callee": "UnicodeDecoder",
          "line": 31,
          "type": "attribute"
        },
        {
          "caller": "setup_logging",
          "callee": "Path",
          "line": 36,
          "type": "direct"
        },
        {
          "caller": "setup_logging",
          "callee": "mkdir",
          "line": 37,
          "type": "attribute"
        },
        {
          "caller": "setup_logging",
          "callee": "FileHandler",
          "line": 39,
          "type": "attribute"
        },
        {
          "caller": "setup_logging",
          "callee": "setLevel",
          "line": 40,
          "type": "attribute"
        },
        {
          "caller": "setup_logging",
          "callee": "getattr",
          "line": 40,
          "type": "direct"
        },
        {
          "caller": "setup_logging",
          "callee": "upper",
          "line": 40,
          "type": "attribute"
        },
        {
          "caller": "setup_logging",
          "callee": "Formatter",
          "line": 42,
          "type": "attribute"
        },
        {
          "caller": "setup_logging",
          "callee": "setFormatter",
          "line": 45,
          "type": "attribute"
        },
        {
          "caller": "setup_logging",
          "callee": "getLogger",
          "line": 48,
          "type": "attribute"
        },
        {
          "caller": "setup_logging",
          "callee": "addHandler",
          "line": 49,
          "type": "attribute"
        },
        {
          "caller": "setup_logging",
          "callee": "upper",
          "line": 52,
          "type": "attribute"
        },
        {
          "caller": "setup_logging",
          "callee": "append",
          "line": 53,
          "type": "attribute"
        },
        {
          "caller": "setup_logging",
          "callee": "ConsoleRenderer",
          "line": 53,
          "type": "attribute"
        },
        {
          "caller": "setup_logging",
          "callee": "append",
          "line": 55,
          "type": "attribute"
        },
        {
          "caller": "setup_logging",
          "callee": "JSONRenderer",
          "line": 55,
          "type": "attribute"
        },
        {
          "caller": "setup_logging",
          "callee": "configure",
          "line": 57,
          "type": "attribute"
        },
        {
          "caller": "setup_logging",
          "callee": "LoggerFactory",
          "line": 60,
          "type": "attribute"
        },
        {
          "caller": "get_logger",
          "callee": "get_logger",
          "line": 68,
          "type": "attribute"
        }
      ],
      "error": null
    },
    {
      "filepath": "src\\utils\\middleware.py",
      "functions": [
        {
          "name": "dispatch",
          "full_name": "RequestTimingMiddleware.dispatch",
          "class": "RequestTimingMiddleware",
          "signature": "(self, request: Request, call_next: Callable)",
          "return_type": "Response",
          "decorators": [],
          "docstring": "Process request and measure timing.",
          "line_start": 17,
          "line_end": 40,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "dispatch",
          "full_name": "SecurityHeadersMiddleware.dispatch",
          "class": "SecurityHeadersMiddleware",
          "signature": "(self, request: Request, call_next: Callable)",
          "return_type": "Response",
          "decorators": [],
          "docstring": "Add security headers to response.",
          "line_start": 46,
          "line_end": 73,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "dispatch",
          "full_name": "GermanComplianceMiddleware.dispatch",
          "class": "GermanComplianceMiddleware",
          "signature": "(self, request: Request, call_next: Callable)",
          "return_type": "Response",
          "decorators": [],
          "docstring": "Ensure German compliance standards.",
          "line_start": 79,
          "line_end": 102,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "time",
          "alias": null,
          "line": 5
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Callable",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "Request",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "fastapi",
          "name": "Response",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "starlette.middleware.base",
          "name": "BaseHTTPMiddleware",
          "alias": null,
          "line": 8
        },
        {
          "type": "import",
          "module": "structlog",
          "alias": null,
          "line": 9
        }
      ],
      "function_calls": [
        {
          "caller": "RequestTimingMiddleware.dispatch",
          "callee": "time",
          "line": 19,
          "type": "attribute"
        },
        {
          "caller": "RequestTimingMiddleware.dispatch",
          "callee": "call_next",
          "line": 22,
          "type": "direct"
        },
        {
          "caller": "RequestTimingMiddleware.dispatch",
          "callee": "time",
          "line": 25,
          "type": "attribute"
        },
        {
          "caller": "RequestTimingMiddleware.dispatch",
          "callee": "str",
          "line": 28,
          "type": "direct"
        },
        {
          "caller": "RequestTimingMiddleware.dispatch",
          "callee": "info",
          "line": 31,
          "type": "attribute"
        },
        {
          "caller": "RequestTimingMiddleware.dispatch",
          "callee": "str",
          "line": 34,
          "type": "direct"
        },
        {
          "caller": "RequestTimingMiddleware.dispatch",
          "callee": "get",
          "line": 37,
          "type": "attribute"
        },
        {
          "caller": "SecurityHeadersMiddleware.dispatch",
          "callee": "call_next",
          "line": 48,
          "type": "direct"
        },
        {
          "caller": "GermanComplianceMiddleware.dispatch",
          "callee": "info",
          "line": 83,
          "type": "attribute"
        },
        {
          "caller": "GermanComplianceMiddleware.dispatch",
          "callee": "hash",
          "line": 87,
          "type": "direct"
        },
        {
          "caller": "GermanComplianceMiddleware.dispatch",
          "callee": "time",
          "line": 88,
          "type": "attribute"
        },
        {
          "caller": "GermanComplianceMiddleware.dispatch",
          "callee": "call_next",
          "line": 92,
          "type": "direct"
        }
      ],
      "error": null
    },
    {
      "filepath": "tests\\__init__.py",
      "functions": [],
      "imports": [],
      "function_calls": [],
      "error": null
    },
    {
      "filepath": "tests\\backend\\__init__.py",
      "functions": [],
      "imports": [],
      "function_calls": [],
      "error": null
    },
    {
      "filepath": "tests\\backend\\test_api_files.py",
      "functions": [
        {
          "name": "test_get_files_unified_empty",
          "full_name": "TestFileAPI.test_get_files_unified_empty",
          "class": "TestFileAPI",
          "signature": "(self, api_client, temp_database, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test GET /api/v1/files/unified with empty database",
          "line_start": 17,
          "line_end": 30,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_get_files_unified_with_data",
          "full_name": "TestFileAPI.test_get_files_unified_with_data",
          "class": "TestFileAPI",
          "signature": "(self, api_client, populated_database, test_config, sample_file_data)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test GET /api/v1/files/unified with existing files",
          "line_start": 32,
          "line_end": 61,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_get_files_filter_by_printer",
          "full_name": "TestFileAPI.test_get_files_filter_by_printer",
          "class": "TestFileAPI",
          "signature": "(self, api_client, populated_database, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test GET /api/v1/files/unified?printer_id=bambu_a1_001",
          "line_start": 63,
          "line_end": 73,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_get_files_filter_by_status",
          "full_name": "TestFileAPI.test_get_files_filter_by_status",
          "class": "TestFileAPI",
          "signature": "(self, api_client, populated_database, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test GET /api/v1/files/unified?status=available",
          "line_start": 75,
          "line_end": 85,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_get_files_filter_by_type",
          "full_name": "TestFileAPI.test_get_files_filter_by_type",
          "class": "TestFileAPI",
          "signature": "(self, api_client, populated_database, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test GET /api/v1/files/unified?file_type=.3mf",
          "line_start": 87,
          "line_end": 97,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_post_file_download_bambu_lab",
          "full_name": "TestFileAPI.test_post_file_download_bambu_lab",
          "class": "TestFileAPI",
          "signature": "(self, api_client, populated_database, test_config, mock_bambu_api, temp_download_directory, sample_3mf_file)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test POST /api/v1/files/{id}/download for Bambu Lab file",
          "line_start": 99,
          "line_end": 125,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_post_file_download_prusa",
          "full_name": "TestFileAPI.test_post_file_download_prusa",
          "class": "TestFileAPI",
          "signature": "(self, api_client, populated_database, test_config, mock_prusa_api, temp_download_directory)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test POST /api/v1/files/{id}/download for Prusa file",
          "line_start": 127,
          "line_end": 150,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_post_file_download_already_downloaded",
          "full_name": "TestFileAPI.test_post_file_download_already_downloaded",
          "class": "TestFileAPI",
          "signature": "(self, api_client, populated_database, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test POST /api/v1/files/{id}/download for already downloaded file",
          "line_start": 152,
          "line_end": 165,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_post_file_download_printer_offline",
          "full_name": "TestFileAPI.test_post_file_download_printer_offline",
          "class": "TestFileAPI",
          "signature": "(self, api_client, populated_database, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test POST /api/v1/files/{id}/download when printer is offline",
          "line_start": 167,
          "line_end": 184,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_post_file_download_disk_space_error",
          "full_name": "TestFileAPI.test_post_file_download_disk_space_error",
          "class": "TestFileAPI",
          "signature": "(self, api_client, populated_database, test_config, mock_bambu_api)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test POST /api/v1/files/{id}/download with insufficient disk space",
          "line_start": 186,
          "line_end": 206,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_post_file_download_with_progress_tracking",
          "full_name": "TestFileAPI.test_post_file_download_with_progress_tracking",
          "class": "TestFileAPI",
          "signature": "(self, api_client, populated_database, test_config, mock_bambu_api, temp_download_directory)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test POST /api/v1/files/{id}/download with progress tracking",
          "line_start": 208,
          "line_end": 233,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_delete_file_local",
          "full_name": "TestFileAPI.test_delete_file_local",
          "class": "TestFileAPI",
          "signature": "(self, api_client, populated_database, test_config, temp_download_directory)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test DELETE /api/v1/files/{id} - Delete local file",
          "line_start": 235,
          "line_end": 255,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_delete_file_available_only",
          "full_name": "TestFileAPI.test_delete_file_available_only",
          "class": "TestFileAPI",
          "signature": "(self, api_client, populated_database, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test DELETE /api/v1/files/{id} for file that's only available on printer",
          "line_start": 257,
          "line_end": 267,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_get_file_download_progress",
          "full_name": "TestFileAPI.test_get_file_download_progress",
          "class": "TestFileAPI",
          "signature": "(self, api_client, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test GET /api/v1/files/downloads/{download_id}/progress",
          "line_start": 269,
          "line_end": 292,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_get_file_download_history",
          "full_name": "TestFileAPI.test_get_file_download_history",
          "class": "TestFileAPI",
          "signature": "(self, api_client, populated_database, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test GET /api/v1/files/download-history",
          "line_start": 294,
          "line_end": 305,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_post_file_cleanup",
          "full_name": "TestFileAPI.test_post_file_cleanup",
          "class": "TestFileAPI",
          "signature": "(self, api_client, populated_database, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test POST /api/v1/files/cleanup - Clean up old downloaded files",
          "line_start": 307,
          "line_end": 334,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_german_file_naming_sanitization",
          "full_name": "TestFileBusinessLogic.test_german_file_naming_sanitization",
          "class": "TestFileBusinessLogic",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test file naming follows German conventions and security requirements",
          "line_start": 340,
          "line_end": 365,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_file_download_path_organization",
          "full_name": "TestFileBusinessLogic.test_file_download_path_organization",
          "class": "TestFileBusinessLogic",
          "signature": "(self, temp_download_directory, test_utils)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test file download organization by printer and date",
          "line_start": 367,
          "line_end": 392,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_file_checksum_verification",
          "full_name": "TestFileBusinessLogic.test_file_checksum_verification",
          "class": "TestFileBusinessLogic",
          "signature": "(self, sample_3mf_file)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test file integrity verification using checksums",
          "line_start": 394,
          "line_end": 405,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_file_size_validation_german_limits",
          "full_name": "TestFileBusinessLogic.test_file_size_validation_german_limits",
          "class": "TestFileBusinessLogic",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test file size validation according to German data protection requirements",
          "line_start": 407,
          "line_end": 421,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_file_metadata_extraction_3mf",
          "full_name": "TestFileBusinessLogic.test_file_metadata_extraction_3mf",
          "class": "TestFileBusinessLogic",
          "signature": "(self, sample_3mf_file)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test 3MF file metadata extraction",
          "line_start": 423,
          "line_end": 431,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_disk_space_monitoring",
          "full_name": "TestFileBusinessLogic.test_disk_space_monitoring",
          "class": "TestFileBusinessLogic",
          "signature": "(self, temp_download_directory)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test disk space monitoring for download operations",
          "line_start": 433,
          "line_end": 446,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_large_file_list_performance",
          "full_name": "TestFileAPIPerformance.test_large_file_list_performance",
          "class": "TestFileAPIPerformance",
          "signature": "(self, api_client, db_connection, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test API performance with large number of files",
          "line_start": 452,
          "line_end": 488,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_concurrent_file_downloads",
          "full_name": "TestFileAPIPerformance.test_concurrent_file_downloads",
          "class": "TestFileAPIPerformance",
          "signature": "(self, api_client, populated_database, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test concurrent file download requests",
          "line_start": 490,
          "line_end": 522,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "download_file",
          "full_name": "TestFileAPIPerformance.download_file",
          "class": "TestFileAPIPerformance",
          "signature": "(file_id)",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 496,
          "line_end": 503,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "sanitize_german_filename",
          "full_name": "sanitize_german_filename",
          "class": null,
          "signature": "(filename)",
          "return_type": "",
          "decorators": [],
          "docstring": "Mock function to sanitize German filenames",
          "line_start": 526,
          "line_end": 549,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "generate_download_path",
          "full_name": "generate_download_path",
          "class": null,
          "signature": "(base_dir, printer_id, filename)",
          "return_type": "",
          "decorators": [],
          "docstring": "Mock function to generate download path",
          "line_start": 552,
          "line_end": 559,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "calculate_file_checksum",
          "full_name": "calculate_file_checksum",
          "class": null,
          "signature": "(file_content, algorithm)",
          "return_type": "",
          "decorators": [],
          "docstring": "Calculate file checksum",
          "line_start": 562,
          "line_end": 569,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "validate_file_size",
          "full_name": "validate_file_size",
          "class": null,
          "signature": "(file_size_bytes, max_size_mb)",
          "return_type": "",
          "decorators": [],
          "docstring": "Validate file size against limits",
          "line_start": 572,
          "line_end": 575,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "extract_3mf_metadata",
          "full_name": "extract_3mf_metadata",
          "class": null,
          "signature": "(file_content)",
          "return_type": "",
          "decorators": [],
          "docstring": "Extract metadata from 3MF file content",
          "line_start": 578,
          "line_end": 595,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "check_disk_space",
          "full_name": "check_disk_space",
          "class": null,
          "signature": "(directory, required_bytes)",
          "return_type": "",
          "decorators": [],
          "docstring": "Check if directory has enough free disk space",
          "line_start": 598,
          "line_end": 606,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "pytest",
          "alias": null,
          "line": 5
        },
        {
          "type": "import",
          "module": "json",
          "alias": null,
          "line": 6
        },
        {
          "type": "import",
          "module": "os",
          "alias": null,
          "line": 7
        },
        {
          "type": "import",
          "module": "tempfile",
          "alias": null,
          "line": 8
        },
        {
          "type": "import",
          "module": "hashlib",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "unittest.mock",
          "name": "patch",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "unittest.mock",
          "name": "Mock",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "unittest.mock",
          "name": "mock_open",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 11
        },
        {
          "type": "import",
          "module": "time",
          "alias": null,
          "line": 473
        },
        {
          "type": "import",
          "module": "threading",
          "alias": null,
          "line": 492
        },
        {
          "type": "import",
          "module": "re",
          "alias": null,
          "line": 528
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 554
        },
        {
          "type": "import",
          "module": "xml.etree.ElementTree",
          "alias": "ET",
          "line": 580
        },
        {
          "type": "import",
          "module": "shutil",
          "alias": null,
          "line": 600
        }
      ],
      "function_calls": [
        {
          "caller": "TestFileAPI.test_get_files_unified_empty",
          "callee": "patch",
          "line": 19,
          "type": "direct"
        },
        {
          "caller": "TestFileAPI.test_get_files_unified_empty",
          "callee": "get",
          "line": 22,
          "type": "attribute"
        },
        {
          "caller": "TestFileAPI.test_get_files_unified_empty",
          "callee": "json",
          "line": 25,
          "type": "attribute"
        },
        {
          "caller": "TestFileAPI.test_get_files_unified_with_data",
          "callee": "patch",
          "line": 34,
          "type": "direct"
        },
        {
          "caller": "TestFileAPI.test_get_files_unified_with_data",
          "callee": "get",
          "line": 37,
          "type": "attribute"
        },
        {
          "caller": "TestFileAPI.test_get_files_unified_with_data",
          "callee": "json",
          "line": 40,
          "type": "attribute"
        },
        {
          "caller": "TestFileAPI.test_get_files_unified_with_data",
          "callee": "len",
          "line": 41,
          "type": "direct"
        },
        {
          "caller": "TestFileAPI.test_get_files_unified_with_data",
          "callee": "next",
          "line": 45,
          "type": "direct"
        },
        {
          "caller": "TestFileAPI.test_get_files_unified_with_data",
          "callee": "next",
          "line": 52,
          "type": "direct"
        },
        {
          "caller": "TestFileAPI.test_get_files_filter_by_printer",
          "callee": "patch",
          "line": 65,
          "type": "direct"
        },
        {
          "caller": "TestFileAPI.test_get_files_filter_by_printer",
          "callee": "get",
          "line": 68,
          "type": "attribute"
        },
        {
          "caller": "TestFileAPI.test_get_files_filter_by_printer",
          "callee": "json",
          "line": 71,
          "type": "attribute"
        },
        {
          "caller": "TestFileAPI.test_get_files_filter_by_printer",
          "callee": "len",
          "line": 72,
          "type": "direct"
        },
        {
          "caller": "TestFileAPI.test_get_files_filter_by_status",
          "callee": "patch",
          "line": 77,
          "type": "direct"
        },
        {
          "caller": "TestFileAPI.test_get_files_filter_by_status",
          "callee": "get",
          "line": 80,
          "type": "attribute"
        },
        {
          "caller": "TestFileAPI.test_get_files_filter_by_status",
          "callee": "json",
          "line": 83,
          "type": "attribute"
        },
        {
          "caller": "TestFileAPI.test_get_files_filter_by_status",
          "callee": "len",
          "line": 84,
          "type": "direct"
        },
        {
          "caller": "TestFileAPI.test_get_files_filter_by_type",
          "callee": "patch",
          "line": 89,
          "type": "direct"
        },
        {
          "caller": "TestFileAPI.test_get_files_filter_by_type",
          "callee": "get",
          "line": 92,
          "type": "attribute"
        },
        {
          "caller": "TestFileAPI.test_get_files_filter_by_type",
          "callee": "json",
          "line": 95,
          "type": "attribute"
        },
        {
          "caller": "TestFileAPI.test_get_files_filter_by_type",
          "callee": "len",
          "line": 96,
          "type": "direct"
        },
        {
          "caller": "TestFileAPI.test_post_file_download_bambu_lab",
          "callee": "patch",
          "line": 103,
          "type": "direct"
        },
        {
          "caller": "TestFileAPI.test_post_file_download_bambu_lab",
          "callee": "patch",
          "line": 109,
          "type": "direct"
        },
        {
          "caller": "TestFileAPI.test_post_file_download_bambu_lab",
          "callee": "patch",
          "line": 112,
          "type": "direct"
        },
        {
          "caller": "TestFileAPI.test_post_file_download_bambu_lab",
          "callee": "post",
          "line": 115,
          "type": "attribute"
        },
        {
          "caller": "TestFileAPI.test_post_file_download_bambu_lab",
          "callee": "json",
          "line": 120,
          "type": "attribute"
        },
        {
          "caller": "TestFileAPI.test_post_file_download_prusa",
          "callee": "patch",
          "line": 132,
          "type": "direct"
        },
        {
          "caller": "TestFileAPI.test_post_file_download_prusa",
          "callee": "patch",
          "line": 138,
          "type": "direct"
        },
        {
          "caller": "TestFileAPI.test_post_file_download_prusa",
          "callee": "patch",
          "line": 141,
          "type": "direct"
        },
        {
          "caller": "TestFileAPI.test_post_file_download_prusa",
          "callee": "post",
          "line": 144,
          "type": "attribute"
        },
        {
          "caller": "TestFileAPI.test_post_file_download_prusa",
          "callee": "json",
          "line": 149,
          "type": "attribute"
        },
        {
          "caller": "TestFileAPI.test_post_file_download_already_downloaded",
          "callee": "patch",
          "line": 156,
          "type": "direct"
        },
        {
          "caller": "TestFileAPI.test_post_file_download_already_downloaded",
          "callee": "post",
          "line": 159,
          "type": "attribute"
        },
        {
          "caller": "TestFileAPI.test_post_file_download_already_downloaded",
          "callee": "json",
          "line": 164,
          "type": "attribute"
        },
        {
          "caller": "TestFileAPI.test_post_file_download_printer_offline",
          "callee": "patch",
          "line": 171,
          "type": "direct"
        },
        {
          "caller": "TestFileAPI.test_post_file_download_printer_offline",
          "callee": "patch",
          "line": 175,
          "type": "direct"
        },
        {
          "caller": "TestFileAPI.test_post_file_download_printer_offline",
          "callee": "ConnectionError",
          "line": 176,
          "type": "direct"
        },
        {
          "caller": "TestFileAPI.test_post_file_download_printer_offline",
          "callee": "post",
          "line": 178,
          "type": "attribute"
        },
        {
          "caller": "TestFileAPI.test_post_file_download_printer_offline",
          "callee": "json",
          "line": 183,
          "type": "attribute"
        },
        {
          "caller": "TestFileAPI.test_post_file_download_disk_space_error",
          "callee": "patch",
          "line": 190,
          "type": "direct"
        },
        {
          "caller": "TestFileAPI.test_post_file_download_disk_space_error",
          "callee": "patch",
          "line": 193,
          "type": "direct"
        },
        {
          "caller": "TestFileAPI.test_post_file_download_disk_space_error",
          "callee": "patch",
          "line": 197,
          "type": "direct"
        },
        {
          "caller": "TestFileAPI.test_post_file_download_disk_space_error",
          "callee": "post",
          "line": 200,
          "type": "attribute"
        },
        {
          "caller": "TestFileAPI.test_post_file_download_disk_space_error",
          "callee": "json",
          "line": 205,
          "type": "attribute"
        },
        {
          "caller": "TestFileAPI.test_post_file_download_with_progress_tracking",
          "callee": "patch",
          "line": 213,
          "type": "direct"
        },
        {
          "caller": "TestFileAPI.test_post_file_download_with_progress_tracking",
          "callee": "Mock",
          "line": 217,
          "type": "direct"
        },
        {
          "caller": "TestFileAPI.test_post_file_download_with_progress_tracking",
          "callee": "patch",
          "line": 220,
          "type": "direct"
        },
        {
          "caller": "TestFileAPI.test_post_file_download_with_progress_tracking",
          "callee": "patch",
          "line": 223,
          "type": "direct"
        },
        {
          "caller": "TestFileAPI.test_post_file_download_with_progress_tracking",
          "callee": "post",
          "line": 226,
          "type": "attribute"
        },
        {
          "caller": "TestFileAPI.test_post_file_download_with_progress_tracking",
          "callee": "json",
          "line": 231,
          "type": "attribute"
        },
        {
          "caller": "TestFileAPI.test_delete_file_local",
          "callee": "join",
          "line": 240,
          "type": "attribute"
        },
        {
          "caller": "TestFileAPI.test_delete_file_local",
          "callee": "open",
          "line": 241,
          "type": "direct"
        },
        {
          "caller": "TestFileAPI.test_delete_file_local",
          "callee": "write",
          "line": 242,
          "type": "attribute"
        },
        {
          "caller": "TestFileAPI.test_delete_file_local",
          "callee": "patch",
          "line": 244,
          "type": "direct"
        },
        {
          "caller": "TestFileAPI.test_delete_file_local",
          "callee": "patch",
          "line": 247,
          "type": "direct"
        },
        {
          "caller": "TestFileAPI.test_delete_file_local",
          "callee": "delete",
          "line": 250,
          "type": "attribute"
        },
        {
          "caller": "TestFileAPI.test_delete_file_local",
          "callee": "exists",
          "line": 255,
          "type": "attribute"
        },
        {
          "caller": "TestFileAPI.test_delete_file_available_only",
          "callee": "patch",
          "line": 261,
          "type": "direct"
        },
        {
          "caller": "TestFileAPI.test_delete_file_available_only",
          "callee": "delete",
          "line": 264,
          "type": "attribute"
        },
        {
          "caller": "TestFileAPI.test_get_file_download_progress",
          "callee": "patch",
          "line": 273,
          "type": "direct"
        },
        {
          "caller": "TestFileAPI.test_get_file_download_progress",
          "callee": "get",
          "line": 284,
          "type": "attribute"
        },
        {
          "caller": "TestFileAPI.test_get_file_download_progress",
          "callee": "json",
          "line": 289,
          "type": "attribute"
        },
        {
          "caller": "TestFileAPI.test_get_file_download_history",
          "callee": "patch",
          "line": 296,
          "type": "direct"
        },
        {
          "caller": "TestFileAPI.test_get_file_download_history",
          "callee": "get",
          "line": 299,
          "type": "attribute"
        },
        {
          "caller": "TestFileAPI.test_get_file_download_history",
          "callee": "json",
          "line": 302,
          "type": "attribute"
        },
        {
          "caller": "TestFileAPI.test_post_file_cleanup",
          "callee": "patch",
          "line": 316,
          "type": "direct"
        },
        {
          "caller": "TestFileAPI.test_post_file_cleanup",
          "callee": "patch",
          "line": 319,
          "type": "direct"
        },
        {
          "caller": "TestFileAPI.test_post_file_cleanup",
          "callee": "post",
          "line": 326,
          "type": "attribute"
        },
        {
          "caller": "TestFileAPI.test_post_file_cleanup",
          "callee": "json",
          "line": 332,
          "type": "attribute"
        },
        {
          "caller": "TestFileBusinessLogic.test_german_file_naming_sanitization",
          "callee": "sanitize_german_filename",
          "line": 361,
          "type": "direct"
        },
        {
          "caller": "TestFileBusinessLogic.test_file_download_path_organization",
          "callee": "berlin_timestamp",
          "line": 373,
          "type": "attribute"
        },
        {
          "caller": "TestFileBusinessLogic.test_file_download_path_organization",
          "callee": "patch",
          "line": 375,
          "type": "direct"
        },
        {
          "caller": "TestFileBusinessLogic.test_file_download_path_organization",
          "callee": "generate_download_path",
          "line": 378,
          "type": "direct"
        },
        {
          "caller": "TestFileBusinessLogic.test_file_download_path_organization",
          "callee": "join",
          "line": 384,
          "type": "attribute"
        },
        {
          "caller": "TestFileBusinessLogic.test_file_download_path_organization",
          "callee": "normpath",
          "line": 392,
          "type": "attribute"
        },
        {
          "caller": "TestFileBusinessLogic.test_file_download_path_organization",
          "callee": "normpath",
          "line": 392,
          "type": "attribute"
        },
        {
          "caller": "TestFileBusinessLogic.test_file_checksum_verification",
          "callee": "hexdigest",
          "line": 397,
          "type": "attribute"
        },
        {
          "caller": "TestFileBusinessLogic.test_file_checksum_verification",
          "callee": "md5",
          "line": 397,
          "type": "attribute"
        },
        {
          "caller": "TestFileBusinessLogic.test_file_checksum_verification",
          "callee": "hexdigest",
          "line": 398,
          "type": "attribute"
        },
        {
          "caller": "TestFileBusinessLogic.test_file_checksum_verification",
          "callee": "sha256",
          "line": 398,
          "type": "attribute"
        },
        {
          "caller": "TestFileBusinessLogic.test_file_checksum_verification",
          "callee": "calculate_file_checksum",
          "line": 401,
          "type": "direct"
        },
        {
          "caller": "TestFileBusinessLogic.test_file_checksum_verification",
          "callee": "calculate_file_checksum",
          "line": 402,
          "type": "direct"
        },
        {
          "caller": "TestFileBusinessLogic.test_file_size_validation_german_limits",
          "callee": "validate_file_size",
          "line": 420,
          "type": "direct"
        },
        {
          "caller": "TestFileBusinessLogic.test_file_metadata_extraction_3mf",
          "callee": "extract_3mf_metadata",
          "line": 425,
          "type": "direct"
        },
        {
          "caller": "TestFileBusinessLogic.test_disk_space_monitoring",
          "callee": "patch",
          "line": 436,
          "type": "direct"
        },
        {
          "caller": "TestFileBusinessLogic.test_disk_space_monitoring",
          "callee": "check_disk_space",
          "line": 441,
          "type": "direct"
        },
        {
          "caller": "TestFileBusinessLogic.test_disk_space_monitoring",
          "callee": "check_disk_space",
          "line": 445,
          "type": "direct"
        },
        {
          "caller": "TestFileAPIPerformance.test_large_file_list_performance",
          "callee": "cursor",
          "line": 454,
          "type": "attribute"
        },
        {
          "caller": "TestFileAPIPerformance.test_large_file_list_performance",
          "callee": "range",
          "line": 457,
          "type": "direct"
        },
        {
          "caller": "TestFileAPIPerformance.test_large_file_list_performance",
          "callee": "execute",
          "line": 458,
          "type": "attribute"
        },
        {
          "caller": "TestFileAPIPerformance.test_large_file_list_performance",
          "callee": "commit",
          "line": 470,
          "type": "attribute"
        },
        {
          "caller": "TestFileAPIPerformance.test_large_file_list_performance",
          "callee": "time",
          "line": 474,
          "type": "attribute"
        },
        {
          "caller": "TestFileAPIPerformance.test_large_file_list_performance",
          "callee": "patch",
          "line": 476,
          "type": "direct"
        },
        {
          "caller": "TestFileAPIPerformance.test_large_file_list_performance",
          "callee": "get",
          "line": 478,
          "type": "attribute"
        },
        {
          "caller": "TestFileAPIPerformance.test_large_file_list_performance",
          "callee": "time",
          "line": 480,
          "type": "attribute"
        },
        {
          "caller": "TestFileAPIPerformance.test_large_file_list_performance",
          "callee": "json",
          "line": 487,
          "type": "attribute"
        },
        {
          "caller": "TestFileAPIPerformance.test_large_file_list_performance",
          "callee": "len",
          "line": 488,
          "type": "direct"
        },
        {
          "caller": "TestFileAPIPerformance.download_file",
          "callee": "post",
          "line": 498,
          "type": "attribute"
        },
        {
          "caller": "TestFileAPIPerformance.download_file",
          "callee": "append",
          "line": 501,
          "type": "attribute"
        },
        {
          "caller": "TestFileAPIPerformance.download_file",
          "callee": "append",
          "line": 503,
          "type": "attribute"
        },
        {
          "caller": "TestFileAPIPerformance.test_concurrent_file_downloads",
          "callee": "range",
          "line": 507,
          "type": "direct"
        },
        {
          "caller": "TestFileAPIPerformance.test_concurrent_file_downloads",
          "callee": "Thread",
          "line": 508,
          "type": "attribute"
        },
        {
          "caller": "TestFileAPIPerformance.test_concurrent_file_downloads",
          "callee": "append",
          "line": 509,
          "type": "attribute"
        },
        {
          "caller": "TestFileAPIPerformance.test_concurrent_file_downloads",
          "callee": "start",
          "line": 512,
          "type": "attribute"
        },
        {
          "caller": "TestFileAPIPerformance.test_concurrent_file_downloads",
          "callee": "join",
          "line": 515,
          "type": "attribute"
        },
        {
          "caller": "TestFileAPIPerformance.test_concurrent_file_downloads",
          "callee": "len",
          "line": 518,
          "type": "direct"
        },
        {
          "caller": "TestFileAPIPerformance.test_concurrent_file_downloads",
          "callee": "len",
          "line": 519,
          "type": "direct"
        },
        {
          "caller": "sanitize_german_filename",
          "callee": "items",
          "line": 536,
          "type": "attribute"
        },
        {
          "caller": "sanitize_german_filename",
          "callee": "replace",
          "line": 537,
          "type": "attribute"
        },
        {
          "caller": "sanitize_german_filename",
          "callee": "sub",
          "line": 540,
          "type": "attribute"
        },
        {
          "caller": "sanitize_german_filename",
          "callee": "sub",
          "line": 541,
          "type": "attribute"
        },
        {
          "caller": "sanitize_german_filename",
          "callee": "lower",
          "line": 542,
          "type": "attribute"
        },
        {
          "caller": "sanitize_german_filename",
          "callee": "replace",
          "line": 545,
          "type": "attribute"
        },
        {
          "caller": "sanitize_german_filename",
          "callee": "replace",
          "line": 546,
          "type": "attribute"
        },
        {
          "caller": "sanitize_german_filename",
          "callee": "replace",
          "line": 547,
          "type": "attribute"
        },
        {
          "caller": "generate_download_path",
          "callee": "strftime",
          "line": 557,
          "type": "attribute"
        },
        {
          "caller": "generate_download_path",
          "callee": "now",
          "line": 557,
          "type": "attribute"
        },
        {
          "caller": "generate_download_path",
          "callee": "join",
          "line": 559,
          "type": "attribute"
        },
        {
          "caller": "calculate_file_checksum",
          "callee": "hexdigest",
          "line": 565,
          "type": "attribute"
        },
        {
          "caller": "calculate_file_checksum",
          "callee": "md5",
          "line": 565,
          "type": "attribute"
        },
        {
          "caller": "calculate_file_checksum",
          "callee": "hexdigest",
          "line": 567,
          "type": "attribute"
        },
        {
          "caller": "calculate_file_checksum",
          "callee": "sha256",
          "line": 567,
          "type": "attribute"
        },
        {
          "caller": "calculate_file_checksum",
          "callee": "ValueError",
          "line": 569,
          "type": "direct"
        },
        {
          "caller": "extract_3mf_metadata",
          "callee": "fromstring",
          "line": 583,
          "type": "attribute"
        },
        {
          "caller": "extract_3mf_metadata",
          "callee": "decode",
          "line": 583,
          "type": "attribute"
        },
        {
          "caller": "extract_3mf_metadata",
          "callee": "findall",
          "line": 587,
          "type": "attribute"
        },
        {
          "caller": "extract_3mf_metadata",
          "callee": "get",
          "line": 588,
          "type": "attribute"
        },
        {
          "caller": "extract_3mf_metadata",
          "callee": "lower",
          "line": 591,
          "type": "attribute"
        },
        {
          "caller": "check_disk_space",
          "callee": "disk_usage",
          "line": 603,
          "type": "attribute"
        }
      ],
      "error": null
    },
    {
      "filepath": "tests\\backend\\test_api_health.py",
      "functions": [
        {
          "name": "client",
          "full_name": "client",
          "class": null,
          "signature": "()",
          "return_type": "",
          "decorators": [
            "pytest.fixture"
          ],
          "docstring": "Test client fixture.",
          "line_start": 12,
          "line_end": 14,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_health_check_success",
          "full_name": "TestHealthEndpoint.test_health_check_success",
          "class": "TestHealthEndpoint",
          "signature": "(self, client)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test basic health check returns 200.",
          "line_start": 20,
          "line_end": 29,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_health_check_includes_system_info",
          "full_name": "TestHealthEndpoint.test_health_check_includes_system_info",
          "class": "TestHealthEndpoint",
          "signature": "(self, client)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test health check includes essential system information.",
          "line_start": 31,
          "line_end": 41,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_health_check_response_format",
          "full_name": "TestHealthEndpoint.test_health_check_response_format",
          "class": "TestHealthEndpoint",
          "signature": "(self, client)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test health response follows expected format.",
          "line_start": 43,
          "line_end": 54,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_health_check_german_timezone",
          "full_name": "TestHealthEndpoint.test_health_check_german_timezone",
          "class": "TestHealthEndpoint",
          "signature": "(self, client)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test health check uses German timezone for Porcus3D business.",
          "line_start": 56,
          "line_end": 65,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_health_check_performance",
          "full_name": "TestHealthEndpoint.test_health_check_performance",
          "class": "TestHealthEndpoint",
          "signature": "(self, client)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test health check responds quickly (< 1 second).",
          "line_start": 68,
          "line_end": 77,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "pytest",
          "alias": null,
          "line": 5
        },
        {
          "type": "import",
          "module": "json",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "fastapi.testclient",
          "name": "TestClient",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "src.main",
          "name": "app",
          "alias": null,
          "line": 8
        },
        {
          "type": "import",
          "module": "time",
          "alias": null,
          "line": 70
        }
      ],
      "function_calls": [
        {
          "caller": "client",
          "callee": "TestClient",
          "line": 14,
          "type": "direct"
        },
        {
          "caller": "TestHealthEndpoint.test_health_check_success",
          "callee": "get",
          "line": 22,
          "type": "attribute"
        },
        {
          "caller": "TestHealthEndpoint.test_health_check_success",
          "callee": "json",
          "line": 25,
          "type": "attribute"
        },
        {
          "caller": "TestHealthEndpoint.test_health_check_includes_system_info",
          "callee": "get",
          "line": 33,
          "type": "attribute"
        },
        {
          "caller": "TestHealthEndpoint.test_health_check_includes_system_info",
          "callee": "json",
          "line": 36,
          "type": "attribute"
        },
        {
          "caller": "TestHealthEndpoint.test_health_check_response_format",
          "callee": "get",
          "line": 45,
          "type": "attribute"
        },
        {
          "caller": "TestHealthEndpoint.test_health_check_response_format",
          "callee": "json",
          "line": 51,
          "type": "attribute"
        },
        {
          "caller": "TestHealthEndpoint.test_health_check_german_timezone",
          "callee": "get",
          "line": 58,
          "type": "attribute"
        },
        {
          "caller": "TestHealthEndpoint.test_health_check_german_timezone",
          "callee": "json",
          "line": 61,
          "type": "attribute"
        },
        {
          "caller": "TestHealthEndpoint.test_health_check_german_timezone",
          "callee": "get",
          "line": 63,
          "type": "attribute"
        },
        {
          "caller": "TestHealthEndpoint.test_health_check_performance",
          "callee": "time",
          "line": 72,
          "type": "attribute"
        },
        {
          "caller": "TestHealthEndpoint.test_health_check_performance",
          "callee": "get",
          "line": 73,
          "type": "attribute"
        },
        {
          "caller": "TestHealthEndpoint.test_health_check_performance",
          "callee": "time",
          "line": 74,
          "type": "attribute"
        }
      ],
      "error": null
    },
    {
      "filepath": "tests\\backend\\test_api_jobs.py",
      "functions": [
        {
          "name": "test_get_jobs_empty_database",
          "full_name": "TestJobAPI.test_get_jobs_empty_database",
          "class": "TestJobAPI",
          "signature": "(self, api_client, temp_database, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test GET /api/v1/jobs with empty database",
          "line_start": 16,
          "line_end": 28,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_get_jobs_with_data",
          "full_name": "TestJobAPI.test_get_jobs_with_data",
          "class": "TestJobAPI",
          "signature": "(self, api_client, populated_database, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test GET /api/v1/jobs with existing jobs",
          "line_start": 30,
          "line_end": 52,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_get_jobs_filter_by_status",
          "full_name": "TestJobAPI.test_get_jobs_filter_by_status",
          "class": "TestJobAPI",
          "signature": "(self, api_client, populated_database, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test GET /api/v1/jobs?status=printing",
          "line_start": 54,
          "line_end": 64,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_get_jobs_filter_by_printer",
          "full_name": "TestJobAPI.test_get_jobs_filter_by_printer",
          "class": "TestJobAPI",
          "signature": "(self, api_client, populated_database, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test GET /api/v1/jobs?printer_id=bambu_a1_001",
          "line_start": 66,
          "line_end": 76,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_get_jobs_filter_by_business_type",
          "full_name": "TestJobAPI.test_get_jobs_filter_by_business_type",
          "class": "TestJobAPI",
          "signature": "(self, api_client, populated_database, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test GET /api/v1/jobs?is_business=true",
          "line_start": 78,
          "line_end": 89,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_get_jobs_date_range_filter",
          "full_name": "TestJobAPI.test_get_jobs_date_range_filter",
          "class": "TestJobAPI",
          "signature": "(self, api_client, populated_database, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test GET /api/v1/jobs with date range filtering",
          "line_start": 91,
          "line_end": 106,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_get_jobs_pagination",
          "full_name": "TestJobAPI.test_get_jobs_pagination",
          "class": "TestJobAPI",
          "signature": "(self, api_client, populated_database, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test GET /api/v1/jobs with pagination",
          "line_start": 108,
          "line_end": 120,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_post_jobs_create_new_job",
          "full_name": "TestJobAPI.test_post_jobs_create_new_job",
          "class": "TestJobAPI",
          "signature": "(self, api_client, db_connection, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test POST /api/v1/jobs - Create new print job",
          "line_start": 122,
          "line_end": 160,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_post_jobs_validation_errors",
          "full_name": "TestJobAPI.test_post_jobs_validation_errors",
          "class": "TestJobAPI",
          "signature": "(self, api_client, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test POST /api/v1/jobs with validation errors",
          "line_start": 162,
          "line_end": 205,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_get_job_details",
          "full_name": "TestJobAPI.test_get_job_details",
          "class": "TestJobAPI",
          "signature": "(self, api_client, populated_database, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test GET /api/v1/jobs/{id} - Get specific job details",
          "line_start": 207,
          "line_end": 237,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_get_job_details_not_found",
          "full_name": "TestJobAPI.test_get_job_details_not_found",
          "class": "TestJobAPI",
          "signature": "(self, api_client, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test GET /api/v1/jobs/{id} for non-existent job",
          "line_start": 239,
          "line_end": 244,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_put_job_status_update",
          "full_name": "TestJobAPI.test_put_job_status_update",
          "class": "TestJobAPI",
          "signature": "(self, api_client, populated_database, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test PUT /api/v1/jobs/{id}/status - Update job status",
          "line_start": 246,
          "line_end": 269,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_put_job_completion_with_quality_assessment",
          "full_name": "TestJobAPI.test_put_job_completion_with_quality_assessment",
          "class": "TestJobAPI",
          "signature": "(self, api_client, populated_database, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test PUT /api/v1/jobs/{id}/status - Mark job as completed with quality assessment",
          "line_start": 271,
          "line_end": 303,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_put_job_failure_handling",
          "full_name": "TestJobAPI.test_put_job_failure_handling",
          "class": "TestJobAPI",
          "signature": "(self, api_client, populated_database, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test PUT /api/v1/jobs/{id}/status - Handle job failure",
          "line_start": 305,
          "line_end": 330,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_put_job_status_invalid_transitions",
          "full_name": "TestJobAPI.test_put_job_status_invalid_transitions",
          "class": "TestJobAPI",
          "signature": "(self, api_client, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test PUT /api/v1/jobs/{id}/status with invalid status transitions",
          "line_start": 332,
          "line_end": 357,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_delete_job",
          "full_name": "TestJobAPI.test_delete_job",
          "class": "TestJobAPI",
          "signature": "(self, api_client, populated_database, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test DELETE /api/v1/jobs/{id}",
          "line_start": 359,
          "line_end": 368,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_delete_active_job_forbidden",
          "full_name": "TestJobAPI.test_delete_active_job_forbidden",
          "class": "TestJobAPI",
          "signature": "(self, api_client, populated_database, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test DELETE /api/v1/jobs/{id} - Cannot delete active job",
          "line_start": 370,
          "line_end": 380,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_german_cost_calculations",
          "full_name": "TestJobBusinessLogic.test_german_cost_calculations",
          "class": "TestJobBusinessLogic",
          "signature": "(self, sample_cost_calculations, german_business_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test cost calculations according to German business requirements",
          "line_start": 386,
          "line_end": 417,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_business_vs_private_job_classification",
          "full_name": "TestJobBusinessLogic.test_business_vs_private_job_classification",
          "class": "TestJobBusinessLogic",
          "signature": "(self, populated_database)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test business vs private job classification",
          "line_start": 419,
          "line_end": 434,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_job_timezone_handling",
          "full_name": "TestJobBusinessLogic.test_job_timezone_handling",
          "class": "TestJobBusinessLogic",
          "signature": "(self, populated_database, test_utils)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test job timestamps use Europe/Berlin timezone",
          "line_start": 436,
          "line_end": 444,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_material_usage_tracking",
          "full_name": "TestJobBusinessLogic.test_material_usage_tracking",
          "class": "TestJobBusinessLogic",
          "signature": "(self, sample_job_data)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test material usage tracking for German sustainability requirements",
          "line_start": 446,
          "line_end": 462,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_print_quality_assessment_german_standards",
          "full_name": "TestJobBusinessLogic.test_print_quality_assessment_german_standards",
          "class": "TestJobBusinessLogic",
          "signature": "(self, sample_job_data)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test print quality assessment according to German quality standards",
          "line_start": 464,
          "line_end": 481,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_large_job_list_performance",
          "full_name": "TestJobAPIPerformance.test_large_job_list_performance",
          "class": "TestJobAPIPerformance",
          "signature": "(self, api_client, db_connection, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test API performance with large number of jobs",
          "line_start": 487,
          "line_end": 522,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_job_filtering_performance",
          "full_name": "TestJobAPIPerformance.test_job_filtering_performance",
          "class": "TestJobAPIPerformance",
          "signature": "(self, api_client, db_connection, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test performance of job filtering operations",
          "line_start": 524,
          "line_end": 544,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_concurrent_job_updates",
          "full_name": "TestJobAPIPerformance.test_concurrent_job_updates",
          "class": "TestJobAPIPerformance",
          "signature": "(self, api_client, populated_database, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test concurrent job status updates",
          "line_start": 546,
          "line_end": 579,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "update_job_status",
          "full_name": "TestJobAPIPerformance.update_job_status",
          "class": "TestJobAPIPerformance",
          "signature": "(job_id, status)",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 553,
          "line_end": 561,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_job_api_database_connection_error",
          "full_name": "TestJobAPIErrorHandling.test_job_api_database_connection_error",
          "class": "TestJobAPIErrorHandling",
          "signature": "(self, api_client, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test job API behavior when database is unavailable",
          "line_start": 585,
          "line_end": 594,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_job_creation_with_invalid_printer",
          "full_name": "TestJobAPIErrorHandling.test_job_creation_with_invalid_printer",
          "class": "TestJobAPIErrorHandling",
          "signature": "(self, api_client, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test job creation with non-existent printer",
          "line_start": 596,
          "line_end": 609,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_job_update_race_condition_handling",
          "full_name": "TestJobAPIErrorHandling.test_job_update_race_condition_handling",
          "class": "TestJobAPIErrorHandling",
          "signature": "(self, api_client, populated_database, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test handling of race conditions in job updates",
          "line_start": 611,
          "line_end": 633,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_job_deletion_safety_checks",
          "full_name": "TestJobAPIErrorHandling.test_job_deletion_safety_checks",
          "class": "TestJobAPIErrorHandling",
          "signature": "(self, api_client, populated_database, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test safety checks when deleting jobs",
          "line_start": 635,
          "line_end": 644,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "pytest",
          "alias": null,
          "line": 6
        },
        {
          "type": "import",
          "module": "json",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "unittest.mock",
          "name": "patch",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "unittest.mock",
          "name": "Mock",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "timedelta",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "timezone",
          "alias": null,
          "line": 9
        },
        {
          "type": "import",
          "module": "sqlite3",
          "alias": null,
          "line": 10
        },
        {
          "type": "import",
          "module": "time",
          "alias": null,
          "line": 507
        },
        {
          "type": "import",
          "module": "threading",
          "alias": null,
          "line": 548
        },
        {
          "type": "import",
          "module": "time",
          "alias": null,
          "line": 549
        }
      ],
      "function_calls": [
        {
          "caller": "TestJobAPI.test_get_jobs_empty_database",
          "callee": "patch",
          "line": 18,
          "type": "direct"
        },
        {
          "caller": "TestJobAPI.test_get_jobs_empty_database",
          "callee": "get",
          "line": 21,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPI.test_get_jobs_empty_database",
          "callee": "json",
          "line": 24,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPI.test_get_jobs_with_data",
          "callee": "patch",
          "line": 32,
          "type": "direct"
        },
        {
          "caller": "TestJobAPI.test_get_jobs_with_data",
          "callee": "get",
          "line": 35,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPI.test_get_jobs_with_data",
          "callee": "json",
          "line": 38,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPI.test_get_jobs_with_data",
          "callee": "len",
          "line": 39,
          "type": "direct"
        },
        {
          "caller": "TestJobAPI.test_get_jobs_with_data",
          "callee": "next",
          "line": 44,
          "type": "direct"
        },
        {
          "caller": "TestJobAPI.test_get_jobs_with_data",
          "callee": "next",
          "line": 50,
          "type": "direct"
        },
        {
          "caller": "TestJobAPI.test_get_jobs_filter_by_status",
          "callee": "patch",
          "line": 56,
          "type": "direct"
        },
        {
          "caller": "TestJobAPI.test_get_jobs_filter_by_status",
          "callee": "get",
          "line": 59,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPI.test_get_jobs_filter_by_status",
          "callee": "json",
          "line": 62,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPI.test_get_jobs_filter_by_status",
          "callee": "len",
          "line": 63,
          "type": "direct"
        },
        {
          "caller": "TestJobAPI.test_get_jobs_filter_by_printer",
          "callee": "patch",
          "line": 68,
          "type": "direct"
        },
        {
          "caller": "TestJobAPI.test_get_jobs_filter_by_printer",
          "callee": "get",
          "line": 71,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPI.test_get_jobs_filter_by_printer",
          "callee": "json",
          "line": 74,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPI.test_get_jobs_filter_by_printer",
          "callee": "len",
          "line": 75,
          "type": "direct"
        },
        {
          "caller": "TestJobAPI.test_get_jobs_filter_by_business_type",
          "callee": "patch",
          "line": 80,
          "type": "direct"
        },
        {
          "caller": "TestJobAPI.test_get_jobs_filter_by_business_type",
          "callee": "get",
          "line": 83,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPI.test_get_jobs_filter_by_business_type",
          "callee": "json",
          "line": 86,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPI.test_get_jobs_filter_by_business_type",
          "callee": "len",
          "line": 87,
          "type": "direct"
        },
        {
          "caller": "TestJobAPI.test_get_jobs_date_range_filter",
          "callee": "strftime",
          "line": 93,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPI.test_get_jobs_date_range_filter",
          "callee": "now",
          "line": 93,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPI.test_get_jobs_date_range_filter",
          "callee": "strftime",
          "line": 94,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPI.test_get_jobs_date_range_filter",
          "callee": "now",
          "line": 94,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPI.test_get_jobs_date_range_filter",
          "callee": "timedelta",
          "line": 94,
          "type": "direct"
        },
        {
          "caller": "TestJobAPI.test_get_jobs_date_range_filter",
          "callee": "patch",
          "line": 96,
          "type": "direct"
        },
        {
          "caller": "TestJobAPI.test_get_jobs_date_range_filter",
          "callee": "get",
          "line": 99,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPI.test_get_jobs_date_range_filter",
          "callee": "json",
          "line": 104,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPI.test_get_jobs_date_range_filter",
          "callee": "isinstance",
          "line": 106,
          "type": "direct"
        },
        {
          "caller": "TestJobAPI.test_get_jobs_pagination",
          "callee": "patch",
          "line": 110,
          "type": "direct"
        },
        {
          "caller": "TestJobAPI.test_get_jobs_pagination",
          "callee": "get",
          "line": 113,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPI.test_get_jobs_pagination",
          "callee": "json",
          "line": 116,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPI.test_get_jobs_pagination",
          "callee": "len",
          "line": 117,
          "type": "direct"
        },
        {
          "caller": "TestJobAPI.test_post_jobs_create_new_job",
          "callee": "patch",
          "line": 143,
          "type": "direct"
        },
        {
          "caller": "TestJobAPI.test_post_jobs_create_new_job",
          "callee": "post",
          "line": 146,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPI.test_post_jobs_create_new_job",
          "callee": "json",
          "line": 152,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPI.test_post_jobs_validation_errors",
          "callee": "post",
          "line": 198,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPI.test_post_jobs_validation_errors",
          "callee": "json",
          "line": 205,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPI.test_get_job_details",
          "callee": "patch",
          "line": 211,
          "type": "direct"
        },
        {
          "caller": "TestJobAPI.test_get_job_details",
          "callee": "get",
          "line": 214,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPI.test_get_job_details",
          "callee": "json",
          "line": 217,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPI.test_get_job_details_not_found",
          "callee": "get",
          "line": 241,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPI.test_get_job_details_not_found",
          "callee": "json",
          "line": 244,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPI.test_put_job_status_update",
          "callee": "patch",
          "line": 256,
          "type": "direct"
        },
        {
          "caller": "TestJobAPI.test_put_job_status_update",
          "callee": "put",
          "line": 259,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPI.test_put_job_status_update",
          "callee": "json",
          "line": 265,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPI.test_put_job_completion_with_quality_assessment",
          "callee": "isoformat",
          "line": 277,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPI.test_put_job_completion_with_quality_assessment",
          "callee": "now",
          "line": 277,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPI.test_put_job_completion_with_quality_assessment",
          "callee": "patch",
          "line": 286,
          "type": "direct"
        },
        {
          "caller": "TestJobAPI.test_put_job_completion_with_quality_assessment",
          "callee": "put",
          "line": 289,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPI.test_put_job_completion_with_quality_assessment",
          "callee": "json",
          "line": 295,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPI.test_put_job_completion_with_quality_assessment",
          "callee": "abs",
          "line": 303,
          "type": "direct"
        },
        {
          "caller": "TestJobAPI.test_put_job_failure_handling",
          "callee": "isoformat",
          "line": 311,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPI.test_put_job_failure_handling",
          "callee": "now",
          "line": 311,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPI.test_put_job_failure_handling",
          "callee": "patch",
          "line": 318,
          "type": "direct"
        },
        {
          "caller": "TestJobAPI.test_put_job_failure_handling",
          "callee": "put",
          "line": 321,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPI.test_put_job_failure_handling",
          "callee": "json",
          "line": 327,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPI.test_put_job_status_invalid_transitions",
          "callee": "put",
          "line": 351,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPI.test_put_job_status_invalid_transitions",
          "callee": "json",
          "line": 357,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPI.test_delete_job",
          "callee": "patch",
          "line": 363,
          "type": "direct"
        },
        {
          "caller": "TestJobAPI.test_delete_job",
          "callee": "delete",
          "line": 366,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPI.test_delete_active_job_forbidden",
          "callee": "patch",
          "line": 374,
          "type": "direct"
        },
        {
          "caller": "TestJobAPI.test_delete_active_job_forbidden",
          "callee": "delete",
          "line": 377,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPI.test_delete_active_job_forbidden",
          "callee": "json",
          "line": 380,
          "type": "attribute"
        },
        {
          "caller": "TestJobBusinessLogic.test_german_cost_calculations",
          "callee": "float",
          "line": 405,
          "type": "direct"
        },
        {
          "caller": "TestJobBusinessLogic.test_german_cost_calculations",
          "callee": "round",
          "line": 406,
          "type": "direct"
        },
        {
          "caller": "TestJobBusinessLogic.test_german_cost_calculations",
          "callee": "round",
          "line": 409,
          "type": "direct"
        },
        {
          "caller": "TestJobBusinessLogic.test_business_vs_private_job_classification",
          "callee": "cursor",
          "line": 421,
          "type": "attribute"
        },
        {
          "caller": "TestJobBusinessLogic.test_business_vs_private_job_classification",
          "callee": "execute",
          "line": 424,
          "type": "attribute"
        },
        {
          "caller": "TestJobBusinessLogic.test_business_vs_private_job_classification",
          "callee": "fetchone",
          "line": 425,
          "type": "attribute"
        },
        {
          "caller": "TestJobBusinessLogic.test_business_vs_private_job_classification",
          "callee": "len",
          "line": 428,
          "type": "direct"
        },
        {
          "caller": "TestJobBusinessLogic.test_business_vs_private_job_classification",
          "callee": "execute",
          "line": 431,
          "type": "attribute"
        },
        {
          "caller": "TestJobBusinessLogic.test_business_vs_private_job_classification",
          "callee": "fetchone",
          "line": 432,
          "type": "attribute"
        },
        {
          "caller": "TestJobBusinessLogic.test_job_timezone_handling",
          "callee": "cursor",
          "line": 438,
          "type": "attribute"
        },
        {
          "caller": "TestJobBusinessLogic.test_job_timezone_handling",
          "callee": "execute",
          "line": 439,
          "type": "attribute"
        },
        {
          "caller": "TestJobBusinessLogic.test_job_timezone_handling",
          "callee": "fetchone",
          "line": 440,
          "type": "attribute"
        },
        {
          "caller": "TestJobBusinessLogic.test_job_timezone_handling",
          "callee": "berlin_timestamp",
          "line": 443,
          "type": "attribute"
        },
        {
          "caller": "TestJobBusinessLogic.test_material_usage_tracking",
          "callee": "abs",
          "line": 462,
          "type": "direct"
        },
        {
          "caller": "TestJobBusinessLogic.test_print_quality_assessment_german_standards",
          "callee": "get",
          "line": 469,
          "type": "attribute"
        },
        {
          "caller": "TestJobBusinessLogic.test_print_quality_assessment_german_standards",
          "callee": "get",
          "line": 474,
          "type": "attribute"
        },
        {
          "caller": "TestJobBusinessLogic.test_print_quality_assessment_german_standards",
          "callee": "get",
          "line": 479,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPIPerformance.test_large_job_list_performance",
          "callee": "cursor",
          "line": 489,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPIPerformance.test_large_job_list_performance",
          "callee": "range",
          "line": 492,
          "type": "direct"
        },
        {
          "caller": "TestJobAPIPerformance.test_large_job_list_performance",
          "callee": "execute",
          "line": 493,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPIPerformance.test_large_job_list_performance",
          "callee": "commit",
          "line": 504,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPIPerformance.test_large_job_list_performance",
          "callee": "time",
          "line": 508,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPIPerformance.test_large_job_list_performance",
          "callee": "patch",
          "line": 510,
          "type": "direct"
        },
        {
          "caller": "TestJobAPIPerformance.test_large_job_list_performance",
          "callee": "get",
          "line": 512,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPIPerformance.test_large_job_list_performance",
          "callee": "time",
          "line": 514,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPIPerformance.test_large_job_list_performance",
          "callee": "json",
          "line": 521,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPIPerformance.test_job_filtering_performance",
          "callee": "time",
          "line": 536,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPIPerformance.test_job_filtering_performance",
          "callee": "get",
          "line": 538,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPIPerformance.test_job_filtering_performance",
          "callee": "time",
          "line": 540,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPIPerformance.update_job_status",
          "callee": "put",
          "line": 555,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPIPerformance.update_job_status",
          "callee": "append",
          "line": 559,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPIPerformance.update_job_status",
          "callee": "append",
          "line": 561,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPIPerformance.test_concurrent_job_updates",
          "callee": "range",
          "line": 565,
          "type": "direct"
        },
        {
          "caller": "TestJobAPIPerformance.test_concurrent_job_updates",
          "callee": "Thread",
          "line": 566,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPIPerformance.test_concurrent_job_updates",
          "callee": "append",
          "line": 567,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPIPerformance.test_concurrent_job_updates",
          "callee": "start",
          "line": 571,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPIPerformance.test_concurrent_job_updates",
          "callee": "join",
          "line": 575,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPIPerformance.test_concurrent_job_updates",
          "callee": "len",
          "line": 578,
          "type": "direct"
        },
        {
          "caller": "TestJobAPIErrorHandling.test_job_api_database_connection_error",
          "callee": "patch",
          "line": 587,
          "type": "direct"
        },
        {
          "caller": "TestJobAPIErrorHandling.test_job_api_database_connection_error",
          "callee": "OperationalError",
          "line": 588,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPIErrorHandling.test_job_api_database_connection_error",
          "callee": "get",
          "line": 590,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPIErrorHandling.test_job_api_database_connection_error",
          "callee": "json",
          "line": 593,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPIErrorHandling.test_job_creation_with_invalid_printer",
          "callee": "post",
          "line": 603,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPIErrorHandling.test_job_creation_with_invalid_printer",
          "callee": "json",
          "line": 609,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPIErrorHandling.test_job_update_race_condition_handling",
          "callee": "patch",
          "line": 616,
          "type": "direct"
        },
        {
          "caller": "TestJobAPIErrorHandling.test_job_update_race_condition_handling",
          "callee": "put",
          "line": 620,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPIErrorHandling.test_job_update_race_condition_handling",
          "callee": "put",
          "line": 626,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPIErrorHandling.test_job_deletion_safety_checks",
          "callee": "delete",
          "line": 638,
          "type": "attribute"
        },
        {
          "caller": "TestJobAPIErrorHandling.test_job_deletion_safety_checks",
          "callee": "delete",
          "line": 643,
          "type": "attribute"
        }
      ],
      "error": null
    },
    {
      "filepath": "tests\\backend\\test_api_printers.py",
      "functions": [
        {
          "name": "test_get_printers_empty_database",
          "full_name": "TestPrinterAPI.test_get_printers_empty_database",
          "class": "TestPrinterAPI",
          "signature": "(self, api_client, temp_database, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test GET /api/v1/printers with empty database",
          "line_start": 16,
          "line_end": 28,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_get_printers_with_data",
          "full_name": "TestPrinterAPI.test_get_printers_with_data",
          "class": "TestPrinterAPI",
          "signature": "(self, api_client, populated_database, test_config, sample_printer_data)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test GET /api/v1/printers with existing printers",
          "line_start": 30,
          "line_end": 51,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_get_printers_filter_by_type",
          "full_name": "TestPrinterAPI.test_get_printers_filter_by_type",
          "class": "TestPrinterAPI",
          "signature": "(self, api_client, populated_database, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test GET /api/v1/printers?type=bambu_lab",
          "line_start": 53,
          "line_end": 63,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_get_printers_filter_by_active_status",
          "full_name": "TestPrinterAPI.test_get_printers_filter_by_active_status",
          "class": "TestPrinterAPI",
          "signature": "(self, api_client, populated_database, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test GET /api/v1/printers?active=true",
          "line_start": 65,
          "line_end": 75,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_post_printers_bambu_lab",
          "full_name": "TestPrinterAPI.test_post_printers_bambu_lab",
          "class": "TestPrinterAPI",
          "signature": "(self, api_client, db_connection, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test POST /api/v1/printers - Add Bambu Lab printer",
          "line_start": 77,
          "line_end": 104,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_post_printers_prusa",
          "full_name": "TestPrinterAPI.test_post_printers_prusa",
          "class": "TestPrinterAPI",
          "signature": "(self, api_client, db_connection, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test POST /api/v1/printers - Add Prusa printer",
          "line_start": 106,
          "line_end": 128,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_post_printers_validation_errors",
          "full_name": "TestPrinterAPI.test_post_printers_validation_errors",
          "class": "TestPrinterAPI",
          "signature": "(self, api_client, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test POST /api/v1/printers with validation errors",
          "line_start": 130,
          "line_end": 175,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_get_printer_status_bambu_lab",
          "full_name": "TestPrinterAPI.test_get_printer_status_bambu_lab",
          "class": "TestPrinterAPI",
          "signature": "(self, api_client, populated_database, test_config, mock_bambu_api)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test GET /api/v1/printers/{id}/status for Bambu Lab printer",
          "line_start": 177,
          "line_end": 207,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_get_printer_status_prusa",
          "full_name": "TestPrinterAPI.test_get_printer_status_prusa",
          "class": "TestPrinterAPI",
          "signature": "(self, api_client, populated_database, test_config, mock_prusa_api)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test GET /api/v1/printers/{id}/status for Prusa printer",
          "line_start": 209,
          "line_end": 231,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_get_printer_status_offline",
          "full_name": "TestPrinterAPI.test_get_printer_status_offline",
          "class": "TestPrinterAPI",
          "signature": "(self, api_client, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test GET /api/v1/printers/{id}/status for offline printer",
          "line_start": 233,
          "line_end": 247,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_get_printer_status_not_found",
          "full_name": "TestPrinterAPI.test_get_printer_status_not_found",
          "class": "TestPrinterAPI",
          "signature": "(self, api_client, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test GET /api/v1/printers/{id}/status for non-existent printer",
          "line_start": 249,
          "line_end": 256,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_put_printers_update_config",
          "full_name": "TestPrinterAPI.test_put_printers_update_config",
          "class": "TestPrinterAPI",
          "signature": "(self, api_client, populated_database, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test PUT /api/v1/printers/{id} - Update printer configuration",
          "line_start": 258,
          "line_end": 279,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_put_printers_invalid_update",
          "full_name": "TestPrinterAPI.test_put_printers_invalid_update",
          "class": "TestPrinterAPI",
          "signature": "(self, api_client, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test PUT /api/v1/printers/{id} with invalid data",
          "line_start": 281,
          "line_end": 303,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_delete_printers",
          "full_name": "TestPrinterAPI.test_delete_printers",
          "class": "TestPrinterAPI",
          "signature": "(self, api_client, populated_database, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test DELETE /api/v1/printers/{id}",
          "line_start": 305,
          "line_end": 323,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_delete_printer_with_active_jobs",
          "full_name": "TestPrinterAPI.test_delete_printer_with_active_jobs",
          "class": "TestPrinterAPI",
          "signature": "(self, api_client, populated_database, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test DELETE /api/v1/printers/{id} with active print jobs",
          "line_start": 325,
          "line_end": 338,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_printer_connection_test",
          "full_name": "TestPrinterAPI.test_printer_connection_test",
          "class": "TestPrinterAPI",
          "signature": "(self, api_client, test_config, mock_bambu_api)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test POST /api/v1/printers/{id}/test-connection",
          "line_start": 340,
          "line_end": 355,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_printer_connection_test_failed",
          "full_name": "TestPrinterAPI.test_printer_connection_test_failed",
          "class": "TestPrinterAPI",
          "signature": "(self, api_client, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test POST /api/v1/printers/{id}/test-connection with failed connection",
          "line_start": 357,
          "line_end": 371,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_printer_timezone_handling",
          "full_name": "TestPrinterBusinessLogic.test_printer_timezone_handling",
          "class": "TestPrinterBusinessLogic",
          "signature": "(self, populated_database, german_business_config, test_utils)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test that printer timestamps use Europe/Berlin timezone",
          "line_start": 377,
          "line_end": 390,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_printer_cost_calculations_euro",
          "full_name": "TestPrinterBusinessLogic.test_printer_cost_calculations_euro",
          "class": "TestPrinterBusinessLogic",
          "signature": "(self, sample_cost_calculations, test_utils)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test cost calculations in EUR for German business",
          "line_start": 392,
          "line_end": 413,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_printer_business_hours_validation",
          "full_name": "TestPrinterBusinessLogic.test_printer_business_hours_validation",
          "class": "TestPrinterBusinessLogic",
          "signature": "(self, german_business_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test business hours validation for German operations",
          "line_start": 415,
          "line_end": 433,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_printer_id_generation_german_locale",
          "full_name": "TestPrinterBusinessLogic.test_printer_id_generation_german_locale",
          "class": "TestPrinterBusinessLogic",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test printer ID generation follows German naming conventions",
          "line_start": 435,
          "line_end": 446,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "generate_printer_id",
          "full_name": "generate_printer_id",
          "class": null,
          "signature": "(name, printer_type)",
          "return_type": "",
          "decorators": [],
          "docstring": "Mock function for printer ID generation",
          "line_start": 449,
          "line_end": 459,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_concurrent_printer_requests",
          "full_name": "TestPrinterAPIEdgeCases.test_concurrent_printer_requests",
          "class": "TestPrinterAPIEdgeCases",
          "signature": "(self, api_client, test_config, populated_database)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test concurrent requests to printer API",
          "line_start": 465,
          "line_end": 492,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "make_request",
          "full_name": "TestPrinterAPIEdgeCases.make_request",
          "class": "TestPrinterAPIEdgeCases",
          "signature": "()",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 472,
          "line_end": 474,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_large_printer_list_performance",
          "full_name": "TestPrinterAPIEdgeCases.test_large_printer_list_performance",
          "class": "TestPrinterAPIEdgeCases",
          "signature": "(self, api_client, test_config, db_connection)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test API performance with large number of printers",
          "line_start": 494,
          "line_end": 530,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_printer_api_rate_limiting",
          "full_name": "TestPrinterAPIEdgeCases.test_printer_api_rate_limiting",
          "class": "TestPrinterAPIEdgeCases",
          "signature": "(self, api_client, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test API rate limiting for printer endpoints",
          "line_start": 532,
          "line_end": 544,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_invalid_json_handling",
          "full_name": "TestPrinterAPIEdgeCases.test_invalid_json_handling",
          "class": "TestPrinterAPIEdgeCases",
          "signature": "(self, api_client, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test handling of invalid JSON in POST requests",
          "line_start": 546,
          "line_end": 558,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_oversized_request_handling",
          "full_name": "TestPrinterAPIEdgeCases.test_oversized_request_handling",
          "class": "TestPrinterAPIEdgeCases",
          "signature": "(self, api_client, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test handling of oversized requests",
          "line_start": 560,
          "line_end": 576,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "pytest",
          "alias": null,
          "line": 6
        },
        {
          "type": "import",
          "module": "json",
          "alias": null,
          "line": 7
        },
        {
          "type": "import",
          "module": "sqlite3",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "unittest.mock",
          "name": "patch",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "unittest.mock",
          "name": "Mock",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "timezone",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 417
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "time",
          "alias": null,
          "line": 417
        },
        {
          "type": "import",
          "module": "re",
          "alias": null,
          "line": 451
        },
        {
          "type": "import",
          "module": "threading",
          "alias": null,
          "line": 467
        },
        {
          "type": "import",
          "module": "time",
          "alias": null,
          "line": 468
        },
        {
          "type": "import",
          "module": "time",
          "alias": null,
          "line": 515
        }
      ],
      "function_calls": [
        {
          "caller": "TestPrinterAPI.test_get_printers_empty_database",
          "callee": "patch",
          "line": 19,
          "type": "direct"
        },
        {
          "caller": "TestPrinterAPI.test_get_printers_empty_database",
          "callee": "get",
          "line": 22,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterAPI.test_get_printers_empty_database",
          "callee": "json",
          "line": 25,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterAPI.test_get_printers_with_data",
          "callee": "patch",
          "line": 32,
          "type": "direct"
        },
        {
          "caller": "TestPrinterAPI.test_get_printers_with_data",
          "callee": "get",
          "line": 35,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterAPI.test_get_printers_with_data",
          "callee": "json",
          "line": 38,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterAPI.test_get_printers_with_data",
          "callee": "len",
          "line": 39,
          "type": "direct"
        },
        {
          "caller": "TestPrinterAPI.test_get_printers_with_data",
          "callee": "next",
          "line": 43,
          "type": "direct"
        },
        {
          "caller": "TestPrinterAPI.test_get_printers_with_data",
          "callee": "next",
          "line": 49,
          "type": "direct"
        },
        {
          "caller": "TestPrinterAPI.test_get_printers_filter_by_type",
          "callee": "patch",
          "line": 55,
          "type": "direct"
        },
        {
          "caller": "TestPrinterAPI.test_get_printers_filter_by_type",
          "callee": "get",
          "line": 58,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterAPI.test_get_printers_filter_by_type",
          "callee": "json",
          "line": 61,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterAPI.test_get_printers_filter_by_type",
          "callee": "len",
          "line": 62,
          "type": "direct"
        },
        {
          "caller": "TestPrinterAPI.test_get_printers_filter_by_active_status",
          "callee": "patch",
          "line": 67,
          "type": "direct"
        },
        {
          "caller": "TestPrinterAPI.test_get_printers_filter_by_active_status",
          "callee": "get",
          "line": 70,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterAPI.test_get_printers_filter_by_active_status",
          "callee": "json",
          "line": 73,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterAPI.test_post_printers_bambu_lab",
          "callee": "patch",
          "line": 91,
          "type": "direct"
        },
        {
          "caller": "TestPrinterAPI.test_post_printers_bambu_lab",
          "callee": "post",
          "line": 94,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterAPI.test_post_printers_bambu_lab",
          "callee": "json",
          "line": 100,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterAPI.test_post_printers_prusa",
          "callee": "patch",
          "line": 116,
          "type": "direct"
        },
        {
          "caller": "TestPrinterAPI.test_post_printers_prusa",
          "callee": "post",
          "line": 119,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterAPI.test_post_printers_prusa",
          "callee": "json",
          "line": 125,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterAPI.test_post_printers_validation_errors",
          "callee": "post",
          "line": 168,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterAPI.test_post_printers_validation_errors",
          "callee": "json",
          "line": 175,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterAPI.test_get_printer_status_bambu_lab",
          "callee": "patch",
          "line": 181,
          "type": "direct"
        },
        {
          "caller": "TestPrinterAPI.test_get_printer_status_bambu_lab",
          "callee": "get",
          "line": 184,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterAPI.test_get_printer_status_bambu_lab",
          "callee": "json",
          "line": 189,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterAPI.test_get_printer_status_prusa",
          "callee": "patch",
          "line": 213,
          "type": "direct"
        },
        {
          "caller": "TestPrinterAPI.test_get_printer_status_prusa",
          "callee": "get",
          "line": 216,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterAPI.test_get_printer_status_prusa",
          "callee": "json",
          "line": 221,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterAPI.test_get_printer_status_offline",
          "callee": "patch",
          "line": 237,
          "type": "direct"
        },
        {
          "caller": "TestPrinterAPI.test_get_printer_status_offline",
          "callee": "ConnectionError",
          "line": 238,
          "type": "direct"
        },
        {
          "caller": "TestPrinterAPI.test_get_printer_status_offline",
          "callee": "get",
          "line": 240,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterAPI.test_get_printer_status_offline",
          "callee": "json",
          "line": 245,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterAPI.test_get_printer_status_not_found",
          "callee": "get",
          "line": 251,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterAPI.test_get_printer_status_not_found",
          "callee": "json",
          "line": 256,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterAPI.test_put_printers_update_config",
          "callee": "patch",
          "line": 267,
          "type": "direct"
        },
        {
          "caller": "TestPrinterAPI.test_put_printers_update_config",
          "callee": "put",
          "line": 270,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterAPI.test_put_printers_update_config",
          "callee": "json",
          "line": 276,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterAPI.test_put_printers_invalid_update",
          "callee": "put",
          "line": 297,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterAPI.test_put_printers_invalid_update",
          "callee": "json",
          "line": 303,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterAPI.test_delete_printers",
          "callee": "patch",
          "line": 309,
          "type": "direct"
        },
        {
          "caller": "TestPrinterAPI.test_delete_printers",
          "callee": "delete",
          "line": 312,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterAPI.test_delete_printers",
          "callee": "cursor",
          "line": 319,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterAPI.test_delete_printers",
          "callee": "execute",
          "line": 320,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterAPI.test_delete_printers",
          "callee": "fetchone",
          "line": 321,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterAPI.test_delete_printer_with_active_jobs",
          "callee": "patch",
          "line": 329,
          "type": "direct"
        },
        {
          "caller": "TestPrinterAPI.test_delete_printer_with_active_jobs",
          "callee": "delete",
          "line": 332,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterAPI.test_delete_printer_with_active_jobs",
          "callee": "json",
          "line": 337,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterAPI.test_printer_connection_test",
          "callee": "patch",
          "line": 344,
          "type": "direct"
        },
        {
          "caller": "TestPrinterAPI.test_printer_connection_test",
          "callee": "post",
          "line": 348,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterAPI.test_printer_connection_test",
          "callee": "json",
          "line": 353,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterAPI.test_printer_connection_test_failed",
          "callee": "patch",
          "line": 361,
          "type": "direct"
        },
        {
          "caller": "TestPrinterAPI.test_printer_connection_test_failed",
          "callee": "ConnectionError",
          "line": 362,
          "type": "direct"
        },
        {
          "caller": "TestPrinterAPI.test_printer_connection_test_failed",
          "callee": "post",
          "line": 364,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterAPI.test_printer_connection_test_failed",
          "callee": "json",
          "line": 369,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterBusinessLogic.test_printer_timezone_handling",
          "callee": "cursor",
          "line": 379,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterBusinessLogic.test_printer_timezone_handling",
          "callee": "execute",
          "line": 380,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterBusinessLogic.test_printer_timezone_handling",
          "callee": "fetchone",
          "line": 384,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterBusinessLogic.test_printer_timezone_handling",
          "callee": "berlin_timestamp",
          "line": 388,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterBusinessLogic.test_printer_cost_calculations_euro",
          "callee": "calculate_vat",
          "line": 405,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterBusinessLogic.test_printer_business_hours_validation",
          "callee": "fromisoformat",
          "line": 419,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterBusinessLogic.test_printer_business_hours_validation",
          "callee": "fromisoformat",
          "line": 420,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterBusinessLogic.test_printer_business_hours_validation",
          "callee": "time",
          "line": 424,
          "type": "direct"
        },
        {
          "caller": "TestPrinterBusinessLogic.test_printer_business_hours_validation",
          "callee": "time",
          "line": 425,
          "type": "direct"
        },
        {
          "caller": "TestPrinterBusinessLogic.test_printer_business_hours_validation",
          "callee": "time",
          "line": 426,
          "type": "direct"
        },
        {
          "caller": "TestPrinterBusinessLogic.test_printer_business_hours_validation",
          "callee": "time",
          "line": 427,
          "type": "direct"
        },
        {
          "caller": "TestPrinterBusinessLogic.test_printer_business_hours_validation",
          "callee": "time",
          "line": 428,
          "type": "direct"
        },
        {
          "caller": "TestPrinterBusinessLogic.test_printer_id_generation_german_locale",
          "callee": "generate_printer_id",
          "line": 445,
          "type": "direct"
        },
        {
          "caller": "TestPrinterBusinessLogic.test_printer_id_generation_german_locale",
          "callee": "startswith",
          "line": 446,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterBusinessLogic.test_printer_id_generation_german_locale",
          "callee": "split",
          "line": 446,
          "type": "attribute"
        },
        {
          "caller": "generate_printer_id",
          "callee": "sub",
          "line": 454,
          "type": "attribute"
        },
        {
          "caller": "generate_printer_id",
          "callee": "lower",
          "line": 454,
          "type": "attribute"
        },
        {
          "caller": "generate_printer_id",
          "callee": "sub",
          "line": 455,
          "type": "attribute"
        },
        {
          "caller": "generate_printer_id",
          "callee": "strip",
          "line": 455,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterAPIEdgeCases.make_request",
          "callee": "get",
          "line": 473,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterAPIEdgeCases.make_request",
          "callee": "append",
          "line": 474,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterAPIEdgeCases.test_concurrent_printer_requests",
          "callee": "range",
          "line": 478,
          "type": "direct"
        },
        {
          "caller": "TestPrinterAPIEdgeCases.test_concurrent_printer_requests",
          "callee": "Thread",
          "line": 479,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterAPIEdgeCases.test_concurrent_printer_requests",
          "callee": "append",
          "line": 480,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterAPIEdgeCases.test_concurrent_printer_requests",
          "callee": "start",
          "line": 484,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterAPIEdgeCases.test_concurrent_printer_requests",
          "callee": "join",
          "line": 488,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterAPIEdgeCases.test_concurrent_printer_requests",
          "callee": "all",
          "line": 491,
          "type": "direct"
        },
        {
          "caller": "TestPrinterAPIEdgeCases.test_concurrent_printer_requests",
          "callee": "len",
          "line": 492,
          "type": "direct"
        },
        {
          "caller": "TestPrinterAPIEdgeCases.test_large_printer_list_performance",
          "callee": "cursor",
          "line": 497,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterAPIEdgeCases.test_large_printer_list_performance",
          "callee": "range",
          "line": 499,
          "type": "direct"
        },
        {
          "caller": "TestPrinterAPIEdgeCases.test_large_printer_list_performance",
          "callee": "execute",
          "line": 500,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterAPIEdgeCases.test_large_printer_list_performance",
          "callee": "commit",
          "line": 512,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterAPIEdgeCases.test_large_printer_list_performance",
          "callee": "time",
          "line": 516,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterAPIEdgeCases.test_large_printer_list_performance",
          "callee": "patch",
          "line": 518,
          "type": "direct"
        },
        {
          "caller": "TestPrinterAPIEdgeCases.test_large_printer_list_performance",
          "callee": "get",
          "line": 520,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterAPIEdgeCases.test_large_printer_list_performance",
          "callee": "time",
          "line": 522,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterAPIEdgeCases.test_large_printer_list_performance",
          "callee": "json",
          "line": 529,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterAPIEdgeCases.test_large_printer_list_performance",
          "callee": "len",
          "line": 530,
          "type": "direct"
        },
        {
          "caller": "TestPrinterAPIEdgeCases.test_printer_api_rate_limiting",
          "callee": "range",
          "line": 538,
          "type": "direct"
        },
        {
          "caller": "TestPrinterAPIEdgeCases.test_printer_api_rate_limiting",
          "callee": "get",
          "line": 539,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterAPIEdgeCases.test_printer_api_rate_limiting",
          "callee": "append",
          "line": 540,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterAPIEdgeCases.test_printer_api_rate_limiting",
          "callee": "len",
          "line": 544,
          "type": "direct"
        },
        {
          "caller": "TestPrinterAPIEdgeCases.test_invalid_json_handling",
          "callee": "post",
          "line": 550,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterAPIEdgeCases.test_invalid_json_handling",
          "callee": "json",
          "line": 557,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterAPIEdgeCases.test_oversized_request_handling",
          "callee": "post",
          "line": 570,
          "type": "attribute"
        }
      ],
      "error": null
    },
    {
      "filepath": "tests\\backend\\test_database.py",
      "functions": [
        {
          "name": "test_database_creation",
          "full_name": "TestDatabaseSchema.test_database_creation",
          "class": "TestDatabaseSchema",
          "signature": "(self, temp_database)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test database creation with schema",
          "line_start": 14,
          "line_end": 35,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_printer_table_constraints",
          "full_name": "TestDatabaseSchema.test_printer_table_constraints",
          "class": "TestDatabaseSchema",
          "signature": "(self, db_connection)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test printer table constraints and validation",
          "line_start": 37,
          "line_end": 62,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_job_table_constraints",
          "full_name": "TestDatabaseSchema.test_job_table_constraints",
          "class": "TestDatabaseSchema",
          "signature": "(self, populated_database)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test job table constraints and computed columns",
          "line_start": 64,
          "line_end": 104,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_file_table_generated_columns",
          "full_name": "TestDatabaseSchema.test_file_table_generated_columns",
          "class": "TestDatabaseSchema",
          "signature": "(self, db_connection)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test file table generated columns and status icons",
          "line_start": 106,
          "line_end": 133,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_database_indexes",
          "full_name": "TestDatabaseSchema.test_database_indexes",
          "class": "TestDatabaseSchema",
          "signature": "(self, temp_database)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test that all required indexes exist",
          "line_start": 135,
          "line_end": 161,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_database_triggers",
          "full_name": "TestDatabaseSchema.test_database_triggers",
          "class": "TestDatabaseSchema",
          "signature": "(self, populated_database)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test database triggers for automatic updates",
          "line_start": 163,
          "line_end": 183,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_job_status_change_trigger",
          "full_name": "TestDatabaseSchema.test_job_status_change_trigger",
          "class": "TestDatabaseSchema",
          "signature": "(self, populated_database)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test job status change trigger creates system events",
          "line_start": 185,
          "line_end": 215,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_foreign_key_constraints",
          "full_name": "TestDatabaseSchema.test_foreign_key_constraints",
          "class": "TestDatabaseSchema",
          "signature": "(self, populated_database)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test foreign key constraints are enforced",
          "line_start": 217,
          "line_end": 235,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_database_views",
          "full_name": "TestDatabaseSchema.test_database_views",
          "class": "TestDatabaseSchema",
          "signature": "(self, populated_database)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test database views provide correct data",
          "line_start": 237,
          "line_end": 263,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_european_timezone_handling",
          "full_name": "TestGermanBusinessLogic.test_european_timezone_handling",
          "class": "TestGermanBusinessLogic",
          "signature": "(self, populated_database, test_utils)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test that timestamps are handled with Europe/Berlin timezone",
          "line_start": 269,
          "line_end": 294,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_euro_currency_calculations",
          "full_name": "TestGermanBusinessLogic.test_euro_currency_calculations",
          "class": "TestGermanBusinessLogic",
          "signature": "(self, populated_database)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test EUR currency calculations with German VAT",
          "line_start": 296,
          "line_end": 331,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_german_business_hours_config",
          "full_name": "TestGermanBusinessLogic.test_german_business_hours_config",
          "class": "TestGermanBusinessLogic",
          "signature": "(self, populated_database)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test German business hours configuration",
          "line_start": 333,
          "line_end": 348,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_material_cost_per_gram_tracking",
          "full_name": "TestGermanBusinessLogic.test_material_cost_per_gram_tracking",
          "class": "TestGermanBusinessLogic",
          "signature": "(self, populated_database)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test material cost tracking per gram (German precision requirements)",
          "line_start": 350,
          "line_end": 371,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_power_cost_calculation_german_rates",
          "full_name": "TestGermanBusinessLogic.test_power_cost_calculation_german_rates",
          "class": "TestGermanBusinessLogic",
          "signature": "(self, populated_database)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test power cost calculation with German electricity rates",
          "line_start": 373,
          "line_end": 393,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_business_vs_private_job_tracking",
          "full_name": "TestGermanBusinessLogic.test_business_vs_private_job_tracking",
          "class": "TestGermanBusinessLogic",
          "signature": "(self, populated_database)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test business vs private job classification for German tax requirements",
          "line_start": 395,
          "line_end": 433,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_german_file_retention_policies",
          "full_name": "TestGermanBusinessLogic.test_german_file_retention_policies",
          "class": "TestGermanBusinessLogic",
          "signature": "(self, populated_database)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test file retention policies according to German data protection",
          "line_start": 435,
          "line_end": 472,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_job_query_performance_with_indexes",
          "full_name": "TestDatabasePerformance.test_job_query_performance_with_indexes",
          "class": "TestDatabasePerformance",
          "signature": "(self, db_connection)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test that indexes improve query performance",
          "line_start": 478,
          "line_end": 516,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_database_size_estimates",
          "full_name": "TestDatabasePerformance.test_database_size_estimates",
          "class": "TestDatabasePerformance",
          "signature": "(self, db_connection)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test database size remains reasonable with realistic data",
          "line_start": 518,
          "line_end": 558,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "pytest",
          "alias": null,
          "line": 5
        },
        {
          "type": "import",
          "module": "sqlite3",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "timedelta",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "decimal",
          "name": "Decimal",
          "alias": null,
          "line": 8
        },
        {
          "type": "import",
          "module": "time",
          "alias": null,
          "line": 498
        }
      ],
      "function_calls": [
        {
          "caller": "TestDatabaseSchema.test_database_creation",
          "callee": "connect",
          "line": 16,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_database_creation",
          "callee": "cursor",
          "line": 17,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_database_creation",
          "callee": "execute",
          "line": 20,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_database_creation",
          "callee": "fetchall",
          "line": 25,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_database_creation",
          "callee": "close",
          "line": 35,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_printer_table_constraints",
          "callee": "cursor",
          "line": 39,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_printer_table_constraints",
          "callee": "execute",
          "line": 42,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_printer_table_constraints",
          "callee": "commit",
          "line": 46,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_printer_table_constraints",
          "callee": "raises",
          "line": 49,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_printer_table_constraints",
          "callee": "execute",
          "line": 50,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_printer_table_constraints",
          "callee": "commit",
          "line": 54,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_printer_table_constraints",
          "callee": "raises",
          "line": 57,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_printer_table_constraints",
          "callee": "execute",
          "line": 58,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_printer_table_constraints",
          "callee": "commit",
          "line": 62,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_job_table_constraints",
          "callee": "cursor",
          "line": 66,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_job_table_constraints",
          "callee": "execute",
          "line": 69,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_job_table_constraints",
          "callee": "commit",
          "line": 73,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_job_table_constraints",
          "callee": "execute",
          "line": 76,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_job_table_constraints",
          "callee": "fetchone",
          "line": 79,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_job_table_constraints",
          "callee": "raises",
          "line": 83,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_job_table_constraints",
          "callee": "execute",
          "line": 84,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_job_table_constraints",
          "callee": "commit",
          "line": 88,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_job_table_constraints",
          "callee": "raises",
          "line": 91,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_job_table_constraints",
          "callee": "execute",
          "line": 92,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_job_table_constraints",
          "callee": "commit",
          "line": 96,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_job_table_constraints",
          "callee": "raises",
          "line": 99,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_job_table_constraints",
          "callee": "execute",
          "line": 100,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_job_table_constraints",
          "callee": "commit",
          "line": 104,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_file_table_generated_columns",
          "callee": "cursor",
          "line": 108,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_file_table_generated_columns",
          "callee": "enumerate",
          "line": 119,
          "type": "direct"
        },
        {
          "caller": "TestDatabaseSchema.test_file_table_generated_columns",
          "callee": "execute",
          "line": 120,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_file_table_generated_columns",
          "callee": "execute",
          "line": 126,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_file_table_generated_columns",
          "callee": "fetchone",
          "line": 130,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_file_table_generated_columns",
          "callee": "commit",
          "line": 133,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_database_indexes",
          "callee": "connect",
          "line": 137,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_database_indexes",
          "callee": "cursor",
          "line": 138,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_database_indexes",
          "callee": "execute",
          "line": 141,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_database_indexes",
          "callee": "fetchall",
          "line": 145,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_database_indexes",
          "callee": "close",
          "line": 161,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_database_triggers",
          "callee": "cursor",
          "line": 165,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_database_triggers",
          "callee": "now",
          "line": 168,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_database_triggers",
          "callee": "execute",
          "line": 170,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_database_triggers",
          "callee": "commit",
          "line": 174,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_database_triggers",
          "callee": "execute",
          "line": 176,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_database_triggers",
          "callee": "fetchone",
          "line": 179,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_database_triggers",
          "callee": "fromisoformat",
          "line": 180,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_job_status_change_trigger",
          "callee": "cursor",
          "line": 187,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_job_status_change_trigger",
          "callee": "execute",
          "line": 190,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_job_status_change_trigger",
          "callee": "fetchone",
          "line": 191,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_job_status_change_trigger",
          "callee": "execute",
          "line": 194,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_job_status_change_trigger",
          "callee": "commit",
          "line": 198,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_job_status_change_trigger",
          "callee": "execute",
          "line": 201,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_job_status_change_trigger",
          "callee": "fetchone",
          "line": 202,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_job_status_change_trigger",
          "callee": "execute",
          "line": 207,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_job_status_change_trigger",
          "callee": "fetchone",
          "line": 212,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_foreign_key_constraints",
          "callee": "cursor",
          "line": 219,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_foreign_key_constraints",
          "callee": "execute",
          "line": 222,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_foreign_key_constraints",
          "callee": "raises",
          "line": 225,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_foreign_key_constraints",
          "callee": "execute",
          "line": 226,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_foreign_key_constraints",
          "callee": "commit",
          "line": 227,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_foreign_key_constraints",
          "callee": "raises",
          "line": 230,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_foreign_key_constraints",
          "callee": "execute",
          "line": 231,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_foreign_key_constraints",
          "callee": "commit",
          "line": 235,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_database_views",
          "callee": "cursor",
          "line": 239,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_database_views",
          "callee": "execute",
          "line": 242,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_database_views",
          "callee": "fetchall",
          "line": 243,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_database_views",
          "callee": "len",
          "line": 245,
          "type": "direct"
        },
        {
          "caller": "TestDatabaseSchema.test_database_views",
          "callee": "execute",
          "line": 253,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_database_views",
          "callee": "fetchall",
          "line": 254,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_database_views",
          "callee": "len",
          "line": 256,
          "type": "direct"
        },
        {
          "caller": "TestDatabaseSchema.test_database_views",
          "callee": "execute",
          "line": 259,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_database_views",
          "callee": "fetchall",
          "line": 260,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseSchema.test_database_views",
          "callee": "len",
          "line": 263,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessLogic.test_european_timezone_handling",
          "callee": "cursor",
          "line": 271,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessLogic.test_european_timezone_handling",
          "callee": "execute",
          "line": 274,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessLogic.test_european_timezone_handling",
          "callee": "fetchone",
          "line": 275,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessLogic.test_european_timezone_handling",
          "callee": "berlin_timestamp",
          "line": 279,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessLogic.test_european_timezone_handling",
          "callee": "execute",
          "line": 281,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessLogic.test_european_timezone_handling",
          "callee": "isoformat",
          "line": 284,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessLogic.test_european_timezone_handling",
          "callee": "commit",
          "line": 285,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessLogic.test_european_timezone_handling",
          "callee": "execute",
          "line": 288,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessLogic.test_european_timezone_handling",
          "callee": "fetchone",
          "line": 291,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessLogic.test_euro_currency_calculations",
          "callee": "cursor",
          "line": 298,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessLogic.test_euro_currency_calculations",
          "callee": "execute",
          "line": 301,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessLogic.test_euro_currency_calculations",
          "callee": "float",
          "line": 302,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessLogic.test_euro_currency_calculations",
          "callee": "fetchone",
          "line": 302,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessLogic.test_euro_currency_calculations",
          "callee": "execute",
          "line": 310,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessLogic.test_euro_currency_calculations",
          "callee": "commit",
          "line": 314,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessLogic.test_euro_currency_calculations",
          "callee": "execute",
          "line": 317,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessLogic.test_euro_currency_calculations",
          "callee": "fetchone",
          "line": 320,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessLogic.test_euro_currency_calculations",
          "callee": "abs",
          "line": 323,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessLogic.test_euro_currency_calculations",
          "callee": "round",
          "line": 326,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessLogic.test_german_business_hours_config",
          "callee": "cursor",
          "line": 335,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessLogic.test_german_business_hours_config",
          "callee": "execute",
          "line": 345,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessLogic.test_german_business_hours_config",
          "callee": "fetchone",
          "line": 346,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessLogic.test_material_cost_per_gram_tracking",
          "callee": "cursor",
          "line": 352,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessLogic.test_material_cost_per_gram_tracking",
          "callee": "execute",
          "line": 355,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessLogic.test_material_cost_per_gram_tracking",
          "callee": "float",
          "line": 359,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessLogic.test_material_cost_per_gram_tracking",
          "callee": "fetchone",
          "line": 359,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessLogic.test_material_cost_per_gram_tracking",
          "callee": "round",
          "line": 370,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessLogic.test_material_cost_per_gram_tracking",
          "callee": "abs",
          "line": 371,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessLogic.test_power_cost_calculation_german_rates",
          "callee": "cursor",
          "line": 375,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessLogic.test_power_cost_calculation_german_rates",
          "callee": "execute",
          "line": 378,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessLogic.test_power_cost_calculation_german_rates",
          "callee": "float",
          "line": 381,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessLogic.test_power_cost_calculation_german_rates",
          "callee": "fetchone",
          "line": 381,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessLogic.test_power_cost_calculation_german_rates",
          "callee": "round",
          "line": 392,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessLogic.test_power_cost_calculation_german_rates",
          "callee": "abs",
          "line": 393,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessLogic.test_business_vs_private_job_tracking",
          "callee": "cursor",
          "line": 397,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessLogic.test_business_vs_private_job_tracking",
          "callee": "execute",
          "line": 400,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessLogic.test_business_vs_private_job_tracking",
          "callee": "execute",
          "line": 408,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessLogic.test_business_vs_private_job_tracking",
          "callee": "commit",
          "line": 415,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessLogic.test_business_vs_private_job_tracking",
          "callee": "execute",
          "line": 418,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessLogic.test_business_vs_private_job_tracking",
          "callee": "fetchone",
          "line": 422,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessLogic.test_business_vs_private_job_tracking",
          "callee": "execute",
          "line": 424,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessLogic.test_business_vs_private_job_tracking",
          "callee": "fetchone",
          "line": 428,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessLogic.test_german_file_retention_policies",
          "callee": "cursor",
          "line": 437,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessLogic.test_german_file_retention_policies",
          "callee": "execute",
          "line": 440,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessLogic.test_german_file_retention_policies",
          "callee": "int",
          "line": 443,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessLogic.test_german_file_retention_policies",
          "callee": "fetchone",
          "line": 443,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessLogic.test_german_file_retention_policies",
          "callee": "now",
          "line": 447,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessLogic.test_german_file_retention_policies",
          "callee": "timedelta",
          "line": 447,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessLogic.test_german_file_retention_policies",
          "callee": "now",
          "line": 448,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessLogic.test_german_file_retention_policies",
          "callee": "timedelta",
          "line": 448,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessLogic.test_german_file_retention_policies",
          "callee": "execute",
          "line": 451,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessLogic.test_german_file_retention_policies",
          "callee": "isoformat",
          "line": 454,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessLogic.test_german_file_retention_policies",
          "callee": "execute",
          "line": 457,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessLogic.test_german_file_retention_policies",
          "callee": "isoformat",
          "line": 460,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessLogic.test_german_file_retention_policies",
          "callee": "commit",
          "line": 462,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessLogic.test_german_file_retention_policies",
          "callee": "execute",
          "line": 465,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessLogic.test_german_file_retention_policies",
          "callee": "fetchone",
          "line": 470,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.test_job_query_performance_with_indexes",
          "callee": "cursor",
          "line": 480,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.test_job_query_performance_with_indexes",
          "callee": "range",
          "line": 483,
          "type": "direct"
        },
        {
          "caller": "TestDatabasePerformance.test_job_query_performance_with_indexes",
          "callee": "execute",
          "line": 484,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.test_job_query_performance_with_indexes",
          "callee": "isoformat",
          "line": 492,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.test_job_query_performance_with_indexes",
          "callee": "now",
          "line": 492,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.test_job_query_performance_with_indexes",
          "callee": "commit",
          "line": 495,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.test_job_query_performance_with_indexes",
          "callee": "time",
          "line": 501,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.test_job_query_performance_with_indexes",
          "callee": "execute",
          "line": 502,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.test_job_query_performance_with_indexes",
          "callee": "fetchone",
          "line": 503,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.test_job_query_performance_with_indexes",
          "callee": "time",
          "line": 504,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.test_job_query_performance_with_indexes",
          "callee": "time",
          "line": 510,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.test_job_query_performance_with_indexes",
          "callee": "execute",
          "line": 511,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.test_job_query_performance_with_indexes",
          "callee": "fetchone",
          "line": 512,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.test_job_query_performance_with_indexes",
          "callee": "time",
          "line": 513,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.test_database_size_estimates",
          "callee": "cursor",
          "line": 520,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.test_database_size_estimates",
          "callee": "execute",
          "line": 523,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.test_database_size_estimates",
          "callee": "fetchone",
          "line": 524,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.test_database_size_estimates",
          "callee": "range",
          "line": 528,
          "type": "direct"
        },
        {
          "caller": "TestDatabasePerformance.test_database_size_estimates",
          "callee": "execute",
          "line": 529,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.test_database_size_estimates",
          "callee": "round",
          "line": 535,
          "type": "direct"
        },
        {
          "caller": "TestDatabasePerformance.test_database_size_estimates",
          "callee": "round",
          "line": 536,
          "type": "direct"
        },
        {
          "caller": "TestDatabasePerformance.test_database_size_estimates",
          "callee": "round",
          "line": 537,
          "type": "direct"
        },
        {
          "caller": "TestDatabasePerformance.test_database_size_estimates",
          "callee": "range",
          "line": 540,
          "type": "direct"
        },
        {
          "caller": "TestDatabasePerformance.test_database_size_estimates",
          "callee": "execute",
          "line": 541,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.test_database_size_estimates",
          "callee": "commit",
          "line": 550,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.test_database_size_estimates",
          "callee": "execute",
          "line": 553,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.test_database_size_estimates",
          "callee": "fetchone",
          "line": 554,
          "type": "attribute"
        }
      ],
      "error": null
    },
    {
      "filepath": "tests\\backend\\test_end_to_end.py",
      "functions": [
        {
          "name": "test_complete_bambu_lab_setup",
          "full_name": "TestE2EPrinterSetupWorkflow.test_complete_bambu_lab_setup",
          "class": "TestE2EPrinterSetupWorkflow",
          "signature": "(self, api_client, temp_database, test_config, mock_bambu_api)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test complete Bambu Lab printer setup workflow",
          "line_start": 25,
          "line_end": 113,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_complete_prusa_setup",
          "full_name": "TestE2EPrinterSetupWorkflow.test_complete_prusa_setup",
          "class": "TestE2EPrinterSetupWorkflow",
          "signature": "(self, api_client, temp_database, test_config, mock_prusa_api)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test complete Prusa Core One printer setup workflow",
          "line_start": 116,
          "line_end": 165,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_complete_print_job_lifecycle",
          "full_name": "TestE2EJobManagementWorkflow.test_complete_print_job_lifecycle",
          "class": "TestE2EJobManagementWorkflow",
          "signature": "(self, api_client, populated_database, test_config, german_business_config, mock_bambu_api)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test complete print job from creation to completion with German business logic",
          "line_start": 172,
          "line_end": 287,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_job_failure_and_recovery",
          "full_name": "TestE2EJobManagementWorkflow.test_job_failure_and_recovery",
          "class": "TestE2EJobManagementWorkflow",
          "signature": "(self, api_client, populated_database, test_config)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test job failure scenarios and recovery workflow",
          "line_start": 290,
          "line_end": 347,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_complete_file_download_workflow",
          "full_name": "TestE2EFileManagementWorkflow.test_complete_file_download_workflow",
          "class": "TestE2EFileManagementWorkflow",
          "signature": "(self, api_client, populated_database, test_config, temp_download_directory)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test complete file discovery, download, and organization workflow",
          "line_start": 354,
          "line_end": 462,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_file_cleanup_workflow",
          "full_name": "TestE2EFileManagementWorkflow.test_file_cleanup_workflow",
          "class": "TestE2EFileManagementWorkflow",
          "signature": "(self, api_client, populated_database, test_config)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test file cleanup and management workflow",
          "line_start": 465,
          "line_end": 510,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_complete_dashboard_monitoring",
          "full_name": "TestE2EDashboardWorkflow.test_complete_dashboard_monitoring",
          "class": "TestE2EDashboardWorkflow",
          "signature": "(self, api_client, populated_database, test_config, german_business_config)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test complete dashboard monitoring with German business reporting",
          "line_start": 517,
          "line_end": 604,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_real_time_dashboard_updates",
          "full_name": "TestE2EDashboardWorkflow.test_real_time_dashboard_updates",
          "class": "TestE2EDashboardWorkflow",
          "signature": "(self, api_client, populated_database, test_config, mock_websocket)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test real-time dashboard updates via WebSocket",
          "line_start": 607,
          "line_end": 679,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "mock_websocket_handler",
          "full_name": "TestE2EDashboardWorkflow.mock_websocket_handler",
          "class": "TestE2EDashboardWorkflow",
          "signature": "()",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 620,
          "line_end": 665,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_complete_vat_compliance_workflow",
          "full_name": "TestE2EGermanBusinessCompliance.test_complete_vat_compliance_workflow",
          "class": "TestE2EGermanBusinessCompliance",
          "signature": "(self, api_client, temp_database, test_config, german_business_config)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test complete German VAT compliance workflow",
          "line_start": 686,
          "line_end": 821,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "pytest",
          "alias": null,
          "line": 10
        },
        {
          "type": "import",
          "module": "asyncio",
          "alias": null,
          "line": 11
        },
        {
          "type": "import",
          "module": "sqlite3",
          "alias": null,
          "line": 12
        },
        {
          "type": "import",
          "module": "tempfile",
          "alias": null,
          "line": 13
        },
        {
          "type": "import",
          "module": "json",
          "alias": null,
          "line": 14
        },
        {
          "type": "import",
          "module": "time",
          "alias": null,
          "line": 15
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 16
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "timezone",
          "alias": null,
          "line": 16
        },
        {
          "type": "from_import",
          "module": "unittest.mock",
          "name": "patch",
          "alias": null,
          "line": 17
        },
        {
          "type": "from_import",
          "module": "unittest.mock",
          "name": "Mock",
          "alias": null,
          "line": 17
        },
        {
          "type": "from_import",
          "module": "unittest.mock",
          "name": "MagicMock",
          "alias": null,
          "line": 17
        },
        {
          "type": "from_import",
          "module": "unittest.mock",
          "name": "AsyncMock",
          "alias": null,
          "line": 17
        },
        {
          "type": "from_import",
          "module": "contextlib",
          "name": "asynccontextmanager",
          "alias": null,
          "line": 18
        }
      ],
      "function_calls": [
        {
          "caller": "TestE2EPrinterSetupWorkflow.test_complete_bambu_lab_setup",
          "callee": "patch",
          "line": 27,
          "type": "direct"
        },
        {
          "caller": "TestE2EPrinterSetupWorkflow.test_complete_bambu_lab_setup",
          "callee": "connect",
          "line": 28,
          "type": "attribute"
        },
        {
          "caller": "TestE2EPrinterSetupWorkflow.test_complete_bambu_lab_setup",
          "callee": "patch",
          "line": 46,
          "type": "direct"
        },
        {
          "caller": "TestE2EPrinterSetupWorkflow.test_complete_bambu_lab_setup",
          "callee": "patch",
          "line": 48,
          "type": "direct"
        },
        {
          "caller": "TestE2EPrinterSetupWorkflow.test_complete_bambu_lab_setup",
          "callee": "post",
          "line": 51,
          "type": "attribute"
        },
        {
          "caller": "TestE2EPrinterSetupWorkflow.test_complete_bambu_lab_setup",
          "callee": "json",
          "line": 54,
          "type": "attribute"
        },
        {
          "caller": "TestE2EPrinterSetupWorkflow.test_complete_bambu_lab_setup",
          "callee": "cursor",
          "line": 58,
          "type": "attribute"
        },
        {
          "caller": "TestE2EPrinterSetupWorkflow.test_complete_bambu_lab_setup",
          "callee": "execute",
          "line": 59,
          "type": "attribute"
        },
        {
          "caller": "TestE2EPrinterSetupWorkflow.test_complete_bambu_lab_setup",
          "callee": "fetchone",
          "line": 60,
          "type": "attribute"
        },
        {
          "caller": "TestE2EPrinterSetupWorkflow.test_complete_bambu_lab_setup",
          "callee": "get",
          "line": 66,
          "type": "attribute"
        },
        {
          "caller": "TestE2EPrinterSetupWorkflow.test_complete_bambu_lab_setup",
          "callee": "json",
          "line": 69,
          "type": "attribute"
        },
        {
          "caller": "TestE2EPrinterSetupWorkflow.test_complete_bambu_lab_setup",
          "callee": "len",
          "line": 70,
          "type": "direct"
        },
        {
          "caller": "TestE2EPrinterSetupWorkflow.test_complete_bambu_lab_setup",
          "callee": "next",
          "line": 72,
          "type": "direct"
        },
        {
          "caller": "TestE2EPrinterSetupWorkflow.test_complete_bambu_lab_setup",
          "callee": "patch",
          "line": 77,
          "type": "direct"
        },
        {
          "caller": "TestE2EPrinterSetupWorkflow.test_complete_bambu_lab_setup",
          "callee": "get",
          "line": 92,
          "type": "attribute"
        },
        {
          "caller": "TestE2EPrinterSetupWorkflow.test_complete_bambu_lab_setup",
          "callee": "json",
          "line": 95,
          "type": "attribute"
        },
        {
          "caller": "TestE2EPrinterSetupWorkflow.test_complete_bambu_lab_setup",
          "callee": "put",
          "line": 106,
          "type": "attribute"
        },
        {
          "caller": "TestE2EPrinterSetupWorkflow.test_complete_bambu_lab_setup",
          "callee": "execute",
          "line": 110,
          "type": "attribute"
        },
        {
          "caller": "TestE2EPrinterSetupWorkflow.test_complete_bambu_lab_setup",
          "callee": "fetchone",
          "line": 111,
          "type": "attribute"
        },
        {
          "caller": "TestE2EPrinterSetupWorkflow.test_complete_prusa_setup",
          "callee": "patch",
          "line": 118,
          "type": "direct"
        },
        {
          "caller": "TestE2EPrinterSetupWorkflow.test_complete_prusa_setup",
          "callee": "connect",
          "line": 119,
          "type": "attribute"
        },
        {
          "caller": "TestE2EPrinterSetupWorkflow.test_complete_prusa_setup",
          "callee": "patch",
          "line": 136,
          "type": "direct"
        },
        {
          "caller": "TestE2EPrinterSetupWorkflow.test_complete_prusa_setup",
          "callee": "post",
          "line": 139,
          "type": "attribute"
        },
        {
          "caller": "TestE2EPrinterSetupWorkflow.test_complete_prusa_setup",
          "callee": "json",
          "line": 142,
          "type": "attribute"
        },
        {
          "caller": "TestE2EPrinterSetupWorkflow.test_complete_prusa_setup",
          "callee": "patch",
          "line": 145,
          "type": "direct"
        },
        {
          "caller": "TestE2EPrinterSetupWorkflow.test_complete_prusa_setup",
          "callee": "get",
          "line": 161,
          "type": "attribute"
        },
        {
          "caller": "TestE2EPrinterSetupWorkflow.test_complete_prusa_setup",
          "callee": "json",
          "line": 164,
          "type": "attribute"
        },
        {
          "caller": "TestE2EJobManagementWorkflow.test_complete_print_job_lifecycle",
          "callee": "patch",
          "line": 175,
          "type": "direct"
        },
        {
          "caller": "TestE2EJobManagementWorkflow.test_complete_print_job_lifecycle",
          "callee": "post",
          "line": 197,
          "type": "attribute"
        },
        {
          "caller": "TestE2EJobManagementWorkflow.test_complete_print_job_lifecycle",
          "callee": "json",
          "line": 200,
          "type": "attribute"
        },
        {
          "caller": "TestE2EJobManagementWorkflow.test_complete_print_job_lifecycle",
          "callee": "isoformat",
          "line": 212,
          "type": "attribute"
        },
        {
          "caller": "TestE2EJobManagementWorkflow.test_complete_print_job_lifecycle",
          "callee": "now",
          "line": 212,
          "type": "attribute"
        },
        {
          "caller": "TestE2EJobManagementWorkflow.test_complete_print_job_lifecycle",
          "callee": "put",
          "line": 215,
          "type": "attribute"
        },
        {
          "caller": "TestE2EJobManagementWorkflow.test_complete_print_job_lifecycle",
          "callee": "put",
          "line": 226,
          "type": "attribute"
        },
        {
          "caller": "TestE2EJobManagementWorkflow.test_complete_print_job_lifecycle",
          "callee": "cursor",
          "line": 230,
          "type": "attribute"
        },
        {
          "caller": "TestE2EJobManagementWorkflow.test_complete_print_job_lifecycle",
          "callee": "execute",
          "line": 231,
          "type": "attribute"
        },
        {
          "caller": "TestE2EJobManagementWorkflow.test_complete_print_job_lifecycle",
          "callee": "fetchone",
          "line": 232,
          "type": "attribute"
        },
        {
          "caller": "TestE2EJobManagementWorkflow.test_complete_print_job_lifecycle",
          "callee": "abs",
          "line": 233,
          "type": "direct"
        },
        {
          "caller": "TestE2EJobManagementWorkflow.test_complete_print_job_lifecycle",
          "callee": "isoformat",
          "line": 244,
          "type": "attribute"
        },
        {
          "caller": "TestE2EJobManagementWorkflow.test_complete_print_job_lifecycle",
          "callee": "now",
          "line": 244,
          "type": "attribute"
        },
        {
          "caller": "TestE2EJobManagementWorkflow.test_complete_print_job_lifecycle",
          "callee": "patch",
          "line": 247,
          "type": "direct"
        },
        {
          "caller": "TestE2EJobManagementWorkflow.test_complete_print_job_lifecycle",
          "callee": "put",
          "line": 259,
          "type": "attribute"
        },
        {
          "caller": "TestE2EJobManagementWorkflow.test_complete_print_job_lifecycle",
          "callee": "get",
          "line": 263,
          "type": "attribute"
        },
        {
          "caller": "TestE2EJobManagementWorkflow.test_complete_print_job_lifecycle",
          "callee": "json",
          "line": 266,
          "type": "attribute"
        },
        {
          "caller": "TestE2EJobManagementWorkflow.test_complete_print_job_lifecycle",
          "callee": "abs",
          "line": 279,
          "type": "direct"
        },
        {
          "caller": "TestE2EJobManagementWorkflow.test_complete_print_job_lifecycle",
          "callee": "get",
          "line": 282,
          "type": "attribute"
        },
        {
          "caller": "TestE2EJobManagementWorkflow.test_complete_print_job_lifecycle",
          "callee": "json",
          "line": 285,
          "type": "attribute"
        },
        {
          "caller": "TestE2EJobManagementWorkflow.test_complete_print_job_lifecycle",
          "callee": "next",
          "line": 286,
          "type": "direct"
        },
        {
          "caller": "TestE2EJobManagementWorkflow.test_job_failure_and_recovery",
          "callee": "patch",
          "line": 292,
          "type": "direct"
        },
        {
          "caller": "TestE2EJobManagementWorkflow.test_job_failure_and_recovery",
          "callee": "post",
          "line": 306,
          "type": "attribute"
        },
        {
          "caller": "TestE2EJobManagementWorkflow.test_job_failure_and_recovery",
          "callee": "json",
          "line": 307,
          "type": "attribute"
        },
        {
          "caller": "TestE2EJobManagementWorkflow.test_job_failure_and_recovery",
          "callee": "put",
          "line": 310,
          "type": "attribute"
        },
        {
          "caller": "TestE2EJobManagementWorkflow.test_job_failure_and_recovery",
          "callee": "isoformat",
          "line": 320,
          "type": "attribute"
        },
        {
          "caller": "TestE2EJobManagementWorkflow.test_job_failure_and_recovery",
          "callee": "now",
          "line": 320,
          "type": "attribute"
        },
        {
          "caller": "TestE2EJobManagementWorkflow.test_job_failure_and_recovery",
          "callee": "put",
          "line": 323,
          "type": "attribute"
        },
        {
          "caller": "TestE2EJobManagementWorkflow.test_job_failure_and_recovery",
          "callee": "get",
          "line": 327,
          "type": "attribute"
        },
        {
          "caller": "TestE2EJobManagementWorkflow.test_job_failure_and_recovery",
          "callee": "json",
          "line": 328,
          "type": "attribute"
        },
        {
          "caller": "TestE2EJobManagementWorkflow.test_job_failure_and_recovery",
          "callee": "put",
          "line": 340,
          "type": "attribute"
        },
        {
          "caller": "TestE2EJobManagementWorkflow.test_job_failure_and_recovery",
          "callee": "get",
          "line": 344,
          "type": "attribute"
        },
        {
          "caller": "TestE2EJobManagementWorkflow.test_job_failure_and_recovery",
          "callee": "json",
          "line": 345,
          "type": "attribute"
        },
        {
          "caller": "TestE2EFileManagementWorkflow.test_complete_file_download_workflow",
          "callee": "patch",
          "line": 357,
          "type": "direct"
        },
        {
          "caller": "TestE2EFileManagementWorkflow.test_complete_file_download_workflow",
          "callee": "patch",
          "line": 363,
          "type": "direct"
        },
        {
          "caller": "TestE2EFileManagementWorkflow.test_complete_file_download_workflow",
          "callee": "post",
          "line": 384,
          "type": "attribute"
        },
        {
          "caller": "TestE2EFileManagementWorkflow.test_complete_file_download_workflow",
          "callee": "json",
          "line": 387,
          "type": "attribute"
        },
        {
          "caller": "TestE2EFileManagementWorkflow.test_complete_file_download_workflow",
          "callee": "get",
          "line": 391,
          "type": "attribute"
        },
        {
          "caller": "TestE2EFileManagementWorkflow.test_complete_file_download_workflow",
          "callee": "json",
          "line": 394,
          "type": "attribute"
        },
        {
          "caller": "TestE2EFileManagementWorkflow.test_complete_file_download_workflow",
          "callee": "len",
          "line": 395,
          "type": "direct"
        },
        {
          "caller": "TestE2EFileManagementWorkflow.test_complete_file_download_workflow",
          "callee": "len",
          "line": 400,
          "type": "direct"
        },
        {
          "caller": "TestE2EFileManagementWorkflow.test_complete_file_download_workflow",
          "callee": "patch",
          "line": 405,
          "type": "direct"
        },
        {
          "caller": "TestE2EFileManagementWorkflow.test_complete_file_download_workflow",
          "callee": "post",
          "line": 414,
          "type": "attribute"
        },
        {
          "caller": "TestE2EFileManagementWorkflow.test_complete_file_download_workflow",
          "callee": "json",
          "line": 417,
          "type": "attribute"
        },
        {
          "caller": "TestE2EFileManagementWorkflow.test_complete_file_download_workflow",
          "callee": "get",
          "line": 422,
          "type": "attribute"
        },
        {
          "caller": "TestE2EFileManagementWorkflow.test_complete_file_download_workflow",
          "callee": "json",
          "line": 423,
          "type": "attribute"
        },
        {
          "caller": "TestE2EFileManagementWorkflow.test_complete_file_download_workflow",
          "callee": "next",
          "line": 425,
          "type": "direct"
        },
        {
          "caller": "TestE2EFileManagementWorkflow.test_complete_file_download_workflow",
          "callee": "patch",
          "line": 437,
          "type": "direct"
        },
        {
          "caller": "TestE2EFileManagementWorkflow.test_complete_file_download_workflow",
          "callee": "len",
          "line": 440,
          "type": "direct"
        },
        {
          "caller": "TestE2EFileManagementWorkflow.test_complete_file_download_workflow",
          "callee": "post",
          "line": 446,
          "type": "attribute"
        },
        {
          "caller": "TestE2EFileManagementWorkflow.test_complete_file_download_workflow",
          "callee": "json",
          "line": 449,
          "type": "attribute"
        },
        {
          "caller": "TestE2EFileManagementWorkflow.test_complete_file_download_workflow",
          "callee": "len",
          "line": 451,
          "type": "direct"
        },
        {
          "caller": "TestE2EFileManagementWorkflow.test_complete_file_download_workflow",
          "callee": "get",
          "line": 454,
          "type": "attribute"
        },
        {
          "caller": "TestE2EFileManagementWorkflow.test_complete_file_download_workflow",
          "callee": "json",
          "line": 455,
          "type": "attribute"
        },
        {
          "caller": "TestE2EFileManagementWorkflow.test_file_cleanup_workflow",
          "callee": "patch",
          "line": 467,
          "type": "direct"
        },
        {
          "caller": "TestE2EFileManagementWorkflow.test_file_cleanup_workflow",
          "callee": "get",
          "line": 480,
          "type": "attribute"
        },
        {
          "caller": "TestE2EFileManagementWorkflow.test_file_cleanup_workflow",
          "callee": "json",
          "line": 483,
          "type": "attribute"
        },
        {
          "caller": "TestE2EFileManagementWorkflow.test_file_cleanup_workflow",
          "callee": "patch",
          "line": 494,
          "type": "direct"
        },
        {
          "caller": "TestE2EFileManagementWorkflow.test_file_cleanup_workflow",
          "callee": "post",
          "line": 505,
          "type": "attribute"
        },
        {
          "caller": "TestE2EFileManagementWorkflow.test_file_cleanup_workflow",
          "callee": "json",
          "line": 508,
          "type": "attribute"
        },
        {
          "caller": "TestE2EDashboardWorkflow.test_complete_dashboard_monitoring",
          "callee": "patch",
          "line": 520,
          "type": "direct"
        },
        {
          "caller": "TestE2EDashboardWorkflow.test_complete_dashboard_monitoring",
          "callee": "get",
          "line": 526,
          "type": "attribute"
        },
        {
          "caller": "TestE2EDashboardWorkflow.test_complete_dashboard_monitoring",
          "callee": "json",
          "line": 529,
          "type": "attribute"
        },
        {
          "caller": "TestE2EDashboardWorkflow.test_complete_dashboard_monitoring",
          "callee": "patch",
          "line": 550,
          "type": "direct"
        },
        {
          "caller": "TestE2EDashboardWorkflow.test_complete_dashboard_monitoring",
          "callee": "post",
          "line": 576,
          "type": "attribute"
        },
        {
          "caller": "TestE2EDashboardWorkflow.test_complete_dashboard_monitoring",
          "callee": "json",
          "line": 579,
          "type": "attribute"
        },
        {
          "caller": "TestE2EDashboardWorkflow.test_complete_dashboard_monitoring",
          "callee": "round",
          "line": 584,
          "type": "direct"
        },
        {
          "caller": "TestE2EDashboardWorkflow.test_complete_dashboard_monitoring",
          "callee": "abs",
          "line": 585,
          "type": "direct"
        },
        {
          "caller": "TestE2EDashboardWorkflow.test_complete_dashboard_monitoring",
          "callee": "post",
          "line": 596,
          "type": "attribute"
        },
        {
          "caller": "TestE2EDashboardWorkflow.test_real_time_dashboard_updates",
          "callee": "patch",
          "line": 609,
          "type": "direct"
        },
        {
          "caller": "TestE2EDashboardWorkflow.mock_websocket_handler",
          "callee": "send",
          "line": 630,
          "type": "attribute"
        },
        {
          "caller": "TestE2EDashboardWorkflow.mock_websocket_handler",
          "callee": "dumps",
          "line": 630,
          "type": "attribute"
        },
        {
          "caller": "TestE2EDashboardWorkflow.mock_websocket_handler",
          "callee": "append",
          "line": 664,
          "type": "attribute"
        },
        {
          "caller": "TestE2EDashboardWorkflow.mock_websocket_handler",
          "callee": "sleep",
          "line": 665,
          "type": "attribute"
        },
        {
          "caller": "TestE2EDashboardWorkflow.test_real_time_dashboard_updates",
          "callee": "mock_websocket_handler",
          "line": 668,
          "type": "direct"
        },
        {
          "caller": "TestE2EDashboardWorkflow.test_real_time_dashboard_updates",
          "callee": "len",
          "line": 671,
          "type": "direct"
        },
        {
          "caller": "TestE2EGermanBusinessCompliance.test_complete_vat_compliance_workflow",
          "callee": "patch",
          "line": 689,
          "type": "direct"
        },
        {
          "caller": "TestE2EGermanBusinessCompliance.test_complete_vat_compliance_workflow",
          "callee": "connect",
          "line": 690,
          "type": "attribute"
        },
        {
          "caller": "TestE2EGermanBusinessCompliance.test_complete_vat_compliance_workflow",
          "callee": "cursor",
          "line": 695,
          "type": "attribute"
        },
        {
          "caller": "TestE2EGermanBusinessCompliance.test_complete_vat_compliance_workflow",
          "callee": "execute",
          "line": 696,
          "type": "attribute"
        },
        {
          "caller": "TestE2EGermanBusinessCompliance.test_complete_vat_compliance_workflow",
          "callee": "commit",
          "line": 703,
          "type": "attribute"
        },
        {
          "caller": "TestE2EGermanBusinessCompliance.test_complete_vat_compliance_workflow",
          "callee": "post",
          "line": 731,
          "type": "attribute"
        },
        {
          "caller": "TestE2EGermanBusinessCompliance.test_complete_vat_compliance_workflow",
          "callee": "append",
          "line": 733,
          "type": "attribute"
        },
        {
          "caller": "TestE2EGermanBusinessCompliance.test_complete_vat_compliance_workflow",
          "callee": "json",
          "line": 733,
          "type": "attribute"
        },
        {
          "caller": "TestE2EGermanBusinessCompliance.test_complete_vat_compliance_workflow",
          "callee": "enumerate",
          "line": 736,
          "type": "direct"
        },
        {
          "caller": "TestE2EGermanBusinessCompliance.test_complete_vat_compliance_workflow",
          "callee": "patch",
          "line": 744,
          "type": "direct"
        },
        {
          "caller": "TestE2EGermanBusinessCompliance.test_complete_vat_compliance_workflow",
          "callee": "round",
          "line": 746,
          "type": "direct"
        },
        {
          "caller": "TestE2EGermanBusinessCompliance.test_complete_vat_compliance_workflow",
          "callee": "put",
          "line": 756,
          "type": "attribute"
        },
        {
          "caller": "TestE2EGermanBusinessCompliance.test_complete_vat_compliance_workflow",
          "callee": "patch",
          "line": 767,
          "type": "direct"
        },
        {
          "caller": "TestE2EGermanBusinessCompliance.test_complete_vat_compliance_workflow",
          "callee": "post",
          "line": 790,
          "type": "attribute"
        },
        {
          "caller": "TestE2EGermanBusinessCompliance.test_complete_vat_compliance_workflow",
          "callee": "json",
          "line": 793,
          "type": "attribute"
        },
        {
          "caller": "TestE2EGermanBusinessCompliance.test_complete_vat_compliance_workflow",
          "callee": "len",
          "line": 796,
          "type": "direct"
        },
        {
          "caller": "TestE2EGermanBusinessCompliance.test_complete_vat_compliance_workflow",
          "callee": "sum",
          "line": 799,
          "type": "direct"
        },
        {
          "caller": "TestE2EGermanBusinessCompliance.test_complete_vat_compliance_workflow",
          "callee": "abs",
          "line": 800,
          "type": "direct"
        },
        {
          "caller": "TestE2EGermanBusinessCompliance.test_complete_vat_compliance_workflow",
          "callee": "post",
          "line": 813,
          "type": "attribute"
        }
      ],
      "error": null
    },
    {
      "filepath": "tests\\backend\\test_error_handling.py",
      "functions": [
        {
          "name": "test_printer_connection_timeout",
          "full_name": "TestNetworkErrorHandling.test_printer_connection_timeout",
          "class": "TestNetworkErrorHandling",
          "signature": "(self, api_client, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test handling of printer connection timeouts",
          "line_start": 31,
          "line_end": 52,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_network_interruption_during_operation",
          "full_name": "TestNetworkErrorHandling.test_network_interruption_during_operation",
          "class": "TestNetworkErrorHandling",
          "signature": "(self, api_client, populated_database, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test handling of network interruptions during ongoing operations",
          "line_start": 54,
          "line_end": 71,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_dns_resolution_failure",
          "full_name": "TestNetworkErrorHandling.test_dns_resolution_failure",
          "class": "TestNetworkErrorHandling",
          "signature": "(self, api_client, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test handling of DNS resolution failures",
          "line_start": 73,
          "line_end": 92,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_ssl_certificate_errors",
          "full_name": "TestNetworkErrorHandling.test_ssl_certificate_errors",
          "class": "TestNetworkErrorHandling",
          "signature": "(self, api_client, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test handling of SSL/TLS certificate errors",
          "line_start": 94,
          "line_end": 115,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_malformed_json_requests",
          "full_name": "TestDataValidationErrors.test_malformed_json_requests",
          "class": "TestDataValidationErrors",
          "signature": "(self, api_client, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test handling of malformed JSON in API requests",
          "line_start": 121,
          "line_end": 153,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_invalid_data_types",
          "full_name": "TestDataValidationErrors.test_invalid_data_types",
          "class": "TestDataValidationErrors",
          "signature": "(self, api_client, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test handling of invalid data types in requests",
          "line_start": 155,
          "line_end": 189,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_out_of_range_values",
          "full_name": "TestDataValidationErrors.test_out_of_range_values",
          "class": "TestDataValidationErrors",
          "signature": "(self, api_client, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test handling of out-of-range numeric values",
          "line_start": 191,
          "line_end": 219,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_string_length_validation",
          "full_name": "TestDataValidationErrors.test_string_length_validation",
          "class": "TestDataValidationErrors",
          "signature": "(self, api_client, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test handling of strings that are too long or too short",
          "line_start": 221,
          "line_end": 252,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_database_connection_failure",
          "full_name": "TestDatabaseErrorHandling.test_database_connection_failure",
          "class": "TestDatabaseErrorHandling",
          "signature": "(self, api_client, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test handling when database is unavailable",
          "line_start": 258,
          "line_end": 271,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_database_corruption",
          "full_name": "TestDatabaseErrorHandling.test_database_corruption",
          "class": "TestDatabaseErrorHandling",
          "signature": "(self, temp_database, api_client, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test handling of database corruption scenarios",
          "line_start": 273,
          "line_end": 287,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_constraint_violations",
          "full_name": "TestDatabaseErrorHandling.test_constraint_violations",
          "class": "TestDatabaseErrorHandling",
          "signature": "(self, api_client, populated_database, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test handling of database constraint violations",
          "line_start": 289,
          "line_end": 311,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_transaction_rollback_on_error",
          "full_name": "TestDatabaseErrorHandling.test_transaction_rollback_on_error",
          "class": "TestDatabaseErrorHandling",
          "signature": "(self, api_client, populated_database, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test that database transactions are properly rolled back on errors",
          "line_start": 313,
          "line_end": 341,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_insufficient_disk_space",
          "full_name": "TestFileSystemErrorHandling.test_insufficient_disk_space",
          "class": "TestFileSystemErrorHandling",
          "signature": "(self, api_client, test_config, temp_download_directory)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test handling when disk space is insufficient",
          "line_start": 347,
          "line_end": 365,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_permission_denied_errors",
          "full_name": "TestFileSystemErrorHandling.test_permission_denied_errors",
          "class": "TestFileSystemErrorHandling",
          "signature": "(self, api_client, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test handling of file permission errors",
          "line_start": 367,
          "line_end": 380,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_file_corruption_during_download",
          "full_name": "TestFileSystemErrorHandling.test_file_corruption_during_download",
          "class": "TestFileSystemErrorHandling",
          "signature": "(self, api_client, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test handling of file corruption during downloads",
          "line_start": 382,
          "line_end": 407,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_missing_file_errors",
          "full_name": "TestFileSystemErrorHandling.test_missing_file_errors",
          "class": "TestFileSystemErrorHandling",
          "signature": "(self, api_client, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test handling when requested files don't exist",
          "line_start": 409,
          "line_end": 429,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_concurrent_resource_access",
          "full_name": "TestConcurrencyErrorHandling.test_concurrent_resource_access",
          "class": "TestConcurrencyErrorHandling",
          "signature": "(self, api_client, populated_database, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test handling of concurrent access to the same resource",
          "line_start": 435,
          "line_end": 479,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "make_update",
          "full_name": "TestConcurrencyErrorHandling.make_update",
          "class": "TestConcurrencyErrorHandling",
          "signature": "(update_data, result_list)",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 458,
          "line_end": 463,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_race_condition_in_job_creation",
          "full_name": "TestConcurrencyErrorHandling.test_race_condition_in_job_creation",
          "class": "TestConcurrencyErrorHandling",
          "signature": "(self, api_client, populated_database, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test race conditions during job creation",
          "line_start": 481,
          "line_end": 526,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "create_job",
          "full_name": "TestConcurrencyErrorHandling.create_job",
          "class": "TestConcurrencyErrorHandling",
          "signature": "(result_list)",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 509,
          "line_end": 514,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_sql_injection_attempts",
          "full_name": "TestSecurityErrorHandling.test_sql_injection_attempts",
          "class": "TestSecurityErrorHandling",
          "signature": "(self, api_client, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test handling of SQL injection attempts",
          "line_start": 532,
          "line_end": 564,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_path_traversal_attempts",
          "full_name": "TestSecurityErrorHandling.test_path_traversal_attempts",
          "class": "TestSecurityErrorHandling",
          "signature": "(self, api_client, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test handling of path traversal attempts",
          "line_start": 566,
          "line_end": 598,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_xss_prevention",
          "full_name": "TestSecurityErrorHandling.test_xss_prevention",
          "class": "TestSecurityErrorHandling",
          "signature": "(self, api_client, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test prevention of XSS attacks in user inputs",
          "line_start": 600,
          "line_end": 637,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_memory_exhaustion_handling",
          "full_name": "TestResourceExhaustionHandling.test_memory_exhaustion_handling",
          "class": "TestResourceExhaustionHandling",
          "signature": "(self, api_client, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test handling when system runs out of memory",
          "line_start": 643,
          "line_end": 657,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_too_many_concurrent_requests",
          "full_name": "TestResourceExhaustionHandling.test_too_many_concurrent_requests",
          "class": "TestResourceExhaustionHandling",
          "signature": "(self, api_client, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test handling of too many concurrent requests",
          "line_start": 659,
          "line_end": 680,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_disk_space_exhaustion",
          "full_name": "TestResourceExhaustionHandling.test_disk_space_exhaustion",
          "class": "TestResourceExhaustionHandling",
          "signature": "(self, api_client, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test handling when disk space is exhausted",
          "line_start": 682,
          "line_end": 694,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_unicode_and_special_characters",
          "full_name": "TestEdgeCaseScenarios.test_unicode_and_special_characters",
          "class": "TestEdgeCaseScenarios",
          "signature": "(self, api_client, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test handling of Unicode and special characters",
          "line_start": 700,
          "line_end": 729,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_extreme_numeric_values",
          "full_name": "TestEdgeCaseScenarios.test_extreme_numeric_values",
          "class": "TestEdgeCaseScenarios",
          "signature": "(self, api_client, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test handling of extreme numeric values",
          "line_start": 731,
          "line_end": 757,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_very_long_operations",
          "full_name": "TestEdgeCaseScenarios.test_very_long_operations",
          "class": "TestEdgeCaseScenarios",
          "signature": "(self, api_client, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test handling of operations that take a very long time",
          "line_start": 759,
          "line_end": 780,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "slow_download",
          "full_name": "TestEdgeCaseScenarios.slow_download",
          "class": "TestEdgeCaseScenarios",
          "signature": "()",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 767,
          "line_end": 769,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_circular_references_in_data",
          "full_name": "TestEdgeCaseScenarios.test_circular_references_in_data",
          "class": "TestEdgeCaseScenarios",
          "signature": "(self, api_client, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test handling of circular references in data structures",
          "line_start": 782,
          "line_end": 801,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "__init__",
          "full_name": "CircularReference.__init__",
          "class": "CircularReference",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 788,
          "line_end": 789,
          "access_level": "dunder",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "pytest",
          "alias": null,
          "line": 14
        },
        {
          "type": "import",
          "module": "sqlite3",
          "alias": null,
          "line": 15
        },
        {
          "type": "import",
          "module": "json",
          "alias": null,
          "line": 16
        },
        {
          "type": "import",
          "module": "asyncio",
          "alias": null,
          "line": 17
        },
        {
          "type": "import",
          "module": "tempfile",
          "alias": null,
          "line": 18
        },
        {
          "type": "import",
          "module": "os",
          "alias": null,
          "line": 19
        },
        {
          "type": "import",
          "module": "shutil",
          "alias": null,
          "line": 20
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 21
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "timezone",
          "alias": null,
          "line": 21
        },
        {
          "type": "from_import",
          "module": "unittest.mock",
          "name": "patch",
          "alias": null,
          "line": 22
        },
        {
          "type": "from_import",
          "module": "unittest.mock",
          "name": "Mock",
          "alias": null,
          "line": 22
        },
        {
          "type": "from_import",
          "module": "unittest.mock",
          "name": "MagicMock",
          "alias": null,
          "line": 22
        },
        {
          "type": "from_import",
          "module": "unittest.mock",
          "name": "side_effect",
          "alias": null,
          "line": 22
        },
        {
          "type": "from_import",
          "module": "contextlib",
          "name": "contextmanager",
          "alias": null,
          "line": 23
        },
        {
          "type": "import",
          "module": "requests",
          "alias": null,
          "line": 24
        },
        {
          "type": "from_import",
          "module": "decimal",
          "name": "Decimal",
          "alias": null,
          "line": 25
        },
        {
          "type": "from_import",
          "module": "decimal",
          "name": "InvalidOperation",
          "alias": null,
          "line": 25
        },
        {
          "type": "import",
          "module": "threading",
          "alias": null,
          "line": 455
        },
        {
          "type": "import",
          "module": "threading",
          "alias": null,
          "line": 506
        },
        {
          "type": "import",
          "module": "time",
          "alias": null,
          "line": 765
        }
      ],
      "function_calls": [
        {
          "caller": "TestNetworkErrorHandling.test_printer_connection_timeout",
          "callee": "patch",
          "line": 43,
          "type": "direct"
        },
        {
          "caller": "TestNetworkErrorHandling.test_printer_connection_timeout",
          "callee": "ConnectTimeout",
          "line": 44,
          "type": "attribute"
        },
        {
          "caller": "TestNetworkErrorHandling.test_printer_connection_timeout",
          "callee": "post",
          "line": 46,
          "type": "attribute"
        },
        {
          "caller": "TestNetworkErrorHandling.test_printer_connection_timeout",
          "callee": "json",
          "line": 49,
          "type": "attribute"
        },
        {
          "caller": "TestNetworkErrorHandling.test_printer_connection_timeout",
          "callee": "lower",
          "line": 51,
          "type": "attribute"
        },
        {
          "caller": "TestNetworkErrorHandling.test_network_interruption_during_operation",
          "callee": "patch",
          "line": 56,
          "type": "direct"
        },
        {
          "caller": "TestNetworkErrorHandling.test_network_interruption_during_operation",
          "callee": "patch",
          "line": 62,
          "type": "direct"
        },
        {
          "caller": "TestNetworkErrorHandling.test_network_interruption_during_operation",
          "callee": "ConnectionError",
          "line": 63,
          "type": "attribute"
        },
        {
          "caller": "TestNetworkErrorHandling.test_network_interruption_during_operation",
          "callee": "get",
          "line": 65,
          "type": "attribute"
        },
        {
          "caller": "TestNetworkErrorHandling.test_network_interruption_during_operation",
          "callee": "json",
          "line": 68,
          "type": "attribute"
        },
        {
          "caller": "TestNetworkErrorHandling.test_dns_resolution_failure",
          "callee": "patch",
          "line": 82,
          "type": "direct"
        },
        {
          "caller": "TestNetworkErrorHandling.test_dns_resolution_failure",
          "callee": "ConnectionError",
          "line": 83,
          "type": "attribute"
        },
        {
          "caller": "TestNetworkErrorHandling.test_dns_resolution_failure",
          "callee": "post",
          "line": 87,
          "type": "attribute"
        },
        {
          "caller": "TestNetworkErrorHandling.test_dns_resolution_failure",
          "callee": "json",
          "line": 90,
          "type": "attribute"
        },
        {
          "caller": "TestNetworkErrorHandling.test_dns_resolution_failure",
          "callee": "lower",
          "line": 92,
          "type": "attribute"
        },
        {
          "caller": "TestNetworkErrorHandling.test_ssl_certificate_errors",
          "callee": "patch",
          "line": 104,
          "type": "direct"
        },
        {
          "caller": "TestNetworkErrorHandling.test_ssl_certificate_errors",
          "callee": "SSLError",
          "line": 105,
          "type": "attribute"
        },
        {
          "caller": "TestNetworkErrorHandling.test_ssl_certificate_errors",
          "callee": "post",
          "line": 109,
          "type": "attribute"
        },
        {
          "caller": "TestNetworkErrorHandling.test_ssl_certificate_errors",
          "callee": "json",
          "line": 112,
          "type": "attribute"
        },
        {
          "caller": "TestNetworkErrorHandling.test_ssl_certificate_errors",
          "callee": "lower",
          "line": 114,
          "type": "attribute"
        },
        {
          "caller": "TestDataValidationErrors.test_malformed_json_requests",
          "callee": "patch",
          "line": 138,
          "type": "direct"
        },
        {
          "caller": "TestDataValidationErrors.test_malformed_json_requests",
          "callee": "Mock",
          "line": 139,
          "type": "direct"
        },
        {
          "caller": "TestDataValidationErrors.test_malformed_json_requests",
          "callee": "mock_post",
          "line": 148,
          "type": "direct"
        },
        {
          "caller": "TestDataValidationErrors.test_malformed_json_requests",
          "callee": "json",
          "line": 152,
          "type": "attribute"
        },
        {
          "caller": "TestDataValidationErrors.test_invalid_data_types",
          "callee": "patch",
          "line": 171,
          "type": "direct"
        },
        {
          "caller": "TestDataValidationErrors.test_invalid_data_types",
          "callee": "next",
          "line": 176,
          "type": "direct"
        },
        {
          "caller": "TestDataValidationErrors.test_invalid_data_types",
          "callee": "iter",
          "line": 176,
          "type": "direct"
        },
        {
          "caller": "TestDataValidationErrors.test_invalid_data_types",
          "callee": "keys",
          "line": 176,
          "type": "attribute"
        },
        {
          "caller": "TestDataValidationErrors.test_invalid_data_types",
          "callee": "type",
          "line": 179,
          "type": "direct"
        },
        {
          "caller": "TestDataValidationErrors.test_invalid_data_types",
          "callee": "list",
          "line": 179,
          "type": "direct"
        },
        {
          "caller": "TestDataValidationErrors.test_invalid_data_types",
          "callee": "values",
          "line": 179,
          "type": "attribute"
        },
        {
          "caller": "TestDataValidationErrors.test_invalid_data_types",
          "callee": "post",
          "line": 184,
          "type": "attribute"
        },
        {
          "caller": "TestDataValidationErrors.test_invalid_data_types",
          "callee": "json",
          "line": 187,
          "type": "attribute"
        },
        {
          "caller": "TestDataValidationErrors.test_out_of_range_values",
          "callee": "patch",
          "line": 205,
          "type": "direct"
        },
        {
          "caller": "TestDataValidationErrors.test_out_of_range_values",
          "callee": "post",
          "line": 215,
          "type": "attribute"
        },
        {
          "caller": "TestDataValidationErrors.test_out_of_range_values",
          "callee": "json",
          "line": 218,
          "type": "attribute"
        },
        {
          "caller": "TestDataValidationErrors.test_out_of_range_values",
          "callee": "len",
          "line": 219,
          "type": "direct"
        },
        {
          "caller": "TestDataValidationErrors.test_string_length_validation",
          "callee": "patch",
          "line": 241,
          "type": "direct"
        },
        {
          "caller": "TestDataValidationErrors.test_string_length_validation",
          "callee": "list",
          "line": 245,
          "type": "direct"
        },
        {
          "caller": "TestDataValidationErrors.test_string_length_validation",
          "callee": "keys",
          "line": 245,
          "type": "attribute"
        },
        {
          "caller": "TestDataValidationErrors.test_string_length_validation",
          "callee": "post",
          "line": 251,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseErrorHandling.test_database_connection_failure",
          "callee": "patch",
          "line": 262,
          "type": "direct"
        },
        {
          "caller": "TestDatabaseErrorHandling.test_database_connection_failure",
          "callee": "OperationalError",
          "line": 263,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseErrorHandling.test_database_connection_failure",
          "callee": "get",
          "line": 265,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseErrorHandling.test_database_connection_failure",
          "callee": "json",
          "line": 268,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseErrorHandling.test_database_connection_failure",
          "callee": "lower",
          "line": 270,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseErrorHandling.test_database_corruption",
          "callee": "open",
          "line": 276,
          "type": "direct"
        },
        {
          "caller": "TestDatabaseErrorHandling.test_database_corruption",
          "callee": "write",
          "line": 277,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseErrorHandling.test_database_corruption",
          "callee": "patch",
          "line": 279,
          "type": "direct"
        },
        {
          "caller": "TestDatabaseErrorHandling.test_database_corruption",
          "callee": "DatabaseError",
          "line": 280,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseErrorHandling.test_database_corruption",
          "callee": "get",
          "line": 282,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseErrorHandling.test_database_corruption",
          "callee": "json",
          "line": 285,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseErrorHandling.test_database_corruption",
          "callee": "lower",
          "line": 287,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseErrorHandling.test_constraint_violations",
          "callee": "patch",
          "line": 291,
          "type": "direct"
        },
        {
          "caller": "TestDatabaseErrorHandling.test_constraint_violations",
          "callee": "patch",
          "line": 303,
          "type": "direct"
        },
        {
          "caller": "TestDatabaseErrorHandling.test_constraint_violations",
          "callee": "IntegrityError",
          "line": 304,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseErrorHandling.test_constraint_violations",
          "callee": "post",
          "line": 306,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseErrorHandling.test_constraint_violations",
          "callee": "json",
          "line": 309,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseErrorHandling.test_transaction_rollback_on_error",
          "callee": "patch",
          "line": 315,
          "type": "direct"
        },
        {
          "caller": "TestDatabaseErrorHandling.test_transaction_rollback_on_error",
          "callee": "patch",
          "line": 327,
          "type": "direct"
        },
        {
          "caller": "TestDatabaseErrorHandling.test_transaction_rollback_on_error",
          "callee": "patch",
          "line": 328,
          "type": "direct"
        },
        {
          "caller": "TestDatabaseErrorHandling.test_transaction_rollback_on_error",
          "callee": "Error",
          "line": 331,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseErrorHandling.test_transaction_rollback_on_error",
          "callee": "post",
          "line": 333,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseErrorHandling.test_transaction_rollback_on_error",
          "callee": "cursor",
          "line": 338,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseErrorHandling.test_transaction_rollback_on_error",
          "callee": "execute",
          "line": 339,
          "type": "attribute"
        },
        {
          "caller": "TestDatabaseErrorHandling.test_transaction_rollback_on_error",
          "callee": "fetchone",
          "line": 340,
          "type": "attribute"
        },
        {
          "caller": "TestFileSystemErrorHandling.test_insufficient_disk_space",
          "callee": "patch",
          "line": 352,
          "type": "direct"
        },
        {
          "caller": "TestFileSystemErrorHandling.test_insufficient_disk_space",
          "callee": "post",
          "line": 359,
          "type": "attribute"
        },
        {
          "caller": "TestFileSystemErrorHandling.test_insufficient_disk_space",
          "callee": "json",
          "line": 362,
          "type": "attribute"
        },
        {
          "caller": "TestFileSystemErrorHandling.test_permission_denied_errors",
          "callee": "patch",
          "line": 372,
          "type": "direct"
        },
        {
          "caller": "TestFileSystemErrorHandling.test_permission_denied_errors",
          "callee": "PermissionError",
          "line": 373,
          "type": "direct"
        },
        {
          "caller": "TestFileSystemErrorHandling.test_permission_denied_errors",
          "callee": "post",
          "line": 375,
          "type": "attribute"
        },
        {
          "caller": "TestFileSystemErrorHandling.test_permission_denied_errors",
          "callee": "json",
          "line": 378,
          "type": "attribute"
        },
        {
          "caller": "TestFileSystemErrorHandling.test_permission_denied_errors",
          "callee": "lower",
          "line": 380,
          "type": "attribute"
        },
        {
          "caller": "TestFileSystemErrorHandling.test_file_corruption_during_download",
          "callee": "patch",
          "line": 387,
          "type": "direct"
        },
        {
          "caller": "TestFileSystemErrorHandling.test_file_corruption_during_download",
          "callee": "patch",
          "line": 388,
          "type": "direct"
        },
        {
          "caller": "TestFileSystemErrorHandling.test_file_corruption_during_download",
          "callee": "post",
          "line": 402,
          "type": "attribute"
        },
        {
          "caller": "TestFileSystemErrorHandling.test_file_corruption_during_download",
          "callee": "json",
          "line": 405,
          "type": "attribute"
        },
        {
          "caller": "TestFileSystemErrorHandling.test_file_corruption_during_download",
          "callee": "lower",
          "line": 407,
          "type": "attribute"
        },
        {
          "caller": "TestFileSystemErrorHandling.test_missing_file_errors",
          "callee": "patch",
          "line": 414,
          "type": "direct"
        },
        {
          "caller": "TestFileSystemErrorHandling.test_missing_file_errors",
          "callee": "post",
          "line": 417,
          "type": "attribute"
        },
        {
          "caller": "TestFileSystemErrorHandling.test_missing_file_errors",
          "callee": "json",
          "line": 420,
          "type": "attribute"
        },
        {
          "caller": "TestFileSystemErrorHandling.test_missing_file_errors",
          "callee": "delete",
          "line": 425,
          "type": "attribute"
        },
        {
          "caller": "TestFileSystemErrorHandling.test_missing_file_errors",
          "callee": "json",
          "line": 428,
          "type": "attribute"
        },
        {
          "caller": "TestConcurrencyErrorHandling.test_concurrent_resource_access",
          "callee": "patch",
          "line": 437,
          "type": "direct"
        },
        {
          "caller": "TestConcurrencyErrorHandling.test_concurrent_resource_access",
          "callee": "patch",
          "line": 447,
          "type": "direct"
        },
        {
          "caller": "TestConcurrencyErrorHandling.test_concurrent_resource_access",
          "callee": "Error",
          "line": 451,
          "type": "attribute"
        },
        {
          "caller": "TestConcurrencyErrorHandling.make_update",
          "callee": "put",
          "line": 460,
          "type": "attribute"
        },
        {
          "caller": "TestConcurrencyErrorHandling.make_update",
          "callee": "append",
          "line": 461,
          "type": "attribute"
        },
        {
          "caller": "TestConcurrencyErrorHandling.make_update",
          "callee": "append",
          "line": 463,
          "type": "attribute"
        },
        {
          "caller": "TestConcurrencyErrorHandling.test_concurrent_resource_access",
          "callee": "Thread",
          "line": 466,
          "type": "attribute"
        },
        {
          "caller": "TestConcurrencyErrorHandling.test_concurrent_resource_access",
          "callee": "Thread",
          "line": 467,
          "type": "attribute"
        },
        {
          "caller": "TestConcurrencyErrorHandling.test_concurrent_resource_access",
          "callee": "start",
          "line": 471,
          "type": "attribute"
        },
        {
          "caller": "TestConcurrencyErrorHandling.test_concurrent_resource_access",
          "callee": "join",
          "line": 474,
          "type": "attribute"
        },
        {
          "caller": "TestConcurrencyErrorHandling.test_concurrent_resource_access",
          "callee": "hasattr",
          "line": 477,
          "type": "direct"
        },
        {
          "caller": "TestConcurrencyErrorHandling.test_race_condition_in_job_creation",
          "callee": "patch",
          "line": 483,
          "type": "direct"
        },
        {
          "caller": "TestConcurrencyErrorHandling.test_race_condition_in_job_creation",
          "callee": "patch",
          "line": 495,
          "type": "direct"
        },
        {
          "caller": "TestConcurrencyErrorHandling.test_race_condition_in_job_creation",
          "callee": "patch",
          "line": 499,
          "type": "direct"
        },
        {
          "caller": "TestConcurrencyErrorHandling.test_race_condition_in_job_creation",
          "callee": "IntegrityError",
          "line": 503,
          "type": "attribute"
        },
        {
          "caller": "TestConcurrencyErrorHandling.create_job",
          "callee": "post",
          "line": 511,
          "type": "attribute"
        },
        {
          "caller": "TestConcurrencyErrorHandling.create_job",
          "callee": "append",
          "line": 512,
          "type": "attribute"
        },
        {
          "caller": "TestConcurrencyErrorHandling.create_job",
          "callee": "append",
          "line": 514,
          "type": "attribute"
        },
        {
          "caller": "TestConcurrencyErrorHandling.test_race_condition_in_job_creation",
          "callee": "Thread",
          "line": 516,
          "type": "attribute"
        },
        {
          "caller": "TestConcurrencyErrorHandling.test_race_condition_in_job_creation",
          "callee": "range",
          "line": 516,
          "type": "direct"
        },
        {
          "caller": "TestConcurrencyErrorHandling.test_race_condition_in_job_creation",
          "callee": "start",
          "line": 519,
          "type": "attribute"
        },
        {
          "caller": "TestConcurrencyErrorHandling.test_race_condition_in_job_creation",
          "callee": "join",
          "line": 522,
          "type": "attribute"
        },
        {
          "caller": "TestConcurrencyErrorHandling.test_race_condition_in_job_creation",
          "callee": "sum",
          "line": 525,
          "type": "direct"
        },
        {
          "caller": "TestConcurrencyErrorHandling.test_race_condition_in_job_creation",
          "callee": "hasattr",
          "line": 525,
          "type": "direct"
        },
        {
          "caller": "TestSecurityErrorHandling.test_sql_injection_attempts",
          "callee": "patch",
          "line": 552,
          "type": "direct"
        },
        {
          "caller": "TestSecurityErrorHandling.test_sql_injection_attempts",
          "callee": "post",
          "line": 559,
          "type": "attribute"
        },
        {
          "caller": "TestSecurityErrorHandling.test_sql_injection_attempts",
          "callee": "json",
          "line": 562,
          "type": "attribute"
        },
        {
          "caller": "TestSecurityErrorHandling.test_path_traversal_attempts",
          "callee": "patch",
          "line": 586,
          "type": "direct"
        },
        {
          "caller": "TestSecurityErrorHandling.test_path_traversal_attempts",
          "callee": "post",
          "line": 593,
          "type": "attribute"
        },
        {
          "caller": "TestSecurityErrorHandling.test_path_traversal_attempts",
          "callee": "json",
          "line": 596,
          "type": "attribute"
        },
        {
          "caller": "TestSecurityErrorHandling.test_path_traversal_attempts",
          "callee": "lower",
          "line": 598,
          "type": "attribute"
        },
        {
          "caller": "TestSecurityErrorHandling.test_xss_prevention",
          "callee": "patch",
          "line": 620,
          "type": "direct"
        },
        {
          "caller": "TestSecurityErrorHandling.test_xss_prevention",
          "callee": "post",
          "line": 627,
          "type": "attribute"
        },
        {
          "caller": "TestSecurityErrorHandling.test_xss_prevention",
          "callee": "json",
          "line": 631,
          "type": "attribute"
        },
        {
          "caller": "TestSecurityErrorHandling.test_xss_prevention",
          "callee": "json",
          "line": 635,
          "type": "attribute"
        },
        {
          "caller": "TestResourceExhaustionHandling.test_memory_exhaustion_handling",
          "callee": "patch",
          "line": 648,
          "type": "direct"
        },
        {
          "caller": "TestResourceExhaustionHandling.test_memory_exhaustion_handling",
          "callee": "MemoryError",
          "line": 649,
          "type": "direct"
        },
        {
          "caller": "TestResourceExhaustionHandling.test_memory_exhaustion_handling",
          "callee": "post",
          "line": 651,
          "type": "attribute"
        },
        {
          "caller": "TestResourceExhaustionHandling.test_memory_exhaustion_handling",
          "callee": "json",
          "line": 654,
          "type": "attribute"
        },
        {
          "caller": "TestResourceExhaustionHandling.test_memory_exhaustion_handling",
          "callee": "lower",
          "line": 656,
          "type": "attribute"
        },
        {
          "caller": "TestResourceExhaustionHandling.test_too_many_concurrent_requests",
          "callee": "patch",
          "line": 664,
          "type": "direct"
        },
        {
          "caller": "TestResourceExhaustionHandling.test_too_many_concurrent_requests",
          "callee": "get",
          "line": 673,
          "type": "attribute"
        },
        {
          "caller": "TestResourceExhaustionHandling.test_too_many_concurrent_requests",
          "callee": "json",
          "line": 678,
          "type": "attribute"
        },
        {
          "caller": "TestResourceExhaustionHandling.test_disk_space_exhaustion",
          "callee": "patch",
          "line": 686,
          "type": "direct"
        },
        {
          "caller": "TestResourceExhaustionHandling.test_disk_space_exhaustion",
          "callee": "OSError",
          "line": 687,
          "type": "direct"
        },
        {
          "caller": "TestResourceExhaustionHandling.test_disk_space_exhaustion",
          "callee": "post",
          "line": 689,
          "type": "attribute"
        },
        {
          "caller": "TestResourceExhaustionHandling.test_disk_space_exhaustion",
          "callee": "json",
          "line": 692,
          "type": "attribute"
        },
        {
          "caller": "TestResourceExhaustionHandling.test_disk_space_exhaustion",
          "callee": "lower",
          "line": 694,
          "type": "attribute"
        },
        {
          "caller": "TestEdgeCaseScenarios.test_unicode_and_special_characters",
          "callee": "post",
          "line": 722,
          "type": "attribute"
        },
        {
          "caller": "TestEdgeCaseScenarios.test_unicode_and_special_characters",
          "callee": "json",
          "line": 727,
          "type": "attribute"
        },
        {
          "caller": "TestEdgeCaseScenarios.test_extreme_numeric_values",
          "callee": "float",
          "line": 736,
          "type": "direct"
        },
        {
          "caller": "TestEdgeCaseScenarios.test_extreme_numeric_values",
          "callee": "float",
          "line": 737,
          "type": "direct"
        },
        {
          "caller": "TestEdgeCaseScenarios.test_extreme_numeric_values",
          "callee": "float",
          "line": 738,
          "type": "direct"
        },
        {
          "caller": "TestEdgeCaseScenarios.test_extreme_numeric_values",
          "callee": "Decimal",
          "line": 741,
          "type": "direct"
        },
        {
          "caller": "TestEdgeCaseScenarios.test_extreme_numeric_values",
          "callee": "post",
          "line": 752,
          "type": "attribute"
        },
        {
          "caller": "TestEdgeCaseScenarios.test_extreme_numeric_values",
          "callee": "json",
          "line": 756,
          "type": "attribute"
        },
        {
          "caller": "TestEdgeCaseScenarios.test_very_long_operations",
          "callee": "patch",
          "line": 763,
          "type": "direct"
        },
        {
          "caller": "TestEdgeCaseScenarios.slow_download",
          "callee": "sleep",
          "line": 768,
          "type": "attribute"
        },
        {
          "caller": "TestEdgeCaseScenarios.test_very_long_operations",
          "callee": "patch",
          "line": 774,
          "type": "direct"
        },
        {
          "caller": "TestEdgeCaseScenarios.test_very_long_operations",
          "callee": "post",
          "line": 775,
          "type": "attribute"
        },
        {
          "caller": "TestEdgeCaseScenarios.test_very_long_operations",
          "callee": "json",
          "line": 778,
          "type": "attribute"
        },
        {
          "caller": "TestEdgeCaseScenarios.test_very_long_operations",
          "callee": "lower",
          "line": 780,
          "type": "attribute"
        },
        {
          "caller": "TestEdgeCaseScenarios.test_circular_references_in_data",
          "callee": "CircularReference",
          "line": 791,
          "type": "direct"
        },
        {
          "caller": "TestEdgeCaseScenarios.test_circular_references_in_data",
          "callee": "patch",
          "line": 794,
          "type": "direct"
        },
        {
          "caller": "TestEdgeCaseScenarios.test_circular_references_in_data",
          "callee": "ValueError",
          "line": 795,
          "type": "direct"
        },
        {
          "caller": "TestEdgeCaseScenarios.test_circular_references_in_data",
          "callee": "dumps",
          "line": 799,
          "type": "attribute"
        },
        {
          "caller": "TestEdgeCaseScenarios.test_circular_references_in_data",
          "callee": "lower",
          "line": 801,
          "type": "attribute"
        },
        {
          "caller": "TestEdgeCaseScenarios.test_circular_references_in_data",
          "callee": "str",
          "line": 801,
          "type": "direct"
        },
        {
          "caller": "TestEdgeCaseScenarios.test_circular_references_in_data",
          "callee": "lower",
          "line": 801,
          "type": "attribute"
        },
        {
          "caller": "TestEdgeCaseScenarios.test_circular_references_in_data",
          "callee": "str",
          "line": 801,
          "type": "direct"
        }
      ],
      "error": null
    },
    {
      "filepath": "tests\\backend\\test_german_business.py",
      "functions": [
        {
          "name": "test_eur_currency_formatting",
          "full_name": "TestGermanCurrencyHandling.test_eur_currency_formatting",
          "class": "TestGermanCurrencyHandling",
          "signature": "(self, german_business_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test EUR currency formatting according to German standards",
          "line_start": 23,
          "line_end": 44,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_currency_precision",
          "full_name": "TestGermanCurrencyHandling.test_currency_precision",
          "class": "TestGermanCurrencyHandling",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test currency precision handling for German EUR",
          "line_start": 46,
          "line_end": 64,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_currency_conversion_edge_cases",
          "full_name": "TestGermanCurrencyHandling.test_currency_conversion_edge_cases",
          "class": "TestGermanCurrencyHandling",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test edge cases in currency handling",
          "line_start": 66,
          "line_end": 84,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_standard_vat_rate_19_percent",
          "full_name": "TestGermanVATCalculations.test_standard_vat_rate_19_percent",
          "class": "TestGermanVATCalculations",
          "signature": "(self, german_business_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test standard German VAT rate of 19%",
          "line_start": 90,
          "line_end": 118,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_reverse_vat_calculation",
          "full_name": "TestGermanVATCalculations.test_reverse_vat_calculation",
          "class": "TestGermanVATCalculations",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test calculating net amount from gross amount including VAT",
          "line_start": 120,
          "line_end": 144,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_vat_exemption_cases",
          "full_name": "TestGermanVATCalculations.test_vat_exemption_cases",
          "class": "TestGermanVATCalculations",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test VAT exemption cases (e.g., exports, certain services)",
          "line_start": 146,
          "line_end": 163,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_complex_invoice_vat_calculation",
          "full_name": "TestGermanVATCalculations.test_complex_invoice_vat_calculation",
          "class": "TestGermanVATCalculations",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test VAT calculation for complex invoices with multiple line items",
          "line_start": 165,
          "line_end": 194,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_berlin_timezone_conversion",
          "full_name": "TestGermanTimezoneHandling.test_berlin_timezone_conversion",
          "class": "TestGermanTimezoneHandling",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test conversion to/from Berlin timezone",
          "line_start": 200,
          "line_end": 221,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_daylight_saving_time_transitions",
          "full_name": "TestGermanTimezoneHandling.test_daylight_saving_time_transitions",
          "class": "TestGermanTimezoneHandling",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test DST transitions in Germany",
          "line_start": 223,
          "line_end": 254,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_business_hours_calculation",
          "full_name": "TestGermanTimezoneHandling.test_business_hours_calculation",
          "class": "TestGermanTimezoneHandling",
          "signature": "(self, german_business_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test German business hours calculation",
          "line_start": 256,
          "line_end": 287,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_german_date_formatting",
          "full_name": "TestGermanDateTimeFormatting.test_german_date_formatting",
          "class": "TestGermanDateTimeFormatting",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test German date formatting (DD.MM.YYYY)",
          "line_start": 293,
          "line_end": 308,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_german_time_formatting",
          "full_name": "TestGermanDateTimeFormatting.test_german_time_formatting",
          "class": "TestGermanDateTimeFormatting",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test German time formatting (24-hour format)",
          "line_start": 310,
          "line_end": 325,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_german_datetime_formatting",
          "full_name": "TestGermanDateTimeFormatting.test_german_datetime_formatting",
          "class": "TestGermanDateTimeFormatting",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test combined German date-time formatting",
          "line_start": 327,
          "line_end": 342,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_hgb_compliance",
          "full_name": "TestGermanAccountingStandards.test_hgb_compliance",
          "class": "TestGermanAccountingStandards",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test compliance with German Commercial Code (HGB)",
          "line_start": 348,
          "line_end": 379,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_gob_electronic_records",
          "full_name": "TestGermanAccountingStandards.test_gob_electronic_records",
          "class": "TestGermanAccountingStandards",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test compliance with German Digital Records Act (GoBD)",
          "line_start": 381,
          "line_end": 410,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_invoice_numbering_sequence",
          "full_name": "TestGermanAccountingStandards.test_invoice_numbering_sequence",
          "class": "TestGermanAccountingStandards",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test German invoice numbering requirements (consecutive, no gaps)",
          "line_start": 412,
          "line_end": 437,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_ustva_vat_return_format",
          "full_name": "TestGermanTaxReporting.test_ustva_vat_return_format",
          "class": "TestGermanTaxReporting",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test German VAT return (USt-VA) format",
          "line_start": 443,
          "line_end": 479,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_annual_tax_declaration",
          "full_name": "TestGermanTaxReporting.test_annual_tax_declaration",
          "class": "TestGermanTaxReporting",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test annual German tax declaration preparation",
          "line_start": 481,
          "line_end": 510,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_elster_xml_export",
          "full_name": "TestGermanTaxReporting.test_elster_xml_export",
          "class": "TestGermanTaxReporting",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test ELSTER XML export format for electronic tax filing",
          "line_start": 512,
          "line_end": 558,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_b2b_invoice_workflow",
          "full_name": "TestGermanBusinessWorkflows.test_b2b_invoice_workflow",
          "class": "TestGermanBusinessWorkflows",
          "signature": "(self, german_business_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test complete B2B invoice workflow with German requirements",
          "line_start": 564,
          "line_end": 634,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_kleinunternehmer_exemption",
          "full_name": "TestGermanBusinessWorkflows.test_kleinunternehmer_exemption",
          "class": "TestGermanBusinessWorkflows",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test Kleinunternehmer (small business) VAT exemption",
          "line_start": 636,
          "line_end": 660,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "pytest",
          "alias": null,
          "line": 11
        },
        {
          "type": "import",
          "module": "pytz",
          "alias": null,
          "line": 12
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 13
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "timezone",
          "alias": null,
          "line": 13
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "timedelta",
          "alias": null,
          "line": 13
        },
        {
          "type": "from_import",
          "module": "decimal",
          "name": "Decimal",
          "alias": null,
          "line": 14
        },
        {
          "type": "from_import",
          "module": "decimal",
          "name": "ROUND_HALF_UP",
          "alias": null,
          "line": 14
        },
        {
          "type": "from_import",
          "module": "unittest.mock",
          "name": "patch",
          "alias": null,
          "line": 15
        },
        {
          "type": "from_import",
          "module": "unittest.mock",
          "name": "Mock",
          "alias": null,
          "line": 15
        },
        {
          "type": "import",
          "module": "locale",
          "alias": null,
          "line": 16
        },
        {
          "type": "import",
          "module": "calendar",
          "alias": null,
          "line": 17
        },
        {
          "type": "from_import",
          "module": "backend.services.business_service",
          "name": "format_currency",
          "alias": null,
          "line": 25
        },
        {
          "type": "from_import",
          "module": "backend.services.business_service",
          "name": "round_currency",
          "alias": null,
          "line": 48
        },
        {
          "type": "from_import",
          "module": "backend.services.business_service",
          "name": "handle_currency",
          "alias": null,
          "line": 68
        },
        {
          "type": "from_import",
          "module": "backend.services.business_service",
          "name": "calculate_vat",
          "alias": null,
          "line": 92
        },
        {
          "type": "from_import",
          "module": "backend.services.business_service",
          "name": "calculate_net_from_gross",
          "alias": null,
          "line": 122
        },
        {
          "type": "from_import",
          "module": "backend.services.business_service",
          "name": "calculate_vat_exempt",
          "alias": null,
          "line": 148
        },
        {
          "type": "from_import",
          "module": "backend.services.business_service",
          "name": "calculate_invoice_vat",
          "alias": null,
          "line": 167
        },
        {
          "type": "from_import",
          "module": "backend.services.business_service",
          "name": "to_berlin_timezone",
          "alias": null,
          "line": 202
        },
        {
          "type": "from_import",
          "module": "backend.services.business_service",
          "name": "from_berlin_timezone",
          "alias": null,
          "line": 202
        },
        {
          "type": "from_import",
          "module": "backend.services.business_service",
          "name": "handle_dst_transition",
          "alias": null,
          "line": 225
        },
        {
          "type": "from_import",
          "module": "backend.services.business_service",
          "name": "is_business_hours",
          "alias": null,
          "line": 258
        },
        {
          "type": "from_import",
          "module": "backend.services.business_service",
          "name": "calculate_business_duration",
          "alias": null,
          "line": 258
        },
        {
          "type": "from_import",
          "module": "backend.services.business_service",
          "name": "format_german_date",
          "alias": null,
          "line": 295
        },
        {
          "type": "from_import",
          "module": "backend.services.business_service",
          "name": "format_german_time",
          "alias": null,
          "line": 312
        },
        {
          "type": "from_import",
          "module": "backend.services.business_service",
          "name": "format_german_datetime",
          "alias": null,
          "line": 329
        },
        {
          "type": "from_import",
          "module": "backend.services.accounting_service",
          "name": "validate_hgb_compliance",
          "alias": null,
          "line": 350
        },
        {
          "type": "from_import",
          "module": "backend.services.accounting_service",
          "name": "ensure_gobd_compliance",
          "alias": null,
          "line": 383
        },
        {
          "type": "from_import",
          "module": "backend.services.accounting_service",
          "name": "generate_invoice_number",
          "alias": null,
          "line": 414
        },
        {
          "type": "from_import",
          "module": "backend.services.accounting_service",
          "name": "validate_sequence",
          "alias": null,
          "line": 414
        },
        {
          "type": "from_import",
          "module": "backend.services.tax_service",
          "name": "generate_ustva_report",
          "alias": null,
          "line": 445
        },
        {
          "type": "from_import",
          "module": "backend.services.tax_service",
          "name": "prepare_annual_declaration",
          "alias": null,
          "line": 483
        },
        {
          "type": "from_import",
          "module": "backend.services.tax_service",
          "name": "generate_elster_xml",
          "alias": null,
          "line": 514
        },
        {
          "type": "from_import",
          "module": "backend.services.invoice_service",
          "name": "create_b2b_invoice",
          "alias": null,
          "line": 566
        },
        {
          "type": "from_import",
          "module": "backend.services.business_service",
          "name": "apply_kleinunternehmer_exemption",
          "alias": null,
          "line": 638
        }
      ],
      "function_calls": [
        {
          "caller": "TestGermanCurrencyHandling.test_eur_currency_formatting",
          "callee": "patch",
          "line": 40,
          "type": "direct"
        },
        {
          "caller": "TestGermanCurrencyHandling.test_eur_currency_formatting",
          "callee": "mock_format",
          "line": 43,
          "type": "direct"
        },
        {
          "caller": "TestGermanCurrencyHandling.test_currency_precision",
          "callee": "patch",
          "line": 50,
          "type": "direct"
        },
        {
          "caller": "TestGermanCurrencyHandling.test_currency_precision",
          "callee": "Decimal",
          "line": 53,
          "type": "direct"
        },
        {
          "caller": "TestGermanCurrencyHandling.test_currency_precision",
          "callee": "Decimal",
          "line": 54,
          "type": "direct"
        },
        {
          "caller": "TestGermanCurrencyHandling.test_currency_precision",
          "callee": "Decimal",
          "line": 55,
          "type": "direct"
        },
        {
          "caller": "TestGermanCurrencyHandling.test_currency_precision",
          "callee": "Decimal",
          "line": 56,
          "type": "direct"
        },
        {
          "caller": "TestGermanCurrencyHandling.test_currency_precision",
          "callee": "Decimal",
          "line": 57,
          "type": "direct"
        },
        {
          "caller": "TestGermanCurrencyHandling.test_currency_precision",
          "callee": "Decimal",
          "line": 58,
          "type": "direct"
        },
        {
          "caller": "TestGermanCurrencyHandling.test_currency_precision",
          "callee": "mock_round",
          "line": 63,
          "type": "direct"
        },
        {
          "caller": "TestGermanCurrencyHandling.test_currency_precision",
          "callee": "Decimal",
          "line": 63,
          "type": "direct"
        },
        {
          "caller": "TestGermanCurrencyHandling.test_currency_precision",
          "callee": "str",
          "line": 63,
          "type": "direct"
        },
        {
          "caller": "TestGermanCurrencyHandling.test_currency_conversion_edge_cases",
          "callee": "patch",
          "line": 70,
          "type": "direct"
        },
        {
          "caller": "TestGermanCurrencyHandling.test_currency_conversion_edge_cases",
          "callee": "Decimal",
          "line": 72,
          "type": "direct"
        },
        {
          "caller": "TestGermanCurrencyHandling.test_currency_conversion_edge_cases",
          "callee": "mock_handle",
          "line": 73,
          "type": "direct"
        },
        {
          "caller": "TestGermanCurrencyHandling.test_currency_conversion_edge_cases",
          "callee": "Decimal",
          "line": 73,
          "type": "direct"
        },
        {
          "caller": "TestGermanCurrencyHandling.test_currency_conversion_edge_cases",
          "callee": "Decimal",
          "line": 74,
          "type": "direct"
        },
        {
          "caller": "TestGermanCurrencyHandling.test_currency_conversion_edge_cases",
          "callee": "Decimal",
          "line": 77,
          "type": "direct"
        },
        {
          "caller": "TestGermanCurrencyHandling.test_currency_conversion_edge_cases",
          "callee": "mock_handle",
          "line": 78,
          "type": "direct"
        },
        {
          "caller": "TestGermanCurrencyHandling.test_currency_conversion_edge_cases",
          "callee": "Decimal",
          "line": 78,
          "type": "direct"
        },
        {
          "caller": "TestGermanCurrencyHandling.test_currency_conversion_edge_cases",
          "callee": "Decimal",
          "line": 79,
          "type": "direct"
        },
        {
          "caller": "TestGermanCurrencyHandling.test_currency_conversion_edge_cases",
          "callee": "Decimal",
          "line": 82,
          "type": "direct"
        },
        {
          "caller": "TestGermanCurrencyHandling.test_currency_conversion_edge_cases",
          "callee": "mock_handle",
          "line": 83,
          "type": "direct"
        },
        {
          "caller": "TestGermanCurrencyHandling.test_currency_conversion_edge_cases",
          "callee": "Decimal",
          "line": 83,
          "type": "direct"
        },
        {
          "caller": "TestGermanCurrencyHandling.test_currency_conversion_edge_cases",
          "callee": "Decimal",
          "line": 84,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_standard_vat_rate_19_percent",
          "callee": "patch",
          "line": 94,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_standard_vat_rate_19_percent",
          "callee": "Decimal",
          "line": 97,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_standard_vat_rate_19_percent",
          "callee": "Decimal",
          "line": 97,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_standard_vat_rate_19_percent",
          "callee": "Decimal",
          "line": 97,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_standard_vat_rate_19_percent",
          "callee": "Decimal",
          "line": 98,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_standard_vat_rate_19_percent",
          "callee": "Decimal",
          "line": 98,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_standard_vat_rate_19_percent",
          "callee": "Decimal",
          "line": 98,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_standard_vat_rate_19_percent",
          "callee": "Decimal",
          "line": 99,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_standard_vat_rate_19_percent",
          "callee": "Decimal",
          "line": 99,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_standard_vat_rate_19_percent",
          "callee": "Decimal",
          "line": 99,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_standard_vat_rate_19_percent",
          "callee": "Decimal",
          "line": 100,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_standard_vat_rate_19_percent",
          "callee": "Decimal",
          "line": 100,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_standard_vat_rate_19_percent",
          "callee": "Decimal",
          "line": 100,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_standard_vat_rate_19_percent",
          "callee": "Decimal",
          "line": 101,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_standard_vat_rate_19_percent",
          "callee": "Decimal",
          "line": 101,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_standard_vat_rate_19_percent",
          "callee": "Decimal",
          "line": 101,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_standard_vat_rate_19_percent",
          "callee": "Decimal",
          "line": 102,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_standard_vat_rate_19_percent",
          "callee": "Decimal",
          "line": 102,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_standard_vat_rate_19_percent",
          "callee": "Decimal",
          "line": 102,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_standard_vat_rate_19_percent",
          "callee": "Decimal",
          "line": 108,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_standard_vat_rate_19_percent",
          "callee": "mock_vat",
          "line": 113,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_standard_vat_rate_19_percent",
          "callee": "Decimal",
          "line": 113,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_standard_vat_rate_19_percent",
          "callee": "Decimal",
          "line": 118,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_reverse_vat_calculation",
          "callee": "patch",
          "line": 124,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_reverse_vat_calculation",
          "callee": "Decimal",
          "line": 127,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_reverse_vat_calculation",
          "callee": "Decimal",
          "line": 127,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_reverse_vat_calculation",
          "callee": "Decimal",
          "line": 127,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_reverse_vat_calculation",
          "callee": "Decimal",
          "line": 128,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_reverse_vat_calculation",
          "callee": "Decimal",
          "line": 128,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_reverse_vat_calculation",
          "callee": "Decimal",
          "line": 128,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_reverse_vat_calculation",
          "callee": "Decimal",
          "line": 129,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_reverse_vat_calculation",
          "callee": "Decimal",
          "line": 129,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_reverse_vat_calculation",
          "callee": "Decimal",
          "line": 129,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_reverse_vat_calculation",
          "callee": "Decimal",
          "line": 130,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_reverse_vat_calculation",
          "callee": "Decimal",
          "line": 130,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_reverse_vat_calculation",
          "callee": "Decimal",
          "line": 130,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_reverse_vat_calculation",
          "callee": "Decimal",
          "line": 138,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_reverse_vat_calculation",
          "callee": "mock_reverse",
          "line": 141,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_reverse_vat_calculation",
          "callee": "Decimal",
          "line": 141,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_vat_exemption_cases",
          "callee": "patch",
          "line": 150,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_vat_exemption_cases",
          "callee": "Decimal",
          "line": 152,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_vat_exemption_cases",
          "callee": "Decimal",
          "line": 153,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_vat_exemption_cases",
          "callee": "Decimal",
          "line": 154,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_vat_exemption_cases",
          "callee": "Decimal",
          "line": 155,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_vat_exemption_cases",
          "callee": "mock_exempt",
          "line": 159,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_vat_exemption_cases",
          "callee": "Decimal",
          "line": 159,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_vat_exemption_cases",
          "callee": "Decimal",
          "line": 161,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_complex_invoice_vat_calculation",
          "callee": "Decimal",
          "line": 170,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_complex_invoice_vat_calculation",
          "callee": "Decimal",
          "line": 171,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_complex_invoice_vat_calculation",
          "callee": "Decimal",
          "line": 172,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_complex_invoice_vat_calculation",
          "callee": "Decimal",
          "line": 173,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_complex_invoice_vat_calculation",
          "callee": "patch",
          "line": 176,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_complex_invoice_vat_calculation",
          "callee": "Decimal",
          "line": 179,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_complex_invoice_vat_calculation",
          "callee": "Decimal",
          "line": 180,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_complex_invoice_vat_calculation",
          "callee": "Decimal",
          "line": 181,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_complex_invoice_vat_calculation",
          "callee": "Decimal",
          "line": 184,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_complex_invoice_vat_calculation",
          "callee": "Decimal",
          "line": 185,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_complex_invoice_vat_calculation",
          "callee": "mock_invoice",
          "line": 190,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_complex_invoice_vat_calculation",
          "callee": "Decimal",
          "line": 190,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_complex_invoice_vat_calculation",
          "callee": "Decimal",
          "line": 192,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_complex_invoice_vat_calculation",
          "callee": "Decimal",
          "line": 193,
          "type": "direct"
        },
        {
          "caller": "TestGermanVATCalculations.test_complex_invoice_vat_calculation",
          "callee": "Decimal",
          "line": 194,
          "type": "direct"
        },
        {
          "caller": "TestGermanTimezoneHandling.test_berlin_timezone_conversion",
          "callee": "patch",
          "line": 204,
          "type": "direct"
        },
        {
          "caller": "TestGermanTimezoneHandling.test_berlin_timezone_conversion",
          "callee": "patch",
          "line": 205,
          "type": "direct"
        },
        {
          "caller": "TestGermanTimezoneHandling.test_berlin_timezone_conversion",
          "callee": "datetime",
          "line": 207,
          "type": "direct"
        },
        {
          "caller": "TestGermanTimezoneHandling.test_berlin_timezone_conversion",
          "callee": "datetime",
          "line": 208,
          "type": "direct"
        },
        {
          "caller": "TestGermanTimezoneHandling.test_berlin_timezone_conversion",
          "callee": "timezone",
          "line": 208,
          "type": "attribute"
        },
        {
          "caller": "TestGermanTimezoneHandling.test_berlin_timezone_conversion",
          "callee": "mock_to_berlin",
          "line": 211,
          "type": "direct"
        },
        {
          "caller": "TestGermanTimezoneHandling.test_berlin_timezone_conversion",
          "callee": "mock_from_berlin",
          "line": 218,
          "type": "direct"
        },
        {
          "caller": "TestGermanTimezoneHandling.test_daylight_saving_time_transitions",
          "callee": "patch",
          "line": 227,
          "type": "direct"
        },
        {
          "caller": "TestGermanTimezoneHandling.test_daylight_saving_time_transitions",
          "callee": "datetime",
          "line": 229,
          "type": "direct"
        },
        {
          "caller": "TestGermanTimezoneHandling.test_daylight_saving_time_transitions",
          "callee": "datetime",
          "line": 232,
          "type": "direct"
        },
        {
          "caller": "TestGermanTimezoneHandling.test_daylight_saving_time_transitions",
          "callee": "datetime",
          "line": 233,
          "type": "direct"
        },
        {
          "caller": "TestGermanTimezoneHandling.test_daylight_saving_time_transitions",
          "callee": "mock_dst",
          "line": 238,
          "type": "direct"
        },
        {
          "caller": "TestGermanTimezoneHandling.test_daylight_saving_time_transitions",
          "callee": "datetime",
          "line": 243,
          "type": "direct"
        },
        {
          "caller": "TestGermanTimezoneHandling.test_daylight_saving_time_transitions",
          "callee": "datetime",
          "line": 246,
          "type": "direct"
        },
        {
          "caller": "TestGermanTimezoneHandling.test_daylight_saving_time_transitions",
          "callee": "datetime",
          "line": 247,
          "type": "direct"
        },
        {
          "caller": "TestGermanTimezoneHandling.test_daylight_saving_time_transitions",
          "callee": "mock_dst",
          "line": 252,
          "type": "direct"
        },
        {
          "caller": "TestGermanTimezoneHandling.test_business_hours_calculation",
          "callee": "timezone",
          "line": 260,
          "type": "attribute"
        },
        {
          "caller": "TestGermanTimezoneHandling.test_business_hours_calculation",
          "callee": "patch",
          "line": 262,
          "type": "direct"
        },
        {
          "caller": "TestGermanTimezoneHandling.test_business_hours_calculation",
          "callee": "patch",
          "line": 263,
          "type": "direct"
        },
        {
          "caller": "TestGermanTimezoneHandling.test_business_hours_calculation",
          "callee": "localize",
          "line": 265,
          "type": "attribute"
        },
        {
          "caller": "TestGermanTimezoneHandling.test_business_hours_calculation",
          "callee": "datetime",
          "line": 265,
          "type": "direct"
        },
        {
          "caller": "TestGermanTimezoneHandling.test_business_hours_calculation",
          "callee": "mock_hours",
          "line": 267,
          "type": "direct"
        },
        {
          "caller": "TestGermanTimezoneHandling.test_business_hours_calculation",
          "callee": "localize",
          "line": 270,
          "type": "attribute"
        },
        {
          "caller": "TestGermanTimezoneHandling.test_business_hours_calculation",
          "callee": "datetime",
          "line": 270,
          "type": "direct"
        },
        {
          "caller": "TestGermanTimezoneHandling.test_business_hours_calculation",
          "callee": "mock_hours",
          "line": 272,
          "type": "direct"
        },
        {
          "caller": "TestGermanTimezoneHandling.test_business_hours_calculation",
          "callee": "localize",
          "line": 275,
          "type": "attribute"
        },
        {
          "caller": "TestGermanTimezoneHandling.test_business_hours_calculation",
          "callee": "datetime",
          "line": 275,
          "type": "direct"
        },
        {
          "caller": "TestGermanTimezoneHandling.test_business_hours_calculation",
          "callee": "localize",
          "line": 276,
          "type": "attribute"
        },
        {
          "caller": "TestGermanTimezoneHandling.test_business_hours_calculation",
          "callee": "datetime",
          "line": 276,
          "type": "direct"
        },
        {
          "caller": "TestGermanTimezoneHandling.test_business_hours_calculation",
          "callee": "mock_duration",
          "line": 285,
          "type": "direct"
        },
        {
          "caller": "TestGermanDateTimeFormatting.test_german_date_formatting",
          "callee": "patch",
          "line": 297,
          "type": "direct"
        },
        {
          "caller": "TestGermanDateTimeFormatting.test_german_date_formatting",
          "callee": "datetime",
          "line": 299,
          "type": "direct"
        },
        {
          "caller": "TestGermanDateTimeFormatting.test_german_date_formatting",
          "callee": "datetime",
          "line": 300,
          "type": "direct"
        },
        {
          "caller": "TestGermanDateTimeFormatting.test_german_date_formatting",
          "callee": "datetime",
          "line": 301,
          "type": "direct"
        },
        {
          "caller": "TestGermanDateTimeFormatting.test_german_date_formatting",
          "callee": "datetime",
          "line": 302,
          "type": "direct"
        },
        {
          "caller": "TestGermanDateTimeFormatting.test_german_date_formatting",
          "callee": "mock_format",
          "line": 307,
          "type": "direct"
        },
        {
          "caller": "TestGermanDateTimeFormatting.test_german_time_formatting",
          "callee": "patch",
          "line": 314,
          "type": "direct"
        },
        {
          "caller": "TestGermanDateTimeFormatting.test_german_time_formatting",
          "callee": "datetime",
          "line": 316,
          "type": "direct"
        },
        {
          "caller": "TestGermanDateTimeFormatting.test_german_time_formatting",
          "callee": "datetime",
          "line": 317,
          "type": "direct"
        },
        {
          "caller": "TestGermanDateTimeFormatting.test_german_time_formatting",
          "callee": "datetime",
          "line": 318,
          "type": "direct"
        },
        {
          "caller": "TestGermanDateTimeFormatting.test_german_time_formatting",
          "callee": "datetime",
          "line": 319,
          "type": "direct"
        },
        {
          "caller": "TestGermanDateTimeFormatting.test_german_time_formatting",
          "callee": "mock_format",
          "line": 324,
          "type": "direct"
        },
        {
          "caller": "TestGermanDateTimeFormatting.test_german_datetime_formatting",
          "callee": "patch",
          "line": 331,
          "type": "direct"
        },
        {
          "caller": "TestGermanDateTimeFormatting.test_german_datetime_formatting",
          "callee": "datetime",
          "line": 332,
          "type": "direct"
        },
        {
          "caller": "TestGermanDateTimeFormatting.test_german_datetime_formatting",
          "callee": "items",
          "line": 339,
          "type": "attribute"
        },
        {
          "caller": "TestGermanDateTimeFormatting.test_german_datetime_formatting",
          "callee": "mock_format",
          "line": 341,
          "type": "direct"
        },
        {
          "caller": "TestGermanAccountingStandards.test_hgb_compliance",
          "callee": "patch",
          "line": 352,
          "type": "direct"
        },
        {
          "caller": "TestGermanAccountingStandards.test_hgb_compliance",
          "callee": "datetime",
          "line": 355,
          "type": "direct"
        },
        {
          "caller": "TestGermanAccountingStandards.test_hgb_compliance",
          "callee": "mock_validate",
          "line": 377,
          "type": "direct"
        },
        {
          "caller": "TestGermanAccountingStandards.test_hgb_compliance",
          "callee": "len",
          "line": 379,
          "type": "direct"
        },
        {
          "caller": "TestGermanAccountingStandards.test_gob_electronic_records",
          "callee": "patch",
          "line": 385,
          "type": "direct"
        },
        {
          "caller": "TestGermanAccountingStandards.test_gob_electronic_records",
          "callee": "datetime",
          "line": 388,
          "type": "direct"
        },
        {
          "caller": "TestGermanAccountingStandards.test_gob_electronic_records",
          "callee": "timezone",
          "line": 388,
          "type": "attribute"
        },
        {
          "caller": "TestGermanAccountingStandards.test_gob_electronic_records",
          "callee": "Decimal",
          "line": 390,
          "type": "direct"
        },
        {
          "caller": "TestGermanAccountingStandards.test_gob_electronic_records",
          "callee": "datetime",
          "line": 399,
          "type": "direct"
        },
        {
          "caller": "TestGermanAccountingStandards.test_gob_electronic_records",
          "callee": "datetime",
          "line": 402,
          "type": "direct"
        },
        {
          "caller": "TestGermanAccountingStandards.test_gob_electronic_records",
          "callee": "mock_gobd",
          "line": 408,
          "type": "direct"
        },
        {
          "caller": "TestGermanAccountingStandards.test_invoice_numbering_sequence",
          "callee": "patch",
          "line": 416,
          "type": "direct"
        },
        {
          "caller": "TestGermanAccountingStandards.test_invoice_numbering_sequence",
          "callee": "patch",
          "line": 417,
          "type": "direct"
        },
        {
          "caller": "TestGermanAccountingStandards.test_invoice_numbering_sequence",
          "callee": "enumerate",
          "line": 421,
          "type": "direct"
        },
        {
          "caller": "TestGermanAccountingStandards.test_invoice_numbering_sequence",
          "callee": "mock_generate",
          "line": 423,
          "type": "direct"
        },
        {
          "caller": "TestGermanAccountingStandards.test_invoice_numbering_sequence",
          "callee": "mock_validate",
          "line": 435,
          "type": "direct"
        },
        {
          "caller": "TestGermanAccountingStandards.test_invoice_numbering_sequence",
          "callee": "len",
          "line": 437,
          "type": "direct"
        },
        {
          "caller": "TestGermanTaxReporting.test_ustva_vat_return_format",
          "callee": "patch",
          "line": 447,
          "type": "direct"
        },
        {
          "caller": "TestGermanTaxReporting.test_ustva_vat_return_format",
          "callee": "Decimal",
          "line": 462,
          "type": "direct"
        },
        {
          "caller": "TestGermanTaxReporting.test_ustva_vat_return_format",
          "callee": "Decimal",
          "line": 463,
          "type": "direct"
        },
        {
          "caller": "TestGermanTaxReporting.test_ustva_vat_return_format",
          "callee": "Decimal",
          "line": 464,
          "type": "direct"
        },
        {
          "caller": "TestGermanTaxReporting.test_ustva_vat_return_format",
          "callee": "Decimal",
          "line": 465,
          "type": "direct"
        },
        {
          "caller": "TestGermanTaxReporting.test_ustva_vat_return_format",
          "callee": "Decimal",
          "line": 466,
          "type": "direct"
        },
        {
          "caller": "TestGermanTaxReporting.test_ustva_vat_return_format",
          "callee": "mock_ustva",
          "line": 476,
          "type": "direct"
        },
        {
          "caller": "TestGermanTaxReporting.test_ustva_vat_return_format",
          "callee": "Decimal",
          "line": 479,
          "type": "direct"
        },
        {
          "caller": "TestGermanTaxReporting.test_annual_tax_declaration",
          "callee": "patch",
          "line": 485,
          "type": "direct"
        },
        {
          "caller": "TestGermanTaxReporting.test_annual_tax_declaration",
          "callee": "Decimal",
          "line": 489,
          "type": "direct"
        },
        {
          "caller": "TestGermanTaxReporting.test_annual_tax_declaration",
          "callee": "Decimal",
          "line": 490,
          "type": "direct"
        },
        {
          "caller": "TestGermanTaxReporting.test_annual_tax_declaration",
          "callee": "Decimal",
          "line": 491,
          "type": "direct"
        },
        {
          "caller": "TestGermanTaxReporting.test_annual_tax_declaration",
          "callee": "Decimal",
          "line": 492,
          "type": "direct"
        },
        {
          "caller": "TestGermanTaxReporting.test_annual_tax_declaration",
          "callee": "Decimal",
          "line": 493,
          "type": "direct"
        },
        {
          "caller": "TestGermanTaxReporting.test_annual_tax_declaration",
          "callee": "Decimal",
          "line": 494,
          "type": "direct"
        },
        {
          "caller": "TestGermanTaxReporting.test_annual_tax_declaration",
          "callee": "Decimal",
          "line": 499,
          "type": "direct"
        },
        {
          "caller": "TestGermanTaxReporting.test_annual_tax_declaration",
          "callee": "Decimal",
          "line": 500,
          "type": "direct"
        },
        {
          "caller": "TestGermanTaxReporting.test_annual_tax_declaration",
          "callee": "Decimal",
          "line": 501,
          "type": "direct"
        },
        {
          "caller": "TestGermanTaxReporting.test_annual_tax_declaration",
          "callee": "Decimal",
          "line": 502,
          "type": "direct"
        },
        {
          "caller": "TestGermanTaxReporting.test_annual_tax_declaration",
          "callee": "Decimal",
          "line": 503,
          "type": "direct"
        },
        {
          "caller": "TestGermanTaxReporting.test_annual_tax_declaration",
          "callee": "Decimal",
          "line": 504,
          "type": "direct"
        },
        {
          "caller": "TestGermanTaxReporting.test_annual_tax_declaration",
          "callee": "Decimal",
          "line": 505,
          "type": "direct"
        },
        {
          "caller": "TestGermanTaxReporting.test_annual_tax_declaration",
          "callee": "mock_annual",
          "line": 508,
          "type": "direct"
        },
        {
          "caller": "TestGermanTaxReporting.test_annual_tax_declaration",
          "callee": "Decimal",
          "line": 510,
          "type": "direct"
        },
        {
          "caller": "TestGermanTaxReporting.test_elster_xml_export",
          "callee": "patch",
          "line": 516,
          "type": "direct"
        },
        {
          "caller": "TestGermanTaxReporting.test_elster_xml_export",
          "callee": "mock_elster",
          "line": 555,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessWorkflows.test_b2b_invoice_workflow",
          "callee": "patch",
          "line": 568,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessWorkflows.test_b2b_invoice_workflow",
          "callee": "Decimal",
          "line": 584,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessWorkflows.test_b2b_invoice_workflow",
          "callee": "Decimal",
          "line": 585,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessWorkflows.test_b2b_invoice_workflow",
          "callee": "Decimal",
          "line": 590,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessWorkflows.test_b2b_invoice_workflow",
          "callee": "Decimal",
          "line": 591,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessWorkflows.test_b2b_invoice_workflow",
          "callee": "strftime",
          "line": 599,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessWorkflows.test_b2b_invoice_workflow",
          "callee": "datetime",
          "line": 599,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessWorkflows.test_b2b_invoice_workflow",
          "callee": "strftime",
          "line": 600,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessWorkflows.test_b2b_invoice_workflow",
          "callee": "datetime",
          "line": 600,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessWorkflows.test_b2b_invoice_workflow",
          "callee": "Decimal",
          "line": 606,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessWorkflows.test_b2b_invoice_workflow",
          "callee": "Decimal",
          "line": 607,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessWorkflows.test_b2b_invoice_workflow",
          "callee": "Decimal",
          "line": 608,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessWorkflows.test_b2b_invoice_workflow",
          "callee": "Decimal",
          "line": 613,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessWorkflows.test_b2b_invoice_workflow",
          "callee": "Decimal",
          "line": 614,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessWorkflows.test_b2b_invoice_workflow",
          "callee": "Decimal",
          "line": 615,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessWorkflows.test_b2b_invoice_workflow",
          "callee": "Decimal",
          "line": 618,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessWorkflows.test_b2b_invoice_workflow",
          "callee": "Decimal",
          "line": 619,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessWorkflows.test_b2b_invoice_workflow",
          "callee": "Decimal",
          "line": 620,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessWorkflows.test_b2b_invoice_workflow",
          "callee": "mock_b2b",
          "line": 625,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessWorkflows.test_b2b_invoice_workflow",
          "callee": "startswith",
          "line": 627,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessWorkflows.test_b2b_invoice_workflow",
          "callee": "Decimal",
          "line": 628,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessWorkflows.test_b2b_invoice_workflow",
          "callee": "Decimal",
          "line": 629,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessWorkflows.test_b2b_invoice_workflow",
          "callee": "Decimal",
          "line": 630,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessWorkflows.test_kleinunternehmer_exemption",
          "callee": "patch",
          "line": 640,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessWorkflows.test_kleinunternehmer_exemption",
          "callee": "Decimal",
          "line": 643,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessWorkflows.test_kleinunternehmer_exemption",
          "callee": "Decimal",
          "line": 644,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessWorkflows.test_kleinunternehmer_exemption",
          "callee": "date",
          "line": 653,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessWorkflows.test_kleinunternehmer_exemption",
          "callee": "datetime",
          "line": 653,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessWorkflows.test_kleinunternehmer_exemption",
          "callee": "mock_exempt",
          "line": 656,
          "type": "direct"
        }
      ],
      "error": null
    },
    {
      "filepath": "tests\\backend\\test_integration.py",
      "functions": [
        {
          "name": "test_complete_printer_lifecycle",
          "full_name": "TestAPIIntegration.test_complete_printer_lifecycle",
          "class": "TestAPIIntegration",
          "signature": "(self, api_client, temp_database, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test complete printer lifecycle: add -> configure -> monitor -> remove",
          "line_start": 21,
          "line_end": 82,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_complete_job_workflow",
          "full_name": "TestAPIIntegration.test_complete_job_workflow",
          "class": "TestAPIIntegration",
          "signature": "(self, api_client, populated_database, test_config, mock_bambu_api)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test complete job workflow: create -> monitor -> complete -> export",
          "line_start": 84,
          "line_end": 168,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_file_management_workflow",
          "full_name": "TestAPIIntegration.test_file_management_workflow",
          "class": "TestAPIIntegration",
          "signature": "(self, api_client, populated_database, test_config, temp_download_directory)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test complete file management workflow: list -> download -> organize",
          "line_start": 170,
          "line_end": 229,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_dashboard_real_time_updates",
          "full_name": "TestAPIIntegration.test_dashboard_real_time_updates",
          "class": "TestAPIIntegration",
          "signature": "(self, api_client, populated_database, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test dashboard statistics and real-time updates",
          "line_start": 231,
          "line_end": 261,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_real_time_job_updates",
          "full_name": "TestWebSocketIntegration.test_real_time_job_updates",
          "class": "TestWebSocketIntegration",
          "signature": "(self, mock_websocket, populated_database)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test real-time job status updates via WebSocket",
          "line_start": 268,
          "line_end": 297,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "mock_send",
          "full_name": "TestWebSocketIntegration.mock_send",
          "class": "TestWebSocketIntegration",
          "signature": "(message)",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 274,
          "line_end": 275,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_printer_status_broadcast",
          "full_name": "TestWebSocketIntegration.test_printer_status_broadcast",
          "class": "TestWebSocketIntegration",
          "signature": "(self, mock_websocket)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test real-time printer status broadcasts",
          "line_start": 300,
          "line_end": 328,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "mock_send",
          "full_name": "TestWebSocketIntegration.mock_send",
          "class": "TestWebSocketIntegration",
          "signature": "(message)",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 305,
          "line_end": 306,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_file_download_progress",
          "full_name": "TestWebSocketIntegration.test_file_download_progress",
          "class": "TestWebSocketIntegration",
          "signature": "(self, mock_websocket)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test real-time file download progress updates",
          "line_start": 331,
          "line_end": 354,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "mock_send",
          "full_name": "TestWebSocketIntegration.mock_send",
          "class": "TestWebSocketIntegration",
          "signature": "(message)",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 336,
          "line_end": 337,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_vat_calculations",
          "full_name": "TestGermanBusinessLogic.test_vat_calculations",
          "class": "TestGermanBusinessLogic",
          "signature": "(self, german_business_config, sample_cost_calculations)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test German VAT calculations for print jobs",
          "line_start": 360,
          "line_end": 390,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_berlin_timezone_handling",
          "full_name": "TestGermanBusinessLogic.test_berlin_timezone_handling",
          "class": "TestGermanBusinessLogic",
          "signature": "(self, test_utils)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test Berlin timezone handling for German business operations",
          "line_start": 392,
          "line_end": 406,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_currency_formatting",
          "full_name": "TestGermanBusinessLogic.test_currency_formatting",
          "class": "TestGermanBusinessLogic",
          "signature": "(self, test_utils)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test German currency formatting",
          "line_start": 408,
          "line_end": 413,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_business_hours_validation",
          "full_name": "TestGermanBusinessLogic.test_business_hours_validation",
          "class": "TestGermanBusinessLogic",
          "signature": "(self, german_business_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test German business hours validation",
          "line_start": 415,
          "line_end": 433,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_export_data_format",
          "full_name": "TestGermanBusinessLogic.test_export_data_format",
          "class": "TestGermanBusinessLogic",
          "signature": "(self, api_client, populated_database, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test German accounting software export format",
          "line_start": 435,
          "line_end": 455,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_printer_connection_failure_recovery",
          "full_name": "TestErrorHandlingIntegration.test_printer_connection_failure_recovery",
          "class": "TestErrorHandlingIntegration",
          "signature": "(self, api_client, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test printer connection failure and recovery scenarios",
          "line_start": 461,
          "line_end": 479,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_database_transaction_rollback",
          "full_name": "TestErrorHandlingIntegration.test_database_transaction_rollback",
          "class": "TestErrorHandlingIntegration",
          "signature": "(self, api_client, temp_database, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test database transaction rollback on errors",
          "line_start": 481,
          "line_end": 502,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_websocket_reconnection",
          "full_name": "TestErrorHandlingIntegration.test_websocket_reconnection",
          "class": "TestErrorHandlingIntegration",
          "signature": "(self, mock_websocket)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test WebSocket reconnection handling",
          "line_start": 504,
          "line_end": 524,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "mock_connect",
          "full_name": "TestErrorHandlingIntegration.mock_connect",
          "class": "TestErrorHandlingIntegration",
          "signature": "()",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 510,
          "line_end": 512,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "mock_disconnect",
          "full_name": "TestErrorHandlingIntegration.mock_disconnect",
          "class": "TestErrorHandlingIntegration",
          "signature": "()",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 514,
          "line_end": 515,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_file_download_interruption_recovery",
          "full_name": "TestErrorHandlingIntegration.test_file_download_interruption_recovery",
          "class": "TestErrorHandlingIntegration",
          "signature": "(self, api_client, test_config, temp_download_directory)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test file download interruption and resume",
          "line_start": 526,
          "line_end": 552,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "pytest",
          "alias": null,
          "line": 6
        },
        {
          "type": "import",
          "module": "json",
          "alias": null,
          "line": 7
        },
        {
          "type": "import",
          "module": "asyncio",
          "alias": null,
          "line": 8
        },
        {
          "type": "import",
          "module": "sqlite3",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "unittest.mock",
          "name": "patch",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "unittest.mock",
          "name": "Mock",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "unittest.mock",
          "name": "MagicMock",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 11
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "timezone",
          "alias": null,
          "line": 11
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "timedelta",
          "alias": null,
          "line": 11
        },
        {
          "type": "import",
          "module": "tempfile",
          "alias": null,
          "line": 12
        },
        {
          "type": "import",
          "module": "os",
          "alias": null,
          "line": 13
        },
        {
          "type": "import",
          "module": "pytz",
          "alias": null,
          "line": 14
        },
        {
          "type": "from_import",
          "module": "decimal",
          "name": "Decimal",
          "alias": null,
          "line": 15
        },
        {
          "type": "from_import",
          "module": "backend.services.business_service",
          "name": "calculate_job_costs",
          "alias": null,
          "line": 362
        },
        {
          "type": "from_import",
          "module": "backend.services.business_service",
          "name": "get_business_timestamp",
          "alias": null,
          "line": 394
        },
        {
          "type": "from_import",
          "module": "backend.services.business_service",
          "name": "is_business_hours",
          "alias": null,
          "line": 417
        }
      ],
      "function_calls": [
        {
          "caller": "TestAPIIntegration.test_complete_printer_lifecycle",
          "callee": "patch",
          "line": 23,
          "type": "direct"
        },
        {
          "caller": "TestAPIIntegration.test_complete_printer_lifecycle",
          "callee": "connect",
          "line": 24,
          "type": "attribute"
        },
        {
          "caller": "TestAPIIntegration.test_complete_printer_lifecycle",
          "callee": "patch",
          "line": 42,
          "type": "direct"
        },
        {
          "caller": "TestAPIIntegration.test_complete_printer_lifecycle",
          "callee": "post",
          "line": 44,
          "type": "attribute"
        },
        {
          "caller": "TestAPIIntegration.test_complete_printer_lifecycle",
          "callee": "json",
          "line": 46,
          "type": "attribute"
        },
        {
          "caller": "TestAPIIntegration.test_complete_printer_lifecycle",
          "callee": "patch",
          "line": 49,
          "type": "direct"
        },
        {
          "caller": "TestAPIIntegration.test_complete_printer_lifecycle",
          "callee": "get",
          "line": 59,
          "type": "attribute"
        },
        {
          "caller": "TestAPIIntegration.test_complete_printer_lifecycle",
          "callee": "json",
          "line": 61,
          "type": "attribute"
        },
        {
          "caller": "TestAPIIntegration.test_complete_printer_lifecycle",
          "callee": "put",
          "line": 67,
          "type": "attribute"
        },
        {
          "caller": "TestAPIIntegration.test_complete_printer_lifecycle",
          "callee": "get",
          "line": 71,
          "type": "attribute"
        },
        {
          "caller": "TestAPIIntegration.test_complete_printer_lifecycle",
          "callee": "json",
          "line": 73,
          "type": "attribute"
        },
        {
          "caller": "TestAPIIntegration.test_complete_printer_lifecycle",
          "callee": "delete",
          "line": 77,
          "type": "attribute"
        },
        {
          "caller": "TestAPIIntegration.test_complete_printer_lifecycle",
          "callee": "get",
          "line": 81,
          "type": "attribute"
        },
        {
          "caller": "TestAPIIntegration.test_complete_job_workflow",
          "callee": "patch",
          "line": 86,
          "type": "direct"
        },
        {
          "caller": "TestAPIIntegration.test_complete_job_workflow",
          "callee": "post",
          "line": 105,
          "type": "attribute"
        },
        {
          "caller": "TestAPIIntegration.test_complete_job_workflow",
          "callee": "json",
          "line": 107,
          "type": "attribute"
        },
        {
          "caller": "TestAPIIntegration.test_complete_job_workflow",
          "callee": "put",
          "line": 118,
          "type": "attribute"
        },
        {
          "caller": "TestAPIIntegration.test_complete_job_workflow",
          "callee": "patch",
          "line": 122,
          "type": "direct"
        },
        {
          "caller": "TestAPIIntegration.test_complete_job_workflow",
          "callee": "get",
          "line": 130,
          "type": "attribute"
        },
        {
          "caller": "TestAPIIntegration.test_complete_job_workflow",
          "callee": "json",
          "line": 132,
          "type": "attribute"
        },
        {
          "caller": "TestAPIIntegration.test_complete_job_workflow",
          "callee": "put",
          "line": 146,
          "type": "attribute"
        },
        {
          "caller": "TestAPIIntegration.test_complete_job_workflow",
          "callee": "get",
          "line": 150,
          "type": "attribute"
        },
        {
          "caller": "TestAPIIntegration.test_complete_job_workflow",
          "callee": "json",
          "line": 152,
          "type": "attribute"
        },
        {
          "caller": "TestAPIIntegration.test_complete_job_workflow",
          "callee": "round",
          "line": 167,
          "type": "direct"
        },
        {
          "caller": "TestAPIIntegration.test_complete_job_workflow",
          "callee": "float",
          "line": 167,
          "type": "direct"
        },
        {
          "caller": "TestAPIIntegration.test_complete_job_workflow",
          "callee": "abs",
          "line": 168,
          "type": "direct"
        },
        {
          "caller": "TestAPIIntegration.test_complete_job_workflow",
          "callee": "float",
          "line": 168,
          "type": "direct"
        },
        {
          "caller": "TestAPIIntegration.test_file_management_workflow",
          "callee": "patch",
          "line": 172,
          "type": "direct"
        },
        {
          "caller": "TestAPIIntegration.test_file_management_workflow",
          "callee": "patch",
          "line": 178,
          "type": "direct"
        },
        {
          "caller": "TestAPIIntegration.test_file_management_workflow",
          "callee": "get",
          "line": 190,
          "type": "attribute"
        },
        {
          "caller": "TestAPIIntegration.test_file_management_workflow",
          "callee": "json",
          "line": 192,
          "type": "attribute"
        },
        {
          "caller": "TestAPIIntegration.test_file_management_workflow",
          "callee": "len",
          "line": 195,
          "type": "direct"
        },
        {
          "caller": "TestAPIIntegration.test_file_management_workflow",
          "callee": "next",
          "line": 198,
          "type": "direct"
        },
        {
          "caller": "TestAPIIntegration.test_file_management_workflow",
          "callee": "patch",
          "line": 203,
          "type": "direct"
        },
        {
          "caller": "TestAPIIntegration.test_file_management_workflow",
          "callee": "post",
          "line": 210,
          "type": "attribute"
        },
        {
          "caller": "TestAPIIntegration.test_file_management_workflow",
          "callee": "json",
          "line": 212,
          "type": "attribute"
        },
        {
          "caller": "TestAPIIntegration.test_file_management_workflow",
          "callee": "get",
          "line": 219,
          "type": "attribute"
        },
        {
          "caller": "TestAPIIntegration.test_file_management_workflow",
          "callee": "json",
          "line": 221,
          "type": "attribute"
        },
        {
          "caller": "TestAPIIntegration.test_file_management_workflow",
          "callee": "next",
          "line": 223,
          "type": "direct"
        },
        {
          "caller": "TestAPIIntegration.test_file_management_workflow",
          "callee": "delete",
          "line": 228,
          "type": "attribute"
        },
        {
          "caller": "TestAPIIntegration.test_dashboard_real_time_updates",
          "callee": "patch",
          "line": 233,
          "type": "direct"
        },
        {
          "caller": "TestAPIIntegration.test_dashboard_real_time_updates",
          "callee": "get",
          "line": 239,
          "type": "attribute"
        },
        {
          "caller": "TestAPIIntegration.test_dashboard_real_time_updates",
          "callee": "json",
          "line": 241,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketIntegration.mock_send",
          "callee": "append",
          "line": 275,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketIntegration.mock_send",
          "callee": "loads",
          "line": 275,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketIntegration.test_real_time_job_updates",
          "callee": "patch",
          "line": 280,
          "type": "direct"
        },
        {
          "caller": "TestWebSocketIntegration.test_real_time_job_updates",
          "callee": "mock_broadcast",
          "line": 296,
          "type": "direct"
        },
        {
          "caller": "TestWebSocketIntegration.test_real_time_job_updates",
          "callee": "assert_called_once_with",
          "line": 297,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketIntegration.mock_send",
          "callee": "append",
          "line": 306,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketIntegration.mock_send",
          "callee": "loads",
          "line": 306,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketIntegration.test_printer_status_broadcast",
          "callee": "patch",
          "line": 311,
          "type": "direct"
        },
        {
          "caller": "TestWebSocketIntegration.test_printer_status_broadcast",
          "callee": "mock_broadcast",
          "line": 327,
          "type": "direct"
        },
        {
          "caller": "TestWebSocketIntegration.test_printer_status_broadcast",
          "callee": "assert_called_once_with",
          "line": 328,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketIntegration.mock_send",
          "callee": "append",
          "line": 337,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketIntegration.mock_send",
          "callee": "loads",
          "line": 337,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketIntegration.test_file_download_progress",
          "callee": "patch",
          "line": 342,
          "type": "direct"
        },
        {
          "caller": "TestWebSocketIntegration.test_file_download_progress",
          "callee": "mock_broadcast",
          "line": 353,
          "type": "direct"
        },
        {
          "caller": "TestWebSocketIntegration.test_file_download_progress",
          "callee": "assert_called_once_with",
          "line": 354,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessLogic.test_vat_calculations",
          "callee": "patch",
          "line": 365,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessLogic.test_vat_calculations",
          "callee": "Decimal",
          "line": 367,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessLogic.test_vat_calculations",
          "callee": "Decimal",
          "line": 368,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessLogic.test_vat_calculations",
          "callee": "Decimal",
          "line": 369,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessLogic.test_vat_calculations",
          "callee": "Decimal",
          "line": 370,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessLogic.test_vat_calculations",
          "callee": "Decimal",
          "line": 371,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessLogic.test_vat_calculations",
          "callee": "Decimal",
          "line": 372,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessLogic.test_vat_calculations",
          "callee": "Decimal",
          "line": 373,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessLogic.test_vat_calculations",
          "callee": "mock_calc",
          "line": 382,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessLogic.test_vat_calculations",
          "callee": "Decimal",
          "line": 385,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessLogic.test_vat_calculations",
          "callee": "abs",
          "line": 386,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessLogic.test_vat_calculations",
          "callee": "Decimal",
          "line": 386,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessLogic.test_vat_calculations",
          "callee": "abs",
          "line": 390,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessLogic.test_vat_calculations",
          "callee": "Decimal",
          "line": 390,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessLogic.test_berlin_timezone_handling",
          "callee": "patch",
          "line": 397,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessLogic.test_berlin_timezone_handling",
          "callee": "timezone",
          "line": 398,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessLogic.test_berlin_timezone_handling",
          "callee": "localize",
          "line": 399,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessLogic.test_berlin_timezone_handling",
          "callee": "datetime",
          "line": 399,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessLogic.test_berlin_timezone_handling",
          "callee": "mock_timestamp",
          "line": 402,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessLogic.test_currency_formatting",
          "callee": "format_currency",
          "line": 411,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessLogic.test_currency_formatting",
          "callee": "format_currency",
          "line": 412,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessLogic.test_currency_formatting",
          "callee": "format_currency",
          "line": 413,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessLogic.test_business_hours_validation",
          "callee": "patch",
          "line": 419,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessLogic.test_business_hours_validation",
          "callee": "timezone",
          "line": 421,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessLogic.test_business_hours_validation",
          "callee": "localize",
          "line": 422,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessLogic.test_business_hours_validation",
          "callee": "datetime",
          "line": 422,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessLogic.test_business_hours_validation",
          "callee": "mock_hours",
          "line": 425,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessLogic.test_business_hours_validation",
          "callee": "localize",
          "line": 429,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessLogic.test_business_hours_validation",
          "callee": "datetime",
          "line": 429,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessLogic.test_business_hours_validation",
          "callee": "mock_hours",
          "line": 432,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessLogic.test_export_data_format",
          "callee": "patch",
          "line": 437,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessLogic.test_export_data_format",
          "callee": "get",
          "line": 443,
          "type": "attribute"
        },
        {
          "caller": "TestErrorHandlingIntegration.test_printer_connection_failure_recovery",
          "callee": "patch",
          "line": 473,
          "type": "direct"
        },
        {
          "caller": "TestErrorHandlingIntegration.test_printer_connection_failure_recovery",
          "callee": "ConnectionError",
          "line": 474,
          "type": "direct"
        },
        {
          "caller": "TestErrorHandlingIntegration.test_printer_connection_failure_recovery",
          "callee": "post",
          "line": 476,
          "type": "attribute"
        },
        {
          "caller": "TestErrorHandlingIntegration.test_printer_connection_failure_recovery",
          "callee": "json",
          "line": 478,
          "type": "attribute"
        },
        {
          "caller": "TestErrorHandlingIntegration.test_database_transaction_rollback",
          "callee": "patch",
          "line": 483,
          "type": "direct"
        },
        {
          "caller": "TestErrorHandlingIntegration.test_database_transaction_rollback",
          "callee": "connect",
          "line": 484,
          "type": "attribute"
        },
        {
          "caller": "TestErrorHandlingIntegration.test_database_transaction_rollback",
          "callee": "post",
          "line": 495,
          "type": "attribute"
        },
        {
          "caller": "TestErrorHandlingIntegration.test_database_transaction_rollback",
          "callee": "cursor",
          "line": 499,
          "type": "attribute"
        },
        {
          "caller": "TestErrorHandlingIntegration.test_database_transaction_rollback",
          "callee": "execute",
          "line": 500,
          "type": "attribute"
        },
        {
          "caller": "TestErrorHandlingIntegration.test_database_transaction_rollback",
          "callee": "fetchone",
          "line": 501,
          "type": "attribute"
        },
        {
          "caller": "TestErrorHandlingIntegration.mock_connect",
          "callee": "append",
          "line": 511,
          "type": "attribute"
        },
        {
          "caller": "TestErrorHandlingIntegration.mock_disconnect",
          "callee": "append",
          "line": 515,
          "type": "attribute"
        },
        {
          "caller": "TestErrorHandlingIntegration.test_websocket_reconnection",
          "callee": "patch",
          "line": 517,
          "type": "direct"
        },
        {
          "caller": "TestErrorHandlingIntegration.test_websocket_reconnection",
          "callee": "patch",
          "line": 518,
          "type": "direct"
        },
        {
          "caller": "TestErrorHandlingIntegration.test_file_download_interruption_recovery",
          "callee": "patch",
          "line": 532,
          "type": "direct"
        },
        {
          "caller": "TestErrorHandlingIntegration.test_file_download_interruption_recovery",
          "callee": "ConnectionError",
          "line": 534,
          "type": "direct"
        },
        {
          "caller": "TestErrorHandlingIntegration.test_file_download_interruption_recovery",
          "callee": "post",
          "line": 536,
          "type": "attribute"
        },
        {
          "caller": "TestErrorHandlingIntegration.test_file_download_interruption_recovery",
          "callee": "post",
          "line": 548,
          "type": "attribute"
        },
        {
          "caller": "TestErrorHandlingIntegration.test_file_download_interruption_recovery",
          "callee": "json",
          "line": 550,
          "type": "attribute"
        }
      ],
      "error": null
    },
    {
      "filepath": "tests\\backend\\test_job_null_fix.py",
      "functions": [
        {
          "name": "test_job_model_rejects_null_id",
          "full_name": "TestNullJobIDFix.test_job_model_rejects_null_id",
          "class": "TestNullJobIDFix",
          "signature": "(self)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test that Job model validates ID field and rejects NULL.",
          "line_start": 21,
          "line_end": 44,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_database_prevents_null_job_ids",
          "full_name": "TestNullJobIDFix.test_database_prevents_null_job_ids",
          "class": "TestNullJobIDFix",
          "signature": "(self)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test that database enforces NOT NULL constraint.",
          "line_start": 47,
          "line_end": 80,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_job_service_creates_valid_ids",
          "full_name": "TestNullJobIDFix.test_job_service_creates_valid_ids",
          "class": "TestNullJobIDFix",
          "signature": "(self)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test that JobService always creates jobs with valid UUIDs.",
          "line_start": 83,
          "line_end": 126,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_migration_005_applied",
          "full_name": "TestNullJobIDFix.test_migration_005_applied",
          "class": "TestNullJobIDFix",
          "signature": "(self)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test that migration 005 is applied and tracked.",
          "line_start": 129,
          "line_end": 160,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_job_service_error_logging",
          "full_name": "TestNullJobIDFix.test_job_service_error_logging",
          "class": "TestNullJobIDFix",
          "signature": "(self)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test that job service logs errors for invalid jobs.",
          "line_start": 163,
          "line_end": 197,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "pytest",
          "alias": null,
          "line": 5
        },
        {
          "type": "import",
          "module": "uuid",
          "alias": null,
          "line": 6
        },
        {
          "type": "import",
          "module": "sqlite3",
          "alias": null,
          "line": 7
        },
        {
          "type": "import",
          "module": "tempfile",
          "alias": null,
          "line": 8
        },
        {
          "type": "import",
          "module": "os",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "src.database.database",
          "name": "Database",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "src.services.job_service",
          "name": "JobService",
          "alias": null,
          "line": 11
        },
        {
          "type": "from_import",
          "module": "src.services.event_service",
          "name": "EventService",
          "alias": null,
          "line": 12
        },
        {
          "type": "from_import",
          "module": "src.models.job",
          "name": "Job",
          "alias": null,
          "line": 13
        },
        {
          "type": "from_import",
          "module": "src.models.job",
          "name": "JobStatus",
          "alias": null,
          "line": 13
        },
        {
          "type": "from_import",
          "module": "pydantic",
          "name": "ValidationError",
          "alias": null,
          "line": 14
        }
      ],
      "function_calls": [
        {
          "caller": "TestNullJobIDFix.test_job_model_rejects_null_id",
          "callee": "Job",
          "line": 24,
          "type": "direct"
        },
        {
          "caller": "TestNullJobIDFix.test_job_model_rejects_null_id",
          "callee": "str",
          "line": 25,
          "type": "direct"
        },
        {
          "caller": "TestNullJobIDFix.test_job_model_rejects_null_id",
          "callee": "uuid4",
          "line": 25,
          "type": "attribute"
        },
        {
          "caller": "TestNullJobIDFix.test_job_model_rejects_null_id",
          "callee": "raises",
          "line": 34,
          "type": "attribute"
        },
        {
          "caller": "TestNullJobIDFix.test_job_model_rejects_null_id",
          "callee": "Job",
          "line": 35,
          "type": "direct"
        },
        {
          "caller": "TestNullJobIDFix.test_job_model_rejects_null_id",
          "callee": "errors",
          "line": 43,
          "type": "attribute"
        },
        {
          "caller": "TestNullJobIDFix.test_job_model_rejects_null_id",
          "callee": "any",
          "line": 44,
          "type": "direct"
        },
        {
          "caller": "TestNullJobIDFix.test_database_prevents_null_job_ids",
          "callee": "mkstemp",
          "line": 50,
          "type": "attribute"
        },
        {
          "caller": "TestNullJobIDFix.test_database_prevents_null_job_ids",
          "callee": "close",
          "line": 51,
          "type": "attribute"
        },
        {
          "caller": "TestNullJobIDFix.test_database_prevents_null_job_ids",
          "callee": "Database",
          "line": 53,
          "type": "direct"
        },
        {
          "caller": "TestNullJobIDFix.test_database_prevents_null_job_ids",
          "callee": "initialize",
          "line": 54,
          "type": "attribute"
        },
        {
          "caller": "TestNullJobIDFix.test_database_prevents_null_job_ids",
          "callee": "raises",
          "line": 58,
          "type": "attribute"
        },
        {
          "caller": "TestNullJobIDFix.test_database_prevents_null_job_ids",
          "callee": "connection",
          "line": 59,
          "type": "attribute"
        },
        {
          "caller": "TestNullJobIDFix.test_database_prevents_null_job_ids",
          "callee": "execute",
          "line": 60,
          "type": "attribute"
        },
        {
          "caller": "TestNullJobIDFix.test_database_prevents_null_job_ids",
          "callee": "commit",
          "line": 64,
          "type": "attribute"
        },
        {
          "caller": "TestNullJobIDFix.test_database_prevents_null_job_ids",
          "callee": "raises",
          "line": 67,
          "type": "attribute"
        },
        {
          "caller": "TestNullJobIDFix.test_database_prevents_null_job_ids",
          "callee": "connection",
          "line": 68,
          "type": "attribute"
        },
        {
          "caller": "TestNullJobIDFix.test_database_prevents_null_job_ids",
          "callee": "execute",
          "line": 69,
          "type": "attribute"
        },
        {
          "caller": "TestNullJobIDFix.test_database_prevents_null_job_ids",
          "callee": "commit",
          "line": 73,
          "type": "attribute"
        },
        {
          "caller": "TestNullJobIDFix.test_database_prevents_null_job_ids",
          "callee": "close",
          "line": 76,
          "type": "attribute"
        },
        {
          "caller": "TestNullJobIDFix.test_database_prevents_null_job_ids",
          "callee": "unlink",
          "line": 78,
          "type": "attribute"
        },
        {
          "caller": "TestNullJobIDFix.test_job_service_creates_valid_ids",
          "callee": "mkstemp",
          "line": 86,
          "type": "attribute"
        },
        {
          "caller": "TestNullJobIDFix.test_job_service_creates_valid_ids",
          "callee": "close",
          "line": 87,
          "type": "attribute"
        },
        {
          "caller": "TestNullJobIDFix.test_job_service_creates_valid_ids",
          "callee": "Database",
          "line": 89,
          "type": "direct"
        },
        {
          "caller": "TestNullJobIDFix.test_job_service_creates_valid_ids",
          "callee": "initialize",
          "line": 90,
          "type": "attribute"
        },
        {
          "caller": "TestNullJobIDFix.test_job_service_creates_valid_ids",
          "callee": "EventService",
          "line": 93,
          "type": "direct"
        },
        {
          "caller": "TestNullJobIDFix.test_job_service_creates_valid_ids",
          "callee": "JobService",
          "line": 94,
          "type": "direct"
        },
        {
          "caller": "TestNullJobIDFix.test_job_service_creates_valid_ids",
          "callee": "range",
          "line": 98,
          "type": "direct"
        },
        {
          "caller": "TestNullJobIDFix.test_job_service_creates_valid_ids",
          "callee": "create_job",
          "line": 99,
          "type": "attribute"
        },
        {
          "caller": "TestNullJobIDFix.test_job_service_creates_valid_ids",
          "callee": "append",
          "line": 104,
          "type": "attribute"
        },
        {
          "caller": "TestNullJobIDFix.test_job_service_creates_valid_ids",
          "callee": "len",
          "line": 109,
          "type": "direct"
        },
        {
          "caller": "TestNullJobIDFix.test_job_service_creates_valid_ids",
          "callee": "UUID",
          "line": 110,
          "type": "attribute"
        },
        {
          "caller": "TestNullJobIDFix.test_job_service_creates_valid_ids",
          "callee": "len",
          "line": 113,
          "type": "direct"
        },
        {
          "caller": "TestNullJobIDFix.test_job_service_creates_valid_ids",
          "callee": "len",
          "line": 113,
          "type": "direct"
        },
        {
          "caller": "TestNullJobIDFix.test_job_service_creates_valid_ids",
          "callee": "set",
          "line": 113,
          "type": "direct"
        },
        {
          "caller": "TestNullJobIDFix.test_job_service_creates_valid_ids",
          "callee": "get_job",
          "line": 117,
          "type": "attribute"
        },
        {
          "caller": "TestNullJobIDFix.test_job_service_creates_valid_ids",
          "callee": "close",
          "line": 122,
          "type": "attribute"
        },
        {
          "caller": "TestNullJobIDFix.test_job_service_creates_valid_ids",
          "callee": "unlink",
          "line": 124,
          "type": "attribute"
        },
        {
          "caller": "TestNullJobIDFix.test_migration_005_applied",
          "callee": "mkstemp",
          "line": 132,
          "type": "attribute"
        },
        {
          "caller": "TestNullJobIDFix.test_migration_005_applied",
          "callee": "close",
          "line": 133,
          "type": "attribute"
        },
        {
          "caller": "TestNullJobIDFix.test_migration_005_applied",
          "callee": "Database",
          "line": 135,
          "type": "direct"
        },
        {
          "caller": "TestNullJobIDFix.test_migration_005_applied",
          "callee": "initialize",
          "line": 136,
          "type": "attribute"
        },
        {
          "caller": "TestNullJobIDFix.test_migration_005_applied",
          "callee": "connection",
          "line": 140,
          "type": "attribute"
        },
        {
          "caller": "TestNullJobIDFix.test_migration_005_applied",
          "callee": "execute",
          "line": 141,
          "type": "attribute"
        },
        {
          "caller": "TestNullJobIDFix.test_migration_005_applied",
          "callee": "fetchone",
          "line": 144,
          "type": "attribute"
        },
        {
          "caller": "TestNullJobIDFix.test_migration_005_applied",
          "callee": "execute",
          "line": 148,
          "type": "attribute"
        },
        {
          "caller": "TestNullJobIDFix.test_migration_005_applied",
          "callee": "fetchone",
          "line": 151,
          "type": "attribute"
        },
        {
          "caller": "TestNullJobIDFix.test_migration_005_applied",
          "callee": "close",
          "line": 156,
          "type": "attribute"
        },
        {
          "caller": "TestNullJobIDFix.test_migration_005_applied",
          "callee": "unlink",
          "line": 158,
          "type": "attribute"
        },
        {
          "caller": "TestNullJobIDFix.test_job_service_error_logging",
          "callee": "mkstemp",
          "line": 166,
          "type": "attribute"
        },
        {
          "caller": "TestNullJobIDFix.test_job_service_error_logging",
          "callee": "close",
          "line": 167,
          "type": "attribute"
        },
        {
          "caller": "TestNullJobIDFix.test_job_service_error_logging",
          "callee": "Database",
          "line": 169,
          "type": "direct"
        },
        {
          "caller": "TestNullJobIDFix.test_job_service_error_logging",
          "callee": "initialize",
          "line": 170,
          "type": "attribute"
        },
        {
          "caller": "TestNullJobIDFix.test_job_service_error_logging",
          "callee": "EventService",
          "line": 173,
          "type": "direct"
        },
        {
          "caller": "TestNullJobIDFix.test_job_service_error_logging",
          "callee": "JobService",
          "line": 174,
          "type": "direct"
        },
        {
          "caller": "TestNullJobIDFix.test_job_service_error_logging",
          "callee": "create_job",
          "line": 177,
          "type": "attribute"
        },
        {
          "caller": "TestNullJobIDFix.test_job_service_error_logging",
          "callee": "get_jobs",
          "line": 184,
          "type": "attribute"
        },
        {
          "caller": "TestNullJobIDFix.test_job_service_error_logging",
          "callee": "len",
          "line": 185,
          "type": "direct"
        },
        {
          "caller": "TestNullJobIDFix.test_job_service_error_logging",
          "callee": "list_jobs",
          "line": 189,
          "type": "attribute"
        },
        {
          "caller": "TestNullJobIDFix.test_job_service_error_logging",
          "callee": "len",
          "line": 190,
          "type": "direct"
        },
        {
          "caller": "TestNullJobIDFix.test_job_service_error_logging",
          "callee": "close",
          "line": 193,
          "type": "attribute"
        },
        {
          "caller": "TestNullJobIDFix.test_job_service_error_logging",
          "callee": "unlink",
          "line": 195,
          "type": "attribute"
        }
      ],
      "error": null
    },
    {
      "filepath": "tests\\backend\\test_job_validation.py",
      "functions": [
        {
          "name": "create_test_db",
          "full_name": "create_test_db",
          "class": null,
          "signature": "()",
          "return_type": "",
          "decorators": [],
          "docstring": "Create a test database instance.",
          "line_start": 18,
          "line_end": 26,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_database_schema_prevents_null_ids",
          "full_name": "TestJobIDValidation.test_database_schema_prevents_null_ids",
          "class": "TestJobIDValidation",
          "signature": "(self)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test that database schema enforces NOT NULL on job.id.",
          "line_start": 33,
          "line_end": 47,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_database_schema_prevents_empty_ids",
          "full_name": "TestJobIDValidation.test_database_schema_prevents_empty_ids",
          "class": "TestJobIDValidation",
          "signature": "(self)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test that database schema enforces non-empty ID strings.",
          "line_start": 50,
          "line_end": 64,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_job_service_creates_valid_id",
          "full_name": "TestJobIDValidation.test_job_service_creates_valid_id",
          "class": "TestJobIDValidation",
          "signature": "(self)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test that job service always creates jobs with valid IDs.",
          "line_start": 67,
          "line_end": 95,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_job_model_validates_id_field",
          "full_name": "TestJobIDValidation.test_job_model_validates_id_field",
          "class": "TestJobIDValidation",
          "signature": "(self)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test that Job pydantic model validates ID field.",
          "line_start": 98,
          "line_end": 122,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_get_jobs_skips_invalid_jobs",
          "full_name": "TestJobIDValidation.test_get_jobs_skips_invalid_jobs",
          "class": "TestJobIDValidation",
          "signature": "(self, job_service, test_db)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test that get_jobs handles and logs invalid jobs gracefully.",
          "line_start": 125,
          "line_end": 137,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_list_jobs_skips_invalid_jobs",
          "full_name": "TestJobIDValidation.test_list_jobs_skips_invalid_jobs",
          "class": "TestJobIDValidation",
          "signature": "(self, job_service)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test that list_jobs handles invalid jobs gracefully.",
          "line_start": 140,
          "line_end": 162,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_migration_tracking_table_created",
          "full_name": "TestMigration005.test_migration_tracking_table_created",
          "class": "TestMigration005",
          "signature": "(self, test_db)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test that migrations table is created.",
          "line_start": 169,
          "line_end": 176,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_migration_005_recorded",
          "full_name": "TestMigration005.test_migration_005_recorded",
          "class": "TestMigration005",
          "signature": "(self, test_db)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test that migration 005 is recorded in migrations table.",
          "line_start": 179,
          "line_end": 188,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_jobs_table_has_not_null_constraint",
          "full_name": "TestMigration005.test_jobs_table_has_not_null_constraint",
          "class": "TestMigration005",
          "signature": "(self, test_db)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test that jobs table has NOT NULL constraint on id column.",
          "line_start": 191,
          "line_end": 201,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_create_job_validates_required_fields",
          "full_name": "TestJobCreationValidation.test_create_job_validates_required_fields",
          "class": "TestJobCreationValidation",
          "signature": "(self, job_service)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test that create_job validates all required fields.",
          "line_start": 208,
          "line_end": 220,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_create_job_generates_unique_ids",
          "full_name": "TestJobCreationValidation.test_create_job_generates_unique_ids",
          "class": "TestJobCreationValidation",
          "signature": "(self, job_service)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test that create_job generates unique IDs for each job.",
          "line_start": 223,
          "line_end": 240,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_create_job_with_business_info",
          "full_name": "TestJobCreationValidation.test_create_job_with_business_info",
          "class": "TestJobCreationValidation",
          "signature": "(self, job_service)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test creating business jobs with customer info.",
          "line_start": 243,
          "line_end": 259,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "pytest",
          "alias": null,
          "line": 5
        },
        {
          "type": "import",
          "module": "uuid",
          "alias": null,
          "line": 6
        },
        {
          "type": "import",
          "module": "sqlite3",
          "alias": null,
          "line": 7
        },
        {
          "type": "import",
          "module": "tempfile",
          "alias": null,
          "line": 8
        },
        {
          "type": "import",
          "module": "os",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "pathlib",
          "name": "Path",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "src.database.database",
          "name": "Database",
          "alias": null,
          "line": 11
        },
        {
          "type": "from_import",
          "module": "src.services.job_service",
          "name": "JobService",
          "alias": null,
          "line": 12
        },
        {
          "type": "from_import",
          "module": "src.services.event_service",
          "name": "EventService",
          "alias": null,
          "line": 13
        },
        {
          "type": "from_import",
          "module": "src.models.job",
          "name": "Job",
          "alias": null,
          "line": 14
        },
        {
          "type": "from_import",
          "module": "src.models.job",
          "name": "JobCreate",
          "alias": null,
          "line": 14
        },
        {
          "type": "from_import",
          "module": "src.models.job",
          "name": "JobStatus",
          "alias": null,
          "line": 14
        },
        {
          "type": "from_import",
          "module": "pydantic",
          "name": "ValidationError",
          "alias": null,
          "line": 111
        }
      ],
      "function_calls": [
        {
          "caller": "create_test_db",
          "callee": "mkstemp",
          "line": 21,
          "type": "attribute"
        },
        {
          "caller": "create_test_db",
          "callee": "close",
          "line": 22,
          "type": "attribute"
        },
        {
          "caller": "create_test_db",
          "callee": "Database",
          "line": 24,
          "type": "direct"
        },
        {
          "caller": "create_test_db",
          "callee": "initialize",
          "line": 25,
          "type": "attribute"
        },
        {
          "caller": "TestJobIDValidation.test_database_schema_prevents_null_ids",
          "callee": "create_test_db",
          "line": 35,
          "type": "direct"
        },
        {
          "caller": "TestJobIDValidation.test_database_schema_prevents_null_ids",
          "callee": "raises",
          "line": 38,
          "type": "attribute"
        },
        {
          "caller": "TestJobIDValidation.test_database_schema_prevents_null_ids",
          "callee": "connection",
          "line": 39,
          "type": "attribute"
        },
        {
          "caller": "TestJobIDValidation.test_database_schema_prevents_null_ids",
          "callee": "execute",
          "line": 40,
          "type": "attribute"
        },
        {
          "caller": "TestJobIDValidation.test_database_schema_prevents_null_ids",
          "callee": "commit",
          "line": 44,
          "type": "attribute"
        },
        {
          "caller": "TestJobIDValidation.test_database_schema_prevents_null_ids",
          "callee": "close",
          "line": 46,
          "type": "attribute"
        },
        {
          "caller": "TestJobIDValidation.test_database_schema_prevents_null_ids",
          "callee": "unlink",
          "line": 47,
          "type": "attribute"
        },
        {
          "caller": "TestJobIDValidation.test_database_schema_prevents_empty_ids",
          "callee": "create_test_db",
          "line": 52,
          "type": "direct"
        },
        {
          "caller": "TestJobIDValidation.test_database_schema_prevents_empty_ids",
          "callee": "raises",
          "line": 55,
          "type": "attribute"
        },
        {
          "caller": "TestJobIDValidation.test_database_schema_prevents_empty_ids",
          "callee": "connection",
          "line": 56,
          "type": "attribute"
        },
        {
          "caller": "TestJobIDValidation.test_database_schema_prevents_empty_ids",
          "callee": "execute",
          "line": 57,
          "type": "attribute"
        },
        {
          "caller": "TestJobIDValidation.test_database_schema_prevents_empty_ids",
          "callee": "commit",
          "line": 61,
          "type": "attribute"
        },
        {
          "caller": "TestJobIDValidation.test_database_schema_prevents_empty_ids",
          "callee": "close",
          "line": 63,
          "type": "attribute"
        },
        {
          "caller": "TestJobIDValidation.test_database_schema_prevents_empty_ids",
          "callee": "unlink",
          "line": 64,
          "type": "attribute"
        },
        {
          "caller": "TestJobIDValidation.test_job_service_creates_valid_id",
          "callee": "create_test_db",
          "line": 69,
          "type": "direct"
        },
        {
          "caller": "TestJobIDValidation.test_job_service_creates_valid_id",
          "callee": "EventService",
          "line": 71,
          "type": "direct"
        },
        {
          "caller": "TestJobIDValidation.test_job_service_creates_valid_id",
          "callee": "JobService",
          "line": 72,
          "type": "direct"
        },
        {
          "caller": "TestJobIDValidation.test_job_service_creates_valid_id",
          "callee": "create_job",
          "line": 82,
          "type": "attribute"
        },
        {
          "caller": "TestJobIDValidation.test_job_service_creates_valid_id",
          "callee": "len",
          "line": 87,
          "type": "direct"
        },
        {
          "caller": "TestJobIDValidation.test_job_service_creates_valid_id",
          "callee": "get_job",
          "line": 90,
          "type": "attribute"
        },
        {
          "caller": "TestJobIDValidation.test_job_service_creates_valid_id",
          "callee": "close",
          "line": 94,
          "type": "attribute"
        },
        {
          "caller": "TestJobIDValidation.test_job_service_creates_valid_id",
          "callee": "unlink",
          "line": 95,
          "type": "attribute"
        },
        {
          "caller": "TestJobIDValidation.test_job_model_validates_id_field",
          "callee": "Job",
          "line": 101,
          "type": "direct"
        },
        {
          "caller": "TestJobIDValidation.test_job_model_validates_id_field",
          "callee": "str",
          "line": 102,
          "type": "direct"
        },
        {
          "caller": "TestJobIDValidation.test_job_model_validates_id_field",
          "callee": "uuid4",
          "line": 102,
          "type": "attribute"
        },
        {
          "caller": "TestJobIDValidation.test_job_model_validates_id_field",
          "callee": "raises",
          "line": 112,
          "type": "attribute"
        },
        {
          "caller": "TestJobIDValidation.test_job_model_validates_id_field",
          "callee": "Job",
          "line": 113,
          "type": "direct"
        },
        {
          "caller": "TestJobIDValidation.test_job_model_validates_id_field",
          "callee": "errors",
          "line": 121,
          "type": "attribute"
        },
        {
          "caller": "TestJobIDValidation.test_job_model_validates_id_field",
          "callee": "any",
          "line": 122,
          "type": "direct"
        },
        {
          "caller": "TestJobIDValidation.test_get_jobs_skips_invalid_jobs",
          "callee": "create_job",
          "line": 128,
          "type": "attribute"
        },
        {
          "caller": "TestJobIDValidation.test_get_jobs_skips_invalid_jobs",
          "callee": "get_jobs",
          "line": 135,
          "type": "attribute"
        },
        {
          "caller": "TestJobIDValidation.test_get_jobs_skips_invalid_jobs",
          "callee": "len",
          "line": 136,
          "type": "direct"
        },
        {
          "caller": "TestJobIDValidation.test_list_jobs_skips_invalid_jobs",
          "callee": "create_job",
          "line": 143,
          "type": "attribute"
        },
        {
          "caller": "TestJobIDValidation.test_list_jobs_skips_invalid_jobs",
          "callee": "create_job",
          "line": 149,
          "type": "attribute"
        },
        {
          "caller": "TestJobIDValidation.test_list_jobs_skips_invalid_jobs",
          "callee": "list_jobs",
          "line": 156,
          "type": "attribute"
        },
        {
          "caller": "TestJobIDValidation.test_list_jobs_skips_invalid_jobs",
          "callee": "len",
          "line": 157,
          "type": "direct"
        },
        {
          "caller": "TestJobIDValidation.test_list_jobs_skips_invalid_jobs",
          "callee": "list_jobs",
          "line": 160,
          "type": "attribute"
        },
        {
          "caller": "TestJobIDValidation.test_list_jobs_skips_invalid_jobs",
          "callee": "len",
          "line": 161,
          "type": "direct"
        },
        {
          "caller": "TestMigration005.test_migration_tracking_table_created",
          "callee": "connection",
          "line": 171,
          "type": "attribute"
        },
        {
          "caller": "TestMigration005.test_migration_tracking_table_created",
          "callee": "execute",
          "line": 172,
          "type": "attribute"
        },
        {
          "caller": "TestMigration005.test_migration_tracking_table_created",
          "callee": "fetchone",
          "line": 175,
          "type": "attribute"
        },
        {
          "caller": "TestMigration005.test_migration_005_recorded",
          "callee": "connection",
          "line": 181,
          "type": "attribute"
        },
        {
          "caller": "TestMigration005.test_migration_005_recorded",
          "callee": "execute",
          "line": 182,
          "type": "attribute"
        },
        {
          "caller": "TestMigration005.test_migration_005_recorded",
          "callee": "fetchone",
          "line": 185,
          "type": "attribute"
        },
        {
          "caller": "TestMigration005.test_migration_005_recorded",
          "callee": "lower",
          "line": 188,
          "type": "attribute"
        },
        {
          "caller": "TestMigration005.test_jobs_table_has_not_null_constraint",
          "callee": "connection",
          "line": 193,
          "type": "attribute"
        },
        {
          "caller": "TestMigration005.test_jobs_table_has_not_null_constraint",
          "callee": "execute",
          "line": 194,
          "type": "attribute"
        },
        {
          "caller": "TestMigration005.test_jobs_table_has_not_null_constraint",
          "callee": "fetchall",
          "line": 195,
          "type": "attribute"
        },
        {
          "caller": "TestMigration005.test_jobs_table_has_not_null_constraint",
          "callee": "next",
          "line": 198,
          "type": "direct"
        },
        {
          "caller": "TestJobCreationValidation.test_create_job_validates_required_fields",
          "callee": "raises",
          "line": 211,
          "type": "attribute"
        },
        {
          "caller": "TestJobCreationValidation.test_create_job_validates_required_fields",
          "callee": "create_job",
          "line": 212,
          "type": "attribute"
        },
        {
          "caller": "TestJobCreationValidation.test_create_job_validates_required_fields",
          "callee": "raises",
          "line": 217,
          "type": "attribute"
        },
        {
          "caller": "TestJobCreationValidation.test_create_job_validates_required_fields",
          "callee": "create_job",
          "line": 218,
          "type": "attribute"
        },
        {
          "caller": "TestJobCreationValidation.test_create_job_generates_unique_ids",
          "callee": "range",
          "line": 227,
          "type": "direct"
        },
        {
          "caller": "TestJobCreationValidation.test_create_job_generates_unique_ids",
          "callee": "create_job",
          "line": 228,
          "type": "attribute"
        },
        {
          "caller": "TestJobCreationValidation.test_create_job_generates_unique_ids",
          "callee": "append",
          "line": 233,
          "type": "attribute"
        },
        {
          "caller": "TestJobCreationValidation.test_create_job_generates_unique_ids",
          "callee": "len",
          "line": 236,
          "type": "direct"
        },
        {
          "caller": "TestJobCreationValidation.test_create_job_generates_unique_ids",
          "callee": "len",
          "line": 236,
          "type": "direct"
        },
        {
          "caller": "TestJobCreationValidation.test_create_job_generates_unique_ids",
          "callee": "set",
          "line": 236,
          "type": "direct"
        },
        {
          "caller": "TestJobCreationValidation.test_create_job_generates_unique_ids",
          "callee": "UUID",
          "line": 240,
          "type": "attribute"
        },
        {
          "caller": "TestJobCreationValidation.test_create_job_with_business_info",
          "callee": "create_job",
          "line": 245,
          "type": "attribute"
        },
        {
          "caller": "TestJobCreationValidation.test_create_job_with_business_info",
          "callee": "get_job",
          "line": 257,
          "type": "attribute"
        }
      ],
      "error": null
    },
    {
      "filepath": "tests\\backend\\test_library_service.py",
      "functions": [
        {
          "name": "temp_library_path",
          "full_name": "temp_library_path",
          "class": null,
          "signature": "()",
          "return_type": "",
          "decorators": [
            "pytest.fixture"
          ],
          "docstring": "Create temporary library directory",
          "line_start": 21,
          "line_end": 25,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "mock_database",
          "full_name": "mock_database",
          "class": null,
          "signature": "()",
          "return_type": "",
          "decorators": [
            "pytest.fixture"
          ],
          "docstring": "Mock database for library service testing",
          "line_start": 29,
          "line_end": 40,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "mock_config_service",
          "full_name": "mock_config_service",
          "class": null,
          "signature": "(temp_library_path)",
          "return_type": "",
          "decorators": [
            "pytest.fixture"
          ],
          "docstring": "Mock configuration service",
          "line_start": 44,
          "line_end": 54,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "mock_event_service",
          "full_name": "mock_event_service",
          "class": null,
          "signature": "()",
          "return_type": "",
          "decorators": [
            "pytest.fixture"
          ],
          "docstring": "Mock event service",
          "line_start": 58,
          "line_end": 62,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "library_service",
          "full_name": "library_service",
          "class": null,
          "signature": "(mock_database, mock_config_service, mock_event_service)",
          "return_type": "",
          "decorators": [
            "pytest.fixture"
          ],
          "docstring": "Initialize library service with mocks",
          "line_start": 66,
          "line_end": 71,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "sample_test_file",
          "full_name": "sample_test_file",
          "class": null,
          "signature": "(temp_library_path)",
          "return_type": "",
          "decorators": [
            "pytest.fixture"
          ],
          "docstring": "Create a sample test file",
          "line_start": 75,
          "line_end": 79,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_initialize_creates_folders",
          "full_name": "TestLibraryServiceInitialization.test_initialize_creates_folders",
          "class": "TestLibraryServiceInitialization",
          "signature": "(self, library_service, temp_library_path)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test that initialization creates required folders",
          "line_start": 86,
          "line_end": 92,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_initialize_validates_write_permissions",
          "full_name": "TestLibraryServiceInitialization.test_initialize_validates_write_permissions",
          "class": "TestLibraryServiceInitialization",
          "signature": "(self, library_service, temp_library_path)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test that initialization validates write permissions",
          "line_start": 95,
          "line_end": 98,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_disabled_library_skips_initialization",
          "full_name": "TestLibraryServiceInitialization.test_disabled_library_skips_initialization",
          "class": "TestLibraryServiceInitialization",
          "signature": "(self, mock_database, mock_config_service, mock_event_service)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test that disabled library skips folder creation",
          "line_start": 101,
          "line_end": 107,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_calculate_checksum_sha256",
          "full_name": "TestChecksumCalculation.test_calculate_checksum_sha256",
          "class": "TestChecksumCalculation",
          "signature": "(self, library_service, sample_test_file)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test SHA-256 checksum calculation",
          "line_start": 114,
          "line_end": 118,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_calculate_checksum_consistent",
          "full_name": "TestChecksumCalculation.test_calculate_checksum_consistent",
          "class": "TestChecksumCalculation",
          "signature": "(self, library_service, sample_test_file)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test that checksum calculation is consistent",
          "line_start": 121,
          "line_end": 125,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_calculate_checksum_different_files",
          "full_name": "TestChecksumCalculation.test_calculate_checksum_different_files",
          "class": "TestChecksumCalculation",
          "signature": "(self, library_service, temp_library_path)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test that different files have different checksums",
          "line_start": 128,
          "line_end": 137,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_watch_folder_path_generation",
          "full_name": "TestLibraryPathGeneration.test_watch_folder_path_generation",
          "class": "TestLibraryPathGeneration",
          "signature": "(self, library_service)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test path generation for watch folder files",
          "line_start": 143,
          "line_end": 153,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_printer_path_generation",
          "full_name": "TestLibraryPathGeneration.test_printer_path_generation",
          "class": "TestLibraryPathGeneration",
          "signature": "(self, library_service)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test path generation for printer files",
          "line_start": 155,
          "line_end": 166,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_upload_path_generation",
          "full_name": "TestLibraryPathGeneration.test_upload_path_generation",
          "class": "TestLibraryPathGeneration",
          "signature": "(self, library_service)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test path generation for uploaded files",
          "line_start": 168,
          "line_end": 178,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_path_sharding_distribution",
          "full_name": "TestLibraryPathGeneration.test_path_sharding_distribution",
          "class": "TestLibraryPathGeneration",
          "signature": "(self, library_service)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test that path sharding distributes files across directories",
          "line_start": 180,
          "line_end": 196,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_add_new_file_to_library",
          "full_name": "TestFileAddition.test_add_new_file_to_library",
          "class": "TestFileAddition",
          "signature": "(self, library_service, sample_test_file, mock_database)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test adding a new file to library",
          "line_start": 203,
          "line_end": 218,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_add_duplicate_file_adds_source",
          "full_name": "TestFileAddition.test_add_duplicate_file_adds_source",
          "class": "TestFileAddition",
          "signature": "(self, library_service, sample_test_file, mock_database)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test that adding duplicate file adds source instead of creating new entry",
          "line_start": 221,
          "line_end": 242,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_disk_space_check",
          "full_name": "TestFileAddition.test_disk_space_check",
          "class": "TestFileAddition",
          "signature": "(self, library_service, temp_library_path, mock_database)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test that disk space is checked before copying",
          "line_start": 245,
          "line_end": 259,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_file_copy_preserves_original",
          "full_name": "TestFileAddition.test_file_copy_preserves_original",
          "class": "TestFileAddition",
          "signature": "(self, library_service, sample_test_file, mock_database, temp_library_path)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test that copying file preserves original",
          "line_start": 262,
          "line_end": 272,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_checksum_verification_after_copy",
          "full_name": "TestFileAddition.test_checksum_verification_after_copy",
          "class": "TestFileAddition",
          "signature": "(self, library_service, sample_test_file, mock_database)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test that checksum is verified after copying",
          "line_start": 275,
          "line_end": 284,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_add_multiple_sources",
          "full_name": "TestSourceTracking.test_add_multiple_sources",
          "class": "TestSourceTracking",
          "signature": "(self, library_service, mock_database)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test adding multiple sources to same file",
          "line_start": 291,
          "line_end": 321,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_duplicate_source_not_added",
          "full_name": "TestSourceTracking.test_duplicate_source_not_added",
          "class": "TestSourceTracking",
          "signature": "(self, library_service, mock_database)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test that duplicate sources are not added",
          "line_start": 324,
          "line_end": 342,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_delete_file_with_physical",
          "full_name": "TestFileDeletion.test_delete_file_with_physical",
          "class": "TestFileDeletion",
          "signature": "(self, library_service, mock_database, temp_library_path)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test deleting file including physical file",
          "line_start": 349,
          "line_end": 368,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_delete_file_database_only",
          "full_name": "TestFileDeletion.test_delete_file_database_only",
          "class": "TestFileDeletion",
          "signature": "(self, library_service, mock_database, temp_library_path)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test deleting file from database only",
          "line_start": 371,
          "line_end": 389,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_list_files_with_pagination",
          "full_name": "TestListFiles.test_list_files_with_pagination",
          "class": "TestListFiles",
          "signature": "(self, library_service, mock_database)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test file listing with pagination",
          "line_start": 396,
          "line_end": 409,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_list_files_with_filters",
          "full_name": "TestListFiles.test_list_files_with_filters",
          "class": "TestListFiles",
          "signature": "(self, library_service, mock_database)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test file listing with filters",
          "line_start": 412,
          "line_end": 423,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_reprocess_file",
          "full_name": "TestReprocessing.test_reprocess_file",
          "class": "TestReprocessing",
          "signature": "(self, library_service, mock_database)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test reprocessing file metadata",
          "line_start": 430,
          "line_end": 441,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_reprocess_nonexistent_file",
          "full_name": "TestReprocessing.test_reprocess_nonexistent_file",
          "class": "TestReprocessing",
          "signature": "(self, library_service, mock_database)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test reprocessing non-existent file",
          "line_start": 444,
          "line_end": 450,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_get_statistics",
          "full_name": "TestStatistics.test_get_statistics",
          "class": "TestStatistics",
          "signature": "(self, library_service, mock_database)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test getting library statistics",
          "line_start": 457,
          "line_end": 469,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_add_file_missing_source",
          "full_name": "TestErrorHandling.test_add_file_missing_source",
          "class": "TestErrorHandling",
          "signature": "(self, library_service, sample_test_file)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test adding file without source",
          "line_start": 476,
          "line_end": 482,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_add_file_invalid_source_type",
          "full_name": "TestErrorHandling.test_add_file_invalid_source_type",
          "class": "TestErrorHandling",
          "signature": "(self, library_service, sample_test_file)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test adding file with invalid source type",
          "line_start": 485,
          "line_end": 490,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_database_error_cleanup",
          "full_name": "TestErrorHandling.test_database_error_cleanup",
          "class": "TestErrorHandling",
          "signature": "(self, library_service, sample_test_file, mock_database, temp_library_path)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test that physical file is cleaned up on database error",
          "line_start": 493,
          "line_end": 502,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_concurrent_file_additions",
          "full_name": "TestConcurrency.test_concurrent_file_additions",
          "class": "TestConcurrency",
          "signature": "(self, library_service, mock_database)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test handling concurrent additions of same file",
          "line_start": 512,
          "line_end": 523,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "side_effect",
          "full_name": "TestConcurrency.side_effect",
          "class": "TestConcurrency",
          "signature": "()",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 518,
          "line_end": 521,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_full_file_lifecycle",
          "full_name": "TestIntegration.test_full_file_lifecycle",
          "class": "TestIntegration",
          "signature": "(self, library_service, sample_test_file, mock_database)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test complete file lifecycle: add, list, get, reprocess, delete",
          "line_start": 533,
          "line_end": 558,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "pytest",
          "alias": null,
          "line": 5
        },
        {
          "type": "import",
          "module": "tempfile",
          "alias": null,
          "line": 6
        },
        {
          "type": "import",
          "module": "shutil",
          "alias": null,
          "line": 7
        },
        {
          "type": "import",
          "module": "hashlib",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "pathlib",
          "name": "Path",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "unittest.mock",
          "name": "Mock",
          "alias": null,
          "line": 11
        },
        {
          "type": "from_import",
          "module": "unittest.mock",
          "name": "AsyncMock",
          "alias": null,
          "line": 11
        },
        {
          "type": "from_import",
          "module": "unittest.mock",
          "name": "patch",
          "alias": null,
          "line": 11
        },
        {
          "type": "import",
          "module": "json",
          "alias": null,
          "line": 12
        },
        {
          "type": "from_import",
          "module": "src.services.library_service",
          "name": "LibraryService",
          "alias": null,
          "line": 68
        },
        {
          "type": "from_import",
          "module": "src.services.library_service",
          "name": "LibraryService",
          "alias": null,
          "line": 104
        }
      ],
      "function_calls": [
        {
          "caller": "temp_library_path",
          "callee": "mkdtemp",
          "line": 23,
          "type": "attribute"
        },
        {
          "caller": "temp_library_path",
          "callee": "Path",
          "line": 24,
          "type": "direct"
        },
        {
          "caller": "temp_library_path",
          "callee": "rmtree",
          "line": 25,
          "type": "attribute"
        },
        {
          "caller": "mock_database",
          "callee": "Mock",
          "line": 31,
          "type": "direct"
        },
        {
          "caller": "mock_database",
          "callee": "AsyncMock",
          "line": 32,
          "type": "direct"
        },
        {
          "caller": "mock_database",
          "callee": "AsyncMock",
          "line": 33,
          "type": "direct"
        },
        {
          "caller": "mock_database",
          "callee": "AsyncMock",
          "line": 34,
          "type": "direct"
        },
        {
          "caller": "mock_database",
          "callee": "AsyncMock",
          "line": 35,
          "type": "direct"
        },
        {
          "caller": "mock_database",
          "callee": "AsyncMock",
          "line": 36,
          "type": "direct"
        },
        {
          "caller": "mock_database",
          "callee": "AsyncMock",
          "line": 37,
          "type": "direct"
        },
        {
          "caller": "mock_database",
          "callee": "AsyncMock",
          "line": 38,
          "type": "direct"
        },
        {
          "caller": "mock_database",
          "callee": "AsyncMock",
          "line": 39,
          "type": "direct"
        },
        {
          "caller": "mock_config_service",
          "callee": "Mock",
          "line": 46,
          "type": "direct"
        },
        {
          "caller": "mock_config_service",
          "callee": "Mock",
          "line": 47,
          "type": "direct"
        },
        {
          "caller": "mock_config_service",
          "callee": "str",
          "line": 48,
          "type": "direct"
        },
        {
          "caller": "mock_event_service",
          "callee": "Mock",
          "line": 60,
          "type": "direct"
        },
        {
          "caller": "mock_event_service",
          "callee": "AsyncMock",
          "line": 61,
          "type": "direct"
        },
        {
          "caller": "library_service",
          "callee": "LibraryService",
          "line": 69,
          "type": "direct"
        },
        {
          "caller": "library_service",
          "callee": "initialize",
          "line": 70,
          "type": "attribute"
        },
        {
          "caller": "sample_test_file",
          "callee": "write_bytes",
          "line": 78,
          "type": "attribute"
        },
        {
          "caller": "TestLibraryServiceInitialization.test_initialize_creates_folders",
          "callee": "exists",
          "line": 88,
          "type": "attribute"
        },
        {
          "caller": "TestLibraryServiceInitialization.test_initialize_creates_folders",
          "callee": "exists",
          "line": 89,
          "type": "attribute"
        },
        {
          "caller": "TestLibraryServiceInitialization.test_initialize_creates_folders",
          "callee": "exists",
          "line": 90,
          "type": "attribute"
        },
        {
          "caller": "TestLibraryServiceInitialization.test_initialize_creates_folders",
          "callee": "exists",
          "line": 91,
          "type": "attribute"
        },
        {
          "caller": "TestLibraryServiceInitialization.test_initialize_creates_folders",
          "callee": "exists",
          "line": 92,
          "type": "attribute"
        },
        {
          "caller": "TestLibraryServiceInitialization.test_disabled_library_skips_initialization",
          "callee": "LibraryService",
          "line": 105,
          "type": "direct"
        },
        {
          "caller": "TestLibraryServiceInitialization.test_disabled_library_skips_initialization",
          "callee": "initialize",
          "line": 106,
          "type": "attribute"
        },
        {
          "caller": "TestChecksumCalculation.test_calculate_checksum_sha256",
          "callee": "calculate_checksum",
          "line": 116,
          "type": "attribute"
        },
        {
          "caller": "TestChecksumCalculation.test_calculate_checksum_sha256",
          "callee": "len",
          "line": 118,
          "type": "direct"
        },
        {
          "caller": "TestChecksumCalculation.test_calculate_checksum_consistent",
          "callee": "calculate_checksum",
          "line": 123,
          "type": "attribute"
        },
        {
          "caller": "TestChecksumCalculation.test_calculate_checksum_consistent",
          "callee": "calculate_checksum",
          "line": 124,
          "type": "attribute"
        },
        {
          "caller": "TestChecksumCalculation.test_calculate_checksum_different_files",
          "callee": "write_bytes",
          "line": 132,
          "type": "attribute"
        },
        {
          "caller": "TestChecksumCalculation.test_calculate_checksum_different_files",
          "callee": "write_bytes",
          "line": 133,
          "type": "attribute"
        },
        {
          "caller": "TestChecksumCalculation.test_calculate_checksum_different_files",
          "callee": "calculate_checksum",
          "line": 135,
          "type": "attribute"
        },
        {
          "caller": "TestChecksumCalculation.test_calculate_checksum_different_files",
          "callee": "calculate_checksum",
          "line": 136,
          "type": "attribute"
        },
        {
          "caller": "TestLibraryPathGeneration.test_watch_folder_path_generation",
          "callee": "get_library_path_for_file",
          "line": 146,
          "type": "attribute"
        },
        {
          "caller": "TestLibraryPathGeneration.test_watch_folder_path_generation",
          "callee": "str",
          "line": 150,
          "type": "direct"
        },
        {
          "caller": "TestLibraryPathGeneration.test_watch_folder_path_generation",
          "callee": "str",
          "line": 151,
          "type": "direct"
        },
        {
          "caller": "TestLibraryPathGeneration.test_watch_folder_path_generation",
          "callee": "str",
          "line": 152,
          "type": "direct"
        },
        {
          "caller": "TestLibraryPathGeneration.test_printer_path_generation",
          "callee": "get_library_path_for_file",
          "line": 158,
          "type": "attribute"
        },
        {
          "caller": "TestLibraryPathGeneration.test_printer_path_generation",
          "callee": "str",
          "line": 162,
          "type": "direct"
        },
        {
          "caller": "TestLibraryPathGeneration.test_printer_path_generation",
          "callee": "str",
          "line": 163,
          "type": "direct"
        },
        {
          "caller": "TestLibraryPathGeneration.test_printer_path_generation",
          "callee": "str",
          "line": 164,
          "type": "direct"
        },
        {
          "caller": "TestLibraryPathGeneration.test_printer_path_generation",
          "callee": "str",
          "line": 165,
          "type": "direct"
        },
        {
          "caller": "TestLibraryPathGeneration.test_printer_path_generation",
          "callee": "str",
          "line": 166,
          "type": "direct"
        },
        {
          "caller": "TestLibraryPathGeneration.test_upload_path_generation",
          "callee": "get_library_path_for_file",
          "line": 171,
          "type": "attribute"
        },
        {
          "caller": "TestLibraryPathGeneration.test_upload_path_generation",
          "callee": "str",
          "line": 175,
          "type": "direct"
        },
        {
          "caller": "TestLibraryPathGeneration.test_upload_path_generation",
          "callee": "str",
          "line": 176,
          "type": "direct"
        },
        {
          "caller": "TestLibraryPathGeneration.test_upload_path_generation",
          "callee": "str",
          "line": 177,
          "type": "direct"
        },
        {
          "caller": "TestLibraryPathGeneration.test_path_sharding_distribution",
          "callee": "get_library_path_for_file",
          "line": 190,
          "type": "attribute"
        },
        {
          "caller": "TestLibraryPathGeneration.test_path_sharding_distribution",
          "callee": "len",
          "line": 196,
          "type": "direct"
        },
        {
          "caller": "TestLibraryPathGeneration.test_path_sharding_distribution",
          "callee": "set",
          "line": 196,
          "type": "direct"
        },
        {
          "caller": "TestLibraryPathGeneration.test_path_sharding_distribution",
          "callee": "len",
          "line": 196,
          "type": "direct"
        },
        {
          "caller": "TestFileAddition.test_add_new_file_to_library",
          "callee": "add_file_to_library",
          "line": 211,
          "type": "attribute"
        },
        {
          "caller": "TestFileAddition.test_add_new_file_to_library",
          "callee": "assert_called_once",
          "line": 218,
          "type": "attribute"
        },
        {
          "caller": "TestFileAddition.test_add_duplicate_file_adds_source",
          "callee": "add_file_to_library",
          "line": 236,
          "type": "attribute"
        },
        {
          "caller": "TestFileAddition.test_add_duplicate_file_adds_source",
          "callee": "assert_not_called",
          "line": 241,
          "type": "attribute"
        },
        {
          "caller": "TestFileAddition.test_add_duplicate_file_adds_source",
          "callee": "assert_called",
          "line": 242,
          "type": "attribute"
        },
        {
          "caller": "TestFileAddition.test_disk_space_check",
          "callee": "write_bytes",
          "line": 249,
          "type": "attribute"
        },
        {
          "caller": "TestFileAddition.test_disk_space_check",
          "callee": "patch",
          "line": 251,
          "type": "direct"
        },
        {
          "caller": "TestFileAddition.test_disk_space_check",
          "callee": "Mock",
          "line": 252,
          "type": "direct"
        },
        {
          "caller": "TestFileAddition.test_disk_space_check",
          "callee": "raises",
          "line": 256,
          "type": "attribute"
        },
        {
          "caller": "TestFileAddition.test_disk_space_check",
          "callee": "add_file_to_library",
          "line": 257,
          "type": "attribute"
        },
        {
          "caller": "TestFileAddition.test_file_copy_preserves_original",
          "callee": "add_file_to_library",
          "line": 266,
          "type": "attribute"
        },
        {
          "caller": "TestFileAddition.test_file_copy_preserves_original",
          "callee": "exists",
          "line": 271,
          "type": "attribute"
        },
        {
          "caller": "TestFileAddition.test_file_copy_preserves_original",
          "callee": "read_bytes",
          "line": 272,
          "type": "attribute"
        },
        {
          "caller": "TestFileAddition.test_checksum_verification_after_copy",
          "callee": "add_file_to_library",
          "line": 280,
          "type": "attribute"
        },
        {
          "caller": "TestSourceTracking.test_add_multiple_sources",
          "callee": "isoformat",
          "line": 298,
          "type": "attribute"
        },
        {
          "caller": "TestSourceTracking.test_add_multiple_sources",
          "callee": "now",
          "line": 298,
          "type": "attribute"
        },
        {
          "caller": "TestSourceTracking.test_add_multiple_sources",
          "callee": "isoformat",
          "line": 304,
          "type": "attribute"
        },
        {
          "caller": "TestSourceTracking.test_add_multiple_sources",
          "callee": "now",
          "line": 304,
          "type": "attribute"
        },
        {
          "caller": "TestSourceTracking.test_add_multiple_sources",
          "callee": "dumps",
          "line": 310,
          "type": "attribute"
        },
        {
          "caller": "TestSourceTracking.test_add_multiple_sources",
          "callee": "add_file_source",
          "line": 314,
          "type": "attribute"
        },
        {
          "caller": "TestSourceTracking.test_add_multiple_sources",
          "callee": "assert_called",
          "line": 317,
          "type": "attribute"
        },
        {
          "caller": "TestSourceTracking.test_add_multiple_sources",
          "callee": "loads",
          "line": 320,
          "type": "attribute"
        },
        {
          "caller": "TestSourceTracking.test_add_multiple_sources",
          "callee": "len",
          "line": 321,
          "type": "direct"
        },
        {
          "caller": "TestSourceTracking.test_duplicate_source_not_added",
          "callee": "dumps",
          "line": 335,
          "type": "attribute"
        },
        {
          "caller": "TestSourceTracking.test_duplicate_source_not_added",
          "callee": "add_file_source",
          "line": 339,
          "type": "attribute"
        },
        {
          "caller": "TestSourceTracking.test_duplicate_source_not_added",
          "callee": "assert_not_called",
          "line": 342,
          "type": "attribute"
        },
        {
          "caller": "TestFileDeletion.test_delete_file_with_physical",
          "callee": "mkdir",
          "line": 353,
          "type": "attribute"
        },
        {
          "caller": "TestFileDeletion.test_delete_file_with_physical",
          "callee": "write_bytes",
          "line": 354,
          "type": "attribute"
        },
        {
          "caller": "TestFileDeletion.test_delete_file_with_physical",
          "callee": "delete_file",
          "line": 364,
          "type": "attribute"
        },
        {
          "caller": "TestFileDeletion.test_delete_file_with_physical",
          "callee": "exists",
          "line": 367,
          "type": "attribute"
        },
        {
          "caller": "TestFileDeletion.test_delete_file_with_physical",
          "callee": "assert_called_once",
          "line": 368,
          "type": "attribute"
        },
        {
          "caller": "TestFileDeletion.test_delete_file_database_only",
          "callee": "mkdir",
          "line": 374,
          "type": "attribute"
        },
        {
          "caller": "TestFileDeletion.test_delete_file_database_only",
          "callee": "write_bytes",
          "line": 375,
          "type": "attribute"
        },
        {
          "caller": "TestFileDeletion.test_delete_file_database_only",
          "callee": "delete_file",
          "line": 385,
          "type": "attribute"
        },
        {
          "caller": "TestFileDeletion.test_delete_file_database_only",
          "callee": "exists",
          "line": 388,
          "type": "attribute"
        },
        {
          "caller": "TestFileDeletion.test_delete_file_database_only",
          "callee": "assert_called_once",
          "line": 389,
          "type": "attribute"
        },
        {
          "caller": "TestListFiles.test_list_files_with_pagination",
          "callee": "range",
          "line": 400,
          "type": "direct"
        },
        {
          "caller": "TestListFiles.test_list_files_with_pagination",
          "callee": "list_files",
          "line": 405,
          "type": "attribute"
        },
        {
          "caller": "TestListFiles.test_list_files_with_pagination",
          "callee": "len",
          "line": 407,
          "type": "direct"
        },
        {
          "caller": "TestListFiles.test_list_files_with_pagination",
          "callee": "assert_called_once",
          "line": 409,
          "type": "attribute"
        },
        {
          "caller": "TestListFiles.test_list_files_with_filters",
          "callee": "list_files",
          "line": 420,
          "type": "attribute"
        },
        {
          "caller": "TestReprocessing.test_reprocess_file",
          "callee": "reprocess_file",
          "line": 439,
          "type": "attribute"
        },
        {
          "caller": "TestReprocessing.test_reprocess_nonexistent_file",
          "callee": "reprocess_file",
          "line": 448,
          "type": "attribute"
        },
        {
          "caller": "TestStatistics.test_get_statistics",
          "callee": "get_library_statistics",
          "line": 466,
          "type": "attribute"
        },
        {
          "caller": "TestStatistics.test_get_statistics",
          "callee": "assert_called_once",
          "line": 469,
          "type": "attribute"
        },
        {
          "caller": "TestErrorHandling.test_add_file_missing_source",
          "callee": "raises",
          "line": 478,
          "type": "attribute"
        },
        {
          "caller": "TestErrorHandling.test_add_file_missing_source",
          "callee": "Path",
          "line": 479,
          "type": "direct"
        },
        {
          "caller": "TestErrorHandling.test_add_file_missing_source",
          "callee": "add_file_to_library",
          "line": 480,
          "type": "attribute"
        },
        {
          "caller": "TestErrorHandling.test_add_file_invalid_source_type",
          "callee": "raises",
          "line": 487,
          "type": "attribute"
        },
        {
          "caller": "TestErrorHandling.test_add_file_invalid_source_type",
          "callee": "add_file_to_library",
          "line": 488,
          "type": "attribute"
        },
        {
          "caller": "TestErrorHandling.test_database_error_cleanup",
          "callee": "Exception",
          "line": 495,
          "type": "direct"
        },
        {
          "caller": "TestErrorHandling.test_database_error_cleanup",
          "callee": "raises",
          "line": 499,
          "type": "attribute"
        },
        {
          "caller": "TestErrorHandling.test_database_error_cleanup",
          "callee": "add_file_to_library",
          "line": 500,
          "type": "attribute"
        },
        {
          "caller": "TestIntegration.test_full_file_lifecycle",
          "callee": "add_file_to_library",
          "line": 537,
          "type": "attribute"
        },
        {
          "caller": "TestIntegration.test_full_file_lifecycle",
          "callee": "get_file_by_checksum",
          "line": 549,
          "type": "attribute"
        },
        {
          "caller": "TestIntegration.test_full_file_lifecycle",
          "callee": "reprocess_file",
          "line": 553,
          "type": "attribute"
        },
        {
          "caller": "TestIntegration.test_full_file_lifecycle",
          "callee": "delete_file",
          "line": 557,
          "type": "attribute"
        }
      ],
      "error": null
    },
    {
      "filepath": "tests\\backend\\test_performance.py",
      "functions": [
        {
          "name": "measure_performance",
          "full_name": "PerformanceTestBase.measure_performance",
          "class": "PerformanceTestBase",
          "signature": "(self, func)",
          "return_type": "",
          "decorators": [],
          "docstring": "Measure performance metrics for a function execution",
          "line_start": 44,
          "line_end": 79,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "load_test",
          "full_name": "PerformanceTestBase.load_test",
          "class": "PerformanceTestBase",
          "signature": "(self, async_func, concurrent_requests: int, total_requests: int)",
          "return_type": "",
          "decorators": [],
          "docstring": "Execute load test with concurrent requests",
          "line_start": 81,
          "line_end": 111,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "bounded_request",
          "full_name": "PerformanceTestBase.bounded_request",
          "class": "PerformanceTestBase",
          "signature": "()",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 85,
          "line_end": 87,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_large_dataset_queries",
          "full_name": "TestDatabasePerformance.test_large_dataset_queries",
          "class": "TestDatabasePerformance",
          "signature": "(self, temp_database, performance_test_data)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test database performance with large datasets",
          "line_start": 117,
          "line_end": 193,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "insert_large_dataset",
          "full_name": "TestDatabasePerformance.insert_large_dataset",
          "class": "TestDatabasePerformance",
          "signature": "()",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 126,
          "line_end": 163,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "complex_query",
          "full_name": "TestDatabasePerformance.complex_query",
          "class": "TestDatabasePerformance",
          "signature": "()",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 172,
          "line_end": 186,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_concurrent_database_access",
          "full_name": "TestDatabasePerformance.test_concurrent_database_access",
          "class": "TestDatabasePerformance",
          "signature": "(self, temp_database)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test database performance under concurrent access",
          "line_start": 195,
          "line_end": 262,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "database_worker",
          "full_name": "TestDatabasePerformance.database_worker",
          "class": "TestDatabasePerformance",
          "signature": "(worker_id: int, operations: int)",
          "return_type": "",
          "decorators": [],
          "docstring": "Simulate concurrent database operations",
          "line_start": 197,
          "line_end": 237,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_database_indexing_performance",
          "full_name": "TestDatabasePerformance.test_database_indexing_performance",
          "class": "TestDatabasePerformance",
          "signature": "(self, temp_database)",
          "return_type": "",
          "decorators": [
            "pytest.mark.benchmark"
          ],
          "docstring": "Test impact of database indexing on query performance",
          "line_start": 265,
          "line_end": 306,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "query_without_index",
          "full_name": "TestDatabasePerformance.query_without_index",
          "class": "TestDatabasePerformance",
          "signature": "()",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 283,
          "line_end": 290,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_concurrent_api_requests",
          "full_name": "TestAPIPerformance.test_concurrent_api_requests",
          "class": "TestAPIPerformance",
          "signature": "(self, api_client, populated_database, test_config)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test API performance with concurrent requests",
          "line_start": 313,
          "line_end": 356,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "api_request",
          "full_name": "TestAPIPerformance.api_request",
          "class": "TestAPIPerformance",
          "signature": "()",
          "return_type": "",
          "decorators": [],
          "docstring": "Simulate API request",
          "line_start": 316,
          "line_end": 334,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_large_response_performance",
          "full_name": "TestAPIPerformance.test_large_response_performance",
          "class": "TestAPIPerformance",
          "signature": "(self, api_client, test_config)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test API performance with large response payloads",
          "line_start": 358,
          "line_end": 420,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "create_large_dataset_response",
          "full_name": "TestAPIPerformance.create_large_dataset_response",
          "class": "TestAPIPerformance",
          "signature": "()",
          "return_type": "",
          "decorators": [],
          "docstring": "Create large dataset for response testing",
          "line_start": 361,
          "line_end": 400,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "serialize_response",
          "full_name": "TestAPIPerformance.serialize_response",
          "class": "TestAPIPerformance",
          "signature": "()",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 411,
          "line_end": 412,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_websocket_performance",
          "full_name": "TestAPIPerformance.test_websocket_performance",
          "class": "TestAPIPerformance",
          "signature": "(self, mock_websocket)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test WebSocket performance under high message frequency",
          "line_start": 423,
          "line_end": 487,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "__init__",
          "full_name": "WebSocketLoadTester.__init__",
          "class": "WebSocketLoadTester",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 427,
          "line_end": 431,
          "access_level": "dunder",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "send_high_frequency_updates",
          "full_name": "WebSocketLoadTester.send_high_frequency_updates",
          "class": "WebSocketLoadTester",
          "signature": "(self, messages_per_second: int, duration_seconds: int)",
          "return_type": "",
          "decorators": [],
          "docstring": "Send high-frequency updates to test WebSocket performance",
          "line_start": 433,
          "line_end": 456,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_performance_metrics",
          "full_name": "WebSocketLoadTester.get_performance_metrics",
          "class": "WebSocketLoadTester",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 458,
          "line_end": 467,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_large_file_download_performance",
          "full_name": "TestFileDownloadPerformance.test_large_file_download_performance",
          "class": "TestFileDownloadPerformance",
          "signature": "(self, temp_download_directory)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test performance when downloading large 3D model files",
          "line_start": 493,
          "line_end": 539,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "simulate_large_file_download",
          "full_name": "TestFileDownloadPerformance.simulate_large_file_download",
          "class": "TestFileDownloadPerformance",
          "signature": "(file_size_mb: int)",
          "return_type": "",
          "decorators": [],
          "docstring": "Simulate downloading a large file",
          "line_start": 496,
          "line_end": 528,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_concurrent_file_downloads",
          "full_name": "TestFileDownloadPerformance.test_concurrent_file_downloads",
          "class": "TestFileDownloadPerformance",
          "signature": "(self, temp_download_directory)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test performance with multiple concurrent file downloads",
          "line_start": 541,
          "line_end": 599,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "download_worker",
          "full_name": "TestFileDownloadPerformance.download_worker",
          "class": "TestFileDownloadPerformance",
          "signature": "(worker_id: int, file_count: int)",
          "return_type": "",
          "decorators": [],
          "docstring": "Simulate concurrent file downloads",
          "line_start": 544,
          "line_end": 572,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_memory_usage_under_load",
          "full_name": "TestMemoryAndResourceUsage.test_memory_usage_under_load",
          "class": "TestMemoryAndResourceUsage",
          "signature": "(self, populated_database)",
          "return_type": "",
          "decorators": [
            "memory_profiler.profile"
          ],
          "docstring": "Test memory usage patterns under various load conditions",
          "line_start": 606,
          "line_end": 661,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "simulate_heavy_workload",
          "full_name": "TestMemoryAndResourceUsage.simulate_heavy_workload",
          "class": "TestMemoryAndResourceUsage",
          "signature": "()",
          "return_type": "",
          "decorators": [],
          "docstring": "Simulate heavy workload to test memory usage",
          "line_start": 609,
          "line_end": 639,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_database_connection_pooling_performance",
          "full_name": "TestMemoryAndResourceUsage.test_database_connection_pooling_performance",
          "class": "TestMemoryAndResourceUsage",
          "signature": "(self, temp_database)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test database connection pooling efficiency",
          "line_start": 663,
          "line_end": 753,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "__init__",
          "full_name": "DatabaseConnectionPool.__init__",
          "class": "DatabaseConnectionPool",
          "signature": "(self, max_connections)",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 667,
          "line_end": 677,
          "access_level": "dunder",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_connection",
          "full_name": "DatabaseConnectionPool.get_connection",
          "class": "DatabaseConnectionPool",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 679,
          "line_end": 685,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "return_connection",
          "full_name": "DatabaseConnectionPool.return_connection",
          "class": "DatabaseConnectionPool",
          "signature": "(self, conn)",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 687,
          "line_end": 690,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "close_all",
          "full_name": "DatabaseConnectionPool.close_all",
          "class": "DatabaseConnectionPool",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 692,
          "line_end": 694,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "database_operation_with_pool",
          "full_name": "TestMemoryAndResourceUsage.database_operation_with_pool",
          "class": "TestMemoryAndResourceUsage",
          "signature": "()",
          "return_type": "",
          "decorators": [],
          "docstring": "Simulate database operations using connection pool",
          "line_start": 699,
          "line_end": 715,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_cpu_usage_optimization",
          "full_name": "TestMemoryAndResourceUsage.test_cpu_usage_optimization",
          "class": "TestMemoryAndResourceUsage",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test CPU usage under various computational loads",
          "line_start": 755,
          "line_end": 806,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "cpu_intensive_task",
          "full_name": "TestMemoryAndResourceUsage.cpu_intensive_task",
          "class": "TestMemoryAndResourceUsage",
          "signature": "(complexity_level: int)",
          "return_type": "",
          "decorators": [],
          "docstring": "Simulate CPU-intensive tasks (e.g., 3D file processing)",
          "line_start": 758,
          "line_end": 775,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "pytest",
          "alias": null,
          "line": 11
        },
        {
          "type": "import",
          "module": "asyncio",
          "alias": null,
          "line": 12
        },
        {
          "type": "import",
          "module": "time",
          "alias": null,
          "line": 13
        },
        {
          "type": "import",
          "module": "threading",
          "alias": null,
          "line": 14
        },
        {
          "type": "import",
          "module": "sqlite3",
          "alias": null,
          "line": 15
        },
        {
          "type": "import",
          "module": "tempfile",
          "alias": null,
          "line": 16
        },
        {
          "type": "import",
          "module": "json",
          "alias": null,
          "line": 17
        },
        {
          "type": "import",
          "module": "psutil",
          "alias": null,
          "line": 18
        },
        {
          "type": "import",
          "module": "concurrent.futures",
          "alias": null,
          "line": 19
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 20
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "timezone",
          "alias": null,
          "line": 20
        },
        {
          "type": "from_import",
          "module": "unittest.mock",
          "name": "patch",
          "alias": null,
          "line": 21
        },
        {
          "type": "from_import",
          "module": "unittest.mock",
          "name": "Mock",
          "alias": null,
          "line": 21
        },
        {
          "type": "from_import",
          "module": "unittest.mock",
          "name": "MagicMock",
          "alias": null,
          "line": 21
        },
        {
          "type": "from_import",
          "module": "unittest.mock",
          "name": "AsyncMock",
          "alias": null,
          "line": 21
        },
        {
          "type": "from_import",
          "module": "dataclasses",
          "name": "dataclass",
          "alias": null,
          "line": 22
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "List",
          "alias": null,
          "line": 23
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Dict",
          "alias": null,
          "line": 23
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Any",
          "alias": null,
          "line": 23
        },
        {
          "type": "import",
          "module": "memory_profiler",
          "alias": null,
          "line": 24
        },
        {
          "type": "import",
          "module": "os",
          "alias": null,
          "line": 498
        },
        {
          "type": "import",
          "module": "os",
          "alias": null,
          "line": 546
        },
        {
          "type": "import",
          "module": "gc",
          "alias": null,
          "line": 653
        },
        {
          "type": "import",
          "module": "math",
          "alias": null,
          "line": 760
        }
      ],
      "function_calls": [
        {
          "caller": "PerformanceTestBase.measure_performance",
          "callee": "Process",
          "line": 46,
          "type": "attribute"
        },
        {
          "caller": "PerformanceTestBase.measure_performance",
          "callee": "perf_counter",
          "line": 49,
          "type": "attribute"
        },
        {
          "caller": "PerformanceTestBase.measure_performance",
          "callee": "memory_info",
          "line": 50,
          "type": "attribute"
        },
        {
          "caller": "PerformanceTestBase.measure_performance",
          "callee": "cpu_percent",
          "line": 51,
          "type": "attribute"
        },
        {
          "caller": "PerformanceTestBase.measure_performance",
          "callee": "func",
          "line": 55,
          "type": "direct"
        },
        {
          "caller": "PerformanceTestBase.measure_performance",
          "callee": "str",
          "line": 61,
          "type": "direct"
        },
        {
          "caller": "PerformanceTestBase.measure_performance",
          "callee": "perf_counter",
          "line": 64,
          "type": "attribute"
        },
        {
          "caller": "PerformanceTestBase.measure_performance",
          "callee": "memory_info",
          "line": 65,
          "type": "attribute"
        },
        {
          "caller": "PerformanceTestBase.measure_performance",
          "callee": "cpu_percent",
          "line": 66,
          "type": "attribute"
        },
        {
          "caller": "PerformanceTestBase.load_test",
          "callee": "Semaphore",
          "line": 83,
          "type": "attribute"
        },
        {
          "caller": "PerformanceTestBase.bounded_request",
          "callee": "async_func",
          "line": 87,
          "type": "direct"
        },
        {
          "caller": "PerformanceTestBase.load_test",
          "callee": "perf_counter",
          "line": 89,
          "type": "attribute"
        },
        {
          "caller": "PerformanceTestBase.load_test",
          "callee": "bounded_request",
          "line": 91,
          "type": "direct"
        },
        {
          "caller": "PerformanceTestBase.load_test",
          "callee": "range",
          "line": 91,
          "type": "direct"
        },
        {
          "caller": "PerformanceTestBase.load_test",
          "callee": "gather",
          "line": 92,
          "type": "attribute"
        },
        {
          "caller": "PerformanceTestBase.load_test",
          "callee": "perf_counter",
          "line": 94,
          "type": "attribute"
        },
        {
          "caller": "PerformanceTestBase.load_test",
          "callee": "sum",
          "line": 98,
          "type": "direct"
        },
        {
          "caller": "PerformanceTestBase.load_test",
          "callee": "isinstance",
          "line": 98,
          "type": "direct"
        },
        {
          "caller": "PerformanceTestBase.load_test",
          "callee": "len",
          "line": 99,
          "type": "direct"
        },
        {
          "caller": "PerformanceTestBase.load_test",
          "callee": "len",
          "line": 100,
          "type": "direct"
        },
        {
          "caller": "PerformanceTestBase.load_test",
          "callee": "len",
          "line": 101,
          "type": "direct"
        },
        {
          "caller": "PerformanceTestBase.load_test",
          "callee": "len",
          "line": 110,
          "type": "direct"
        },
        {
          "caller": "TestDatabasePerformance.test_large_dataset_queries",
          "callee": "connect",
          "line": 119,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.test_large_dataset_queries",
          "callee": "cursor",
          "line": 121,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.insert_large_dataset",
          "callee": "range",
          "line": 129,
          "type": "direct"
        },
        {
          "caller": "TestDatabasePerformance.insert_large_dataset",
          "callee": "append",
          "line": 130,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.insert_large_dataset",
          "callee": "executemany",
          "line": 139,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.insert_large_dataset",
          "callee": "range",
          "line": 146,
          "type": "direct"
        },
        {
          "caller": "TestDatabasePerformance.insert_large_dataset",
          "callee": "append",
          "line": 148,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.insert_large_dataset",
          "callee": "float",
          "line": 153,
          "type": "direct"
        },
        {
          "caller": "TestDatabasePerformance.insert_large_dataset",
          "callee": "isoformat",
          "line": 154,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.insert_large_dataset",
          "callee": "now",
          "line": 154,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.insert_large_dataset",
          "callee": "executemany",
          "line": 158,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.insert_large_dataset",
          "callee": "commit",
          "line": 163,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.test_large_dataset_queries",
          "callee": "measure_performance",
          "line": 166,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.complex_query",
          "callee": "fetchall",
          "line": 173,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.complex_query",
          "callee": "execute",
          "line": 173,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.test_large_dataset_queries",
          "callee": "measure_performance",
          "line": 188,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.test_large_dataset_queries",
          "callee": "len",
          "line": 191,
          "type": "direct"
        },
        {
          "caller": "TestDatabasePerformance.test_large_dataset_queries",
          "callee": "close",
          "line": 193,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.database_worker",
          "callee": "connect",
          "line": 199,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.database_worker",
          "callee": "cursor",
          "line": 200,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.database_worker",
          "callee": "range",
          "line": 203,
          "type": "direct"
        },
        {
          "caller": "TestDatabasePerformance.database_worker",
          "callee": "execute",
          "line": 207,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.database_worker",
          "callee": "fetchone",
          "line": 208,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.database_worker",
          "callee": "append",
          "line": 209,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.database_worker",
          "callee": "execute",
          "line": 212,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.database_worker",
          "callee": "float",
          "line": 214,
          "type": "direct"
        },
        {
          "caller": "TestDatabasePerformance.database_worker",
          "callee": "commit",
          "line": 215,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.database_worker",
          "callee": "append",
          "line": 216,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.database_worker",
          "callee": "execute",
          "line": 219,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.database_worker",
          "callee": "isoformat",
          "line": 228,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.database_worker",
          "callee": "now",
          "line": 228,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.database_worker",
          "callee": "commit",
          "line": 230,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.database_worker",
          "callee": "append",
          "line": 231,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.database_worker",
          "callee": "append",
          "line": 234,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.database_worker",
          "callee": "str",
          "line": 234,
          "type": "direct"
        },
        {
          "caller": "TestDatabasePerformance.database_worker",
          "callee": "close",
          "line": 236,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.test_concurrent_database_access",
          "callee": "perf_counter",
          "line": 240,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.test_concurrent_database_access",
          "callee": "ThreadPoolExecutor",
          "line": 242,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.test_concurrent_database_access",
          "callee": "submit",
          "line": 244,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.test_concurrent_database_access",
          "callee": "range",
          "line": 245,
          "type": "direct"
        },
        {
          "caller": "TestDatabasePerformance.test_concurrent_database_access",
          "callee": "as_completed",
          "line": 249,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.test_concurrent_database_access",
          "callee": "extend",
          "line": 250,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.test_concurrent_database_access",
          "callee": "result",
          "line": 250,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.test_concurrent_database_access",
          "callee": "perf_counter",
          "line": 252,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.test_concurrent_database_access",
          "callee": "sum",
          "line": 256,
          "type": "direct"
        },
        {
          "caller": "TestDatabasePerformance.test_concurrent_database_access",
          "callee": "len",
          "line": 257,
          "type": "direct"
        },
        {
          "caller": "TestDatabasePerformance.test_concurrent_database_access",
          "callee": "len",
          "line": 258,
          "type": "direct"
        },
        {
          "caller": "TestDatabasePerformance.test_concurrent_database_access",
          "callee": "len",
          "line": 261,
          "type": "direct"
        },
        {
          "caller": "TestDatabasePerformance.test_database_indexing_performance",
          "callee": "connect",
          "line": 267,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.test_database_indexing_performance",
          "callee": "cursor",
          "line": 268,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.test_database_indexing_performance",
          "callee": "float",
          "line": 273,
          "type": "direct"
        },
        {
          "caller": "TestDatabasePerformance.test_database_indexing_performance",
          "callee": "isoformat",
          "line": 273,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.test_database_indexing_performance",
          "callee": "now",
          "line": 273,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.test_database_indexing_performance",
          "callee": "range",
          "line": 274,
          "type": "direct"
        },
        {
          "caller": "TestDatabasePerformance.test_database_indexing_performance",
          "callee": "executemany",
          "line": 276,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.test_database_indexing_performance",
          "callee": "commit",
          "line": 280,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.query_without_index",
          "callee": "fetchall",
          "line": 284,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.query_without_index",
          "callee": "execute",
          "line": 284,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.test_database_indexing_performance",
          "callee": "measure_performance",
          "line": 292,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.test_database_indexing_performance",
          "callee": "execute",
          "line": 295,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.test_database_indexing_performance",
          "callee": "execute",
          "line": 296,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.test_database_indexing_performance",
          "callee": "execute",
          "line": 297,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.test_database_indexing_performance",
          "callee": "measure_performance",
          "line": 300,
          "type": "attribute"
        },
        {
          "caller": "TestDatabasePerformance.test_database_indexing_performance",
          "callee": "close",
          "line": 306,
          "type": "attribute"
        },
        {
          "caller": "TestAPIPerformance.api_request",
          "callee": "patch",
          "line": 318,
          "type": "direct"
        },
        {
          "caller": "TestAPIPerformance.api_request",
          "callee": "get",
          "line": 322,
          "type": "attribute"
        },
        {
          "caller": "TestAPIPerformance.api_request",
          "callee": "hasattr",
          "line": 326,
          "type": "direct"
        },
        {
          "caller": "TestAPIPerformance.api_request",
          "callee": "total_seconds",
          "line": 326,
          "type": "attribute"
        },
        {
          "caller": "TestAPIPerformance.api_request",
          "callee": "str",
          "line": 332,
          "type": "direct"
        },
        {
          "caller": "TestAPIPerformance.test_concurrent_api_requests",
          "callee": "load_test",
          "line": 343,
          "type": "attribute"
        },
        {
          "caller": "TestAPIPerformance.create_large_dataset_response",
          "callee": "float",
          "line": 374,
          "type": "direct"
        },
        {
          "caller": "TestAPIPerformance.create_large_dataset_response",
          "callee": "float",
          "line": 381,
          "type": "direct"
        },
        {
          "caller": "TestAPIPerformance.create_large_dataset_response",
          "callee": "float",
          "line": 382,
          "type": "direct"
        },
        {
          "caller": "TestAPIPerformance.create_large_dataset_response",
          "callee": "range",
          "line": 385,
          "type": "direct"
        },
        {
          "caller": "TestAPIPerformance.test_large_response_performance",
          "callee": "measure_performance",
          "line": 403,
          "type": "attribute"
        },
        {
          "caller": "TestAPIPerformance.serialize_response",
          "callee": "dumps",
          "line": 412,
          "type": "attribute"
        },
        {
          "caller": "TestAPIPerformance.test_large_response_performance",
          "callee": "measure_performance",
          "line": 414,
          "type": "attribute"
        },
        {
          "caller": "TestAPIPerformance.test_large_response_performance",
          "callee": "len",
          "line": 419,
          "type": "direct"
        },
        {
          "caller": "WebSocketLoadTester.send_high_frequency_updates",
          "callee": "perf_counter",
          "line": 435,
          "type": "attribute"
        },
        {
          "caller": "WebSocketLoadTester.send_high_frequency_updates",
          "callee": "range",
          "line": 439,
          "type": "direct"
        },
        {
          "caller": "WebSocketLoadTester.send_high_frequency_updates",
          "callee": "float",
          "line": 444,
          "type": "direct"
        },
        {
          "caller": "WebSocketLoadTester.send_high_frequency_updates",
          "callee": "send",
          "line": 450,
          "type": "attribute"
        },
        {
          "caller": "WebSocketLoadTester.send_high_frequency_updates",
          "callee": "dumps",
          "line": 450,
          "type": "attribute"
        },
        {
          "caller": "WebSocketLoadTester.send_high_frequency_updates",
          "callee": "sleep",
          "line": 454,
          "type": "attribute"
        },
        {
          "caller": "WebSocketLoadTester.send_high_frequency_updates",
          "callee": "perf_counter",
          "line": 456,
          "type": "attribute"
        },
        {
          "caller": "TestAPIPerformance.test_websocket_performance",
          "callee": "WebSocketLoadTester",
          "line": 477,
          "type": "direct"
        },
        {
          "caller": "TestAPIPerformance.test_websocket_performance",
          "callee": "send_high_frequency_updates",
          "line": 479,
          "type": "attribute"
        },
        {
          "caller": "TestAPIPerformance.test_websocket_performance",
          "callee": "get_performance_metrics",
          "line": 480,
          "type": "attribute"
        },
        {
          "caller": "TestAPIPerformance.test_websocket_performance",
          "callee": "abs",
          "line": 487,
          "type": "direct"
        },
        {
          "caller": "TestFileDownloadPerformance.simulate_large_file_download",
          "callee": "join",
          "line": 504,
          "type": "attribute"
        },
        {
          "caller": "TestFileDownloadPerformance.simulate_large_file_download",
          "callee": "perf_counter",
          "line": 506,
          "type": "attribute"
        },
        {
          "caller": "TestFileDownloadPerformance.simulate_large_file_download",
          "callee": "open",
          "line": 508,
          "type": "direct"
        },
        {
          "caller": "TestFileDownloadPerformance.simulate_large_file_download",
          "callee": "range",
          "line": 509,
          "type": "direct"
        },
        {
          "caller": "TestFileDownloadPerformance.simulate_large_file_download",
          "callee": "sleep",
          "line": 511,
          "type": "attribute"
        },
        {
          "caller": "TestFileDownloadPerformance.simulate_large_file_download",
          "callee": "write",
          "line": 515,
          "type": "attribute"
        },
        {
          "caller": "TestFileDownloadPerformance.simulate_large_file_download",
          "callee": "perf_counter",
          "line": 517,
          "type": "attribute"
        },
        {
          "caller": "TestFileDownloadPerformance.simulate_large_file_download",
          "callee": "getsize",
          "line": 520,
          "type": "attribute"
        },
        {
          "caller": "TestFileDownloadPerformance.test_large_file_download_performance",
          "callee": "simulate_large_file_download",
          "line": 534,
          "type": "direct"
        },
        {
          "caller": "TestFileDownloadPerformance.test_large_file_download_performance",
          "callee": "abs",
          "line": 537,
          "type": "direct"
        },
        {
          "caller": "TestFileDownloadPerformance.download_worker",
          "callee": "range",
          "line": 549,
          "type": "direct"
        },
        {
          "caller": "TestFileDownloadPerformance.download_worker",
          "callee": "join",
          "line": 551,
          "type": "attribute"
        },
        {
          "caller": "TestFileDownloadPerformance.download_worker",
          "callee": "perf_counter",
          "line": 554,
          "type": "attribute"
        },
        {
          "caller": "TestFileDownloadPerformance.download_worker",
          "callee": "open",
          "line": 557,
          "type": "direct"
        },
        {
          "caller": "TestFileDownloadPerformance.download_worker",
          "callee": "write",
          "line": 558,
          "type": "attribute"
        },
        {
          "caller": "TestFileDownloadPerformance.download_worker",
          "callee": "perf_counter",
          "line": 560,
          "type": "attribute"
        },
        {
          "caller": "TestFileDownloadPerformance.download_worker",
          "callee": "append",
          "line": 562,
          "type": "attribute"
        },
        {
          "caller": "TestFileDownloadPerformance.download_worker",
          "callee": "sleep",
          "line": 570,
          "type": "attribute"
        },
        {
          "caller": "TestFileDownloadPerformance.test_concurrent_file_downloads",
          "callee": "perf_counter",
          "line": 575,
          "type": "attribute"
        },
        {
          "caller": "TestFileDownloadPerformance.test_concurrent_file_downloads",
          "callee": "ThreadPoolExecutor",
          "line": 577,
          "type": "attribute"
        },
        {
          "caller": "TestFileDownloadPerformance.test_concurrent_file_downloads",
          "callee": "submit",
          "line": 579,
          "type": "attribute"
        },
        {
          "caller": "TestFileDownloadPerformance.test_concurrent_file_downloads",
          "callee": "range",
          "line": 580,
          "type": "direct"
        },
        {
          "caller": "TestFileDownloadPerformance.test_concurrent_file_downloads",
          "callee": "as_completed",
          "line": 584,
          "type": "attribute"
        },
        {
          "caller": "TestFileDownloadPerformance.test_concurrent_file_downloads",
          "callee": "extend",
          "line": 585,
          "type": "attribute"
        },
        {
          "caller": "TestFileDownloadPerformance.test_concurrent_file_downloads",
          "callee": "result",
          "line": 585,
          "type": "attribute"
        },
        {
          "caller": "TestFileDownloadPerformance.test_concurrent_file_downloads",
          "callee": "perf_counter",
          "line": 587,
          "type": "attribute"
        },
        {
          "caller": "TestFileDownloadPerformance.test_concurrent_file_downloads",
          "callee": "len",
          "line": 591,
          "type": "direct"
        },
        {
          "caller": "TestFileDownloadPerformance.test_concurrent_file_downloads",
          "callee": "sum",
          "line": 592,
          "type": "direct"
        },
        {
          "caller": "TestFileDownloadPerformance.test_concurrent_file_downloads",
          "callee": "sum",
          "line": 593,
          "type": "direct"
        },
        {
          "caller": "TestMemoryAndResourceUsage.simulate_heavy_workload",
          "callee": "range",
          "line": 615,
          "type": "direct"
        },
        {
          "caller": "TestMemoryAndResourceUsage.simulate_heavy_workload",
          "callee": "range",
          "line": 619,
          "type": "direct"
        },
        {
          "caller": "TestMemoryAndResourceUsage.simulate_heavy_workload",
          "callee": "range",
          "line": 620,
          "type": "direct"
        },
        {
          "caller": "TestMemoryAndResourceUsage.simulate_heavy_workload",
          "callee": "format",
          "line": 621,
          "type": "attribute"
        },
        {
          "caller": "TestMemoryAndResourceUsage.simulate_heavy_workload",
          "callee": "float",
          "line": 621,
          "type": "direct"
        },
        {
          "caller": "TestMemoryAndResourceUsage.simulate_heavy_workload",
          "callee": "range",
          "line": 621,
          "type": "direct"
        },
        {
          "caller": "TestMemoryAndResourceUsage.simulate_heavy_workload",
          "callee": "range",
          "line": 623,
          "type": "direct"
        },
        {
          "caller": "TestMemoryAndResourceUsage.simulate_heavy_workload",
          "callee": "append",
          "line": 625,
          "type": "attribute"
        },
        {
          "caller": "TestMemoryAndResourceUsage.simulate_heavy_workload",
          "callee": "items",
          "line": 631,
          "type": "attribute"
        },
        {
          "caller": "TestMemoryAndResourceUsage.simulate_heavy_workload",
          "callee": "len",
          "line": 633,
          "type": "direct"
        },
        {
          "caller": "TestMemoryAndResourceUsage.simulate_heavy_workload",
          "callee": "len",
          "line": 634,
          "type": "direct"
        },
        {
          "caller": "TestMemoryAndResourceUsage.simulate_heavy_workload",
          "callee": "sum",
          "line": 635,
          "type": "direct"
        },
        {
          "caller": "TestMemoryAndResourceUsage.simulate_heavy_workload",
          "callee": "values",
          "line": 635,
          "type": "attribute"
        },
        {
          "caller": "TestMemoryAndResourceUsage.simulate_heavy_workload",
          "callee": "len",
          "line": 635,
          "type": "direct"
        },
        {
          "caller": "TestMemoryAndResourceUsage.simulate_heavy_workload",
          "callee": "append",
          "line": 637,
          "type": "attribute"
        },
        {
          "caller": "TestMemoryAndResourceUsage.test_memory_usage_under_load",
          "callee": "Process",
          "line": 642,
          "type": "attribute"
        },
        {
          "caller": "TestMemoryAndResourceUsage.test_memory_usage_under_load",
          "callee": "memory_info",
          "line": 644,
          "type": "attribute"
        },
        {
          "caller": "TestMemoryAndResourceUsage.test_memory_usage_under_load",
          "callee": "simulate_heavy_workload",
          "line": 646,
          "type": "direct"
        },
        {
          "caller": "TestMemoryAndResourceUsage.test_memory_usage_under_load",
          "callee": "memory_info",
          "line": 648,
          "type": "attribute"
        },
        {
          "caller": "TestMemoryAndResourceUsage.test_memory_usage_under_load",
          "callee": "collect",
          "line": 654,
          "type": "attribute"
        },
        {
          "caller": "TestMemoryAndResourceUsage.test_memory_usage_under_load",
          "callee": "memory_info",
          "line": 656,
          "type": "attribute"
        },
        {
          "caller": "DatabaseConnectionPool.__init__",
          "callee": "range",
          "line": 674,
          "type": "direct"
        },
        {
          "caller": "DatabaseConnectionPool.__init__",
          "callee": "connect",
          "line": 675,
          "type": "attribute"
        },
        {
          "caller": "DatabaseConnectionPool.__init__",
          "callee": "append",
          "line": 677,
          "type": "attribute"
        },
        {
          "caller": "DatabaseConnectionPool.get_connection",
          "callee": "pop",
          "line": 681,
          "type": "attribute"
        },
        {
          "caller": "DatabaseConnectionPool.get_connection",
          "callee": "append",
          "line": 682,
          "type": "attribute"
        },
        {
          "caller": "DatabaseConnectionPool.get_connection",
          "callee": "Exception",
          "line": 685,
          "type": "direct"
        },
        {
          "caller": "DatabaseConnectionPool.return_connection",
          "callee": "remove",
          "line": 689,
          "type": "attribute"
        },
        {
          "caller": "DatabaseConnectionPool.return_connection",
          "callee": "append",
          "line": 690,
          "type": "attribute"
        },
        {
          "caller": "DatabaseConnectionPool.close_all",
          "callee": "close",
          "line": 694,
          "type": "attribute"
        },
        {
          "caller": "TestMemoryAndResourceUsage.test_database_connection_pooling_performance",
          "callee": "DatabaseConnectionPool",
          "line": 697,
          "type": "direct"
        },
        {
          "caller": "TestMemoryAndResourceUsage.database_operation_with_pool",
          "callee": "get_connection",
          "line": 701,
          "type": "attribute"
        },
        {
          "caller": "TestMemoryAndResourceUsage.database_operation_with_pool",
          "callee": "cursor",
          "line": 703,
          "type": "attribute"
        },
        {
          "caller": "TestMemoryAndResourceUsage.database_operation_with_pool",
          "callee": "execute",
          "line": 706,
          "type": "attribute"
        },
        {
          "caller": "TestMemoryAndResourceUsage.database_operation_with_pool",
          "callee": "fetchone",
          "line": 707,
          "type": "attribute"
        },
        {
          "caller": "TestMemoryAndResourceUsage.database_operation_with_pool",
          "callee": "execute",
          "line": 709,
          "type": "attribute"
        },
        {
          "caller": "TestMemoryAndResourceUsage.database_operation_with_pool",
          "callee": "fetchone",
          "line": 710,
          "type": "attribute"
        },
        {
          "caller": "TestMemoryAndResourceUsage.database_operation_with_pool",
          "callee": "return_connection",
          "line": 715,
          "type": "attribute"
        },
        {
          "caller": "TestMemoryAndResourceUsage.test_database_connection_pooling_performance",
          "callee": "perf_counter",
          "line": 718,
          "type": "attribute"
        },
        {
          "caller": "TestMemoryAndResourceUsage.test_database_connection_pooling_performance",
          "callee": "range",
          "line": 722,
          "type": "direct"
        },
        {
          "caller": "TestMemoryAndResourceUsage.test_database_connection_pooling_performance",
          "callee": "database_operation_with_pool",
          "line": 723,
          "type": "direct"
        },
        {
          "caller": "TestMemoryAndResourceUsage.test_database_connection_pooling_performance",
          "callee": "append",
          "line": 724,
          "type": "attribute"
        },
        {
          "caller": "TestMemoryAndResourceUsage.test_database_connection_pooling_performance",
          "callee": "perf_counter",
          "line": 726,
          "type": "attribute"
        },
        {
          "caller": "TestMemoryAndResourceUsage.test_database_connection_pooling_performance",
          "callee": "perf_counter",
          "line": 729,
          "type": "attribute"
        },
        {
          "caller": "TestMemoryAndResourceUsage.test_database_connection_pooling_performance",
          "callee": "range",
          "line": 732,
          "type": "direct"
        },
        {
          "caller": "TestMemoryAndResourceUsage.test_database_connection_pooling_performance",
          "callee": "connect",
          "line": 733,
          "type": "attribute"
        },
        {
          "caller": "TestMemoryAndResourceUsage.test_database_connection_pooling_performance",
          "callee": "cursor",
          "line": 734,
          "type": "attribute"
        },
        {
          "caller": "TestMemoryAndResourceUsage.test_database_connection_pooling_performance",
          "callee": "execute",
          "line": 736,
          "type": "attribute"
        },
        {
          "caller": "TestMemoryAndResourceUsage.test_database_connection_pooling_performance",
          "callee": "fetchone",
          "line": 737,
          "type": "attribute"
        },
        {
          "caller": "TestMemoryAndResourceUsage.test_database_connection_pooling_performance",
          "callee": "execute",
          "line": 739,
          "type": "attribute"
        },
        {
          "caller": "TestMemoryAndResourceUsage.test_database_connection_pooling_performance",
          "callee": "fetchone",
          "line": 740,
          "type": "attribute"
        },
        {
          "caller": "TestMemoryAndResourceUsage.test_database_connection_pooling_performance",
          "callee": "append",
          "line": 742,
          "type": "attribute"
        },
        {
          "caller": "TestMemoryAndResourceUsage.test_database_connection_pooling_performance",
          "callee": "close",
          "line": 743,
          "type": "attribute"
        },
        {
          "caller": "TestMemoryAndResourceUsage.test_database_connection_pooling_performance",
          "callee": "perf_counter",
          "line": 745,
          "type": "attribute"
        },
        {
          "caller": "TestMemoryAndResourceUsage.test_database_connection_pooling_performance",
          "callee": "close_all",
          "line": 747,
          "type": "attribute"
        },
        {
          "caller": "TestMemoryAndResourceUsage.test_database_connection_pooling_performance",
          "callee": "len",
          "line": 753,
          "type": "direct"
        },
        {
          "caller": "TestMemoryAndResourceUsage.test_database_connection_pooling_performance",
          "callee": "len",
          "line": 753,
          "type": "direct"
        },
        {
          "caller": "TestMemoryAndResourceUsage.cpu_intensive_task",
          "callee": "range",
          "line": 765,
          "type": "direct"
        },
        {
          "caller": "TestMemoryAndResourceUsage.cpu_intensive_task",
          "callee": "sin",
          "line": 767,
          "type": "attribute"
        },
        {
          "caller": "TestMemoryAndResourceUsage.cpu_intensive_task",
          "callee": "cos",
          "line": 767,
          "type": "attribute"
        },
        {
          "caller": "TestMemoryAndResourceUsage.cpu_intensive_task",
          "callee": "sqrt",
          "line": 767,
          "type": "attribute"
        },
        {
          "caller": "TestMemoryAndResourceUsage.cpu_intensive_task",
          "callee": "time",
          "line": 771,
          "type": "attribute"
        },
        {
          "caller": "TestMemoryAndResourceUsage.cpu_intensive_task",
          "callee": "dumps",
          "line": 773,
          "type": "attribute"
        },
        {
          "caller": "TestMemoryAndResourceUsage.test_cpu_usage_optimization",
          "callee": "Process",
          "line": 781,
          "type": "attribute"
        },
        {
          "caller": "TestMemoryAndResourceUsage.test_cpu_usage_optimization",
          "callee": "cpu_percent",
          "line": 784,
          "type": "attribute"
        },
        {
          "caller": "TestMemoryAndResourceUsage.test_cpu_usage_optimization",
          "callee": "perf_counter",
          "line": 785,
          "type": "attribute"
        },
        {
          "caller": "TestMemoryAndResourceUsage.test_cpu_usage_optimization",
          "callee": "cpu_intensive_task",
          "line": 787,
          "type": "direct"
        },
        {
          "caller": "TestMemoryAndResourceUsage.test_cpu_usage_optimization",
          "callee": "perf_counter",
          "line": 789,
          "type": "attribute"
        },
        {
          "caller": "TestMemoryAndResourceUsage.test_cpu_usage_optimization",
          "callee": "cpu_percent",
          "line": 790,
          "type": "attribute"
        }
      ],
      "error": null
    },
    {
      "filepath": "tests\\backend\\test_watch_folders.py",
      "functions": [
        {
          "name": "test_config_settings",
          "full_name": "TestWatchFolderConfiguration.test_config_settings",
          "class": "TestWatchFolderConfiguration",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test watch folder configuration settings.",
          "line_start": 20,
          "line_end": 38,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_config_service_watch_folders",
          "full_name": "TestWatchFolderConfiguration.test_config_service_watch_folders",
          "class": "TestWatchFolderConfiguration",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test ConfigService watch folder methods.",
          "line_start": 40,
          "line_end": 52,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "file_watcher",
          "full_name": "TestFileWatcherService.file_watcher",
          "class": "TestFileWatcherService",
          "signature": "(self)",
          "return_type": "",
          "decorators": [
            "pytest.fixture"
          ],
          "docstring": "Create a FileWatcher service instance for testing.",
          "line_start": 59,
          "line_end": 72,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_local_file_creation",
          "full_name": "TestFileWatcherService.test_local_file_creation",
          "class": "TestFileWatcherService",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test LocalFile dataclass functionality.",
          "line_start": 74,
          "line_end": 90,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_file_watcher_status",
          "full_name": "TestFileWatcherService.test_file_watcher_status",
          "class": "TestFileWatcherService",
          "signature": "(self, file_watcher)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test FileWatcher service status methods.",
          "line_start": 92,
          "line_end": 102,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_print_file_handler_extension_filtering",
          "full_name": "TestFileWatcherService.test_print_file_handler_extension_filtering",
          "class": "TestFileWatcherService",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test PrintFileHandler extension filtering.",
          "line_start": 104,
          "line_end": 127,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_local_files_list",
          "full_name": "TestFileWatcherService.test_local_files_list",
          "class": "TestFileWatcherService",
          "signature": "(self, file_watcher)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test getting local files list.",
          "line_start": 129,
          "line_end": 135,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_database_local_file_support",
          "full_name": "TestWatchFolderIntegration.test_database_local_file_support",
          "class": "TestWatchFolderIntegration",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test database support for local files.",
          "line_start": 141,
          "line_end": 160,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_file_service_local_integration",
          "full_name": "TestWatchFolderIntegration.test_file_service_local_integration",
          "class": "TestWatchFolderIntegration",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test FileService integration with local files.",
          "line_start": 162,
          "line_end": 177,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "pytest",
          "alias": null,
          "line": 6
        },
        {
          "type": "import",
          "module": "tempfile",
          "alias": null,
          "line": 7
        },
        {
          "type": "import",
          "module": "os",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "pathlib",
          "name": "Path",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "unittest.mock",
          "name": "Mock",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "unittest.mock",
          "name": "AsyncMock",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "services.file_watcher_service",
          "name": "FileWatcherService",
          "alias": null,
          "line": 12
        },
        {
          "type": "from_import",
          "module": "services.file_watcher_service",
          "name": "LocalFile",
          "alias": null,
          "line": 12
        },
        {
          "type": "from_import",
          "module": "services.config_service",
          "name": "ConfigService",
          "alias": null,
          "line": 13
        },
        {
          "type": "from_import",
          "module": "services.event_service",
          "name": "EventService",
          "alias": null,
          "line": 14
        },
        {
          "type": "from_import",
          "module": "utils.config",
          "name": "PrinternizerSettings",
          "alias": null,
          "line": 22
        },
        {
          "type": "from_import",
          "module": "services.file_watcher_service",
          "name": "PrintFileHandler",
          "alias": null,
          "line": 106
        },
        {
          "type": "from_import",
          "module": "services.file_service",
          "name": "FileService",
          "alias": null,
          "line": 164
        },
        {
          "type": "from_import",
          "module": "database.database",
          "name": "Database",
          "alias": null,
          "line": 165
        },
        {
          "type": "from_import",
          "module": "services.event_service",
          "name": "EventService",
          "alias": null,
          "line": 166
        }
      ],
      "function_calls": [
        {
          "caller": "TestWatchFolderConfiguration.test_config_settings",
          "callee": "PrinternizerSettings",
          "line": 25,
          "type": "direct"
        },
        {
          "caller": "TestWatchFolderConfiguration.test_config_settings",
          "callee": "PrinternizerSettings",
          "line": 34,
          "type": "direct"
        },
        {
          "caller": "TestWatchFolderConfiguration.test_config_settings",
          "callee": "len",
          "line": 36,
          "type": "direct"
        },
        {
          "caller": "TestWatchFolderConfiguration.test_config_service_watch_folders",
          "callee": "ConfigService",
          "line": 42,
          "type": "direct"
        },
        {
          "caller": "TestWatchFolderConfiguration.test_config_service_watch_folders",
          "callee": "validate_watch_folder",
          "line": 45,
          "type": "attribute"
        },
        {
          "caller": "TestWatchFolderConfiguration.test_config_service_watch_folders",
          "callee": "TemporaryDirectory",
          "line": 50,
          "type": "attribute"
        },
        {
          "caller": "TestWatchFolderConfiguration.test_config_service_watch_folders",
          "callee": "validate_watch_folder",
          "line": 51,
          "type": "attribute"
        },
        {
          "caller": "TestFileWatcherService.file_watcher",
          "callee": "Mock",
          "line": 62,
          "type": "direct"
        },
        {
          "caller": "TestFileWatcherService.file_watcher",
          "callee": "Mock",
          "line": 68,
          "type": "direct"
        },
        {
          "caller": "TestFileWatcherService.file_watcher",
          "callee": "AsyncMock",
          "line": 69,
          "type": "direct"
        },
        {
          "caller": "TestFileWatcherService.file_watcher",
          "callee": "FileWatcherService",
          "line": 71,
          "type": "direct"
        },
        {
          "caller": "TestFileWatcherService.test_local_file_creation",
          "callee": "LocalFile",
          "line": 76,
          "type": "direct"
        },
        {
          "caller": "TestFileWatcherService.test_file_watcher_status",
          "callee": "get_watch_status",
          "line": 94,
          "type": "attribute"
        },
        {
          "caller": "TestFileWatcherService.test_print_file_handler_extension_filtering",
          "callee": "Mock",
          "line": 109,
          "type": "direct"
        },
        {
          "caller": "TestFileWatcherService.test_print_file_handler_extension_filtering",
          "callee": "PrintFileHandler",
          "line": 110,
          "type": "direct"
        },
        {
          "caller": "TestFileWatcherService.test_print_file_handler_extension_filtering",
          "callee": "should_process_file",
          "line": 113,
          "type": "attribute"
        },
        {
          "caller": "TestFileWatcherService.test_print_file_handler_extension_filtering",
          "callee": "should_process_file",
          "line": 114,
          "type": "attribute"
        },
        {
          "caller": "TestFileWatcherService.test_print_file_handler_extension_filtering",
          "callee": "should_process_file",
          "line": 115,
          "type": "attribute"
        },
        {
          "caller": "TestFileWatcherService.test_print_file_handler_extension_filtering",
          "callee": "should_process_file",
          "line": 116,
          "type": "attribute"
        },
        {
          "caller": "TestFileWatcherService.test_print_file_handler_extension_filtering",
          "callee": "should_process_file",
          "line": 117,
          "type": "attribute"
        },
        {
          "caller": "TestFileWatcherService.test_print_file_handler_extension_filtering",
          "callee": "should_process_file",
          "line": 120,
          "type": "attribute"
        },
        {
          "caller": "TestFileWatcherService.test_print_file_handler_extension_filtering",
          "callee": "should_process_file",
          "line": 121,
          "type": "attribute"
        },
        {
          "caller": "TestFileWatcherService.test_print_file_handler_extension_filtering",
          "callee": "should_process_file",
          "line": 122,
          "type": "attribute"
        },
        {
          "caller": "TestFileWatcherService.test_print_file_handler_extension_filtering",
          "callee": "should_process_file",
          "line": 125,
          "type": "attribute"
        },
        {
          "caller": "TestFileWatcherService.test_print_file_handler_extension_filtering",
          "callee": "should_process_file",
          "line": 126,
          "type": "attribute"
        },
        {
          "caller": "TestFileWatcherService.test_print_file_handler_extension_filtering",
          "callee": "should_process_file",
          "line": 127,
          "type": "attribute"
        },
        {
          "caller": "TestFileWatcherService.test_local_files_list",
          "callee": "get_local_files",
          "line": 131,
          "type": "attribute"
        },
        {
          "caller": "TestFileWatcherService.test_local_files_list",
          "callee": "isinstance",
          "line": 134,
          "type": "direct"
        },
        {
          "caller": "TestFileWatcherService.test_local_files_list",
          "callee": "len",
          "line": 135,
          "type": "direct"
        },
        {
          "caller": "TestWatchFolderIntegration.test_file_service_local_integration",
          "callee": "Mock",
          "line": 169,
          "type": "direct"
        },
        {
          "caller": "TestWatchFolderIntegration.test_file_service_local_integration",
          "callee": "Mock",
          "line": 170,
          "type": "direct"
        },
        {
          "caller": "TestWatchFolderIntegration.test_file_service_local_integration",
          "callee": "Mock",
          "line": 171,
          "type": "direct"
        },
        {
          "caller": "TestWatchFolderIntegration.test_file_service_local_integration",
          "callee": "FileService",
          "line": 174,
          "type": "direct"
        }
      ],
      "error": null
    },
    {
      "filepath": "tests\\backend\\test_websocket.py",
      "functions": [
        {
          "name": "test_websocket_connection_establishment",
          "full_name": "TestWebSocketConnection.test_websocket_connection_establishment",
          "class": "TestWebSocketConnection",
          "signature": "(self, mock_websocket, test_config)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test WebSocket connection establishment",
          "line_start": 17,
          "line_end": 28,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_websocket_authentication",
          "full_name": "TestWebSocketConnection.test_websocket_authentication",
          "class": "TestWebSocketConnection",
          "signature": "(self, mock_websocket, test_config)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test WebSocket authentication (if implemented)",
          "line_start": 31,
          "line_end": 56,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_websocket_subscription_management",
          "full_name": "TestWebSocketConnection.test_websocket_subscription_management",
          "class": "TestWebSocketConnection",
          "signature": "(self, mock_websocket)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test WebSocket event subscription management",
          "line_start": 59,
          "line_end": 80,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_websocket_connection_error_handling",
          "full_name": "TestWebSocketConnection.test_websocket_connection_error_handling",
          "class": "TestWebSocketConnection",
          "signature": "(self, test_config)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test WebSocket connection error handling",
          "line_start": 83,
          "line_end": 93,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_websocket_reconnection_logic",
          "full_name": "TestWebSocketConnection.test_websocket_reconnection_logic",
          "class": "TestWebSocketConnection",
          "signature": "(self, mock_websocket, test_config)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test WebSocket automatic reconnection",
          "line_start": 96,
          "line_end": 119,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_printer_status_updates",
          "full_name": "TestWebSocketRealTimeUpdates.test_printer_status_updates",
          "class": "TestWebSocketRealTimeUpdates",
          "signature": "(self, mock_websocket)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test real-time printer status updates",
          "line_start": 126,
          "line_end": 157,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_job_progress_updates",
          "full_name": "TestWebSocketRealTimeUpdates.test_job_progress_updates",
          "class": "TestWebSocketRealTimeUpdates",
          "signature": "(self, mock_websocket)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test real-time job progress updates",
          "line_start": 160,
          "line_end": 185,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_file_download_progress_updates",
          "full_name": "TestWebSocketRealTimeUpdates.test_file_download_progress_updates",
          "class": "TestWebSocketRealTimeUpdates",
          "signature": "(self, mock_websocket)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test real-time file download progress updates",
          "line_start": 188,
          "line_end": 213,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_system_event_notifications",
          "full_name": "TestWebSocketRealTimeUpdates.test_system_event_notifications",
          "class": "TestWebSocketRealTimeUpdates",
          "signature": "(self, mock_websocket)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test system event notifications via WebSocket",
          "line_start": 216,
          "line_end": 238,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_batch_update_processing",
          "full_name": "TestWebSocketRealTimeUpdates.test_batch_update_processing",
          "class": "TestWebSocketRealTimeUpdates",
          "signature": "(self, mock_websocket)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test processing multiple updates in batch",
          "line_start": 241,
          "line_end": 277,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_message_parsing_errors",
          "full_name": "TestWebSocketErrorHandling.test_message_parsing_errors",
          "class": "TestWebSocketErrorHandling",
          "signature": "(self, mock_websocket)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test handling of invalid JSON messages",
          "line_start": 284,
          "line_end": 306,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_connection_timeout_handling",
          "full_name": "TestWebSocketErrorHandling.test_connection_timeout_handling",
          "class": "TestWebSocketErrorHandling",
          "signature": "(self, test_config)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test WebSocket connection timeout handling",
          "line_start": 309,
          "line_end": 318,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_heartbeat_mechanism",
          "full_name": "TestWebSocketErrorHandling.test_heartbeat_mechanism",
          "class": "TestWebSocketErrorHandling",
          "signature": "(self, mock_websocket)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test WebSocket heartbeat/ping-pong mechanism",
          "line_start": 321,
          "line_end": 348,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_connection_recovery_after_network_error",
          "full_name": "TestWebSocketErrorHandling.test_connection_recovery_after_network_error",
          "class": "TestWebSocketErrorHandling",
          "signature": "(self, mock_websocket, test_config)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test connection recovery after network interruption",
          "line_start": 351,
          "line_end": 378,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_message_queue_overflow_handling",
          "full_name": "TestWebSocketErrorHandling.test_message_queue_overflow_handling",
          "class": "TestWebSocketErrorHandling",
          "signature": "(self, mock_websocket)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test handling of message queue overflow",
          "line_start": 381,
          "line_end": 414,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_high_frequency_updates_performance",
          "full_name": "TestWebSocketPerformance.test_high_frequency_updates_performance",
          "class": "TestWebSocketPerformance",
          "signature": "(self, mock_websocket)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test performance with high-frequency updates",
          "line_start": 421,
          "line_end": 458,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_concurrent_websocket_connections",
          "full_name": "TestWebSocketPerformance.test_concurrent_websocket_connections",
          "class": "TestWebSocketPerformance",
          "signature": "(self)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test handling multiple concurrent WebSocket connections",
          "line_start": 461,
          "line_end": 492,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "receive_messages",
          "full_name": "TestWebSocketPerformance.receive_messages",
          "class": "TestWebSocketPerformance",
          "signature": "(connection, connection_id)",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 477,
          "line_end": 480,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_memory_usage_with_long_running_connection",
          "full_name": "TestWebSocketPerformance.test_memory_usage_with_long_running_connection",
          "class": "TestWebSocketPerformance",
          "signature": "(self, mock_websocket)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test memory usage doesn't grow excessively with long-running connections",
          "line_start": 495,
          "line_end": 530,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_german_timezone_in_websocket_messages",
          "full_name": "TestWebSocketGermanBusinessIntegration.test_german_timezone_in_websocket_messages",
          "class": "TestWebSocketGermanBusinessIntegration",
          "signature": "(self, mock_websocket, test_utils)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test that WebSocket messages include proper German timezone",
          "line_start": 537,
          "line_end": 556,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_business_cost_updates_via_websocket",
          "full_name": "TestWebSocketGermanBusinessIntegration.test_business_cost_updates_via_websocket",
          "class": "TestWebSocketGermanBusinessIntegration",
          "signature": "(self, mock_websocket, test_utils)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test business cost calculations sent via WebSocket",
          "line_start": 559,
          "line_end": 586,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_german_quality_assessment_updates",
          "full_name": "TestWebSocketGermanBusinessIntegration.test_german_quality_assessment_updates",
          "class": "TestWebSocketGermanBusinessIntegration",
          "signature": "(self, mock_websocket)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test German quality assessment updates via WebSocket",
          "line_start": 589,
          "line_end": 613,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "pytest",
          "alias": null,
          "line": 5
        },
        {
          "type": "import",
          "module": "json",
          "alias": null,
          "line": 6
        },
        {
          "type": "import",
          "module": "asyncio",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "unittest.mock",
          "name": "Mock",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "unittest.mock",
          "name": "patch",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "unittest.mock",
          "name": "AsyncMock",
          "alias": null,
          "line": 8
        },
        {
          "type": "import",
          "module": "websocket",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 10
        },
        {
          "type": "import",
          "module": "time",
          "alias": null,
          "line": 440
        },
        {
          "type": "import",
          "module": "gc",
          "alias": null,
          "line": 497
        },
        {
          "type": "import",
          "module": "sys",
          "alias": null,
          "line": 498
        }
      ],
      "function_calls": [
        {
          "caller": "TestWebSocketConnection.test_websocket_connection_establishment",
          "callee": "patch",
          "line": 21,
          "type": "direct"
        },
        {
          "caller": "TestWebSocketConnection.test_websocket_connection_establishment",
          "callee": "mock_connect",
          "line": 26,
          "type": "direct"
        },
        {
          "caller": "TestWebSocketConnection.test_websocket_connection_establishment",
          "callee": "assert_called_once_with",
          "line": 28,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketConnection.test_websocket_authentication",
          "callee": "dumps",
          "line": 39,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketConnection.test_websocket_authentication",
          "callee": "send",
          "line": 46,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketConnection.test_websocket_authentication",
          "callee": "dumps",
          "line": 46,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketConnection.test_websocket_authentication",
          "callee": "recv",
          "line": 49,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketConnection.test_websocket_authentication",
          "callee": "loads",
          "line": 50,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketConnection.test_websocket_authentication",
          "callee": "assert_called_once_with",
          "line": 55,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketConnection.test_websocket_authentication",
          "callee": "dumps",
          "line": 55,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketConnection.test_websocket_authentication",
          "callee": "assert_called_once",
          "line": 56,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketConnection.test_websocket_subscription_management",
          "callee": "dumps",
          "line": 67,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketConnection.test_websocket_subscription_management",
          "callee": "send",
          "line": 73,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketConnection.test_websocket_subscription_management",
          "callee": "dumps",
          "line": 73,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketConnection.test_websocket_subscription_management",
          "callee": "recv",
          "line": 76,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketConnection.test_websocket_subscription_management",
          "callee": "loads",
          "line": 77,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketConnection.test_websocket_subscription_management",
          "callee": "set",
          "line": 80,
          "type": "direct"
        },
        {
          "caller": "TestWebSocketConnection.test_websocket_subscription_management",
          "callee": "set",
          "line": 80,
          "type": "direct"
        },
        {
          "caller": "TestWebSocketConnection.test_websocket_connection_error_handling",
          "callee": "patch",
          "line": 87,
          "type": "direct"
        },
        {
          "caller": "TestWebSocketConnection.test_websocket_connection_error_handling",
          "callee": "ConnectionError",
          "line": 89,
          "type": "direct"
        },
        {
          "caller": "TestWebSocketConnection.test_websocket_connection_error_handling",
          "callee": "raises",
          "line": 91,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketConnection.test_websocket_connection_error_handling",
          "callee": "mock_connect",
          "line": 92,
          "type": "direct"
        },
        {
          "caller": "TestWebSocketConnection.test_websocket_reconnection_logic",
          "callee": "patch",
          "line": 100,
          "type": "direct"
        },
        {
          "caller": "TestWebSocketConnection.test_websocket_reconnection_logic",
          "callee": "ConnectionError",
          "line": 103,
          "type": "direct"
        },
        {
          "caller": "TestWebSocketConnection.test_websocket_reconnection_logic",
          "callee": "range",
          "line": 109,
          "type": "direct"
        },
        {
          "caller": "TestWebSocketConnection.test_websocket_reconnection_logic",
          "callee": "mock_connect",
          "line": 111,
          "type": "direct"
        },
        {
          "caller": "TestWebSocketConnection.test_websocket_reconnection_logic",
          "callee": "sleep",
          "line": 117,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketRealTimeUpdates.test_printer_status_updates",
          "callee": "dumps",
          "line": 147,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketRealTimeUpdates.test_printer_status_updates",
          "callee": "recv",
          "line": 150,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketRealTimeUpdates.test_printer_status_updates",
          "callee": "loads",
          "line": 151,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketRealTimeUpdates.test_job_progress_updates",
          "callee": "dumps",
          "line": 175,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketRealTimeUpdates.test_job_progress_updates",
          "callee": "recv",
          "line": 178,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketRealTimeUpdates.test_job_progress_updates",
          "callee": "loads",
          "line": 179,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketRealTimeUpdates.test_file_download_progress_updates",
          "callee": "dumps",
          "line": 204,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketRealTimeUpdates.test_file_download_progress_updates",
          "callee": "recv",
          "line": 207,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketRealTimeUpdates.test_file_download_progress_updates",
          "callee": "loads",
          "line": 208,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketRealTimeUpdates.test_system_event_notifications",
          "callee": "dumps",
          "line": 229,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketRealTimeUpdates.test_system_event_notifications",
          "callee": "recv",
          "line": 232,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketRealTimeUpdates.test_system_event_notifications",
          "callee": "loads",
          "line": 233,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketRealTimeUpdates.test_batch_update_processing",
          "callee": "dumps",
          "line": 263,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketRealTimeUpdates.test_batch_update_processing",
          "callee": "recv",
          "line": 266,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketRealTimeUpdates.test_batch_update_processing",
          "callee": "loads",
          "line": 267,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketRealTimeUpdates.test_batch_update_processing",
          "callee": "len",
          "line": 270,
          "type": "direct"
        },
        {
          "caller": "TestWebSocketErrorHandling.test_message_parsing_errors",
          "callee": "ConnectionClosedError",
          "line": 296,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketErrorHandling.test_message_parsing_errors",
          "callee": "recv",
          "line": 301,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketErrorHandling.test_message_parsing_errors",
          "callee": "loads",
          "line": 303,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketErrorHandling.test_connection_timeout_handling",
          "callee": "patch",
          "line": 313,
          "type": "direct"
        },
        {
          "caller": "TestWebSocketErrorHandling.test_connection_timeout_handling",
          "callee": "TimeoutError",
          "line": 315,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketErrorHandling.test_connection_timeout_handling",
          "callee": "raises",
          "line": 317,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketErrorHandling.test_connection_timeout_handling",
          "callee": "wait_for",
          "line": 318,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketErrorHandling.test_connection_timeout_handling",
          "callee": "mock_connect",
          "line": 318,
          "type": "direct"
        },
        {
          "caller": "TestWebSocketErrorHandling.test_heartbeat_mechanism",
          "callee": "send",
          "line": 336,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketErrorHandling.test_heartbeat_mechanism",
          "callee": "dumps",
          "line": 336,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketErrorHandling.test_heartbeat_mechanism",
          "callee": "dumps",
          "line": 339,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketErrorHandling.test_heartbeat_mechanism",
          "callee": "recv",
          "line": 342,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketErrorHandling.test_heartbeat_mechanism",
          "callee": "loads",
          "line": 343,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketErrorHandling.test_heartbeat_mechanism",
          "callee": "assert_called_once_with",
          "line": 348,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketErrorHandling.test_heartbeat_mechanism",
          "callee": "dumps",
          "line": 348,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketErrorHandling.test_connection_recovery_after_network_error",
          "callee": "patch",
          "line": 355,
          "type": "direct"
        },
        {
          "caller": "TestWebSocketErrorHandling.test_connection_recovery_after_network_error",
          "callee": "ConnectionClosedError",
          "line": 358,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketErrorHandling.test_connection_recovery_after_network_error",
          "callee": "ConnectionClosedError",
          "line": 359,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketErrorHandling.test_connection_recovery_after_network_error",
          "callee": "enumerate",
          "line": 368,
          "type": "direct"
        },
        {
          "caller": "TestWebSocketErrorHandling.test_connection_recovery_after_network_error",
          "callee": "mock_connect",
          "line": 370,
          "type": "direct"
        },
        {
          "caller": "TestWebSocketErrorHandling.test_connection_recovery_after_network_error",
          "callee": "len",
          "line": 374,
          "type": "direct"
        },
        {
          "caller": "TestWebSocketErrorHandling.test_connection_recovery_after_network_error",
          "callee": "sleep",
          "line": 376,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketErrorHandling.test_message_queue_overflow_handling",
          "callee": "range",
          "line": 385,
          "type": "direct"
        },
        {
          "caller": "TestWebSocketErrorHandling.test_message_queue_overflow_handling",
          "callee": "isoformat",
          "line": 390,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketErrorHandling.test_message_queue_overflow_handling",
          "callee": "now",
          "line": 390,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketErrorHandling.test_message_queue_overflow_handling",
          "callee": "append",
          "line": 392,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketErrorHandling.test_message_queue_overflow_handling",
          "callee": "dumps",
          "line": 392,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketErrorHandling.test_message_queue_overflow_handling",
          "callee": "range",
          "line": 400,
          "type": "direct"
        },
        {
          "caller": "TestWebSocketErrorHandling.test_message_queue_overflow_handling",
          "callee": "len",
          "line": 402,
          "type": "direct"
        },
        {
          "caller": "TestWebSocketErrorHandling.test_message_queue_overflow_handling",
          "callee": "recv",
          "line": 403,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketErrorHandling.test_message_queue_overflow_handling",
          "callee": "append",
          "line": 404,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketErrorHandling.test_message_queue_overflow_handling",
          "callee": "loads",
          "line": 404,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketErrorHandling.test_message_queue_overflow_handling",
          "callee": "pop",
          "line": 407,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketErrorHandling.test_message_queue_overflow_handling",
          "callee": "recv",
          "line": 408,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketErrorHandling.test_message_queue_overflow_handling",
          "callee": "append",
          "line": 409,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketErrorHandling.test_message_queue_overflow_handling",
          "callee": "loads",
          "line": 409,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketErrorHandling.test_message_queue_overflow_handling",
          "callee": "len",
          "line": 414,
          "type": "direct"
        },
        {
          "caller": "TestWebSocketPerformance.test_high_frequency_updates_performance",
          "callee": "range",
          "line": 427,
          "type": "direct"
        },
        {
          "caller": "TestWebSocketPerformance.test_high_frequency_updates_performance",
          "callee": "isoformat",
          "line": 432,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketPerformance.test_high_frequency_updates_performance",
          "callee": "now",
          "line": 432,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketPerformance.test_high_frequency_updates_performance",
          "callee": "append",
          "line": 434,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketPerformance.test_high_frequency_updates_performance",
          "callee": "dumps",
          "line": 434,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketPerformance.test_high_frequency_updates_performance",
          "callee": "time",
          "line": 441,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketPerformance.test_high_frequency_updates_performance",
          "callee": "range",
          "line": 444,
          "type": "direct"
        },
        {
          "caller": "TestWebSocketPerformance.test_high_frequency_updates_performance",
          "callee": "recv",
          "line": 445,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketPerformance.test_high_frequency_updates_performance",
          "callee": "loads",
          "line": 446,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketPerformance.test_high_frequency_updates_performance",
          "callee": "append",
          "line": 447,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketPerformance.test_high_frequency_updates_performance",
          "callee": "time",
          "line": 449,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketPerformance.test_high_frequency_updates_performance",
          "callee": "len",
          "line": 453,
          "type": "direct"
        },
        {
          "caller": "TestWebSocketPerformance.test_high_frequency_updates_performance",
          "callee": "enumerate",
          "line": 457,
          "type": "direct"
        },
        {
          "caller": "TestWebSocketPerformance.test_concurrent_websocket_connections",
          "callee": "range",
          "line": 467,
          "type": "direct"
        },
        {
          "caller": "TestWebSocketPerformance.test_concurrent_websocket_connections",
          "callee": "AsyncMock",
          "line": 468,
          "type": "direct"
        },
        {
          "caller": "TestWebSocketPerformance.test_concurrent_websocket_connections",
          "callee": "dumps",
          "line": 469,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketPerformance.test_concurrent_websocket_connections",
          "callee": "isoformat",
          "line": 472,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketPerformance.test_concurrent_websocket_connections",
          "callee": "now",
          "line": 472,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketPerformance.test_concurrent_websocket_connections",
          "callee": "append",
          "line": 474,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketPerformance.receive_messages",
          "callee": "recv",
          "line": 478,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketPerformance.receive_messages",
          "callee": "loads",
          "line": 479,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketPerformance.test_concurrent_websocket_connections",
          "callee": "receive_messages",
          "line": 484,
          "type": "direct"
        },
        {
          "caller": "TestWebSocketPerformance.test_concurrent_websocket_connections",
          "callee": "enumerate",
          "line": 485,
          "type": "direct"
        },
        {
          "caller": "TestWebSocketPerformance.test_concurrent_websocket_connections",
          "callee": "gather",
          "line": 488,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketPerformance.test_concurrent_websocket_connections",
          "callee": "len",
          "line": 491,
          "type": "direct"
        },
        {
          "caller": "TestWebSocketPerformance.test_concurrent_websocket_connections",
          "callee": "set",
          "line": 492,
          "type": "direct"
        },
        {
          "caller": "TestWebSocketPerformance.test_concurrent_websocket_connections",
          "callee": "set",
          "line": 492,
          "type": "direct"
        },
        {
          "caller": "TestWebSocketPerformance.test_concurrent_websocket_connections",
          "callee": "range",
          "line": 492,
          "type": "direct"
        },
        {
          "caller": "TestWebSocketPerformance.test_memory_usage_with_long_running_connection",
          "callee": "collect",
          "line": 501,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketPerformance.test_memory_usage_with_long_running_connection",
          "callee": "len",
          "line": 502,
          "type": "direct"
        },
        {
          "caller": "TestWebSocketPerformance.test_memory_usage_with_long_running_connection",
          "callee": "get_objects",
          "line": 502,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketPerformance.test_memory_usage_with_long_running_connection",
          "callee": "range",
          "line": 506,
          "type": "direct"
        },
        {
          "caller": "TestWebSocketPerformance.test_memory_usage_with_long_running_connection",
          "callee": "isoformat",
          "line": 511,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketPerformance.test_memory_usage_with_long_running_connection",
          "callee": "now",
          "line": 511,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketPerformance.test_memory_usage_with_long_running_connection",
          "callee": "dumps",
          "line": 514,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketPerformance.test_memory_usage_with_long_running_connection",
          "callee": "recv",
          "line": 517,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketPerformance.test_memory_usage_with_long_running_connection",
          "callee": "loads",
          "line": 518,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketPerformance.test_memory_usage_with_long_running_connection",
          "callee": "collect",
          "line": 525,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketPerformance.test_memory_usage_with_long_running_connection",
          "callee": "len",
          "line": 526,
          "type": "direct"
        },
        {
          "caller": "TestWebSocketPerformance.test_memory_usage_with_long_running_connection",
          "callee": "get_objects",
          "line": 526,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketGermanBusinessIntegration.test_german_timezone_in_websocket_messages",
          "callee": "berlin_timestamp",
          "line": 539,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketGermanBusinessIntegration.test_german_timezone_in_websocket_messages",
          "callee": "isoformat",
          "line": 545,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketGermanBusinessIntegration.test_german_timezone_in_websocket_messages",
          "callee": "dumps",
          "line": 549,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketGermanBusinessIntegration.test_german_timezone_in_websocket_messages",
          "callee": "recv",
          "line": 551,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketGermanBusinessIntegration.test_german_timezone_in_websocket_messages",
          "callee": "loads",
          "line": 552,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketGermanBusinessIntegration.test_business_cost_updates_via_websocket",
          "callee": "dumps",
          "line": 578,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketGermanBusinessIntegration.test_business_cost_updates_via_websocket",
          "callee": "recv",
          "line": 580,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketGermanBusinessIntegration.test_business_cost_updates_via_websocket",
          "callee": "loads",
          "line": 581,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketGermanBusinessIntegration.test_german_quality_assessment_updates",
          "callee": "dumps",
          "line": 606,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketGermanBusinessIntegration.test_german_quality_assessment_updates",
          "callee": "recv",
          "line": 608,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketGermanBusinessIntegration.test_german_quality_assessment_updates",
          "callee": "loads",
          "line": 609,
          "type": "attribute"
        },
        {
          "caller": "TestWebSocketGermanBusinessIntegration.test_german_quality_assessment_updates",
          "callee": "range",
          "line": 611,
          "type": "direct"
        }
      ],
      "error": null
    },
    {
      "filepath": "tests\\conftest.py",
      "functions": [
        {
          "name": "temp_database",
          "full_name": "temp_database",
          "class": null,
          "signature": "()",
          "return_type": "",
          "decorators": [
            "pytest.fixture"
          ],
          "docstring": "Create temporary SQLite database for testing",
          "line_start": 20,
          "line_end": 37,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "db_connection",
          "full_name": "db_connection",
          "class": null,
          "signature": "(temp_database)",
          "return_type": "",
          "decorators": [
            "pytest.fixture"
          ],
          "docstring": "Database connection fixture",
          "line_start": 41,
          "line_end": 46,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "sample_printer_data",
          "full_name": "sample_printer_data",
          "class": null,
          "signature": "()",
          "return_type": "",
          "decorators": [
            "pytest.fixture"
          ],
          "docstring": "Sample printer data for testing",
          "line_start": 50,
          "line_end": 80,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "sample_job_data",
          "full_name": "sample_job_data",
          "class": null,
          "signature": "()",
          "return_type": "",
          "decorators": [
            "pytest.fixture"
          ],
          "docstring": "Sample job data for testing",
          "line_start": 84,
          "line_end": 122,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "sample_file_data",
          "full_name": "sample_file_data",
          "class": null,
          "signature": "()",
          "return_type": "",
          "decorators": [
            "pytest.fixture"
          ],
          "docstring": "Sample file data for testing",
          "line_start": 126,
          "line_end": 154,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "populated_database",
          "full_name": "populated_database",
          "class": null,
          "signature": "(db_connection, sample_printer_data, sample_job_data, sample_file_data)",
          "return_type": "",
          "decorators": [
            "pytest.fixture"
          ],
          "docstring": "Database with sample data populated",
          "line_start": 158,
          "line_end": 184,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "mock_bambu_api",
          "full_name": "mock_bambu_api",
          "class": null,
          "signature": "()",
          "return_type": "",
          "decorators": [
            "pytest.fixture"
          ],
          "docstring": "Mock Bambu Lab API responses",
          "line_start": 192,
          "line_end": 230,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "mock_prusa_api",
          "full_name": "mock_prusa_api",
          "class": null,
          "signature": "()",
          "return_type": "",
          "decorators": [
            "pytest.fixture"
          ],
          "docstring": "Mock Prusa PrusaLink API responses",
          "line_start": 234,
          "line_end": 266,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "mock_websocket",
          "full_name": "mock_websocket",
          "class": null,
          "signature": "()",
          "return_type": "",
          "decorators": [
            "pytest.fixture"
          ],
          "docstring": "Mock WebSocket connection for testing",
          "line_start": 274,
          "line_end": 280,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "__call__",
          "full_name": "AsyncMock.__call__",
          "class": "AsyncMock",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 285,
          "line_end": 286,
          "access_level": "dunder",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "german_business_config",
          "full_name": "german_business_config",
          "class": null,
          "signature": "()",
          "return_type": "",
          "decorators": [
            "pytest.fixture"
          ],
          "docstring": "German business configuration for testing",
          "line_start": 294,
          "line_end": 307,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "sample_cost_calculations",
          "full_name": "sample_cost_calculations",
          "class": null,
          "signature": "()",
          "return_type": "",
          "decorators": [
            "pytest.fixture"
          ],
          "docstring": "Sample cost calculation data",
          "line_start": 311,
          "line_end": 322,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "temp_download_directory",
          "full_name": "temp_download_directory",
          "class": null,
          "signature": "()",
          "return_type": "",
          "decorators": [
            "pytest.fixture"
          ],
          "docstring": "Temporary directory for file download testing",
          "line_start": 330,
          "line_end": 335,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "sample_3mf_file",
          "full_name": "sample_3mf_file",
          "class": null,
          "signature": "()",
          "return_type": "",
          "decorators": [
            "pytest.fixture"
          ],
          "docstring": "Sample 3MF file content for testing",
          "line_start": 339,
          "line_end": 368,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_utils",
          "full_name": "test_utils",
          "class": null,
          "signature": "()",
          "return_type": "",
          "decorators": [
            "pytest.fixture"
          ],
          "docstring": "Collection of test utility functions",
          "line_start": 376,
          "line_end": 408,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "berlin_timestamp",
          "full_name": "TestUtils.berlin_timestamp",
          "class": "TestUtils",
          "signature": "(date_str)",
          "return_type": "",
          "decorators": [
            "staticmethod"
          ],
          "docstring": "Convert date string to Berlin timezone timestamp",
          "line_start": 380,
          "line_end": 390,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": true,
          "is_classmethod": false
        },
        {
          "name": "calculate_vat",
          "full_name": "TestUtils.calculate_vat",
          "class": "TestUtils",
          "signature": "(amount, rate)",
          "return_type": "",
          "decorators": [
            "staticmethod"
          ],
          "docstring": "Calculate VAT for German business logic",
          "line_start": 393,
          "line_end": 395,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": true,
          "is_classmethod": false
        },
        {
          "name": "format_currency",
          "full_name": "TestUtils.format_currency",
          "class": "TestUtils",
          "signature": "(amount)",
          "return_type": "",
          "decorators": [
            "staticmethod"
          ],
          "docstring": "Format currency for German locale",
          "line_start": 398,
          "line_end": 400,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": true,
          "is_classmethod": false
        },
        {
          "name": "generate_test_file_id",
          "full_name": "TestUtils.generate_test_file_id",
          "class": "TestUtils",
          "signature": "()",
          "return_type": "",
          "decorators": [
            "staticmethod"
          ],
          "docstring": "Generate unique test file ID",
          "line_start": 403,
          "line_end": 406,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": true,
          "is_classmethod": false
        },
        {
          "name": "event_loop",
          "full_name": "event_loop",
          "class": null,
          "signature": "()",
          "return_type": "",
          "decorators": [
            "pytest.fixture(scope='session')"
          ],
          "docstring": "Create event loop for async tests",
          "line_start": 416,
          "line_end": 420,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "api_client",
          "full_name": "api_client",
          "class": null,
          "signature": "()",
          "return_type": "",
          "decorators": [
            "pytest.fixture"
          ],
          "docstring": "HTTP client for API testing",
          "line_start": 428,
          "line_end": 436,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "network_error_scenarios",
          "full_name": "network_error_scenarios",
          "class": null,
          "signature": "()",
          "return_type": "",
          "decorators": [
            "pytest.fixture"
          ],
          "docstring": "Network error scenarios for testing",
          "line_start": 444,
          "line_end": 453,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "performance_test_data",
          "full_name": "performance_test_data",
          "class": null,
          "signature": "()",
          "return_type": "",
          "decorators": [
            "pytest.fixture"
          ],
          "docstring": "Data for performance testing",
          "line_start": 461,
          "line_end": 468,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_config",
          "full_name": "test_config",
          "class": null,
          "signature": "()",
          "return_type": "",
          "decorators": [
            "pytest.fixture"
          ],
          "docstring": "Test configuration settings",
          "line_start": 476,
          "line_end": 485,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "pytest",
          "alias": null,
          "line": 4
        },
        {
          "type": "import",
          "module": "sqlite3",
          "alias": null,
          "line": 5
        },
        {
          "type": "import",
          "module": "tempfile",
          "alias": null,
          "line": 6
        },
        {
          "type": "import",
          "module": "os",
          "alias": null,
          "line": 7
        },
        {
          "type": "import",
          "module": "json",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "timezone",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "unittest.mock",
          "name": "Mock",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "unittest.mock",
          "name": "patch",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "unittest.mock",
          "name": "MagicMock",
          "alias": null,
          "line": 10
        },
        {
          "type": "import",
          "module": "asyncio",
          "alias": null,
          "line": 11
        },
        {
          "type": "from_import",
          "module": "contextlib",
          "name": "asynccontextmanager",
          "alias": null,
          "line": 12
        },
        {
          "type": "import",
          "module": "shutil",
          "alias": null,
          "line": 334
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 382
        },
        {
          "type": "import",
          "module": "pytz",
          "alias": null,
          "line": 383
        },
        {
          "type": "import",
          "module": "uuid",
          "alias": null,
          "line": 405
        },
        {
          "type": "import",
          "module": "requests",
          "alias": null,
          "line": 430
        }
      ],
      "function_calls": [
        {
          "caller": "temp_database",
          "callee": "NamedTemporaryFile",
          "line": 22,
          "type": "attribute"
        },
        {
          "caller": "temp_database",
          "callee": "close",
          "line": 23,
          "type": "attribute"
        },
        {
          "caller": "temp_database",
          "callee": "join",
          "line": 26,
          "type": "attribute"
        },
        {
          "caller": "temp_database",
          "callee": "dirname",
          "line": 26,
          "type": "attribute"
        },
        {
          "caller": "temp_database",
          "callee": "open",
          "line": 27,
          "type": "direct"
        },
        {
          "caller": "temp_database",
          "callee": "read",
          "line": 28,
          "type": "attribute"
        },
        {
          "caller": "temp_database",
          "callee": "connect",
          "line": 30,
          "type": "attribute"
        },
        {
          "caller": "temp_database",
          "callee": "executescript",
          "line": 31,
          "type": "attribute"
        },
        {
          "caller": "temp_database",
          "callee": "close",
          "line": 32,
          "type": "attribute"
        },
        {
          "caller": "temp_database",
          "callee": "unlink",
          "line": 37,
          "type": "attribute"
        },
        {
          "caller": "db_connection",
          "callee": "connect",
          "line": 43,
          "type": "attribute"
        },
        {
          "caller": "db_connection",
          "callee": "close",
          "line": 46,
          "type": "attribute"
        },
        {
          "caller": "populated_database",
          "callee": "cursor",
          "line": 160,
          "type": "attribute"
        },
        {
          "caller": "populated_database",
          "callee": "join",
          "line": 164,
          "type": "attribute"
        },
        {
          "caller": "populated_database",
          "callee": "keys",
          "line": 164,
          "type": "attribute"
        },
        {
          "caller": "populated_database",
          "callee": "join",
          "line": 165,
          "type": "attribute"
        },
        {
          "caller": "populated_database",
          "callee": "execute",
          "line": 166,
          "type": "attribute"
        },
        {
          "caller": "populated_database",
          "callee": "list",
          "line": 167,
          "type": "direct"
        },
        {
          "caller": "populated_database",
          "callee": "values",
          "line": 167,
          "type": "attribute"
        },
        {
          "caller": "populated_database",
          "callee": "join",
          "line": 171,
          "type": "attribute"
        },
        {
          "caller": "populated_database",
          "callee": "keys",
          "line": 171,
          "type": "attribute"
        },
        {
          "caller": "populated_database",
          "callee": "join",
          "line": 172,
          "type": "attribute"
        },
        {
          "caller": "populated_database",
          "callee": "execute",
          "line": 173,
          "type": "attribute"
        },
        {
          "caller": "populated_database",
          "callee": "list",
          "line": 174,
          "type": "direct"
        },
        {
          "caller": "populated_database",
          "callee": "values",
          "line": 174,
          "type": "attribute"
        },
        {
          "caller": "populated_database",
          "callee": "join",
          "line": 178,
          "type": "attribute"
        },
        {
          "caller": "populated_database",
          "callee": "keys",
          "line": 178,
          "type": "attribute"
        },
        {
          "caller": "populated_database",
          "callee": "join",
          "line": 179,
          "type": "attribute"
        },
        {
          "caller": "populated_database",
          "callee": "execute",
          "line": 180,
          "type": "attribute"
        },
        {
          "caller": "populated_database",
          "callee": "list",
          "line": 181,
          "type": "direct"
        },
        {
          "caller": "populated_database",
          "callee": "values",
          "line": 181,
          "type": "attribute"
        },
        {
          "caller": "populated_database",
          "callee": "commit",
          "line": 183,
          "type": "attribute"
        },
        {
          "caller": "mock_bambu_api",
          "callee": "Mock",
          "line": 194,
          "type": "direct"
        },
        {
          "caller": "mock_prusa_api",
          "callee": "Mock",
          "line": 236,
          "type": "direct"
        },
        {
          "caller": "mock_websocket",
          "callee": "MagicMock",
          "line": 276,
          "type": "direct"
        },
        {
          "caller": "mock_websocket",
          "callee": "AsyncMock",
          "line": 277,
          "type": "direct"
        },
        {
          "caller": "mock_websocket",
          "callee": "AsyncMock",
          "line": 278,
          "type": "direct"
        },
        {
          "caller": "mock_websocket",
          "callee": "AsyncMock",
          "line": 279,
          "type": "direct"
        },
        {
          "caller": "AsyncMock.__call__",
          "callee": "__call__",
          "line": 286,
          "type": "attribute"
        },
        {
          "caller": "AsyncMock.__call__",
          "callee": "super",
          "line": 286,
          "type": "direct"
        },
        {
          "caller": "temp_download_directory",
          "callee": "mkdtemp",
          "line": 332,
          "type": "attribute"
        },
        {
          "caller": "temp_download_directory",
          "callee": "rmtree",
          "line": 335,
          "type": "attribute"
        },
        {
          "caller": "TestUtils.berlin_timestamp",
          "callee": "fromisoformat",
          "line": 388,
          "type": "attribute"
        },
        {
          "caller": "TestUtils.berlin_timestamp",
          "callee": "timezone",
          "line": 389,
          "type": "attribute"
        },
        {
          "caller": "TestUtils.berlin_timestamp",
          "callee": "localize",
          "line": 390,
          "type": "attribute"
        },
        {
          "caller": "TestUtils.calculate_vat",
          "callee": "round",
          "line": 395,
          "type": "direct"
        },
        {
          "caller": "TestUtils.generate_test_file_id",
          "callee": "uuid4",
          "line": 406,
          "type": "attribute"
        },
        {
          "caller": "test_utils",
          "callee": "TestUtils",
          "line": 408,
          "type": "direct"
        },
        {
          "caller": "event_loop",
          "callee": "new_event_loop",
          "line": 418,
          "type": "attribute"
        },
        {
          "caller": "event_loop",
          "callee": "close",
          "line": 420,
          "type": "attribute"
        },
        {
          "caller": "event_loop",
          "callee": "fixture",
          "line": 415,
          "type": "attribute"
        },
        {
          "caller": "api_client",
          "callee": "Session",
          "line": 431,
          "type": "attribute"
        },
        {
          "caller": "api_client",
          "callee": "update",
          "line": 432,
          "type": "attribute"
        },
        {
          "caller": "network_error_scenarios",
          "callee": "JSONDecodeError",
          "line": 452,
          "type": "attribute"
        }
      ],
      "error": null
    },
    {
      "filepath": "tests\\fixtures\\ideas_fixtures.py",
      "functions": [
        {
          "name": "create_sample_idea",
          "full_name": "create_sample_idea",
          "class": null,
          "signature": "(title: str, status: str, priority: int, is_business: bool)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Create a sample idea for testing.",
          "line_start": 9,
          "line_end": 34,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "create_sample_trending_item",
          "full_name": "create_sample_trending_item",
          "class": null,
          "signature": "(platform: str)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Create a sample trending item for testing.",
          "line_start": 37,
          "line_end": 61,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "get_sample_ideas",
          "full_name": "IdeasTestFixtures.get_sample_ideas",
          "class": "IdeasTestFixtures",
          "signature": "()",
          "return_type": "List[Dict[str, Any]]",
          "decorators": [
            "staticmethod"
          ],
          "docstring": "Get a collection of sample ideas for testing.",
          "line_start": 68,
          "line_end": 112,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": true,
          "is_classmethod": false
        },
        {
          "name": "get_sample_trending_items",
          "full_name": "IdeasTestFixtures.get_sample_trending_items",
          "class": "IdeasTestFixtures",
          "signature": "()",
          "return_type": "List[Dict[str, Any]]",
          "decorators": [
            "staticmethod"
          ],
          "docstring": "Get a collection of sample trending items for testing.",
          "line_start": 115,
          "line_end": 150,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": true,
          "is_classmethod": false
        },
        {
          "name": "get_sample_tags",
          "full_name": "IdeasTestFixtures.get_sample_tags",
          "class": "IdeasTestFixtures",
          "signature": "()",
          "return_type": "List[str]",
          "decorators": [
            "staticmethod"
          ],
          "docstring": "Get a collection of sample tags for testing.",
          "line_start": 153,
          "line_end": 159,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": true,
          "is_classmethod": false
        },
        {
          "name": "get_sample_categories",
          "full_name": "IdeasTestFixtures.get_sample_categories",
          "class": "IdeasTestFixtures",
          "signature": "()",
          "return_type": "List[str]",
          "decorators": [
            "staticmethod"
          ],
          "docstring": "Get a collection of sample categories for testing.",
          "line_start": 162,
          "line_end": 168,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": true,
          "is_classmethod": false
        },
        {
          "name": "create_idea_with_tags",
          "full_name": "create_idea_with_tags",
          "class": null,
          "signature": "(title: str, tags: List[str])",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Create an idea with specific tags.",
          "line_start": 171,
          "line_end": 179,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "create_business_idea",
          "full_name": "create_business_idea",
          "class": null,
          "signature": "(title: str, customer_name: str)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Create a business idea with customer information.",
          "line_start": 182,
          "line_end": 194,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "create_external_idea",
          "full_name": "create_external_idea",
          "class": null,
          "signature": "(title: str, platform: str, url: str)",
          "return_type": "Dict[str, Any]",
          "decorators": [],
          "docstring": "Create an idea imported from external platform.",
          "line_start": 197,
          "line_end": 215,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "uuid",
          "alias": null,
          "line": 4
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 5
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "timedelta",
          "alias": null,
          "line": 5
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Dict",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "Any",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "typing",
          "name": "List",
          "alias": null,
          "line": 6
        }
      ],
      "function_calls": [
        {
          "caller": "create_sample_idea",
          "callee": "str",
          "line": 18,
          "type": "direct"
        },
        {
          "caller": "create_sample_idea",
          "callee": "uuid4",
          "line": 18,
          "type": "attribute"
        },
        {
          "caller": "create_sample_idea",
          "callee": "isoformat",
          "line": 28,
          "type": "attribute"
        },
        {
          "caller": "create_sample_idea",
          "callee": "now",
          "line": 28,
          "type": "attribute"
        },
        {
          "caller": "create_sample_idea",
          "callee": "isoformat",
          "line": 29,
          "type": "attribute"
        },
        {
          "caller": "create_sample_idea",
          "callee": "now",
          "line": 29,
          "type": "attribute"
        },
        {
          "caller": "create_sample_idea",
          "callee": "update",
          "line": 33,
          "type": "attribute"
        },
        {
          "caller": "create_sample_trending_item",
          "callee": "now",
          "line": 42,
          "type": "attribute"
        },
        {
          "caller": "create_sample_trending_item",
          "callee": "timedelta",
          "line": 42,
          "type": "direct"
        },
        {
          "caller": "create_sample_trending_item",
          "callee": "uuid4",
          "line": 45,
          "type": "attribute"
        },
        {
          "caller": "create_sample_trending_item",
          "callee": "str",
          "line": 47,
          "type": "direct"
        },
        {
          "caller": "create_sample_trending_item",
          "callee": "uuid4",
          "line": 47,
          "type": "attribute"
        },
        {
          "caller": "create_sample_trending_item",
          "callee": "title",
          "line": 48,
          "type": "attribute"
        },
        {
          "caller": "create_sample_trending_item",
          "callee": "isoformat",
          "line": 55,
          "type": "attribute"
        },
        {
          "caller": "create_sample_trending_item",
          "callee": "now",
          "line": 55,
          "type": "attribute"
        },
        {
          "caller": "create_sample_trending_item",
          "callee": "isoformat",
          "line": 56,
          "type": "attribute"
        },
        {
          "caller": "create_sample_trending_item",
          "callee": "update",
          "line": 60,
          "type": "attribute"
        },
        {
          "caller": "IdeasTestFixtures.get_sample_ideas",
          "callee": "create_sample_idea",
          "line": 71,
          "type": "direct"
        },
        {
          "caller": "IdeasTestFixtures.get_sample_ideas",
          "callee": "create_sample_idea",
          "line": 80,
          "type": "direct"
        },
        {
          "caller": "IdeasTestFixtures.get_sample_ideas",
          "callee": "isoformat",
          "line": 86,
          "type": "attribute"
        },
        {
          "caller": "IdeasTestFixtures.get_sample_ideas",
          "callee": "date",
          "line": 86,
          "type": "attribute"
        },
        {
          "caller": "IdeasTestFixtures.get_sample_ideas",
          "callee": "now",
          "line": 86,
          "type": "attribute"
        },
        {
          "caller": "IdeasTestFixtures.get_sample_ideas",
          "callee": "timedelta",
          "line": 86,
          "type": "direct"
        },
        {
          "caller": "IdeasTestFixtures.get_sample_ideas",
          "callee": "create_sample_idea",
          "line": 88,
          "type": "direct"
        },
        {
          "caller": "IdeasTestFixtures.get_sample_ideas",
          "callee": "create_sample_idea",
          "line": 96,
          "type": "direct"
        },
        {
          "caller": "IdeasTestFixtures.get_sample_ideas",
          "callee": "isoformat",
          "line": 102,
          "type": "attribute"
        },
        {
          "caller": "IdeasTestFixtures.get_sample_ideas",
          "callee": "date",
          "line": 102,
          "type": "attribute"
        },
        {
          "caller": "IdeasTestFixtures.get_sample_ideas",
          "callee": "now",
          "line": 102,
          "type": "attribute"
        },
        {
          "caller": "IdeasTestFixtures.get_sample_ideas",
          "callee": "create_sample_idea",
          "line": 104,
          "type": "direct"
        },
        {
          "caller": "IdeasTestFixtures.get_sample_trending_items",
          "callee": "create_sample_trending_item",
          "line": 118,
          "type": "direct"
        },
        {
          "caller": "IdeasTestFixtures.get_sample_trending_items",
          "callee": "create_sample_trending_item",
          "line": 126,
          "type": "direct"
        },
        {
          "caller": "IdeasTestFixtures.get_sample_trending_items",
          "callee": "create_sample_trending_item",
          "line": 134,
          "type": "direct"
        },
        {
          "caller": "IdeasTestFixtures.get_sample_trending_items",
          "callee": "create_sample_trending_item",
          "line": 142,
          "type": "direct"
        },
        {
          "caller": "create_idea_with_tags",
          "callee": "create_sample_idea",
          "line": 177,
          "type": "direct"
        },
        {
          "caller": "create_business_idea",
          "callee": "create_sample_idea",
          "line": 188,
          "type": "direct"
        },
        {
          "caller": "create_external_idea",
          "callee": "create_sample_idea",
          "line": 204,
          "type": "direct"
        },
        {
          "caller": "create_external_idea",
          "callee": "isoformat",
          "line": 210,
          "type": "attribute"
        },
        {
          "caller": "create_external_idea",
          "callee": "now",
          "line": 210,
          "type": "attribute"
        }
      ],
      "error": null
    },
    {
      "filepath": "tests\\frontend\\__init__.py",
      "functions": [],
      "imports": [],
      "function_calls": [],
      "error": null
    },
    {
      "filepath": "tests\\run_essential_tests.py",
      "functions": [
        {
          "name": "main",
          "full_name": "main",
          "class": null,
          "signature": "()",
          "return_type": "",
          "decorators": [],
          "docstring": "Run essential tests for Printernizer Milestone 1.1.",
          "line_start": 13,
          "line_end": 128,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "run_frontend_tests",
          "full_name": "run_frontend_tests",
          "class": null,
          "signature": "()",
          "return_type": "",
          "decorators": [],
          "docstring": "Run essential frontend tests if Node.js is available.",
          "line_start": 131,
          "line_end": 162,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "os",
          "alias": null,
          "line": 6
        },
        {
          "type": "import",
          "module": "sys",
          "alias": null,
          "line": 7
        },
        {
          "type": "import",
          "module": "subprocess",
          "alias": null,
          "line": 8
        },
        {
          "type": "import",
          "module": "argparse",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "pathlib",
          "name": "Path",
          "alias": null,
          "line": 10
        }
      ],
      "function_calls": [
        {
          "caller": "main",
          "callee": "ArgumentParser",
          "line": 15,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "add_argument",
          "line": 16,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "add_argument",
          "line": 17,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "add_argument",
          "line": 18,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "parse_args",
          "line": 19,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "Path",
          "line": 22,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "Path",
          "line": 23,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 33,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 34,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 35,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 36,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 37,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "exists",
          "line": 43,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "append",
          "line": 44,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 47,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 49,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 50,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 51,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "append",
          "line": 58,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "append",
          "line": 60,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "extend",
          "line": 63,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "extend",
          "line": 70,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "append",
          "line": 74,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "str",
          "line": 74,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "chdir",
          "line": 77,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 79,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 81,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 82,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 85,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 86,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "join",
          "line": 86,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 87,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "run",
          "line": 90,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 93,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 94,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 97,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 100,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 101,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 104,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 105,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 106,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 107,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 108,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 109,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 110,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 111,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 114,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 115,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 118,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 119,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 120,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 121,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 122,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 123,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 124,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 125,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 126,
          "type": "direct"
        },
        {
          "caller": "run_frontend_tests",
          "callee": "print",
          "line": 133,
          "type": "direct"
        },
        {
          "caller": "run_frontend_tests",
          "callee": "run",
          "line": 137,
          "type": "attribute"
        },
        {
          "caller": "run_frontend_tests",
          "callee": "run",
          "line": 138,
          "type": "attribute"
        },
        {
          "caller": "run_frontend_tests",
          "callee": "print",
          "line": 140,
          "type": "direct"
        },
        {
          "caller": "run_frontend_tests",
          "callee": "Path",
          "line": 143,
          "type": "direct"
        },
        {
          "caller": "run_frontend_tests",
          "callee": "exists",
          "line": 144,
          "type": "attribute"
        },
        {
          "caller": "run_frontend_tests",
          "callee": "run",
          "line": 145,
          "type": "attribute"
        },
        {
          "caller": "run_frontend_tests",
          "callee": "str",
          "line": 146,
          "type": "direct"
        },
        {
          "caller": "run_frontend_tests",
          "callee": "print",
          "line": 150,
          "type": "direct"
        },
        {
          "caller": "run_frontend_tests",
          "callee": "print",
          "line": 152,
          "type": "direct"
        },
        {
          "caller": "run_frontend_tests",
          "callee": "print",
          "line": 156,
          "type": "direct"
        },
        {
          "caller": "run_frontend_tests",
          "callee": "print",
          "line": 160,
          "type": "direct"
        },
        {
          "caller": "run_frontend_tests",
          "callee": "print",
          "line": 161,
          "type": "direct"
        }
      ],
      "error": null
    },
    {
      "filepath": "tests\\run_milestone_1_2_tests.py",
      "functions": [
        {
          "name": "__init__",
          "full_name": "Milestone12TestRunner.__init__",
          "class": "Milestone12TestRunner",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 28,
          "line_end": 45,
          "access_level": "dunder",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "print_header",
          "full_name": "Milestone12TestRunner.print_header",
          "class": "Milestone12TestRunner",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Print test runner header.",
          "line_start": 47,
          "line_end": 59,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "check_dependencies",
          "full_name": "Milestone12TestRunner.check_dependencies",
          "class": "Milestone12TestRunner",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Check if required test dependencies are installed.",
          "line_start": 61,
          "line_end": 85,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "run_backend_tests",
          "full_name": "Milestone12TestRunner.run_backend_tests",
          "class": "Milestone12TestRunner",
          "signature": "(self, verbose, coverage)",
          "return_type": "",
          "decorators": [],
          "docstring": "Run backend Python tests.",
          "line_start": 87,
          "line_end": 132,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "run_frontend_tests",
          "full_name": "Milestone12TestRunner.run_frontend_tests",
          "class": "Milestone12TestRunner",
          "signature": "(self, verbose)",
          "return_type": "",
          "decorators": [],
          "docstring": "Run frontend JavaScript tests if available.",
          "line_start": 134,
          "line_end": 169,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "print_summary",
          "full_name": "Milestone12TestRunner.print_summary",
          "class": "Milestone12TestRunner",
          "signature": "(self, backend_success, frontend_success, start_time)",
          "return_type": "",
          "decorators": [],
          "docstring": "Print test execution summary.",
          "line_start": 171,
          "line_end": 198,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "run_tests",
          "full_name": "Milestone12TestRunner.run_tests",
          "class": "Milestone12TestRunner",
          "signature": "(self, verbose, coverage)",
          "return_type": "",
          "decorators": [],
          "docstring": "Run all essential tests for Milestone 1.2.",
          "line_start": 200,
          "line_end": 219,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "main",
          "full_name": "main",
          "class": null,
          "signature": "()",
          "return_type": "",
          "decorators": [],
          "docstring": "Main entry point.",
          "line_start": 222,
          "line_end": 255,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "sys",
          "alias": null,
          "line": 15
        },
        {
          "type": "import",
          "module": "os",
          "alias": null,
          "line": 16
        },
        {
          "type": "import",
          "module": "subprocess",
          "alias": null,
          "line": 17
        },
        {
          "type": "import",
          "module": "argparse",
          "alias": null,
          "line": 18
        },
        {
          "type": "from_import",
          "module": "pathlib",
          "name": "Path",
          "alias": null,
          "line": 19
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 20
        }
      ],
      "function_calls": [
        {
          "caller": "Milestone12TestRunner.__init__",
          "callee": "Path",
          "line": 29,
          "type": "direct"
        },
        {
          "caller": "Milestone12TestRunner.print_header",
          "callee": "print",
          "line": 49,
          "type": "direct"
        },
        {
          "caller": "Milestone12TestRunner.print_header",
          "callee": "print",
          "line": 50,
          "type": "direct"
        },
        {
          "caller": "Milestone12TestRunner.print_header",
          "callee": "print",
          "line": 51,
          "type": "direct"
        },
        {
          "caller": "Milestone12TestRunner.print_header",
          "callee": "print",
          "line": 52,
          "type": "direct"
        },
        {
          "caller": "Milestone12TestRunner.print_header",
          "callee": "print",
          "line": 53,
          "type": "direct"
        },
        {
          "caller": "Milestone12TestRunner.print_header",
          "callee": "print",
          "line": 54,
          "type": "direct"
        },
        {
          "caller": "Milestone12TestRunner.print_header",
          "callee": "print",
          "line": 55,
          "type": "direct"
        },
        {
          "caller": "Milestone12TestRunner.print_header",
          "callee": "print",
          "line": 56,
          "type": "direct"
        },
        {
          "caller": "Milestone12TestRunner.print_header",
          "callee": "print",
          "line": 57,
          "type": "direct"
        },
        {
          "caller": "Milestone12TestRunner.print_header",
          "callee": "print",
          "line": 58,
          "type": "direct"
        },
        {
          "caller": "Milestone12TestRunner.print_header",
          "callee": "print",
          "line": 59,
          "type": "direct"
        },
        {
          "caller": "Milestone12TestRunner.check_dependencies",
          "callee": "print",
          "line": 63,
          "type": "direct"
        },
        {
          "caller": "Milestone12TestRunner.check_dependencies",
          "callee": "__import__",
          "line": 75,
          "type": "direct"
        },
        {
          "caller": "Milestone12TestRunner.check_dependencies",
          "callee": "replace",
          "line": 75,
          "type": "attribute"
        },
        {
          "caller": "Milestone12TestRunner.check_dependencies",
          "callee": "append",
          "line": 77,
          "type": "attribute"
        },
        {
          "caller": "Milestone12TestRunner.check_dependencies",
          "callee": "print",
          "line": 80,
          "type": "direct"
        },
        {
          "caller": "Milestone12TestRunner.check_dependencies",
          "callee": "join",
          "line": 80,
          "type": "attribute"
        },
        {
          "caller": "Milestone12TestRunner.check_dependencies",
          "callee": "print",
          "line": 81,
          "type": "direct"
        },
        {
          "caller": "Milestone12TestRunner.check_dependencies",
          "callee": "print",
          "line": 84,
          "type": "direct"
        },
        {
          "caller": "Milestone12TestRunner.run_backend_tests",
          "callee": "print",
          "line": 89,
          "type": "direct"
        },
        {
          "caller": "Milestone12TestRunner.run_backend_tests",
          "callee": "print",
          "line": 90,
          "type": "direct"
        },
        {
          "caller": "Milestone12TestRunner.run_backend_tests",
          "callee": "extend",
          "line": 96,
          "type": "attribute"
        },
        {
          "caller": "Milestone12TestRunner.run_backend_tests",
          "callee": "extend",
          "line": 99,
          "type": "attribute"
        },
        {
          "caller": "Milestone12TestRunner.run_backend_tests",
          "callee": "endswith",
          "line": 106,
          "type": "attribute"
        },
        {
          "caller": "Milestone12TestRunner.run_backend_tests",
          "callee": "exists",
          "line": 108,
          "type": "attribute"
        },
        {
          "caller": "Milestone12TestRunner.run_backend_tests",
          "callee": "append",
          "line": 109,
          "type": "attribute"
        },
        {
          "caller": "Milestone12TestRunner.run_backend_tests",
          "callee": "str",
          "line": 109,
          "type": "direct"
        },
        {
          "caller": "Milestone12TestRunner.run_backend_tests",
          "callee": "exists",
          "line": 114,
          "type": "attribute"
        },
        {
          "caller": "Milestone12TestRunner.run_backend_tests",
          "callee": "append",
          "line": 115,
          "type": "attribute"
        },
        {
          "caller": "Milestone12TestRunner.run_backend_tests",
          "callee": "str",
          "line": 115,
          "type": "direct"
        },
        {
          "caller": "Milestone12TestRunner.run_backend_tests",
          "callee": "print",
          "line": 118,
          "type": "direct"
        },
        {
          "caller": "Milestone12TestRunner.run_backend_tests",
          "callee": "extend",
          "line": 121,
          "type": "attribute"
        },
        {
          "caller": "Milestone12TestRunner.run_backend_tests",
          "callee": "print",
          "line": 123,
          "type": "direct"
        },
        {
          "caller": "Milestone12TestRunner.run_backend_tests",
          "callee": "join",
          "line": 123,
          "type": "attribute"
        },
        {
          "caller": "Milestone12TestRunner.run_backend_tests",
          "callee": "Path",
          "line": 123,
          "type": "direct"
        },
        {
          "caller": "Milestone12TestRunner.run_backend_tests",
          "callee": "print",
          "line": 124,
          "type": "direct"
        },
        {
          "caller": "Milestone12TestRunner.run_backend_tests",
          "callee": "join",
          "line": 124,
          "type": "attribute"
        },
        {
          "caller": "Milestone12TestRunner.run_backend_tests",
          "callee": "print",
          "line": 125,
          "type": "direct"
        },
        {
          "caller": "Milestone12TestRunner.run_backend_tests",
          "callee": "run",
          "line": 128,
          "type": "attribute"
        },
        {
          "caller": "Milestone12TestRunner.run_backend_tests",
          "callee": "print",
          "line": 131,
          "type": "direct"
        },
        {
          "caller": "Milestone12TestRunner.run_frontend_tests",
          "callee": "print",
          "line": 136,
          "type": "direct"
        },
        {
          "caller": "Milestone12TestRunner.run_frontend_tests",
          "callee": "print",
          "line": 137,
          "type": "direct"
        },
        {
          "caller": "Milestone12TestRunner.run_frontend_tests",
          "callee": "exists",
          "line": 142,
          "type": "attribute"
        },
        {
          "caller": "Milestone12TestRunner.run_frontend_tests",
          "callee": "print",
          "line": 143,
          "type": "direct"
        },
        {
          "caller": "Milestone12TestRunner.run_frontend_tests",
          "callee": "run",
          "line": 148,
          "type": "attribute"
        },
        {
          "caller": "Milestone12TestRunner.run_frontend_tests",
          "callee": "print",
          "line": 151,
          "type": "direct"
        },
        {
          "caller": "Milestone12TestRunner.run_frontend_tests",
          "callee": "print",
          "line": 152,
          "type": "direct"
        },
        {
          "caller": "Milestone12TestRunner.run_frontend_tests",
          "callee": "str",
          "line": 156,
          "type": "direct"
        },
        {
          "caller": "Milestone12TestRunner.run_frontend_tests",
          "callee": "append",
          "line": 158,
          "type": "attribute"
        },
        {
          "caller": "Milestone12TestRunner.run_frontend_tests",
          "callee": "print",
          "line": 160,
          "type": "direct"
        },
        {
          "caller": "Milestone12TestRunner.run_frontend_tests",
          "callee": "print",
          "line": 161,
          "type": "direct"
        },
        {
          "caller": "Milestone12TestRunner.run_frontend_tests",
          "callee": "join",
          "line": 161,
          "type": "attribute"
        },
        {
          "caller": "Milestone12TestRunner.run_frontend_tests",
          "callee": "print",
          "line": 162,
          "type": "direct"
        },
        {
          "caller": "Milestone12TestRunner.run_frontend_tests",
          "callee": "run",
          "line": 165,
          "type": "attribute"
        },
        {
          "caller": "Milestone12TestRunner.run_frontend_tests",
          "callee": "print",
          "line": 168,
          "type": "direct"
        },
        {
          "caller": "Milestone12TestRunner.print_summary",
          "callee": "now",
          "line": 173,
          "type": "attribute"
        },
        {
          "caller": "Milestone12TestRunner.print_summary",
          "callee": "total_seconds",
          "line": 174,
          "type": "attribute"
        },
        {
          "caller": "Milestone12TestRunner.print_summary",
          "callee": "print",
          "line": 176,
          "type": "direct"
        },
        {
          "caller": "Milestone12TestRunner.print_summary",
          "callee": "print",
          "line": 179,
          "type": "direct"
        },
        {
          "caller": "Milestone12TestRunner.print_summary",
          "callee": "print",
          "line": 180,
          "type": "direct"
        },
        {
          "caller": "Milestone12TestRunner.print_summary",
          "callee": "print",
          "line": 181,
          "type": "direct"
        },
        {
          "caller": "Milestone12TestRunner.print_summary",
          "callee": "print",
          "line": 182,
          "type": "direct"
        },
        {
          "caller": "Milestone12TestRunner.print_summary",
          "callee": "print",
          "line": 183,
          "type": "direct"
        },
        {
          "caller": "Milestone12TestRunner.print_summary",
          "callee": "print",
          "line": 184,
          "type": "direct"
        },
        {
          "caller": "Milestone12TestRunner.print_summary",
          "callee": "print",
          "line": 185,
          "type": "direct"
        },
        {
          "caller": "Milestone12TestRunner.print_summary",
          "callee": "print",
          "line": 186,
          "type": "direct"
        },
        {
          "caller": "Milestone12TestRunner.print_summary",
          "callee": "print",
          "line": 187,
          "type": "direct"
        },
        {
          "caller": "Milestone12TestRunner.print_summary",
          "callee": "print",
          "line": 188,
          "type": "direct"
        },
        {
          "caller": "Milestone12TestRunner.print_summary",
          "callee": "print",
          "line": 189,
          "type": "direct"
        },
        {
          "caller": "Milestone12TestRunner.print_summary",
          "callee": "print",
          "line": 191,
          "type": "direct"
        },
        {
          "caller": "Milestone12TestRunner.print_summary",
          "callee": "print",
          "line": 193,
          "type": "direct"
        },
        {
          "caller": "Milestone12TestRunner.print_summary",
          "callee": "print",
          "line": 195,
          "type": "direct"
        },
        {
          "caller": "Milestone12TestRunner.print_summary",
          "callee": "print",
          "line": 197,
          "type": "direct"
        },
        {
          "caller": "Milestone12TestRunner.print_summary",
          "callee": "print",
          "line": 198,
          "type": "direct"
        },
        {
          "caller": "Milestone12TestRunner.print_summary",
          "callee": "strftime",
          "line": 198,
          "type": "attribute"
        },
        {
          "caller": "Milestone12TestRunner.run_tests",
          "callee": "now",
          "line": 202,
          "type": "attribute"
        },
        {
          "caller": "Milestone12TestRunner.run_tests",
          "callee": "print_header",
          "line": 204,
          "type": "attribute"
        },
        {
          "caller": "Milestone12TestRunner.run_tests",
          "callee": "check_dependencies",
          "line": 207,
          "type": "attribute"
        },
        {
          "caller": "Milestone12TestRunner.run_tests",
          "callee": "run_backend_tests",
          "line": 211,
          "type": "attribute"
        },
        {
          "caller": "Milestone12TestRunner.run_tests",
          "callee": "run_frontend_tests",
          "line": 214,
          "type": "attribute"
        },
        {
          "caller": "Milestone12TestRunner.run_tests",
          "callee": "print_summary",
          "line": 217,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "ArgumentParser",
          "line": 224,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "add_argument",
          "line": 236,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "add_argument",
          "line": 242,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "parse_args",
          "line": 248,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "Milestone12TestRunner",
          "line": 251,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "run_tests",
          "line": 252,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "exit",
          "line": 255,
          "type": "attribute"
        }
      ],
      "error": null
    },
    {
      "filepath": "tests\\test_essential_config.py",
      "functions": [
        {
          "name": "test_german_timezone_configuration",
          "full_name": "TestGermanBusinessConfig.test_german_timezone_configuration",
          "class": "TestGermanBusinessConfig",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test system uses German timezone for Porcus3D business.",
          "line_start": 20,
          "line_end": 27,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_currency_configuration",
          "full_name": "TestGermanBusinessConfig.test_currency_configuration",
          "class": "TestGermanBusinessConfig",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test EUR currency configuration for German business.",
          "line_start": 29,
          "line_end": 35,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_vat_rate_configuration",
          "full_name": "TestGermanBusinessConfig.test_vat_rate_configuration",
          "class": "TestGermanBusinessConfig",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test German VAT rate (19%) for business calculations.",
          "line_start": 37,
          "line_end": 45,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_material_cost_calculation",
          "full_name": "TestGermanBusinessConfig.test_material_cost_calculation",
          "class": "TestGermanBusinessConfig",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test material cost calculation for German pricing.",
          "line_start": 47,
          "line_end": 56,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_power_cost_calculation",
          "full_name": "TestGermanBusinessConfig.test_power_cost_calculation",
          "class": "TestGermanBusinessConfig",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test power cost calculation for German electricity rates.",
          "line_start": 58,
          "line_end": 67,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_environment_variables",
          "full_name": "TestSystemConfiguration.test_environment_variables",
          "class": "TestSystemConfiguration",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test essential environment variables can be set.",
          "line_start": 73,
          "line_end": 87,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_database_path_configuration",
          "full_name": "TestSystemConfiguration.test_database_path_configuration",
          "class": "TestSystemConfiguration",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test database path configuration.",
          "line_start": 89,
          "line_end": 95,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_api_base_configuration",
          "full_name": "TestSystemConfiguration.test_api_base_configuration",
          "class": "TestSystemConfiguration",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test API configuration essentials.",
          "line_start": 97,
          "line_end": 109,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_printer_default_configuration",
          "full_name": "TestSystemConfiguration.test_printer_default_configuration",
          "class": "TestSystemConfiguration",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test default printer configuration values.",
          "line_start": 111,
          "line_end": 133,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_config_service_initialization",
          "full_name": "TestConfigService.test_config_service_initialization",
          "class": "TestConfigService",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test ConfigService can be initialized.",
          "line_start": 140,
          "line_end": 143,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_config_service_german_settings",
          "full_name": "TestConfigService.test_config_service_german_settings",
          "class": "TestConfigService",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test ConfigService has German business settings.",
          "line_start": 145,
          "line_end": 150,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_business_hours_validation",
          "full_name": "TestBusinessLogic.test_business_hours_validation",
          "class": "TestBusinessLogic",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test German business hours validation.",
          "line_start": 156,
          "line_end": 169,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_customer_data_validation",
          "full_name": "TestBusinessLogic.test_customer_data_validation",
          "class": "TestBusinessLogic",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test customer data structure for GDPR compliance.",
          "line_start": 171,
          "line_end": 184,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_job_classification",
          "full_name": "TestBusinessLogic.test_job_classification",
          "class": "TestBusinessLogic",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test business vs private job classification.",
          "line_start": 186,
          "line_end": 208,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "is_business_job",
          "full_name": "TestBusinessLogic.is_business_job",
          "class": "TestBusinessLogic",
          "signature": "(customer_name)",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 200,
          "line_end": 203,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_file_naming_conventions",
          "full_name": "TestBusinessLogic.test_file_naming_conventions",
          "class": "TestBusinessLogic",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test German-safe file naming.",
          "line_start": 210,
          "line_end": 227,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "pytest",
          "alias": null,
          "line": 5
        },
        {
          "type": "import",
          "module": "os",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 7
        },
        {
          "type": "import",
          "module": "pytz",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "src.services.config_service",
          "name": "ConfigService",
          "alias": null,
          "line": 12
        }
      ],
      "function_calls": [
        {
          "caller": "TestGermanBusinessConfig.test_german_timezone_configuration",
          "callee": "timezone",
          "line": 22,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessConfig.test_german_timezone_configuration",
          "callee": "now",
          "line": 23,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessConfig.test_german_timezone_configuration",
          "callee": "str",
          "line": 27,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessConfig.test_material_cost_calculation",
          "callee": "abs",
          "line": 53,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessConfig.test_material_cost_calculation",
          "callee": "round",
          "line": 55,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessConfig.test_power_cost_calculation",
          "callee": "abs",
          "line": 67,
          "type": "direct"
        },
        {
          "caller": "TestSystemConfiguration.test_environment_variables",
          "callee": "items",
          "line": 80,
          "type": "attribute"
        },
        {
          "caller": "TestSystemConfiguration.test_environment_variables",
          "callee": "getenv",
          "line": 82,
          "type": "attribute"
        },
        {
          "caller": "TestSystemConfiguration.test_database_path_configuration",
          "callee": "endswith",
          "line": 94,
          "type": "attribute"
        },
        {
          "caller": "TestSystemConfiguration.test_api_base_configuration",
          "callee": "isinstance",
          "line": 107,
          "type": "direct"
        },
        {
          "caller": "TestConfigService.test_config_service_initialization",
          "callee": "ConfigService",
          "line": 142,
          "type": "direct"
        },
        {
          "caller": "TestConfigService.test_config_service_german_settings",
          "callee": "ConfigService",
          "line": 147,
          "type": "direct"
        },
        {
          "caller": "TestConfigService.test_config_service_german_settings",
          "callee": "hasattr",
          "line": 150,
          "type": "direct"
        },
        {
          "caller": "TestBusinessLogic.test_business_hours_validation",
          "callee": "int",
          "line": 164,
          "type": "direct"
        },
        {
          "caller": "TestBusinessLogic.test_business_hours_validation",
          "callee": "split",
          "line": 164,
          "type": "attribute"
        },
        {
          "caller": "TestBusinessLogic.test_business_hours_validation",
          "callee": "int",
          "line": 165,
          "type": "direct"
        },
        {
          "caller": "TestBusinessLogic.test_business_hours_validation",
          "callee": "split",
          "line": 165,
          "type": "attribute"
        },
        {
          "caller": "TestBusinessLogic.test_customer_data_validation",
          "callee": "isoformat",
          "line": 177,
          "type": "attribute"
        },
        {
          "caller": "TestBusinessLogic.test_customer_data_validation",
          "callee": "now",
          "line": 177,
          "type": "attribute"
        },
        {
          "caller": "TestBusinessLogic.test_customer_data_validation",
          "callee": "endswith",
          "line": 182,
          "type": "attribute"
        },
        {
          "caller": "TestBusinessLogic.is_business_job",
          "callee": "any",
          "line": 203,
          "type": "direct"
        },
        {
          "caller": "TestBusinessLogic.test_job_classification",
          "callee": "is_business_job",
          "line": 205,
          "type": "direct"
        },
        {
          "caller": "TestBusinessLogic.test_job_classification",
          "callee": "is_business_job",
          "line": 206,
          "type": "direct"
        },
        {
          "caller": "TestBusinessLogic.test_job_classification",
          "callee": "is_business_job",
          "line": 207,
          "type": "direct"
        },
        {
          "caller": "TestBusinessLogic.test_job_classification",
          "callee": "is_business_job",
          "line": 208,
          "type": "direct"
        },
        {
          "caller": "TestBusinessLogic.test_file_naming_conventions",
          "callee": "split",
          "line": 221,
          "type": "attribute"
        }
      ],
      "error": null
    },
    {
      "filepath": "tests\\test_essential_integration.py",
      "functions": [
        {
          "name": "async_client",
          "full_name": "async_client",
          "class": null,
          "signature": "()",
          "return_type": "",
          "decorators": [
            "pytest.fixture"
          ],
          "docstring": "Async test client for integration testing.",
          "line_start": 16,
          "line_end": 18,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_complete_printer_setup_workflow",
          "full_name": "TestCoreWorkflowIntegration.test_complete_printer_setup_workflow",
          "class": "TestCoreWorkflowIntegration",
          "signature": "(self, async_client)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test complete workflow: Add printer -> Connect -> Monitor status.",
          "line_start": 24,
          "line_end": 59,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_health_check_system_integration",
          "full_name": "TestCoreWorkflowIntegration.test_health_check_system_integration",
          "class": "TestCoreWorkflowIntegration",
          "signature": "(self, async_client)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test health check includes all system components.",
          "line_start": 61,
          "line_end": 75,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_files_discovery_workflow",
          "full_name": "TestCoreWorkflowIntegration.test_files_discovery_workflow",
          "class": "TestCoreWorkflowIntegration",
          "signature": "(self, async_client)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test file discovery and management workflow.",
          "line_start": 77,
          "line_end": 86,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_jobs_monitoring_workflow",
          "full_name": "TestCoreWorkflowIntegration.test_jobs_monitoring_workflow",
          "class": "TestCoreWorkflowIntegration",
          "signature": "(self, async_client)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test basic job monitoring workflow.",
          "line_start": 88,
          "line_end": 97,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_analytics_basic_functionality",
          "full_name": "TestCoreWorkflowIntegration.test_analytics_basic_functionality",
          "class": "TestCoreWorkflowIntegration",
          "signature": "(self, async_client)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test analytics endpoint basic functionality.",
          "line_start": 99,
          "line_end": 106,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_system_configuration_workflow",
          "full_name": "TestCoreWorkflowIntegration.test_system_configuration_workflow",
          "class": "TestCoreWorkflowIntegration",
          "signature": "(self, async_client)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test system configuration endpoints.",
          "line_start": 108,
          "line_end": 115,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_websocket_connection_basic",
          "full_name": "TestCoreWorkflowIntegration.test_websocket_connection_basic",
          "class": "TestCoreWorkflowIntegration",
          "signature": "(self)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test WebSocket connection can be established.",
          "line_start": 118,
          "line_end": 134,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_german_business_integration",
          "full_name": "TestCoreWorkflowIntegration.test_german_business_integration",
          "class": "TestCoreWorkflowIntegration",
          "signature": "(self, async_client)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test German business logic integration.",
          "line_start": 136,
          "line_end": 158,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_invalid_printer_data_handling",
          "full_name": "TestErrorHandlingIntegration.test_invalid_printer_data_handling",
          "class": "TestErrorHandlingIntegration",
          "signature": "(self, async_client)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test system handles invalid printer data gracefully.",
          "line_start": 164,
          "line_end": 178,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_nonexistent_resource_handling",
          "full_name": "TestErrorHandlingIntegration.test_nonexistent_resource_handling",
          "class": "TestErrorHandlingIntegration",
          "signature": "(self, async_client)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test system handles requests for non-existent resources.",
          "line_start": 180,
          "line_end": 188,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_duplicate_printer_handling",
          "full_name": "TestErrorHandlingIntegration.test_duplicate_printer_handling",
          "class": "TestErrorHandlingIntegration",
          "signature": "(self, async_client)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test system prevents duplicate printer IDs.",
          "line_start": 190,
          "line_end": 206,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_timezone_integration",
          "full_name": "TestGermanBusinessIntegration.test_timezone_integration",
          "class": "TestGermanBusinessIntegration",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test German timezone is used throughout system.",
          "line_start": 212,
          "line_end": 221,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_currency_formatting_integration",
          "full_name": "TestGermanBusinessIntegration.test_currency_formatting_integration",
          "class": "TestGermanBusinessIntegration",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test EUR currency formatting in business calculations.",
          "line_start": 223,
          "line_end": 237,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "calculate_job_cost",
          "full_name": "TestGermanBusinessIntegration.calculate_job_cost",
          "class": "TestGermanBusinessIntegration",
          "signature": "(material_grams, cost_per_gram, vat_rate)",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 226,
          "line_end": 230,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_business_vs_private_classification",
          "full_name": "TestGermanBusinessIntegration.test_business_vs_private_classification",
          "class": "TestGermanBusinessIntegration",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test business vs private job classification logic.",
          "line_start": 239,
          "line_end": 250,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "classify_customer",
          "full_name": "TestGermanBusinessIntegration.classify_customer",
          "class": "TestGermanBusinessIntegration",
          "signature": "(customer_name)",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 242,
          "line_end": 244,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_file_naming_german_support",
          "full_name": "TestGermanBusinessIntegration.test_file_naming_german_support",
          "class": "TestGermanBusinessIntegration",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test file naming supports German characters.",
          "line_start": 252,
          "line_end": 268,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_bambu_lab_real_connection",
          "full_name": "TestHardwareIntegration.test_bambu_lab_real_connection",
          "class": "TestHardwareIntegration",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test connection to real Bambu Lab printer (requires hardware).",
          "line_start": 275,
          "line_end": 277,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_prusa_real_connection",
          "full_name": "TestHardwareIntegration.test_prusa_real_connection",
          "class": "TestHardwareIntegration",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test connection to real Prusa printer (requires hardware).",
          "line_start": 279,
          "line_end": 281,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "pytest",
          "alias": null,
          "line": 5
        },
        {
          "type": "import",
          "module": "asyncio",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "unittest.mock",
          "name": "Mock",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "unittest.mock",
          "name": "patch",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "unittest.mock",
          "name": "AsyncMock",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "fastapi.testclient",
          "name": "TestClient",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "src.main",
          "name": "app",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "src.models.printer",
          "name": "PrinterType",
          "alias": null,
          "line": 11
        },
        {
          "type": "from_import",
          "module": "src.models.printer",
          "name": "PrinterStatus",
          "alias": null,
          "line": 11
        },
        {
          "type": "from_import",
          "module": "src.models.job",
          "name": "JobStatus",
          "alias": null,
          "line": 12
        },
        {
          "type": "from_import",
          "module": "websockets",
          "name": "connect",
          "alias": null,
          "line": 123
        },
        {
          "type": "import",
          "module": "pytz",
          "alias": null,
          "line": 214
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 215
        }
      ],
      "function_calls": [
        {
          "caller": "async_client",
          "callee": "TestClient",
          "line": 18,
          "type": "direct"
        },
        {
          "caller": "TestCoreWorkflowIntegration.test_complete_printer_setup_workflow",
          "callee": "post",
          "line": 37,
          "type": "attribute"
        },
        {
          "caller": "TestCoreWorkflowIntegration.test_complete_printer_setup_workflow",
          "callee": "json",
          "line": 39,
          "type": "attribute"
        },
        {
          "caller": "TestCoreWorkflowIntegration.test_complete_printer_setup_workflow",
          "callee": "get",
          "line": 43,
          "type": "attribute"
        },
        {
          "caller": "TestCoreWorkflowIntegration.test_complete_printer_setup_workflow",
          "callee": "json",
          "line": 45,
          "type": "attribute"
        },
        {
          "caller": "TestCoreWorkflowIntegration.test_complete_printer_setup_workflow",
          "callee": "post",
          "line": 49,
          "type": "attribute"
        },
        {
          "caller": "TestCoreWorkflowIntegration.test_complete_printer_setup_workflow",
          "callee": "get",
          "line": 53,
          "type": "attribute"
        },
        {
          "caller": "TestCoreWorkflowIntegration.test_complete_printer_setup_workflow",
          "callee": "json",
          "line": 55,
          "type": "attribute"
        },
        {
          "caller": "TestCoreWorkflowIntegration.test_complete_printer_setup_workflow",
          "callee": "len",
          "line": 56,
          "type": "direct"
        },
        {
          "caller": "TestCoreWorkflowIntegration.test_health_check_system_integration",
          "callee": "get",
          "line": 63,
          "type": "attribute"
        },
        {
          "caller": "TestCoreWorkflowIntegration.test_health_check_system_integration",
          "callee": "json",
          "line": 66,
          "type": "attribute"
        },
        {
          "caller": "TestCoreWorkflowIntegration.test_files_discovery_workflow",
          "callee": "get",
          "line": 81,
          "type": "attribute"
        },
        {
          "caller": "TestCoreWorkflowIntegration.test_files_discovery_workflow",
          "callee": "json",
          "line": 83,
          "type": "attribute"
        },
        {
          "caller": "TestCoreWorkflowIntegration.test_files_discovery_workflow",
          "callee": "isinstance",
          "line": 86,
          "type": "direct"
        },
        {
          "caller": "TestCoreWorkflowIntegration.test_jobs_monitoring_workflow",
          "callee": "get",
          "line": 92,
          "type": "attribute"
        },
        {
          "caller": "TestCoreWorkflowIntegration.test_jobs_monitoring_workflow",
          "callee": "json",
          "line": 94,
          "type": "attribute"
        },
        {
          "caller": "TestCoreWorkflowIntegration.test_jobs_monitoring_workflow",
          "callee": "isinstance",
          "line": 97,
          "type": "direct"
        },
        {
          "caller": "TestCoreWorkflowIntegration.test_analytics_basic_functionality",
          "callee": "get",
          "line": 101,
          "type": "attribute"
        },
        {
          "caller": "TestCoreWorkflowIntegration.test_analytics_basic_functionality",
          "callee": "json",
          "line": 103,
          "type": "attribute"
        },
        {
          "caller": "TestCoreWorkflowIntegration.test_analytics_basic_functionality",
          "callee": "isinstance",
          "line": 106,
          "type": "direct"
        },
        {
          "caller": "TestCoreWorkflowIntegration.test_system_configuration_workflow",
          "callee": "get",
          "line": 110,
          "type": "attribute"
        },
        {
          "caller": "TestCoreWorkflowIntegration.test_system_configuration_workflow",
          "callee": "json",
          "line": 112,
          "type": "attribute"
        },
        {
          "caller": "TestCoreWorkflowIntegration.test_system_configuration_workflow",
          "callee": "isinstance",
          "line": 115,
          "type": "direct"
        },
        {
          "caller": "TestCoreWorkflowIntegration.test_websocket_connection_basic",
          "callee": "startswith",
          "line": 129,
          "type": "attribute"
        },
        {
          "caller": "TestCoreWorkflowIntegration.test_websocket_connection_basic",
          "callee": "skip",
          "line": 134,
          "type": "attribute"
        },
        {
          "caller": "TestCoreWorkflowIntegration.test_german_business_integration",
          "callee": "post",
          "line": 148,
          "type": "attribute"
        },
        {
          "caller": "TestCoreWorkflowIntegration.test_german_business_integration",
          "callee": "json",
          "line": 151,
          "type": "attribute"
        },
        {
          "caller": "TestCoreWorkflowIntegration.test_german_business_integration",
          "callee": "get",
          "line": 155,
          "type": "attribute"
        },
        {
          "caller": "TestCoreWorkflowIntegration.test_german_business_integration",
          "callee": "json",
          "line": 157,
          "type": "attribute"
        },
        {
          "caller": "TestErrorHandlingIntegration.test_invalid_printer_data_handling",
          "callee": "post",
          "line": 173,
          "type": "attribute"
        },
        {
          "caller": "TestErrorHandlingIntegration.test_invalid_printer_data_handling",
          "callee": "json",
          "line": 176,
          "type": "attribute"
        },
        {
          "caller": "TestErrorHandlingIntegration.test_nonexistent_resource_handling",
          "callee": "get",
          "line": 184,
          "type": "attribute"
        },
        {
          "caller": "TestErrorHandlingIntegration.test_nonexistent_resource_handling",
          "callee": "json",
          "line": 187,
          "type": "attribute"
        },
        {
          "caller": "TestErrorHandlingIntegration.test_duplicate_printer_handling",
          "callee": "post",
          "line": 201,
          "type": "attribute"
        },
        {
          "caller": "TestErrorHandlingIntegration.test_duplicate_printer_handling",
          "callee": "post",
          "line": 205,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessIntegration.test_timezone_integration",
          "callee": "timezone",
          "line": 217,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessIntegration.test_timezone_integration",
          "callee": "now",
          "line": 218,
          "type": "attribute"
        },
        {
          "caller": "TestGermanBusinessIntegration.test_timezone_integration",
          "callee": "str",
          "line": 221,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessIntegration.test_timezone_integration",
          "callee": "str",
          "line": 221,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessIntegration.test_timezone_integration",
          "callee": "str",
          "line": 221,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessIntegration.calculate_job_cost",
          "callee": "round",
          "line": 230,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessIntegration.test_currency_formatting_integration",
          "callee": "calculate_job_cost",
          "line": 233,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessIntegration.test_currency_formatting_integration",
          "callee": "round",
          "line": 234,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessIntegration.classify_customer",
          "callee": "any",
          "line": 244,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessIntegration.test_business_vs_private_classification",
          "callee": "classify_customer",
          "line": 247,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessIntegration.test_business_vs_private_classification",
          "callee": "classify_customer",
          "line": 248,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessIntegration.test_business_vs_private_classification",
          "callee": "classify_customer",
          "line": 249,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessIntegration.test_business_vs_private_classification",
          "callee": "classify_customer",
          "line": 250,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessIntegration.test_file_naming_german_support",
          "callee": "any",
          "line": 263,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessIntegration.test_file_naming_german_support",
          "callee": "endswith",
          "line": 265,
          "type": "attribute"
        },
        {
          "caller": "TestHardwareIntegration.test_bambu_lab_real_connection",
          "callee": "skip",
          "line": 277,
          "type": "attribute"
        },
        {
          "caller": "TestHardwareIntegration.test_prusa_real_connection",
          "callee": "skip",
          "line": 281,
          "type": "attribute"
        }
      ],
      "error": null
    },
    {
      "filepath": "tests\\test_essential_models.py",
      "functions": [
        {
          "name": "test_valid_bambu_printer_creation",
          "full_name": "TestPrinterModel.test_valid_bambu_printer_creation",
          "class": "TestPrinterModel",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test creating valid Bambu Lab printer.",
          "line_start": 17,
          "line_end": 33,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_valid_prusa_printer_creation",
          "full_name": "TestPrinterModel.test_valid_prusa_printer_creation",
          "class": "TestPrinterModel",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test creating valid Prusa printer.",
          "line_start": 35,
          "line_end": 48,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_printer_required_fields",
          "full_name": "TestPrinterModel.test_printer_required_fields",
          "class": "TestPrinterModel",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test printer validation fails without required fields.",
          "line_start": 50,
          "line_end": 60,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_printer_config_optional_fields",
          "full_name": "TestPrinterModel.test_printer_config_optional_fields",
          "class": "TestPrinterModel",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test PrinterConfig with optional updates.",
          "line_start": 62,
          "line_end": 68,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_valid_job_creation",
          "full_name": "TestJobModel.test_valid_job_creation",
          "class": "TestJobModel",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test creating valid print job.",
          "line_start": 74,
          "line_end": 88,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_job_business_logic_fields",
          "full_name": "TestJobModel.test_job_business_logic_fields",
          "class": "TestJobModel",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test German business-specific job fields.",
          "line_start": 90,
          "line_end": 105,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_job_create_minimal",
          "full_name": "TestJobModel.test_job_create_minimal",
          "class": "TestJobModel",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test minimal JobCreate validation.",
          "line_start": 107,
          "line_end": 115,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_job_update_fields",
          "full_name": "TestJobModel.test_job_update_fields",
          "class": "TestJobModel",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test JobUpdate validation.",
          "line_start": 117,
          "line_end": 126,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_valid_file_creation",
          "full_name": "TestFileModel.test_valid_file_creation",
          "class": "TestFileModel",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test creating valid file record.",
          "line_start": 132,
          "line_end": 145,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_file_download_status_progression",
          "full_name": "TestFileModel.test_file_download_status_progression",
          "class": "TestFileModel",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test file download status changes.",
          "line_start": 147,
          "line_end": 169,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_printer_type_enum_values",
          "full_name": "TestEnumValidation.test_printer_type_enum_values",
          "class": "TestEnumValidation",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test PrinterType enum has expected values.",
          "line_start": 175,
          "line_end": 179,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_printer_status_enum_values",
          "full_name": "TestEnumValidation.test_printer_status_enum_values",
          "class": "TestEnumValidation",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test PrinterStatus enum covers essential states.",
          "line_start": 181,
          "line_end": 186,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_job_status_enum_values",
          "full_name": "TestEnumValidation.test_job_status_enum_values",
          "class": "TestEnumValidation",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test JobStatus enum covers print lifecycle.",
          "line_start": 188,
          "line_end": 193,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_file_download_status_enum",
          "full_name": "TestEnumValidation.test_file_download_status_enum",
          "class": "TestEnumValidation",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test FileStatus enum for file management.",
          "line_start": 195,
          "line_end": 200,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_printer_json_serialization",
          "full_name": "TestModelSerialization.test_printer_json_serialization",
          "class": "TestModelSerialization",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test printer serializes to valid JSON.",
          "line_start": 206,
          "line_end": 219,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_job_json_serialization",
          "full_name": "TestModelSerialization.test_job_json_serialization",
          "class": "TestModelSerialization",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test job serializes with German business fields.",
          "line_start": 221,
          "line_end": 235,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "pytest",
          "alias": null,
          "line": 5
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "pydantic",
          "name": "ValidationError",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "src.models.printer",
          "name": "Printer",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "src.models.printer",
          "name": "PrinterType",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "src.models.printer",
          "name": "PrinterStatus",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "src.models.printer",
          "name": "PrinterConfig",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "src.models.job",
          "name": "Job",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "src.models.job",
          "name": "JobStatus",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "src.models.job",
          "name": "JobCreate",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "src.models.job",
          "name": "JobUpdate",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "src.models.file",
          "name": "File",
          "alias": null,
          "line": 11
        },
        {
          "type": "from_import",
          "module": "src.models.file",
          "name": "FileStatus",
          "alias": null,
          "line": 11
        }
      ],
      "function_calls": [
        {
          "caller": "TestPrinterModel.test_valid_bambu_printer_creation",
          "callee": "Printer",
          "line": 28,
          "type": "direct"
        },
        {
          "caller": "TestPrinterModel.test_valid_prusa_printer_creation",
          "callee": "Printer",
          "line": 45,
          "type": "direct"
        },
        {
          "caller": "TestPrinterModel.test_printer_required_fields",
          "callee": "raises",
          "line": 52,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterModel.test_printer_required_fields",
          "callee": "Printer",
          "line": 53,
          "type": "direct"
        },
        {
          "caller": "TestPrinterModel.test_printer_required_fields",
          "callee": "errors",
          "line": 55,
          "type": "attribute"
        },
        {
          "caller": "TestPrinterModel.test_printer_config_optional_fields",
          "callee": "PrinterConfig",
          "line": 64,
          "type": "direct"
        },
        {
          "caller": "TestJobModel.test_valid_job_creation",
          "callee": "Job",
          "line": 84,
          "type": "direct"
        },
        {
          "caller": "TestJobModel.test_job_business_logic_fields",
          "callee": "Job",
          "line": 92,
          "type": "direct"
        },
        {
          "caller": "TestJobModel.test_job_create_minimal",
          "callee": "JobCreate",
          "line": 109,
          "type": "direct"
        },
        {
          "caller": "TestJobModel.test_job_update_fields",
          "callee": "JobUpdate",
          "line": 119,
          "type": "direct"
        },
        {
          "caller": "TestFileModel.test_valid_file_creation",
          "callee": "File",
          "line": 142,
          "type": "direct"
        },
        {
          "caller": "TestFileModel.test_file_download_status_progression",
          "callee": "File",
          "line": 150,
          "type": "direct"
        },
        {
          "caller": "TestFileModel.test_file_download_status_progression",
          "callee": "File",
          "line": 160,
          "type": "direct"
        },
        {
          "caller": "TestEnumValidation.test_printer_status_enum_values",
          "callee": "hasattr",
          "line": 186,
          "type": "direct"
        },
        {
          "caller": "TestEnumValidation.test_printer_status_enum_values",
          "callee": "upper",
          "line": 186,
          "type": "attribute"
        },
        {
          "caller": "TestEnumValidation.test_job_status_enum_values",
          "callee": "hasattr",
          "line": 193,
          "type": "direct"
        },
        {
          "caller": "TestEnumValidation.test_job_status_enum_values",
          "callee": "upper",
          "line": 193,
          "type": "attribute"
        },
        {
          "caller": "TestModelSerialization.test_printer_json_serialization",
          "callee": "Printer",
          "line": 208,
          "type": "direct"
        },
        {
          "caller": "TestModelSerialization.test_printer_json_serialization",
          "callee": "now",
          "line": 212,
          "type": "attribute"
        },
        {
          "caller": "TestModelSerialization.test_printer_json_serialization",
          "callee": "model_dump",
          "line": 215,
          "type": "attribute"
        },
        {
          "caller": "TestModelSerialization.test_job_json_serialization",
          "callee": "Job",
          "line": 223,
          "type": "direct"
        },
        {
          "caller": "TestModelSerialization.test_job_json_serialization",
          "callee": "model_dump",
          "line": 232,
          "type": "attribute"
        }
      ],
      "error": null
    },
    {
      "filepath": "tests\\test_essential_printer_api.py",
      "functions": [
        {
          "name": "mock_printer_id",
          "full_name": "TestEssentialPrinterAPIEndpoints.mock_printer_id",
          "class": "TestEssentialPrinterAPIEndpoints",
          "signature": "(self)",
          "return_type": "",
          "decorators": [
            "pytest.fixture"
          ],
          "docstring": "Mock printer ID for testing.",
          "line_start": 25,
          "line_end": 27,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "mock_bambu_printer",
          "full_name": "TestEssentialPrinterAPIEndpoints.mock_bambu_printer",
          "class": "TestEssentialPrinterAPIEndpoints",
          "signature": "(self, mock_printer_id)",
          "return_type": "",
          "decorators": [
            "pytest.fixture"
          ],
          "docstring": "Mock Bambu Lab printer for testing.",
          "line_start": 30,
          "line_end": 40,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "mock_prusa_printer",
          "full_name": "TestEssentialPrinterAPIEndpoints.mock_prusa_printer",
          "class": "TestEssentialPrinterAPIEndpoints",
          "signature": "(self, mock_printer_id)",
          "return_type": "",
          "decorators": [
            "pytest.fixture"
          ],
          "docstring": "Mock Prusa printer for testing.",
          "line_start": 43,
          "line_end": 51,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_printer_status_endpoint_real_time",
          "full_name": "TestEssentialPrinterAPIEndpoints.test_printer_status_endpoint_real_time",
          "class": "TestEssentialPrinterAPIEndpoints",
          "signature": "(self, mock_bambu_printer)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test GET /api/v1/printers/{id}/status for real-time monitoring.",
          "line_start": 54,
          "line_end": 90,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_printer_monitoring_start_stop",
          "full_name": "TestEssentialPrinterAPIEndpoints.test_printer_monitoring_start_stop",
          "class": "TestEssentialPrinterAPIEndpoints",
          "signature": "(self, mock_bambu_printer)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test POST /api/v1/printers/{id}/monitoring/start and stop endpoints.",
          "line_start": 93,
          "line_end": 110,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_drucker_dateien_file_listing",
          "full_name": "TestEssentialPrinterAPIEndpoints.test_drucker_dateien_file_listing",
          "class": "TestEssentialPrinterAPIEndpoints",
          "signature": "(self, mock_prusa_printer)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test GET /api/v1/printers/{id}/files for Drucker-Dateien system.",
          "line_start": 113,
          "line_end": 164,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_one_click_file_download",
          "full_name": "TestEssentialPrinterAPIEndpoints.test_one_click_file_download",
          "class": "TestEssentialPrinterAPIEndpoints",
          "signature": "(self, mock_prusa_printer)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test POST /api/v1/printers/{id}/files/{filename}/download for one-click downloads.",
          "line_start": 167,
          "line_end": 194,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_current_job_real_time_progress",
          "full_name": "TestEssentialPrinterAPIEndpoints.test_current_job_real_time_progress",
          "class": "TestEssentialPrinterAPIEndpoints",
          "signature": "(self, mock_bambu_printer)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test GET /api/v1/printers/{id}/jobs/current for real-time job tracking.",
          "line_start": 197,
          "line_end": 237,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_job_sync_history_integration",
          "full_name": "TestEssentialPrinterAPIEndpoints.test_job_sync_history_integration",
          "class": "TestEssentialPrinterAPIEndpoints",
          "signature": "(self, mock_prusa_printer)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test POST /api/v1/printers/{id}/jobs/sync for job history synchronization.",
          "line_start": 240,
          "line_end": 297,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_bambu_mqtt_connection_recovery",
          "full_name": "TestEssentialPrinterConnectionRecovery.test_bambu_mqtt_connection_recovery",
          "class": "TestEssentialPrinterConnectionRecovery",
          "signature": "(self)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test Bambu Lab MQTT connection recovery with 30-second polling.",
          "line_start": 304,
          "line_end": 333,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_prusa_http_connection_recovery",
          "full_name": "TestEssentialPrinterConnectionRecovery.test_prusa_http_connection_recovery",
          "class": "TestEssentialPrinterConnectionRecovery",
          "signature": "(self)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test Prusa HTTP API connection recovery.",
          "line_start": 336,
          "line_end": 361,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_german_material_cost_calculation",
          "full_name": "TestEssentialGermanBusinessIntegration.test_german_material_cost_calculation",
          "class": "TestEssentialGermanBusinessIntegration",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test German EUR material cost calculations with 19% VAT.",
          "line_start": 367,
          "line_end": 385,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_german_business_customer_classification",
          "full_name": "TestEssentialGermanBusinessIntegration.test_german_business_customer_classification",
          "class": "TestEssentialGermanBusinessIntegration",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test German business customer type classification.",
          "line_start": 387,
          "line_end": 403,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_german_timezone_handling",
          "full_name": "TestEssentialGermanBusinessIntegration.test_german_timezone_handling",
          "class": "TestEssentialGermanBusinessIntegration",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test German timezone (Europe/Berlin) for printer operations.",
          "line_start": 405,
          "line_end": 422,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "pytest",
          "alias": null,
          "line": 9
        },
        {
          "type": "import",
          "module": "asyncio",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "unittest.mock",
          "name": "AsyncMock",
          "alias": null,
          "line": 11
        },
        {
          "type": "from_import",
          "module": "unittest.mock",
          "name": "MagicMock",
          "alias": null,
          "line": 11
        },
        {
          "type": "from_import",
          "module": "unittest.mock",
          "name": "patch",
          "alias": null,
          "line": 11
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 12
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "timezone",
          "alias": null,
          "line": 12
        },
        {
          "type": "from_import",
          "module": "uuid",
          "name": "uuid4",
          "alias": null,
          "line": 13
        },
        {
          "type": "import",
          "module": "json",
          "alias": null,
          "line": 14
        },
        {
          "type": "from_import",
          "module": "src.models.printer",
          "name": "PrinterStatus",
          "alias": null,
          "line": 16
        },
        {
          "type": "from_import",
          "module": "src.models.printer",
          "name": "PrinterType",
          "alias": null,
          "line": 16
        },
        {
          "type": "from_import",
          "module": "src.printers.bambu_lab",
          "name": "BambuLabPrinter",
          "alias": null,
          "line": 17
        },
        {
          "type": "from_import",
          "module": "src.printers.prusa",
          "name": "PrusaPrinter",
          "alias": null,
          "line": 18
        },
        {
          "type": "from_import",
          "module": "zoneinfo",
          "name": "ZoneInfo",
          "alias": null,
          "line": 407
        }
      ],
      "function_calls": [
        {
          "caller": "TestEssentialPrinterAPIEndpoints.mock_printer_id",
          "callee": "str",
          "line": 27,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrinterAPIEndpoints.mock_printer_id",
          "callee": "uuid4",
          "line": 27,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrinterAPIEndpoints.mock_bambu_printer",
          "callee": "patch",
          "line": 32,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrinterAPIEndpoints.mock_bambu_printer",
          "callee": "BambuLabPrinter",
          "line": 33,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrinterAPIEndpoints.mock_prusa_printer",
          "callee": "PrusaPrinter",
          "line": 45,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrinterAPIEndpoints.test_printer_status_endpoint_real_time",
          "callee": "str",
          "line": 63,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrinterAPIEndpoints.test_printer_status_endpoint_real_time",
          "callee": "uuid4",
          "line": 63,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrinterAPIEndpoints.test_printer_status_endpoint_real_time",
          "callee": "isoformat",
          "line": 70,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialPrinterAPIEndpoints.test_printer_status_endpoint_real_time",
          "callee": "now",
          "line": 70,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialPrinterAPIEndpoints.test_printer_status_endpoint_real_time",
          "callee": "object",
          "line": 73,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialPrinterAPIEndpoints.test_printer_status_endpoint_real_time",
          "callee": "get_status",
          "line": 76,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialPrinterAPIEndpoints.test_printer_monitoring_start_stop",
          "callee": "object",
          "line": 96,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialPrinterAPIEndpoints.test_printer_monitoring_start_stop",
          "callee": "connect",
          "line": 99,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialPrinterAPIEndpoints.test_printer_monitoring_start_stop",
          "callee": "assert_called_once",
          "line": 102,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialPrinterAPIEndpoints.test_printer_monitoring_start_stop",
          "callee": "object",
          "line": 105,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialPrinterAPIEndpoints.test_printer_monitoring_start_stop",
          "callee": "disconnect",
          "line": 108,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialPrinterAPIEndpoints.test_printer_monitoring_start_stop",
          "callee": "assert_called_once",
          "line": 110,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialPrinterAPIEndpoints.test_drucker_dateien_file_listing",
          "callee": "object",
          "line": 140,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialPrinterAPIEndpoints.test_drucker_dateien_file_listing",
          "callee": "list_files",
          "line": 143,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialPrinterAPIEndpoints.test_drucker_dateien_file_listing",
          "callee": "len",
          "line": 146,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrinterAPIEndpoints.test_drucker_dateien_file_listing",
          "callee": "any",
          "line": 150,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrinterAPIEndpoints.test_drucker_dateien_file_listing",
          "callee": "any",
          "line": 151,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrinterAPIEndpoints.test_drucker_dateien_file_listing",
          "callee": "any",
          "line": 152,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrinterAPIEndpoints.test_one_click_file_download",
          "callee": "isoformat",
          "line": 177,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialPrinterAPIEndpoints.test_one_click_file_download",
          "callee": "now",
          "line": 177,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialPrinterAPIEndpoints.test_one_click_file_download",
          "callee": "object",
          "line": 180,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialPrinterAPIEndpoints.test_one_click_file_download",
          "callee": "download_file",
          "line": 183,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialPrinterAPIEndpoints.test_one_click_file_download",
          "callee": "assert_called_once_with",
          "line": 194,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialPrinterAPIEndpoints.test_current_job_real_time_progress",
          "callee": "str",
          "line": 201,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrinterAPIEndpoints.test_current_job_real_time_progress",
          "callee": "uuid4",
          "line": 201,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrinterAPIEndpoints.test_current_job_real_time_progress",
          "callee": "object",
          "line": 216,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialPrinterAPIEndpoints.test_current_job_real_time_progress",
          "callee": "get_job_info",
          "line": 219,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialPrinterAPIEndpoints.test_job_sync_history_integration",
          "callee": "str",
          "line": 245,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrinterAPIEndpoints.test_job_sync_history_integration",
          "callee": "uuid4",
          "line": 245,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrinterAPIEndpoints.test_job_sync_history_integration",
          "callee": "str",
          "line": 255,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrinterAPIEndpoints.test_job_sync_history_integration",
          "callee": "uuid4",
          "line": 255,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrinterAPIEndpoints.test_job_sync_history_integration",
          "callee": "object",
          "line": 266,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialPrinterAPIEndpoints.test_job_sync_history_integration",
          "callee": "isoformat",
          "line": 271,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialPrinterAPIEndpoints.test_job_sync_history_integration",
          "callee": "now",
          "line": 271,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialPrinterAPIEndpoints.test_job_sync_history_integration",
          "callee": "get_job_info",
          "line": 275,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialPrinterAPIEndpoints.test_job_sync_history_integration",
          "callee": "len",
          "line": 280,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrinterAPIEndpoints.test_job_sync_history_integration",
          "callee": "len",
          "line": 286,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrinterAPIEndpoints.test_job_sync_history_integration",
          "callee": "len",
          "line": 287,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrinterAPIEndpoints.test_job_sync_history_integration",
          "callee": "any",
          "line": 296,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrinterAPIEndpoints.test_job_sync_history_integration",
          "callee": "any",
          "line": 297,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrinterConnectionRecovery.test_bambu_mqtt_connection_recovery",
          "callee": "patch",
          "line": 306,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrinterConnectionRecovery.test_bambu_mqtt_connection_recovery",
          "callee": "BambuLabPrinter",
          "line": 307,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrinterConnectionRecovery.test_bambu_mqtt_connection_recovery",
          "callee": "str",
          "line": 308,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrinterConnectionRecovery.test_bambu_mqtt_connection_recovery",
          "callee": "uuid4",
          "line": 308,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrinterConnectionRecovery.test_bambu_mqtt_connection_recovery",
          "callee": "object",
          "line": 318,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialPrinterConnectionRecovery.test_bambu_mqtt_connection_recovery",
          "callee": "isoformat",
          "line": 323,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialPrinterConnectionRecovery.test_bambu_mqtt_connection_recovery",
          "callee": "now",
          "line": 323,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialPrinterConnectionRecovery.test_bambu_mqtt_connection_recovery",
          "callee": "get_status",
          "line": 327,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialPrinterConnectionRecovery.test_prusa_http_connection_recovery",
          "callee": "PrusaPrinter",
          "line": 338,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrinterConnectionRecovery.test_prusa_http_connection_recovery",
          "callee": "str",
          "line": 339,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrinterConnectionRecovery.test_prusa_http_connection_recovery",
          "callee": "uuid4",
          "line": 339,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrinterConnectionRecovery.test_prusa_http_connection_recovery",
          "callee": "object",
          "line": 346,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialPrinterConnectionRecovery.test_prusa_http_connection_recovery",
          "callee": "get_status",
          "line": 354,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialPrinterConnectionRecovery.test_prusa_http_connection_recovery",
          "callee": "get_status",
          "line": 359,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialGermanBusinessIntegration.test_german_material_cost_calculation",
          "callee": "approx",
          "line": 379,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialGermanBusinessIntegration.test_german_material_cost_calculation",
          "callee": "approx",
          "line": 380,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialGermanBusinessIntegration.test_german_material_cost_calculation",
          "callee": "approx",
          "line": 381,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialGermanBusinessIntegration.test_german_business_customer_classification",
          "callee": "any",
          "line": 400,
          "type": "direct"
        },
        {
          "caller": "TestEssentialGermanBusinessIntegration.test_german_timezone_handling",
          "callee": "ZoneInfo",
          "line": 410,
          "type": "direct"
        },
        {
          "caller": "TestEssentialGermanBusinessIntegration.test_german_timezone_handling",
          "callee": "now",
          "line": 411,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialGermanBusinessIntegration.test_german_timezone_handling",
          "callee": "str",
          "line": 414,
          "type": "direct"
        },
        {
          "caller": "TestEssentialGermanBusinessIntegration.test_german_timezone_handling",
          "callee": "astimezone",
          "line": 417,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialGermanBusinessIntegration.test_german_timezone_handling",
          "callee": "abs",
          "line": 421,
          "type": "direct"
        },
        {
          "caller": "TestEssentialGermanBusinessIntegration.test_german_timezone_handling",
          "callee": "total_seconds",
          "line": 421,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialGermanBusinessIntegration.test_german_timezone_handling",
          "callee": "astimezone",
          "line": 421,
          "type": "attribute"
        }
      ],
      "error": null
    },
    {
      "filepath": "tests\\test_essential_printer_drivers.py",
      "functions": [
        {
          "name": "mock_bambu_printer",
          "full_name": "TestEssentialBambuLabDriverIntegration.mock_bambu_printer",
          "class": "TestEssentialBambuLabDriverIntegration",
          "signature": "(self)",
          "return_type": "",
          "decorators": [
            "pytest.fixture"
          ],
          "docstring": "Mock Bambu Lab printer with MQTT client.",
          "line_start": 26,
          "line_end": 43,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_bambu_mqtt_connection_initialization",
          "full_name": "TestEssentialBambuLabDriverIntegration.test_bambu_mqtt_connection_initialization",
          "class": "TestEssentialBambuLabDriverIntegration",
          "signature": "(self, mock_bambu_printer)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test Bambu Lab MQTT connection setup.",
          "line_start": 46,
          "line_end": 66,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_bambu_real_time_status_via_mqtt",
          "full_name": "TestEssentialBambuLabDriverIntegration.test_bambu_real_time_status_via_mqtt",
          "class": "TestEssentialBambuLabDriverIntegration",
          "signature": "(self, mock_bambu_printer)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test real-time status updates via MQTT callbacks.",
          "line_start": 69,
          "line_end": 117,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_bambu_file_listing_via_mqtt",
          "full_name": "TestEssentialBambuLabDriverIntegration.test_bambu_file_listing_via_mqtt",
          "class": "TestEssentialBambuLabDriverIntegration",
          "signature": "(self, mock_bambu_printer)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test file listing through MQTT communication.",
          "line_start": 120,
          "line_end": 165,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_bambu_mqtt_error_recovery",
          "full_name": "TestEssentialBambuLabDriverIntegration.test_bambu_mqtt_error_recovery",
          "class": "TestEssentialBambuLabDriverIntegration",
          "signature": "(self, mock_bambu_printer)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test MQTT connection error handling and recovery.",
          "line_start": 168,
          "line_end": 190,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "mock_connect_with_retry",
          "full_name": "TestEssentialBambuLabDriverIntegration.mock_connect_with_retry",
          "class": "TestEssentialBambuLabDriverIntegration",
          "signature": "()",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 173,
          "line_end": 177,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "mock_prusa_printer",
          "full_name": "TestEssentialPrusaDriverIntegration.mock_prusa_printer",
          "class": "TestEssentialPrusaDriverIntegration",
          "signature": "(self)",
          "return_type": "",
          "decorators": [
            "pytest.fixture"
          ],
          "docstring": "Mock Prusa printer with HTTP client.",
          "line_start": 197,
          "line_end": 204,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_prusa_http_api_connection",
          "full_name": "TestEssentialPrusaDriverIntegration.test_prusa_http_api_connection",
          "class": "TestEssentialPrusaDriverIntegration",
          "signature": "(self, mock_prusa_printer)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test Prusa HTTP API connection and authentication.",
          "line_start": 207,
          "line_end": 244,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_prusa_30_second_polling_status",
          "full_name": "TestEssentialPrusaDriverIntegration.test_prusa_30_second_polling_status",
          "class": "TestEssentialPrusaDriverIntegration",
          "signature": "(self, mock_prusa_printer)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test 30-second polling for Prusa status updates.",
          "line_start": 247,
          "line_end": 318,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "mock_poll_status",
          "full_name": "TestEssentialPrusaDriverIntegration.mock_poll_status",
          "class": "TestEssentialPrusaDriverIntegration",
          "signature": "()",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 281,
          "line_end": 285,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_prusa_file_download_http",
          "full_name": "TestEssentialPrusaDriverIntegration.test_prusa_file_download_http",
          "class": "TestEssentialPrusaDriverIntegration",
          "signature": "(self, mock_prusa_printer)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test HTTP file download from Prusa printer.",
          "line_start": 321,
          "line_end": 354,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_prusa_job_history_sync",
          "full_name": "TestEssentialPrusaDriverIntegration.test_prusa_job_history_sync",
          "class": "TestEssentialPrusaDriverIntegration",
          "signature": "(self, mock_prusa_printer)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test HTTP job history synchronization.",
          "line_start": 357,
          "line_end": 419,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_unified_status_interface",
          "full_name": "TestEssentialPrinterDriverComparison.test_unified_status_interface",
          "class": "TestEssentialPrinterDriverComparison",
          "signature": "(self)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test that both drivers provide consistent status interface.",
          "line_start": 426,
          "line_end": 478,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_connection_recovery_consistency",
          "full_name": "TestEssentialPrinterDriverComparison.test_connection_recovery_consistency",
          "class": "TestEssentialPrinterDriverComparison",
          "signature": "(self)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test both drivers handle connection recovery consistently.",
          "line_start": 481,
          "line_end": 503,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_german_business_data_integration",
          "full_name": "TestEssentialPrinterDriverComparison.test_german_business_data_integration",
          "class": "TestEssentialPrinterDriverComparison",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test both drivers handle German business data consistently.",
          "line_start": 505,
          "line_end": 538,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "classify_customer_type",
          "full_name": "TestEssentialPrinterDriverComparison.classify_customer_type",
          "class": "TestEssentialPrinterDriverComparison",
          "signature": "(customer_name)",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 518,
          "line_end": 520,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "calculate_total_cost",
          "full_name": "TestEssentialPrinterDriverComparison.calculate_total_cost",
          "class": "TestEssentialPrinterDriverComparison",
          "signature": "(base_cost, vat_rate)",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 523,
          "line_end": 525,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "pytest",
          "alias": null,
          "line": 9
        },
        {
          "type": "import",
          "module": "asyncio",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "unittest.mock",
          "name": "AsyncMock",
          "alias": null,
          "line": 11
        },
        {
          "type": "from_import",
          "module": "unittest.mock",
          "name": "MagicMock",
          "alias": null,
          "line": 11
        },
        {
          "type": "from_import",
          "module": "unittest.mock",
          "name": "patch",
          "alias": null,
          "line": 11
        },
        {
          "type": "from_import",
          "module": "unittest.mock",
          "name": "Mock",
          "alias": null,
          "line": 11
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 12
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "timezone",
          "alias": null,
          "line": 12
        },
        {
          "type": "from_import",
          "module": "uuid",
          "name": "uuid4",
          "alias": null,
          "line": 13
        },
        {
          "type": "import",
          "module": "json",
          "alias": null,
          "line": 14
        },
        {
          "type": "from_import",
          "module": "src.printers.bambu_lab",
          "name": "BambuLabPrinter",
          "alias": null,
          "line": 16
        },
        {
          "type": "from_import",
          "module": "src.printers.prusa",
          "name": "PrusaPrinter",
          "alias": null,
          "line": 17
        },
        {
          "type": "from_import",
          "module": "src.models.printer",
          "name": "PrinterStatus",
          "alias": null,
          "line": 18
        },
        {
          "type": "from_import",
          "module": "src.utils.exceptions",
          "name": "PrinterConnectionError",
          "alias": null,
          "line": 19
        }
      ],
      "function_calls": [
        {
          "caller": "TestEssentialBambuLabDriverIntegration.mock_bambu_printer",
          "callee": "patch",
          "line": 28,
          "type": "direct"
        },
        {
          "caller": "TestEssentialBambuLabDriverIntegration.mock_bambu_printer",
          "callee": "MagicMock",
          "line": 30,
          "type": "direct"
        },
        {
          "caller": "TestEssentialBambuLabDriverIntegration.mock_bambu_printer",
          "callee": "MagicMock",
          "line": 31,
          "type": "direct"
        },
        {
          "caller": "TestEssentialBambuLabDriverIntegration.mock_bambu_printer",
          "callee": "patch",
          "line": 33,
          "type": "direct"
        },
        {
          "caller": "TestEssentialBambuLabDriverIntegration.mock_bambu_printer",
          "callee": "BambuLabPrinter",
          "line": 34,
          "type": "direct"
        },
        {
          "caller": "TestEssentialBambuLabDriverIntegration.mock_bambu_printer",
          "callee": "str",
          "line": 35,
          "type": "direct"
        },
        {
          "caller": "TestEssentialBambuLabDriverIntegration.mock_bambu_printer",
          "callee": "uuid4",
          "line": 35,
          "type": "direct"
        },
        {
          "caller": "TestEssentialBambuLabDriverIntegration.test_bambu_mqtt_connection_initialization",
          "callee": "AsyncMock",
          "line": 49,
          "type": "direct"
        },
        {
          "caller": "TestEssentialBambuLabDriverIntegration.test_bambu_mqtt_connection_initialization",
          "callee": "AsyncMock",
          "line": 50,
          "type": "direct"
        },
        {
          "caller": "TestEssentialBambuLabDriverIntegration.test_bambu_mqtt_connection_initialization",
          "callee": "connect",
          "line": 57,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialBambuLabDriverIntegration.test_bambu_mqtt_connection_initialization",
          "callee": "assert_called_once",
          "line": 61,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialBambuLabDriverIntegration.test_bambu_mqtt_connection_initialization",
          "callee": "get_device_info",
          "line": 64,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialBambuLabDriverIntegration.test_bambu_real_time_status_via_mqtt",
          "callee": "object",
          "line": 91,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialBambuLabDriverIntegration.test_bambu_real_time_status_via_mqtt",
          "callee": "get_status",
          "line": 105,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialBambuLabDriverIntegration.test_bambu_file_listing_via_mqtt",
          "callee": "object",
          "line": 138,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialBambuLabDriverIntegration.test_bambu_file_listing_via_mqtt",
          "callee": "isoformat",
          "line": 143,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialBambuLabDriverIntegration.test_bambu_file_listing_via_mqtt",
          "callee": "fromtimestamp",
          "line": 143,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialBambuLabDriverIntegration.test_bambu_file_listing_via_mqtt",
          "callee": "list_files",
          "line": 150,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialBambuLabDriverIntegration.test_bambu_file_listing_via_mqtt",
          "callee": "len",
          "line": 153,
          "type": "direct"
        },
        {
          "caller": "TestEssentialBambuLabDriverIntegration.test_bambu_file_listing_via_mqtt",
          "callee": "any",
          "line": 157,
          "type": "direct"
        },
        {
          "caller": "TestEssentialBambuLabDriverIntegration.test_bambu_file_listing_via_mqtt",
          "callee": "any",
          "line": 158,
          "type": "direct"
        },
        {
          "caller": "TestEssentialBambuLabDriverIntegration.mock_connect_with_retry",
          "callee": "append",
          "line": 174,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialBambuLabDriverIntegration.mock_connect_with_retry",
          "callee": "len",
          "line": 174,
          "type": "direct"
        },
        {
          "caller": "TestEssentialBambuLabDriverIntegration.mock_connect_with_retry",
          "callee": "len",
          "line": 175,
          "type": "direct"
        },
        {
          "caller": "TestEssentialBambuLabDriverIntegration.mock_connect_with_retry",
          "callee": "PrinterConnectionError",
          "line": 176,
          "type": "direct"
        },
        {
          "caller": "TestEssentialBambuLabDriverIntegration.test_bambu_mqtt_error_recovery",
          "callee": "object",
          "line": 179,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialBambuLabDriverIntegration.test_bambu_mqtt_error_recovery",
          "callee": "raises",
          "line": 181,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialBambuLabDriverIntegration.test_bambu_mqtt_error_recovery",
          "callee": "connect",
          "line": 182,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialBambuLabDriverIntegration.test_bambu_mqtt_error_recovery",
          "callee": "raises",
          "line": 184,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialBambuLabDriverIntegration.test_bambu_mqtt_error_recovery",
          "callee": "connect",
          "line": 185,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialBambuLabDriverIntegration.test_bambu_mqtt_error_recovery",
          "callee": "connect",
          "line": 188,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialBambuLabDriverIntegration.test_bambu_mqtt_error_recovery",
          "callee": "len",
          "line": 190,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrusaDriverIntegration.mock_prusa_printer",
          "callee": "PrusaPrinter",
          "line": 199,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrusaDriverIntegration.mock_prusa_printer",
          "callee": "str",
          "line": 200,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrusaDriverIntegration.mock_prusa_printer",
          "callee": "uuid4",
          "line": 200,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrusaDriverIntegration.test_prusa_http_api_connection",
          "callee": "patch",
          "line": 224,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrusaDriverIntegration.test_prusa_http_api_connection",
          "callee": "AsyncMock",
          "line": 225,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrusaDriverIntegration.test_prusa_http_api_connection",
          "callee": "AsyncMock",
          "line": 227,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrusaDriverIntegration.test_prusa_http_api_connection",
          "callee": "object",
          "line": 231,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialPrusaDriverIntegration.test_prusa_http_api_connection",
          "callee": "check_connection",
          "line": 239,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialPrusaDriverIntegration.mock_poll_status",
          "callee": "min",
          "line": 283,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrusaDriverIntegration.mock_poll_status",
          "callee": "len",
          "line": 283,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrusaDriverIntegration.test_prusa_30_second_polling_status",
          "callee": "object",
          "line": 287,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialPrusaDriverIntegration.test_prusa_30_second_polling_status",
          "callee": "get_status",
          "line": 297,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialPrusaDriverIntegration.test_prusa_30_second_polling_status",
          "callee": "sleep",
          "line": 312,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialPrusaDriverIntegration.test_prusa_30_second_polling_status",
          "callee": "get_status",
          "line": 313,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialPrusaDriverIntegration.test_prusa_file_download_http",
          "callee": "patch",
          "line": 326,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrusaDriverIntegration.test_prusa_file_download_http",
          "callee": "AsyncMock",
          "line": 328,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrusaDriverIntegration.test_prusa_file_download_http",
          "callee": "AsyncMock",
          "line": 330,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrusaDriverIntegration.test_prusa_file_download_http",
          "callee": "str",
          "line": 331,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrusaDriverIntegration.test_prusa_file_download_http",
          "callee": "len",
          "line": 331,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrusaDriverIntegration.test_prusa_file_download_http",
          "callee": "object",
          "line": 334,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialPrusaDriverIntegration.test_prusa_file_download_http",
          "callee": "len",
          "line": 338,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrusaDriverIntegration.test_prusa_file_download_http",
          "callee": "decode",
          "line": 340,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialPrusaDriverIntegration.test_prusa_file_download_http",
          "callee": "download_file",
          "line": 343,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialPrusaDriverIntegration.test_prusa_file_download_http",
          "callee": "len",
          "line": 348,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrusaDriverIntegration.test_prusa_job_history_sync",
          "callee": "object",
          "line": 383,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialPrusaDriverIntegration.test_prusa_job_history_sync",
          "callee": "str",
          "line": 390,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrusaDriverIntegration.test_prusa_job_history_sync",
          "callee": "uuid4",
          "line": 390,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrusaDriverIntegration.test_prusa_job_history_sync",
          "callee": "isoformat",
          "line": 393,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialPrusaDriverIntegration.test_prusa_job_history_sync",
          "callee": "fromtimestamp",
          "line": 393,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialPrusaDriverIntegration.test_prusa_job_history_sync",
          "callee": "isoformat",
          "line": 394,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialPrusaDriverIntegration.test_prusa_job_history_sync",
          "callee": "fromtimestamp",
          "line": 394,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialPrusaDriverIntegration.test_prusa_job_history_sync",
          "callee": "any",
          "line": 397,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrusaDriverIntegration.test_prusa_job_history_sync",
          "callee": "sync_job_history",
          "line": 404,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialPrusaDriverIntegration.test_prusa_job_history_sync",
          "callee": "len",
          "line": 409,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrusaDriverIntegration.test_prusa_job_history_sync",
          "callee": "any",
          "line": 418,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrusaDriverIntegration.test_prusa_job_history_sync",
          "callee": "any",
          "line": 419,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrinterDriverComparison.test_unified_status_interface",
          "callee": "patch",
          "line": 429,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrinterDriverComparison.test_unified_status_interface",
          "callee": "BambuLabPrinter",
          "line": 430,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrinterDriverComparison.test_unified_status_interface",
          "callee": "str",
          "line": 431,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrinterDriverComparison.test_unified_status_interface",
          "callee": "uuid4",
          "line": 431,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrinterDriverComparison.test_unified_status_interface",
          "callee": "PrusaPrinter",
          "line": 438,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrinterDriverComparison.test_unified_status_interface",
          "callee": "str",
          "line": 439,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrinterDriverComparison.test_unified_status_interface",
          "callee": "uuid4",
          "line": 439,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrinterDriverComparison.test_unified_status_interface",
          "callee": "set",
          "line": 470,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrinterDriverComparison.test_unified_status_interface",
          "callee": "keys",
          "line": 470,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialPrinterDriverComparison.test_unified_status_interface",
          "callee": "set",
          "line": 471,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrinterDriverComparison.test_unified_status_interface",
          "callee": "keys",
          "line": 471,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialPrinterDriverComparison.test_unified_status_interface",
          "callee": "isinstance",
          "line": 475,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrinterDriverComparison.test_unified_status_interface",
          "callee": "isinstance",
          "line": 476,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrinterDriverComparison.test_unified_status_interface",
          "callee": "isinstance",
          "line": 477,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrinterDriverComparison.test_unified_status_interface",
          "callee": "isinstance",
          "line": 478,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrinterDriverComparison.test_connection_recovery_consistency",
          "callee": "raises",
          "line": 498,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialPrinterDriverComparison.test_connection_recovery_consistency",
          "callee": "PrinterConnectionError",
          "line": 499,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrinterDriverComparison.test_connection_recovery_consistency",
          "callee": "lower",
          "line": 502,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialPrinterDriverComparison.test_connection_recovery_consistency",
          "callee": "str",
          "line": 502,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrinterDriverComparison.test_connection_recovery_consistency",
          "callee": "lower",
          "line": 503,
          "type": "attribute"
        },
        {
          "caller": "TestEssentialPrinterDriverComparison.test_connection_recovery_consistency",
          "callee": "str",
          "line": 503,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrinterDriverComparison.classify_customer_type",
          "callee": "any",
          "line": 520,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrinterDriverComparison.test_german_business_data_integration",
          "callee": "classify_customer_type",
          "line": 528,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrinterDriverComparison.test_german_business_data_integration",
          "callee": "calculate_total_cost",
          "line": 529,
          "type": "direct"
        },
        {
          "caller": "TestEssentialPrinterDriverComparison.test_german_business_data_integration",
          "callee": "approx",
          "line": 533,
          "type": "attribute"
        }
      ],
      "error": null
    },
    {
      "filepath": "tests\\test_gcode_analyzer.py",
      "functions": [
        {
          "name": "test_init_enabled",
          "full_name": "TestGcodeAnalyzer.test_init_enabled",
          "class": "TestGcodeAnalyzer",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test analyzer initialization with optimization enabled.",
          "line_start": 15,
          "line_end": 18,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_init_disabled",
          "full_name": "TestGcodeAnalyzer.test_init_disabled",
          "class": "TestGcodeAnalyzer",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test analyzer initialization with optimization disabled.",
          "line_start": 20,
          "line_end": 23,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_find_print_start_disabled",
          "full_name": "TestGcodeAnalyzer.test_find_print_start_disabled",
          "class": "TestGcodeAnalyzer",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test that disabled analyzer returns None.",
          "line_start": 25,
          "line_end": 36,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_find_print_start_layer_marker",
          "full_name": "TestGcodeAnalyzer.test_find_print_start_layer_marker",
          "class": "TestGcodeAnalyzer",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test finding print start with layer markers.",
          "line_start": 38,
          "line_end": 50,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_find_print_start_type_marker",
          "full_name": "TestGcodeAnalyzer.test_find_print_start_type_marker",
          "class": "TestGcodeAnalyzer",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test finding print start with TYPE markers.",
          "line_start": 52,
          "line_end": 64,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_find_print_start_extrusion_based",
          "full_name": "TestGcodeAnalyzer.test_find_print_start_extrusion_based",
          "class": "TestGcodeAnalyzer",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test finding print start based on extrusion after heating.",
          "line_start": 66,
          "line_end": 77,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_find_print_start_no_markers",
          "full_name": "TestGcodeAnalyzer.test_find_print_start_no_markers",
          "class": "TestGcodeAnalyzer",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test fallback when no clear markers found.",
          "line_start": 79,
          "line_end": 90,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_is_likely_print_move_small_extrusion",
          "full_name": "TestGcodeAnalyzer.test_is_likely_print_move_small_extrusion",
          "class": "TestGcodeAnalyzer",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test that small extrusions are not considered print moves.",
          "line_start": 92,
          "line_end": 98,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_is_likely_print_move_edge_position",
          "full_name": "TestGcodeAnalyzer.test_is_likely_print_move_edge_position",
          "class": "TestGcodeAnalyzer",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test that edge positions are not considered print moves.",
          "line_start": 100,
          "line_end": 110,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_is_likely_print_move_normal_print",
          "full_name": "TestGcodeAnalyzer.test_is_likely_print_move_normal_print",
          "class": "TestGcodeAnalyzer",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test that normal print moves are detected correctly.",
          "line_start": 112,
          "line_end": 118,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_get_optimized_gcode_lines_with_optimization",
          "full_name": "TestGcodeAnalyzer.test_get_optimized_gcode_lines_with_optimization",
          "class": "TestGcodeAnalyzer",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test getting optimized G-code lines when optimization is enabled.",
          "line_start": 120,
          "line_end": 139,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_get_optimized_gcode_lines_disabled",
          "full_name": "TestGcodeAnalyzer.test_get_optimized_gcode_lines_disabled",
          "class": "TestGcodeAnalyzer",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test that disabled optimization returns original lines.",
          "line_start": 141,
          "line_end": 153,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_get_optimized_gcode_lines_no_optimization_possible",
          "full_name": "TestGcodeAnalyzer.test_get_optimized_gcode_lines_no_optimization_possible",
          "class": "TestGcodeAnalyzer",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test that lines are returned unchanged when no optimization is possible.",
          "line_start": 155,
          "line_end": 165,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_analyze_gcode_file_success",
          "full_name": "TestGcodeAnalyzer.test_analyze_gcode_file_success",
          "class": "TestGcodeAnalyzer",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test analyzing a real G-code file.",
          "line_start": 167,
          "line_end": 195,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_analyze_gcode_file_not_found",
          "full_name": "TestGcodeAnalyzer.test_analyze_gcode_file_not_found",
          "class": "TestGcodeAnalyzer",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test analyzing non-existent file.",
          "line_start": 197,
          "line_end": 207,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_analyze_gcode_file_disabled",
          "full_name": "TestGcodeAnalyzer.test_analyze_gcode_file_disabled",
          "class": "TestGcodeAnalyzer",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test analyzing file with optimization disabled.",
          "line_start": 209,
          "line_end": 230,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_multiple_slicer_markers",
          "full_name": "TestGcodeAnalyzer.test_multiple_slicer_markers",
          "class": "TestGcodeAnalyzer",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test detection with multiple different slicer markers.",
          "line_start": 232,
          "line_end": 254,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_warmup_end_pattern_detection",
          "full_name": "TestGcodeAnalyzer.test_warmup_end_pattern_detection",
          "class": "TestGcodeAnalyzer",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test detection of warmup end patterns.",
          "line_start": 256,
          "line_end": 268,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_heating_detection",
          "full_name": "TestGcodeAnalyzer.test_heating_detection",
          "class": "TestGcodeAnalyzer",
          "signature": "(self, heating_command, expected_heated)",
          "return_type": "",
          "decorators": [
            "pytest.mark.parametrize('heating_command,expected_heated', [('M104 S200', True), ('M109 S200', True), ('M140 S60', False), ('M190 S60', False), ('G28', False)])"
          ],
          "docstring": "Test detection of heating commands.",
          "line_start": 277,
          "line_end": 292,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "pytest",
          "alias": null,
          "line": 4
        },
        {
          "type": "import",
          "module": "tempfile",
          "alias": null,
          "line": 5
        },
        {
          "type": "import",
          "module": "os",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "pathlib",
          "name": "Path",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "src.utils.gcode_analyzer",
          "name": "GcodeAnalyzer",
          "alias": null,
          "line": 9
        }
      ],
      "function_calls": [
        {
          "caller": "TestGcodeAnalyzer.test_init_enabled",
          "callee": "GcodeAnalyzer",
          "line": 17,
          "type": "direct"
        },
        {
          "caller": "TestGcodeAnalyzer.test_init_disabled",
          "callee": "GcodeAnalyzer",
          "line": 22,
          "type": "direct"
        },
        {
          "caller": "TestGcodeAnalyzer.test_find_print_start_disabled",
          "callee": "GcodeAnalyzer",
          "line": 27,
          "type": "direct"
        },
        {
          "caller": "TestGcodeAnalyzer.test_find_print_start_disabled",
          "callee": "find_print_start_line",
          "line": 35,
          "type": "attribute"
        },
        {
          "caller": "TestGcodeAnalyzer.test_find_print_start_layer_marker",
          "callee": "GcodeAnalyzer",
          "line": 40,
          "type": "direct"
        },
        {
          "caller": "TestGcodeAnalyzer.test_find_print_start_layer_marker",
          "callee": "find_print_start_line",
          "line": 49,
          "type": "attribute"
        },
        {
          "caller": "TestGcodeAnalyzer.test_find_print_start_type_marker",
          "callee": "GcodeAnalyzer",
          "line": 54,
          "type": "direct"
        },
        {
          "caller": "TestGcodeAnalyzer.test_find_print_start_type_marker",
          "callee": "find_print_start_line",
          "line": 63,
          "type": "attribute"
        },
        {
          "caller": "TestGcodeAnalyzer.test_find_print_start_extrusion_based",
          "callee": "GcodeAnalyzer",
          "line": 68,
          "type": "direct"
        },
        {
          "caller": "TestGcodeAnalyzer.test_find_print_start_extrusion_based",
          "callee": "find_print_start_line",
          "line": 76,
          "type": "attribute"
        },
        {
          "caller": "TestGcodeAnalyzer.test_find_print_start_no_markers",
          "callee": "GcodeAnalyzer",
          "line": 81,
          "type": "direct"
        },
        {
          "caller": "TestGcodeAnalyzer.test_find_print_start_no_markers",
          "callee": "find_print_start_line",
          "line": 89,
          "type": "attribute"
        },
        {
          "caller": "TestGcodeAnalyzer.test_is_likely_print_move_small_extrusion",
          "callee": "GcodeAnalyzer",
          "line": 94,
          "type": "direct"
        },
        {
          "caller": "TestGcodeAnalyzer.test_is_likely_print_move_small_extrusion",
          "callee": "_is_likely_print_move",
          "line": 97,
          "type": "attribute"
        },
        {
          "caller": "TestGcodeAnalyzer.test_is_likely_print_move_edge_position",
          "callee": "GcodeAnalyzer",
          "line": 102,
          "type": "direct"
        },
        {
          "caller": "TestGcodeAnalyzer.test_is_likely_print_move_edge_position",
          "callee": "_is_likely_print_move",
          "line": 105,
          "type": "attribute"
        },
        {
          "caller": "TestGcodeAnalyzer.test_is_likely_print_move_edge_position",
          "callee": "_is_likely_print_move",
          "line": 109,
          "type": "attribute"
        },
        {
          "caller": "TestGcodeAnalyzer.test_is_likely_print_move_normal_print",
          "callee": "GcodeAnalyzer",
          "line": 114,
          "type": "direct"
        },
        {
          "caller": "TestGcodeAnalyzer.test_is_likely_print_move_normal_print",
          "callee": "_is_likely_print_move",
          "line": 117,
          "type": "attribute"
        },
        {
          "caller": "TestGcodeAnalyzer.test_get_optimized_gcode_lines_with_optimization",
          "callee": "GcodeAnalyzer",
          "line": 122,
          "type": "direct"
        },
        {
          "caller": "TestGcodeAnalyzer.test_get_optimized_gcode_lines_with_optimization",
          "callee": "get_optimized_gcode_lines",
          "line": 132,
          "type": "attribute"
        },
        {
          "caller": "TestGcodeAnalyzer.test_get_optimized_gcode_lines_disabled",
          "callee": "GcodeAnalyzer",
          "line": 143,
          "type": "direct"
        },
        {
          "caller": "TestGcodeAnalyzer.test_get_optimized_gcode_lines_disabled",
          "callee": "get_optimized_gcode_lines",
          "line": 152,
          "type": "attribute"
        },
        {
          "caller": "TestGcodeAnalyzer.test_get_optimized_gcode_lines_no_optimization_possible",
          "callee": "GcodeAnalyzer",
          "line": 157,
          "type": "direct"
        },
        {
          "caller": "TestGcodeAnalyzer.test_get_optimized_gcode_lines_no_optimization_possible",
          "callee": "get_optimized_gcode_lines",
          "line": 164,
          "type": "attribute"
        },
        {
          "caller": "TestGcodeAnalyzer.test_analyze_gcode_file_success",
          "callee": "GcodeAnalyzer",
          "line": 169,
          "type": "direct"
        },
        {
          "caller": "TestGcodeAnalyzer.test_analyze_gcode_file_success",
          "callee": "NamedTemporaryFile",
          "line": 180,
          "type": "attribute"
        },
        {
          "caller": "TestGcodeAnalyzer.test_analyze_gcode_file_success",
          "callee": "write",
          "line": 181,
          "type": "attribute"
        },
        {
          "caller": "TestGcodeAnalyzer.test_analyze_gcode_file_success",
          "callee": "analyze_gcode_file",
          "line": 185,
          "type": "attribute"
        },
        {
          "caller": "TestGcodeAnalyzer.test_analyze_gcode_file_success",
          "callee": "unlink",
          "line": 195,
          "type": "attribute"
        },
        {
          "caller": "TestGcodeAnalyzer.test_analyze_gcode_file_not_found",
          "callee": "GcodeAnalyzer",
          "line": 199,
          "type": "direct"
        },
        {
          "caller": "TestGcodeAnalyzer.test_analyze_gcode_file_not_found",
          "callee": "analyze_gcode_file",
          "line": 201,
          "type": "attribute"
        },
        {
          "caller": "TestGcodeAnalyzer.test_analyze_gcode_file_disabled",
          "callee": "GcodeAnalyzer",
          "line": 211,
          "type": "direct"
        },
        {
          "caller": "TestGcodeAnalyzer.test_analyze_gcode_file_disabled",
          "callee": "NamedTemporaryFile",
          "line": 218,
          "type": "attribute"
        },
        {
          "caller": "TestGcodeAnalyzer.test_analyze_gcode_file_disabled",
          "callee": "write",
          "line": 219,
          "type": "attribute"
        },
        {
          "caller": "TestGcodeAnalyzer.test_analyze_gcode_file_disabled",
          "callee": "analyze_gcode_file",
          "line": 223,
          "type": "attribute"
        },
        {
          "caller": "TestGcodeAnalyzer.test_analyze_gcode_file_disabled",
          "callee": "unlink",
          "line": 230,
          "type": "attribute"
        },
        {
          "caller": "TestGcodeAnalyzer.test_multiple_slicer_markers",
          "callee": "GcodeAnalyzer",
          "line": 234,
          "type": "direct"
        },
        {
          "caller": "TestGcodeAnalyzer.test_multiple_slicer_markers",
          "callee": "find_print_start_line",
          "line": 253,
          "type": "attribute"
        },
        {
          "caller": "TestGcodeAnalyzer.test_warmup_end_pattern_detection",
          "callee": "GcodeAnalyzer",
          "line": 258,
          "type": "direct"
        },
        {
          "caller": "TestGcodeAnalyzer.test_warmup_end_pattern_detection",
          "callee": "find_print_start_line",
          "line": 266,
          "type": "attribute"
        },
        {
          "caller": "TestGcodeAnalyzer.test_heating_detection",
          "callee": "GcodeAnalyzer",
          "line": 279,
          "type": "direct"
        },
        {
          "caller": "TestGcodeAnalyzer.test_heating_detection",
          "callee": "find_print_start_line",
          "line": 285,
          "type": "attribute"
        },
        {
          "caller": "TestGcodeAnalyzer.test_heating_detection",
          "callee": "parametrize",
          "line": 270,
          "type": "attribute"
        }
      ],
      "error": null
    },
    {
      "filepath": "tests\\test_ideas_service.py",
      "functions": [
        {
          "name": "mock_database",
          "full_name": "mock_database",
          "class": null,
          "signature": "()",
          "return_type": "",
          "decorators": [
            "pytest.fixture"
          ],
          "docstring": "Create mock database for testing.",
          "line_start": 19,
          "line_end": 36,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "idea_service",
          "full_name": "idea_service",
          "class": null,
          "signature": "(mock_database)",
          "return_type": "",
          "decorators": [
            "pytest.fixture"
          ],
          "docstring": "Create IdeaService instance with mock database.",
          "line_start": 40,
          "line_end": 42,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_create_idea_success",
          "full_name": "TestIdeaService.test_create_idea_success",
          "class": "TestIdeaService",
          "signature": "(self, idea_service, mock_database)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test successful idea creation.",
          "line_start": 49,
          "line_end": 57,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_create_idea_with_tags",
          "full_name": "TestIdeaService.test_create_idea_with_tags",
          "class": "TestIdeaService",
          "signature": "(self, idea_service, mock_database)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test idea creation with tags.",
          "line_start": 60,
          "line_end": 71,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_create_idea_missing_title",
          "full_name": "TestIdeaService.test_create_idea_missing_title",
          "class": "TestIdeaService",
          "signature": "(self, idea_service, mock_database)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test idea creation with missing title.",
          "line_start": 74,
          "line_end": 82,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_get_idea_success",
          "full_name": "TestIdeaService.test_get_idea_success",
          "class": "TestIdeaService",
          "signature": "(self, idea_service, mock_database)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test successful idea retrieval.",
          "line_start": 85,
          "line_end": 96,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_get_idea_not_found",
          "full_name": "TestIdeaService.test_get_idea_not_found",
          "class": "TestIdeaService",
          "signature": "(self, idea_service, mock_database)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test idea retrieval when not found.",
          "line_start": 99,
          "line_end": 105,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_list_ideas_with_filters",
          "full_name": "TestIdeaService.test_list_ideas_with_filters",
          "class": "TestIdeaService",
          "signature": "(self, idea_service, mock_database)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test listing ideas with filters.",
          "line_start": 108,
          "line_end": 128,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_update_idea_success",
          "full_name": "TestIdeaService.test_update_idea_success",
          "class": "TestIdeaService",
          "signature": "(self, idea_service, mock_database)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test successful idea update.",
          "line_start": 131,
          "line_end": 139,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_update_idea_with_tags",
          "full_name": "TestIdeaService.test_update_idea_with_tags",
          "class": "TestIdeaService",
          "signature": "(self, idea_service, mock_database)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test idea update with tags.",
          "line_start": 142,
          "line_end": 152,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_delete_idea_success",
          "full_name": "TestIdeaService.test_delete_idea_success",
          "class": "TestIdeaService",
          "signature": "(self, idea_service, mock_database)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test successful idea deletion.",
          "line_start": 155,
          "line_end": 162,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_update_idea_status",
          "full_name": "TestIdeaService.test_update_idea_status",
          "class": "TestIdeaService",
          "signature": "(self, idea_service, mock_database)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test idea status update.",
          "line_start": 165,
          "line_end": 173,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_get_statistics",
          "full_name": "TestIdeaService.test_get_statistics",
          "class": "TestIdeaService",
          "signature": "(self, idea_service, mock_database)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test getting idea statistics.",
          "line_start": 176,
          "line_end": 191,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_cache_trending_success",
          "full_name": "TestIdeaService.test_cache_trending_success",
          "class": "TestIdeaService",
          "signature": "(self, idea_service, mock_database)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test successful trending cache.",
          "line_start": 194,
          "line_end": 202,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_get_trending",
          "full_name": "TestIdeaService.test_get_trending",
          "class": "TestIdeaService",
          "signature": "(self, idea_service, mock_database)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test getting trending models.",
          "line_start": 205,
          "line_end": 213,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_save_trending_as_idea",
          "full_name": "TestIdeaService.test_save_trending_as_idea",
          "class": "TestIdeaService",
          "signature": "(self, idea_service, mock_database)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test saving trending item as idea.",
          "line_start": 216,
          "line_end": 224,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_search_ideas",
          "full_name": "TestIdeaService.test_search_ideas",
          "class": "TestIdeaService",
          "signature": "(self, idea_service, mock_database)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test searching ideas.",
          "line_start": 227,
          "line_end": 270,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_cleanup_expired_trending",
          "full_name": "TestIdeaService.test_cleanup_expired_trending",
          "class": "TestIdeaService",
          "signature": "(self, idea_service, mock_database)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test cleanup of expired trending items.",
          "line_start": 273,
          "line_end": 278,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_idea_creation_from_dict",
          "full_name": "TestIdeaModel.test_idea_creation_from_dict",
          "class": "TestIdeaModel",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test creating Idea from dictionary.",
          "line_start": 284,
          "line_end": 292,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_idea_to_dict",
          "full_name": "TestIdeaModel.test_idea_to_dict",
          "class": "TestIdeaModel",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test converting Idea to dictionary.",
          "line_start": 294,
          "line_end": 302,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_idea_validation_success",
          "full_name": "TestIdeaModel.test_idea_validation_success",
          "class": "TestIdeaModel",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test successful idea validation.",
          "line_start": 304,
          "line_end": 309,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_idea_validation_missing_title",
          "full_name": "TestIdeaModel.test_idea_validation_missing_title",
          "class": "TestIdeaModel",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test idea validation with missing title.",
          "line_start": 311,
          "line_end": 317,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_idea_validation_invalid_priority",
          "full_name": "TestIdeaModel.test_idea_validation_invalid_priority",
          "class": "TestIdeaModel",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test idea validation with invalid priority.",
          "line_start": 319,
          "line_end": 324,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_idea_validation_invalid_status",
          "full_name": "TestIdeaModel.test_idea_validation_invalid_status",
          "class": "TestIdeaModel",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test idea validation with invalid status.",
          "line_start": 326,
          "line_end": 331,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_get_formatted_time",
          "full_name": "TestIdeaModel.test_get_formatted_time",
          "class": "TestIdeaModel",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test formatted time display.",
          "line_start": 333,
          "line_end": 345,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_trending_item_creation",
          "full_name": "TestTrendingItemModel.test_trending_item_creation",
          "class": "TestTrendingItemModel",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test creating TrendingItem from dictionary.",
          "line_start": 351,
          "line_end": 358,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_trending_item_to_dict",
          "full_name": "TestTrendingItemModel.test_trending_item_to_dict",
          "class": "TestTrendingItemModel",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test converting TrendingItem to dictionary.",
          "line_start": 360,
          "line_end": 368,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_is_expired_false",
          "full_name": "TestTrendingItemModel.test_is_expired_false",
          "class": "TestTrendingItemModel",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test trending item that is not expired.",
          "line_start": 370,
          "line_end": 375,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_is_expired_true",
          "full_name": "TestTrendingItemModel.test_is_expired_true",
          "class": "TestTrendingItemModel",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test trending item that is expired.",
          "line_start": 377,
          "line_end": 385,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "pytest",
          "alias": null,
          "line": 4
        },
        {
          "type": "import",
          "module": "uuid",
          "alias": null,
          "line": 5
        },
        {
          "type": "from_import",
          "module": "unittest.mock",
          "name": "AsyncMock",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "unittest.mock",
          "name": "MagicMock",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "src.services.idea_service",
          "name": "IdeaService",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "src.models.idea",
          "name": "Idea",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "src.models.idea",
          "name": "TrendingItem",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "tests.fixtures.ideas_fixtures",
          "name": "create_sample_idea",
          "alias": null,
          "line": 11
        },
        {
          "type": "from_import",
          "module": "tests.fixtures.ideas_fixtures",
          "name": "create_sample_trending_item",
          "alias": null,
          "line": 11
        },
        {
          "type": "from_import",
          "module": "tests.fixtures.ideas_fixtures",
          "name": "IdeasTestFixtures",
          "alias": null,
          "line": 11
        }
      ],
      "function_calls": [
        {
          "caller": "mock_database",
          "callee": "MagicMock",
          "line": 21,
          "type": "direct"
        },
        {
          "caller": "mock_database",
          "callee": "AsyncMock",
          "line": 22,
          "type": "direct"
        },
        {
          "caller": "mock_database",
          "callee": "AsyncMock",
          "line": 23,
          "type": "direct"
        },
        {
          "caller": "mock_database",
          "callee": "AsyncMock",
          "line": 24,
          "type": "direct"
        },
        {
          "caller": "mock_database",
          "callee": "AsyncMock",
          "line": 25,
          "type": "direct"
        },
        {
          "caller": "mock_database",
          "callee": "AsyncMock",
          "line": 26,
          "type": "direct"
        },
        {
          "caller": "mock_database",
          "callee": "AsyncMock",
          "line": 27,
          "type": "direct"
        },
        {
          "caller": "mock_database",
          "callee": "AsyncMock",
          "line": 28,
          "type": "direct"
        },
        {
          "caller": "mock_database",
          "callee": "AsyncMock",
          "line": 29,
          "type": "direct"
        },
        {
          "caller": "mock_database",
          "callee": "AsyncMock",
          "line": 30,
          "type": "direct"
        },
        {
          "caller": "mock_database",
          "callee": "AsyncMock",
          "line": 31,
          "type": "direct"
        },
        {
          "caller": "mock_database",
          "callee": "AsyncMock",
          "line": 32,
          "type": "direct"
        },
        {
          "caller": "mock_database",
          "callee": "AsyncMock",
          "line": 33,
          "type": "direct"
        },
        {
          "caller": "mock_database",
          "callee": "AsyncMock",
          "line": 34,
          "type": "direct"
        },
        {
          "caller": "mock_database",
          "callee": "AsyncMock",
          "line": 35,
          "type": "direct"
        },
        {
          "caller": "idea_service",
          "callee": "IdeaService",
          "line": 42,
          "type": "direct"
        },
        {
          "caller": "TestIdeaService.test_create_idea_success",
          "callee": "create_sample_idea",
          "line": 51,
          "type": "direct"
        },
        {
          "caller": "TestIdeaService.test_create_idea_success",
          "callee": "create_idea",
          "line": 53,
          "type": "attribute"
        },
        {
          "caller": "TestIdeaService.test_create_idea_success",
          "callee": "assert_called_once",
          "line": 57,
          "type": "attribute"
        },
        {
          "caller": "TestIdeaService.test_create_idea_with_tags",
          "callee": "create_sample_idea",
          "line": 62,
          "type": "direct"
        },
        {
          "caller": "TestIdeaService.test_create_idea_with_tags",
          "callee": "create_idea",
          "line": 67,
          "type": "attribute"
        },
        {
          "caller": "TestIdeaService.test_create_idea_with_tags",
          "callee": "assert_called_once",
          "line": 70,
          "type": "attribute"
        },
        {
          "caller": "TestIdeaService.test_create_idea_with_tags",
          "callee": "assert_called_once_with",
          "line": 71,
          "type": "attribute"
        },
        {
          "caller": "TestIdeaService.test_create_idea_missing_title",
          "callee": "create_sample_idea",
          "line": 76,
          "type": "direct"
        },
        {
          "caller": "TestIdeaService.test_create_idea_missing_title",
          "callee": "create_idea",
          "line": 79,
          "type": "attribute"
        },
        {
          "caller": "TestIdeaService.test_create_idea_missing_title",
          "callee": "assert_not_called",
          "line": 82,
          "type": "attribute"
        },
        {
          "caller": "TestIdeaService.test_get_idea_success",
          "callee": "create_sample_idea",
          "line": 87,
          "type": "direct"
        },
        {
          "caller": "TestIdeaService.test_get_idea_success",
          "callee": "get_idea",
          "line": 91,
          "type": "attribute"
        },
        {
          "caller": "TestIdeaService.test_get_idea_success",
          "callee": "isinstance",
          "line": 94,
          "type": "direct"
        },
        {
          "caller": "TestIdeaService.test_get_idea_not_found",
          "callee": "get_idea",
          "line": 103,
          "type": "attribute"
        },
        {
          "caller": "TestIdeaService.test_list_ideas_with_filters",
          "callee": "get_sample_ideas",
          "line": 110,
          "type": "attribute"
        },
        {
          "caller": "TestIdeaService.test_list_ideas_with_filters",
          "callee": "list_ideas",
          "line": 115,
          "type": "attribute"
        },
        {
          "caller": "TestIdeaService.test_list_ideas_with_filters",
          "callee": "len",
          "line": 118,
          "type": "direct"
        },
        {
          "caller": "TestIdeaService.test_list_ideas_with_filters",
          "callee": "assert_called_once_with",
          "line": 121,
          "type": "attribute"
        },
        {
          "caller": "TestIdeaService.test_update_idea_success",
          "callee": "str",
          "line": 133,
          "type": "direct"
        },
        {
          "caller": "TestIdeaService.test_update_idea_success",
          "callee": "uuid4",
          "line": 133,
          "type": "attribute"
        },
        {
          "caller": "TestIdeaService.test_update_idea_success",
          "callee": "update_idea",
          "line": 136,
          "type": "attribute"
        },
        {
          "caller": "TestIdeaService.test_update_idea_success",
          "callee": "assert_called_once_with",
          "line": 139,
          "type": "attribute"
        },
        {
          "caller": "TestIdeaService.test_update_idea_with_tags",
          "callee": "str",
          "line": 144,
          "type": "direct"
        },
        {
          "caller": "TestIdeaService.test_update_idea_with_tags",
          "callee": "uuid4",
          "line": 144,
          "type": "attribute"
        },
        {
          "caller": "TestIdeaService.test_update_idea_with_tags",
          "callee": "update_idea",
          "line": 148,
          "type": "attribute"
        },
        {
          "caller": "TestIdeaService.test_update_idea_with_tags",
          "callee": "assert_called_once_with",
          "line": 151,
          "type": "attribute"
        },
        {
          "caller": "TestIdeaService.test_update_idea_with_tags",
          "callee": "assert_called_once_with",
          "line": 152,
          "type": "attribute"
        },
        {
          "caller": "TestIdeaService.test_delete_idea_success",
          "callee": "str",
          "line": 157,
          "type": "direct"
        },
        {
          "caller": "TestIdeaService.test_delete_idea_success",
          "callee": "uuid4",
          "line": 157,
          "type": "attribute"
        },
        {
          "caller": "TestIdeaService.test_delete_idea_success",
          "callee": "delete_idea",
          "line": 159,
          "type": "attribute"
        },
        {
          "caller": "TestIdeaService.test_delete_idea_success",
          "callee": "assert_called_once_with",
          "line": 162,
          "type": "attribute"
        },
        {
          "caller": "TestIdeaService.test_update_idea_status",
          "callee": "str",
          "line": 167,
          "type": "direct"
        },
        {
          "caller": "TestIdeaService.test_update_idea_status",
          "callee": "uuid4",
          "line": 167,
          "type": "attribute"
        },
        {
          "caller": "TestIdeaService.test_update_idea_status",
          "callee": "update_idea_status",
          "line": 170,
          "type": "attribute"
        },
        {
          "caller": "TestIdeaService.test_update_idea_status",
          "callee": "assert_called_once_with",
          "line": 173,
          "type": "attribute"
        },
        {
          "caller": "TestIdeaService.test_get_statistics",
          "callee": "get_statistics",
          "line": 188,
          "type": "attribute"
        },
        {
          "caller": "TestIdeaService.test_get_statistics",
          "callee": "assert_called_once",
          "line": 191,
          "type": "attribute"
        },
        {
          "caller": "TestIdeaService.test_cache_trending_success",
          "callee": "get_sample_trending_items",
          "line": 196,
          "type": "attribute"
        },
        {
          "caller": "TestIdeaService.test_cache_trending_success",
          "callee": "cache_trending",
          "line": 199,
          "type": "attribute"
        },
        {
          "caller": "TestIdeaService.test_get_trending",
          "callee": "get_sample_trending_items",
          "line": 207,
          "type": "attribute"
        },
        {
          "caller": "TestIdeaService.test_get_trending",
          "callee": "get_trending",
          "line": 210,
          "type": "attribute"
        },
        {
          "caller": "TestIdeaService.test_get_trending",
          "callee": "len",
          "line": 212,
          "type": "direct"
        },
        {
          "caller": "TestIdeaService.test_get_trending",
          "callee": "len",
          "line": 212,
          "type": "direct"
        },
        {
          "caller": "TestIdeaService.test_get_trending",
          "callee": "assert_called_once_with",
          "line": 213,
          "type": "attribute"
        },
        {
          "caller": "TestIdeaService.test_save_trending_as_idea",
          "callee": "create_sample_trending_item",
          "line": 218,
          "type": "direct"
        },
        {
          "caller": "TestIdeaService.test_save_trending_as_idea",
          "callee": "save_trending_as_idea",
          "line": 221,
          "type": "attribute"
        },
        {
          "caller": "TestIdeaService.test_save_trending_as_idea",
          "callee": "assert_called_once",
          "line": 224,
          "type": "attribute"
        },
        {
          "caller": "TestIdeaService.test_search_ideas",
          "callee": "AsyncMock",
          "line": 252,
          "type": "direct"
        },
        {
          "caller": "TestIdeaService.test_search_ideas",
          "callee": "search_ideas",
          "line": 255,
          "type": "attribute"
        },
        {
          "caller": "TestIdeaService.test_search_ideas",
          "callee": "len",
          "line": 256,
          "type": "direct"
        },
        {
          "caller": "TestIdeaService.test_search_ideas",
          "callee": "search_ideas",
          "line": 260,
          "type": "attribute"
        },
        {
          "caller": "TestIdeaService.test_search_ideas",
          "callee": "len",
          "line": 261,
          "type": "direct"
        },
        {
          "caller": "TestIdeaService.test_search_ideas",
          "callee": "search_ideas",
          "line": 265,
          "type": "attribute"
        },
        {
          "caller": "TestIdeaService.test_search_ideas",
          "callee": "len",
          "line": 266,
          "type": "direct"
        },
        {
          "caller": "TestIdeaService.test_search_ideas",
          "callee": "search_ideas",
          "line": 269,
          "type": "attribute"
        },
        {
          "caller": "TestIdeaService.test_search_ideas",
          "callee": "len",
          "line": 270,
          "type": "direct"
        },
        {
          "caller": "TestIdeaService.test_cleanup_expired_trending",
          "callee": "cleanup_expired_trending",
          "line": 275,
          "type": "attribute"
        },
        {
          "caller": "TestIdeaService.test_cleanup_expired_trending",
          "callee": "assert_called_once",
          "line": 278,
          "type": "attribute"
        },
        {
          "caller": "TestIdeaModel.test_idea_creation_from_dict",
          "callee": "create_sample_idea",
          "line": 286,
          "type": "direct"
        },
        {
          "caller": "TestIdeaModel.test_idea_creation_from_dict",
          "callee": "from_dict",
          "line": 287,
          "type": "attribute"
        },
        {
          "caller": "TestIdeaModel.test_idea_to_dict",
          "callee": "create_sample_idea",
          "line": 296,
          "type": "direct"
        },
        {
          "caller": "TestIdeaModel.test_idea_to_dict",
          "callee": "from_dict",
          "line": 297,
          "type": "attribute"
        },
        {
          "caller": "TestIdeaModel.test_idea_to_dict",
          "callee": "to_dict",
          "line": 298,
          "type": "attribute"
        },
        {
          "caller": "TestIdeaModel.test_idea_validation_success",
          "callee": "create_sample_idea",
          "line": 306,
          "type": "direct"
        },
        {
          "caller": "TestIdeaModel.test_idea_validation_success",
          "callee": "from_dict",
          "line": 307,
          "type": "attribute"
        },
        {
          "caller": "TestIdeaModel.test_idea_validation_success",
          "callee": "validate",
          "line": 309,
          "type": "attribute"
        },
        {
          "caller": "TestIdeaModel.test_idea_validation_missing_title",
          "callee": "create_sample_idea",
          "line": 313,
          "type": "direct"
        },
        {
          "caller": "TestIdeaModel.test_idea_validation_missing_title",
          "callee": "from_dict",
          "line": 315,
          "type": "attribute"
        },
        {
          "caller": "TestIdeaModel.test_idea_validation_missing_title",
          "callee": "validate",
          "line": 317,
          "type": "attribute"
        },
        {
          "caller": "TestIdeaModel.test_idea_validation_invalid_priority",
          "callee": "create_sample_idea",
          "line": 321,
          "type": "direct"
        },
        {
          "caller": "TestIdeaModel.test_idea_validation_invalid_priority",
          "callee": "from_dict",
          "line": 322,
          "type": "attribute"
        },
        {
          "caller": "TestIdeaModel.test_idea_validation_invalid_priority",
          "callee": "validate",
          "line": 324,
          "type": "attribute"
        },
        {
          "caller": "TestIdeaModel.test_idea_validation_invalid_status",
          "callee": "create_sample_idea",
          "line": 328,
          "type": "direct"
        },
        {
          "caller": "TestIdeaModel.test_idea_validation_invalid_status",
          "callee": "from_dict",
          "line": 329,
          "type": "attribute"
        },
        {
          "caller": "TestIdeaModel.test_idea_validation_invalid_status",
          "callee": "validate",
          "line": 331,
          "type": "attribute"
        },
        {
          "caller": "TestIdeaModel.test_get_formatted_time",
          "callee": "from_dict",
          "line": 336,
          "type": "attribute"
        },
        {
          "caller": "TestIdeaModel.test_get_formatted_time",
          "callee": "create_sample_idea",
          "line": 336,
          "type": "direct"
        },
        {
          "caller": "TestIdeaModel.test_get_formatted_time",
          "callee": "get_formatted_time",
          "line": 337,
          "type": "attribute"
        },
        {
          "caller": "TestIdeaModel.test_get_formatted_time",
          "callee": "from_dict",
          "line": 340,
          "type": "attribute"
        },
        {
          "caller": "TestIdeaModel.test_get_formatted_time",
          "callee": "create_sample_idea",
          "line": 340,
          "type": "direct"
        },
        {
          "caller": "TestIdeaModel.test_get_formatted_time",
          "callee": "get_formatted_time",
          "line": 341,
          "type": "attribute"
        },
        {
          "caller": "TestIdeaModel.test_get_formatted_time",
          "callee": "from_dict",
          "line": 344,
          "type": "attribute"
        },
        {
          "caller": "TestIdeaModel.test_get_formatted_time",
          "callee": "create_sample_idea",
          "line": 344,
          "type": "direct"
        },
        {
          "caller": "TestIdeaModel.test_get_formatted_time",
          "callee": "get_formatted_time",
          "line": 345,
          "type": "attribute"
        },
        {
          "caller": "TestTrendingItemModel.test_trending_item_creation",
          "callee": "create_sample_trending_item",
          "line": 353,
          "type": "direct"
        },
        {
          "caller": "TestTrendingItemModel.test_trending_item_creation",
          "callee": "from_dict",
          "line": 354,
          "type": "attribute"
        },
        {
          "caller": "TestTrendingItemModel.test_trending_item_to_dict",
          "callee": "create_sample_trending_item",
          "line": 362,
          "type": "direct"
        },
        {
          "caller": "TestTrendingItemModel.test_trending_item_to_dict",
          "callee": "from_dict",
          "line": 363,
          "type": "attribute"
        },
        {
          "caller": "TestTrendingItemModel.test_trending_item_to_dict",
          "callee": "to_dict",
          "line": 364,
          "type": "attribute"
        },
        {
          "caller": "TestTrendingItemModel.test_is_expired_false",
          "callee": "create_sample_trending_item",
          "line": 372,
          "type": "direct"
        },
        {
          "caller": "TestTrendingItemModel.test_is_expired_false",
          "callee": "from_dict",
          "line": 373,
          "type": "attribute"
        },
        {
          "caller": "TestTrendingItemModel.test_is_expired_false",
          "callee": "is_expired",
          "line": 375,
          "type": "attribute"
        },
        {
          "caller": "TestTrendingItemModel.test_is_expired_true",
          "callee": "replace",
          "line": 379,
          "type": "attribute"
        },
        {
          "caller": "TestTrendingItemModel.test_is_expired_true",
          "callee": "now",
          "line": 379,
          "type": "attribute"
        },
        {
          "caller": "TestTrendingItemModel.test_is_expired_true",
          "callee": "create_sample_trending_item",
          "line": 380,
          "type": "direct"
        },
        {
          "caller": "TestTrendingItemModel.test_is_expired_true",
          "callee": "isoformat",
          "line": 381,
          "type": "attribute"
        },
        {
          "caller": "TestTrendingItemModel.test_is_expired_true",
          "callee": "from_dict",
          "line": 383,
          "type": "attribute"
        },
        {
          "caller": "TestTrendingItemModel.test_is_expired_true",
          "callee": "is_expired",
          "line": 385,
          "type": "attribute"
        }
      ],
      "error": null
    },
    {
      "filepath": "tests\\test_printer_interface_conformance.py",
      "functions": [
        {
          "name": "test_printer_interface_methods_signature",
          "full_name": "test_printer_interface_methods_signature",
          "class": null,
          "signature": "()",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Ensure PrinterInterface declares all required abstract async methods.",
          "line_start": 18,
          "line_end": 24,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_prusa_printer_implements_interface",
          "full_name": "test_prusa_printer_implements_interface",
          "class": null,
          "signature": "(monkeypatch)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "PrusaPrinter must implement all interface methods and maintain async nature.",
          "line_start": 27,
          "line_end": 33,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_bambu_printer_implements_interface",
          "full_name": "test_bambu_printer_implements_interface",
          "class": null,
          "signature": "(monkeypatch)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "",
          "line_start": 36,
          "line_end": 43,
          "access_level": "public",
          "is_method": false,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "asyncio",
          "alias": null,
          "line": 1
        },
        {
          "type": "import",
          "module": "inspect",
          "alias": null,
          "line": 2
        },
        {
          "type": "import",
          "module": "pytest",
          "alias": null,
          "line": 3
        },
        {
          "type": "from_import",
          "module": "src.printers.base",
          "name": "PrinterInterface",
          "alias": null,
          "line": 5
        },
        {
          "type": "from_import",
          "module": "src.printers.prusa",
          "name": "PrusaPrinter",
          "alias": null,
          "line": 6
        },
        {
          "type": "from_import",
          "module": "src.printers.bambu_lab",
          "name": "BambuLabPrinter",
          "alias": null,
          "line": 7
        },
        {
          "type": "from_import",
          "module": "src.printers.bambu_lab",
          "name": "BAMBU_AVAILABLE",
          "alias": null,
          "line": 7
        }
      ],
      "function_calls": [
        {
          "caller": "test_printer_interface_methods_signature",
          "callee": "hasattr",
          "line": 21,
          "type": "direct"
        },
        {
          "caller": "test_printer_interface_methods_signature",
          "callee": "getattr",
          "line": 22,
          "type": "direct"
        },
        {
          "caller": "test_printer_interface_methods_signature",
          "callee": "isfunction",
          "line": 24,
          "type": "attribute"
        },
        {
          "caller": "test_prusa_printer_implements_interface",
          "callee": "PrusaPrinter",
          "line": 29,
          "type": "direct"
        },
        {
          "caller": "test_prusa_printer_implements_interface",
          "callee": "hasattr",
          "line": 31,
          "type": "direct"
        },
        {
          "caller": "test_prusa_printer_implements_interface",
          "callee": "getattr",
          "line": 32,
          "type": "direct"
        },
        {
          "caller": "test_prusa_printer_implements_interface",
          "callee": "iscoroutinefunction",
          "line": 33,
          "type": "attribute"
        },
        {
          "caller": "test_bambu_printer_implements_interface",
          "callee": "skip",
          "line": 38,
          "type": "attribute"
        },
        {
          "caller": "test_bambu_printer_implements_interface",
          "callee": "BambuLabPrinter",
          "line": 39,
          "type": "direct"
        },
        {
          "caller": "test_bambu_printer_implements_interface",
          "callee": "hasattr",
          "line": 41,
          "type": "direct"
        },
        {
          "caller": "test_bambu_printer_implements_interface",
          "callee": "getattr",
          "line": 42,
          "type": "direct"
        },
        {
          "caller": "test_bambu_printer_implements_interface",
          "callee": "iscoroutinefunction",
          "line": 43,
          "type": "attribute"
        }
      ],
      "error": null
    },
    {
      "filepath": "tests\\test_runner.py",
      "functions": [
        {
          "name": "__init__",
          "full_name": "PrinternizerTestRunner.__init__",
          "class": "PrinternizerTestRunner",
          "signature": "(self, project_root)",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 19,
          "line_end": 27,
          "access_level": "dunder",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "run_backend_tests",
          "full_name": "PrinternizerTestRunner.run_backend_tests",
          "class": "PrinternizerTestRunner",
          "signature": "(self, test_type, coverage, verbose)",
          "return_type": "",
          "decorators": [],
          "docstring": "Run backend Python tests",
          "line_start": 29,
          "line_end": 78,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "run_frontend_tests",
          "full_name": "PrinternizerTestRunner.run_frontend_tests",
          "class": "PrinternizerTestRunner",
          "signature": "(self, test_type, coverage, verbose)",
          "return_type": "",
          "decorators": [],
          "docstring": "Run frontend JavaScript tests",
          "line_start": 80,
          "line_end": 124,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "run_performance_benchmarks",
          "full_name": "PrinternizerTestRunner.run_performance_benchmarks",
          "class": "PrinternizerTestRunner",
          "signature": "(self, duration, concurrent_users)",
          "return_type": "",
          "decorators": [],
          "docstring": "Run performance benchmarks",
          "line_start": 126,
          "line_end": 147,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "generate_coverage_report",
          "full_name": "PrinternizerTestRunner.generate_coverage_report",
          "class": "PrinternizerTestRunner",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Generate comprehensive coverage report",
          "line_start": 149,
          "line_end": 221,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "generate_test_documentation",
          "full_name": "PrinternizerTestRunner.generate_test_documentation",
          "class": "PrinternizerTestRunner",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Generate test documentation",
          "line_start": 223,
          "line_end": 235,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "run_full_test_suite",
          "full_name": "PrinternizerTestRunner.run_full_test_suite",
          "class": "PrinternizerTestRunner",
          "signature": "(self, skip_performance, skip_frontend)",
          "return_type": "",
          "decorators": [],
          "docstring": "Run complete test suite",
          "line_start": 237,
          "line_end": 299,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_process_backend_results",
          "full_name": "PrinternizerTestRunner._process_backend_results",
          "class": "PrinternizerTestRunner",
          "signature": "(self, result, duration)",
          "return_type": "",
          "decorators": [],
          "docstring": "Process backend test results",
          "line_start": 301,
          "line_end": 310,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_process_frontend_results",
          "full_name": "PrinternizerTestRunner._process_frontend_results",
          "class": "PrinternizerTestRunner",
          "signature": "(self, result, duration)",
          "return_type": "",
          "decorators": [],
          "docstring": "Process frontend test results",
          "line_start": 312,
          "line_end": 321,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_process_benchmark_results",
          "full_name": "PrinternizerTestRunner._process_benchmark_results",
          "class": "PrinternizerTestRunner",
          "signature": "(self, result, duration)",
          "return_type": "",
          "decorators": [],
          "docstring": "Process performance benchmark results",
          "line_start": 323,
          "line_end": 342,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_create_test_documentation",
          "full_name": "PrinternizerTestRunner._create_test_documentation",
          "class": "PrinternizerTestRunner",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Create comprehensive test documentation",
          "line_start": 344,
          "line_end": 613,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "_print_final_summary",
          "full_name": "PrinternizerTestRunner._print_final_summary",
          "class": "PrinternizerTestRunner",
          "signature": "(self, results)",
          "return_type": "",
          "decorators": [],
          "docstring": "Print final test run summary",
          "line_start": 615,
          "line_end": 647,
          "access_level": "private",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "main",
          "full_name": "main",
          "class": null,
          "signature": "()",
          "return_type": "",
          "decorators": [],
          "docstring": "Main entry point for test runner",
          "line_start": 650,
          "line_end": 705,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "os",
          "alias": null,
          "line": 6
        },
        {
          "type": "import",
          "module": "sys",
          "alias": null,
          "line": 7
        },
        {
          "type": "import",
          "module": "subprocess",
          "alias": null,
          "line": 8
        },
        {
          "type": "import",
          "module": "argparse",
          "alias": null,
          "line": 9
        },
        {
          "type": "import",
          "module": "json",
          "alias": null,
          "line": 10
        },
        {
          "type": "import",
          "module": "time",
          "alias": null,
          "line": 11
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 12
        },
        {
          "type": "from_import",
          "module": "pathlib",
          "name": "Path",
          "alias": null,
          "line": 13
        }
      ],
      "function_calls": [
        {
          "caller": "PrinternizerTestRunner.__init__",
          "callee": "Path",
          "line": 20,
          "type": "direct"
        },
        {
          "caller": "PrinternizerTestRunner.__init__",
          "callee": "Path",
          "line": 20,
          "type": "direct"
        },
        {
          "caller": "PrinternizerTestRunner.__init__",
          "callee": "mkdir",
          "line": 26,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner.__init__",
          "callee": "mkdir",
          "line": 27,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner.run_backend_tests",
          "callee": "print",
          "line": 31,
          "type": "direct"
        },
        {
          "caller": "PrinternizerTestRunner.run_backend_tests",
          "callee": "extend",
          "line": 38,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner.run_backend_tests",
          "callee": "extend",
          "line": 57,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner.run_backend_tests",
          "callee": "append",
          "line": 61,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner.run_backend_tests",
          "callee": "extend",
          "line": 64,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner.run_backend_tests",
          "callee": "time",
          "line": 71,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner.run_backend_tests",
          "callee": "run",
          "line": 72,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner.run_backend_tests",
          "callee": "time",
          "line": 73,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner.run_backend_tests",
          "callee": "_process_backend_results",
          "line": 76,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner.run_frontend_tests",
          "callee": "print",
          "line": 82,
          "type": "direct"
        },
        {
          "caller": "PrinternizerTestRunner.run_frontend_tests",
          "callee": "append",
          "line": 92,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner.run_frontend_tests",
          "callee": "append",
          "line": 104,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner.run_frontend_tests",
          "callee": "append",
          "line": 108,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner.run_frontend_tests",
          "callee": "extend",
          "line": 111,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner.run_frontend_tests",
          "callee": "str",
          "line": 112,
          "type": "direct"
        },
        {
          "caller": "PrinternizerTestRunner.run_frontend_tests",
          "callee": "str",
          "line": 113,
          "type": "direct"
        },
        {
          "caller": "PrinternizerTestRunner.run_frontend_tests",
          "callee": "time",
          "line": 117,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner.run_frontend_tests",
          "callee": "run",
          "line": 118,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner.run_frontend_tests",
          "callee": "time",
          "line": 119,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner.run_frontend_tests",
          "callee": "_process_frontend_results",
          "line": 122,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner.run_performance_benchmarks",
          "callee": "print",
          "line": 128,
          "type": "direct"
        },
        {
          "caller": "PrinternizerTestRunner.run_performance_benchmarks",
          "callee": "print",
          "line": 129,
          "type": "direct"
        },
        {
          "caller": "PrinternizerTestRunner.run_performance_benchmarks",
          "callee": "time",
          "line": 140,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner.run_performance_benchmarks",
          "callee": "run",
          "line": 141,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner.run_performance_benchmarks",
          "callee": "time",
          "line": 142,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner.run_performance_benchmarks",
          "callee": "_process_benchmark_results",
          "line": 145,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner.generate_coverage_report",
          "callee": "print",
          "line": 151,
          "type": "direct"
        },
        {
          "caller": "PrinternizerTestRunner.generate_coverage_report",
          "callee": "isoformat",
          "line": 158,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner.generate_coverage_report",
          "callee": "now",
          "line": 158,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner.generate_coverage_report",
          "callee": "exists",
          "line": 165,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner.generate_coverage_report",
          "callee": "open",
          "line": 166,
          "type": "direct"
        },
        {
          "caller": "PrinternizerTestRunner.generate_coverage_report",
          "callee": "load",
          "line": 167,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner.generate_coverage_report",
          "callee": "get",
          "line": 169,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner.generate_coverage_report",
          "callee": "get",
          "line": 169,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner.generate_coverage_report",
          "callee": "get",
          "line": 170,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner.generate_coverage_report",
          "callee": "get",
          "line": 170,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner.generate_coverage_report",
          "callee": "get",
          "line": 171,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner.generate_coverage_report",
          "callee": "get",
          "line": 171,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner.generate_coverage_report",
          "callee": "get",
          "line": 172,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner.generate_coverage_report",
          "callee": "get",
          "line": 172,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner.generate_coverage_report",
          "callee": "get",
          "line": 173,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner.generate_coverage_report",
          "callee": "get",
          "line": 173,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner.generate_coverage_report",
          "callee": "exists",
          "line": 177,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner.generate_coverage_report",
          "callee": "open",
          "line": 178,
          "type": "direct"
        },
        {
          "caller": "PrinternizerTestRunner.generate_coverage_report",
          "callee": "load",
          "line": 179,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner.generate_coverage_report",
          "callee": "get",
          "line": 191,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner.generate_coverage_report",
          "callee": "get",
          "line": 192,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner.generate_coverage_report",
          "callee": "get",
          "line": 193,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner.generate_coverage_report",
          "callee": "get",
          "line": 194,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner.generate_coverage_report",
          "callee": "open",
          "line": 209,
          "type": "direct"
        },
        {
          "caller": "PrinternizerTestRunner.generate_coverage_report",
          "callee": "dump",
          "line": 210,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner.generate_coverage_report",
          "callee": "print",
          "line": 212,
          "type": "direct"
        },
        {
          "caller": "PrinternizerTestRunner.generate_coverage_report",
          "callee": "print",
          "line": 216,
          "type": "direct"
        },
        {
          "caller": "PrinternizerTestRunner.generate_coverage_report",
          "callee": "print",
          "line": 217,
          "type": "direct"
        },
        {
          "caller": "PrinternizerTestRunner.generate_coverage_report",
          "callee": "print",
          "line": 218,
          "type": "direct"
        },
        {
          "caller": "PrinternizerTestRunner.generate_coverage_report",
          "callee": "get",
          "line": 218,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner.generate_coverage_report",
          "callee": "print",
          "line": 219,
          "type": "direct"
        },
        {
          "caller": "PrinternizerTestRunner.generate_coverage_report",
          "callee": "get",
          "line": 219,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner.generate_test_documentation",
          "callee": "print",
          "line": 225,
          "type": "direct"
        },
        {
          "caller": "PrinternizerTestRunner.generate_test_documentation",
          "callee": "_create_test_documentation",
          "line": 227,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner.generate_test_documentation",
          "callee": "open",
          "line": 230,
          "type": "direct"
        },
        {
          "caller": "PrinternizerTestRunner.generate_test_documentation",
          "callee": "write",
          "line": 231,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner.generate_test_documentation",
          "callee": "print",
          "line": 233,
          "type": "direct"
        },
        {
          "caller": "PrinternizerTestRunner.run_full_test_suite",
          "callee": "print",
          "line": 239,
          "type": "direct"
        },
        {
          "caller": "PrinternizerTestRunner.run_full_test_suite",
          "callee": "print",
          "line": 240,
          "type": "direct"
        },
        {
          "caller": "PrinternizerTestRunner.run_full_test_suite",
          "callee": "now",
          "line": 240,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner.run_full_test_suite",
          "callee": "print",
          "line": 241,
          "type": "direct"
        },
        {
          "caller": "PrinternizerTestRunner.run_full_test_suite",
          "callee": "print",
          "line": 242,
          "type": "direct"
        },
        {
          "caller": "PrinternizerTestRunner.run_full_test_suite",
          "callee": "time",
          "line": 245,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner.run_full_test_suite",
          "callee": "run_backend_tests",
          "line": 255,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner.run_full_test_suite",
          "callee": "run_frontend_tests",
          "line": 259,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner.run_full_test_suite",
          "callee": "print",
          "line": 262,
          "type": "direct"
        },
        {
          "caller": "PrinternizerTestRunner.run_full_test_suite",
          "callee": "run_performance_benchmarks",
          "line": 266,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner.run_full_test_suite",
          "callee": "print",
          "line": 269,
          "type": "direct"
        },
        {
          "caller": "PrinternizerTestRunner.run_full_test_suite",
          "callee": "generate_coverage_report",
          "line": 273,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner.run_full_test_suite",
          "callee": "print",
          "line": 276,
          "type": "direct"
        },
        {
          "caller": "PrinternizerTestRunner.run_full_test_suite",
          "callee": "generate_test_documentation",
          "line": 280,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner.run_full_test_suite",
          "callee": "print",
          "line": 283,
          "type": "direct"
        },
        {
          "caller": "PrinternizerTestRunner.run_full_test_suite",
          "callee": "print",
          "line": 286,
          "type": "direct"
        },
        {
          "caller": "PrinternizerTestRunner.run_full_test_suite",
          "callee": "time",
          "line": 290,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner.run_full_test_suite",
          "callee": "_print_final_summary",
          "line": 294,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner._process_backend_results",
          "callee": "print",
          "line": 303,
          "type": "direct"
        },
        {
          "caller": "PrinternizerTestRunner._process_backend_results",
          "callee": "print",
          "line": 306,
          "type": "direct"
        },
        {
          "caller": "PrinternizerTestRunner._process_backend_results",
          "callee": "print",
          "line": 308,
          "type": "direct"
        },
        {
          "caller": "PrinternizerTestRunner._process_backend_results",
          "callee": "print",
          "line": 309,
          "type": "direct"
        },
        {
          "caller": "PrinternizerTestRunner._process_backend_results",
          "callee": "print",
          "line": 310,
          "type": "direct"
        },
        {
          "caller": "PrinternizerTestRunner._process_frontend_results",
          "callee": "print",
          "line": 314,
          "type": "direct"
        },
        {
          "caller": "PrinternizerTestRunner._process_frontend_results",
          "callee": "print",
          "line": 317,
          "type": "direct"
        },
        {
          "caller": "PrinternizerTestRunner._process_frontend_results",
          "callee": "print",
          "line": 319,
          "type": "direct"
        },
        {
          "caller": "PrinternizerTestRunner._process_frontend_results",
          "callee": "print",
          "line": 320,
          "type": "direct"
        },
        {
          "caller": "PrinternizerTestRunner._process_frontend_results",
          "callee": "print",
          "line": 321,
          "type": "direct"
        },
        {
          "caller": "PrinternizerTestRunner._process_benchmark_results",
          "callee": "print",
          "line": 325,
          "type": "direct"
        },
        {
          "caller": "PrinternizerTestRunner._process_benchmark_results",
          "callee": "print",
          "line": 328,
          "type": "direct"
        },
        {
          "caller": "PrinternizerTestRunner._process_benchmark_results",
          "callee": "exists",
          "line": 332,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner._process_benchmark_results",
          "callee": "open",
          "line": 333,
          "type": "direct"
        },
        {
          "caller": "PrinternizerTestRunner._process_benchmark_results",
          "callee": "load",
          "line": 334,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner._process_benchmark_results",
          "callee": "print",
          "line": 336,
          "type": "direct"
        },
        {
          "caller": "PrinternizerTestRunner._process_benchmark_results",
          "callee": "get",
          "line": 337,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner._process_benchmark_results",
          "callee": "get",
          "line": 338,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner._process_benchmark_results",
          "callee": "get",
          "line": 339,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner._process_benchmark_results",
          "callee": "get",
          "line": 339,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner._process_benchmark_results",
          "callee": "print",
          "line": 340,
          "type": "direct"
        },
        {
          "caller": "PrinternizerTestRunner._process_benchmark_results",
          "callee": "print",
          "line": 342,
          "type": "direct"
        },
        {
          "caller": "PrinternizerTestRunner._create_test_documentation",
          "callee": "strftime",
          "line": 352,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner._create_test_documentation",
          "callee": "now",
          "line": 352,
          "type": "attribute"
        },
        {
          "caller": "PrinternizerTestRunner._print_final_summary",
          "callee": "print",
          "line": 617,
          "type": "direct"
        },
        {
          "caller": "PrinternizerTestRunner._print_final_summary",
          "callee": "print",
          "line": 618,
          "type": "direct"
        },
        {
          "caller": "PrinternizerTestRunner._print_final_summary",
          "callee": "print",
          "line": 619,
          "type": "direct"
        },
        {
          "caller": "PrinternizerTestRunner._print_final_summary",
          "callee": "print",
          "line": 622,
          "type": "direct"
        },
        {
          "caller": "PrinternizerTestRunner._print_final_summary",
          "callee": "print",
          "line": 625,
          "type": "direct"
        },
        {
          "caller": "PrinternizerTestRunner._print_final_summary",
          "callee": "print",
          "line": 626,
          "type": "direct"
        },
        {
          "caller": "PrinternizerTestRunner._print_final_summary",
          "callee": "print",
          "line": 627,
          "type": "direct"
        },
        {
          "caller": "PrinternizerTestRunner._print_final_summary",
          "callee": "print",
          "line": 628,
          "type": "direct"
        },
        {
          "caller": "PrinternizerTestRunner._print_final_summary",
          "callee": "print",
          "line": 631,
          "type": "direct"
        },
        {
          "caller": "PrinternizerTestRunner._print_final_summary",
          "callee": "print",
          "line": 632,
          "type": "direct"
        },
        {
          "caller": "PrinternizerTestRunner._print_final_summary",
          "callee": "print",
          "line": 633,
          "type": "direct"
        },
        {
          "caller": "PrinternizerTestRunner._print_final_summary",
          "callee": "print",
          "line": 641,
          "type": "direct"
        },
        {
          "caller": "PrinternizerTestRunner._print_final_summary",
          "callee": "print",
          "line": 643,
          "type": "direct"
        },
        {
          "caller": "PrinternizerTestRunner._print_final_summary",
          "callee": "print",
          "line": 645,
          "type": "direct"
        },
        {
          "caller": "PrinternizerTestRunner._print_final_summary",
          "callee": "print",
          "line": 646,
          "type": "direct"
        },
        {
          "caller": "PrinternizerTestRunner._print_final_summary",
          "callee": "print",
          "line": 647,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "ArgumentParser",
          "line": 652,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "add_argument",
          "line": 653,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "add_argument",
          "line": 654,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "add_argument",
          "line": 655,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "add_argument",
          "line": 656,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "add_argument",
          "line": 658,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "add_argument",
          "line": 659,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "add_argument",
          "line": 660,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "add_argument",
          "line": 661,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "add_argument",
          "line": 662,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "add_argument",
          "line": 663,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "parse_args",
          "line": 665,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "PrinternizerTestRunner",
          "line": 667,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "generate_coverage_report",
          "line": 673,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "generate_test_documentation",
          "line": 675,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "run_full_test_suite",
          "line": 677,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "run_backend_tests",
          "line": 682,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "run_frontend_tests",
          "line": 687,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "run_performance_benchmarks",
          "line": 692,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "run_full_test_suite",
          "line": 695,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 698,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 701,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "exit",
          "line": 705,
          "type": "attribute"
        }
      ],
      "error": null
    },
    {
      "filepath": "tests\\test_url_parser_service.py",
      "functions": [
        {
          "name": "url_parser",
          "full_name": "url_parser",
          "class": null,
          "signature": "()",
          "return_type": "",
          "decorators": [
            "pytest.fixture"
          ],
          "docstring": "Create UrlParserService instance.",
          "line_start": 11,
          "line_end": 13,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_detect_platform_makerworld",
          "full_name": "TestUrlParserService.test_detect_platform_makerworld",
          "class": "TestUrlParserService",
          "signature": "(self, url_parser)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test platform detection for MakerWorld URLs.",
          "line_start": 19,
          "line_end": 29,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_detect_platform_printables",
          "full_name": "TestUrlParserService.test_detect_platform_printables",
          "class": "TestUrlParserService",
          "signature": "(self, url_parser)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test platform detection for Printables URLs.",
          "line_start": 31,
          "line_end": 41,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_detect_platform_thingiverse",
          "full_name": "TestUrlParserService.test_detect_platform_thingiverse",
          "class": "TestUrlParserService",
          "signature": "(self, url_parser)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test platform detection for Thingiverse URLs.",
          "line_start": 43,
          "line_end": 53,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_detect_platform_unknown",
          "full_name": "TestUrlParserService.test_detect_platform_unknown",
          "class": "TestUrlParserService",
          "signature": "(self, url_parser)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test platform detection for unknown URLs.",
          "line_start": 55,
          "line_end": 65,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_extract_model_id_makerworld",
          "full_name": "TestUrlParserService.test_extract_model_id_makerworld",
          "class": "TestUrlParserService",
          "signature": "(self, url_parser)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test model ID extraction for MakerWorld.",
          "line_start": 67,
          "line_end": 78,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_extract_model_id_printables",
          "full_name": "TestUrlParserService.test_extract_model_id_printables",
          "class": "TestUrlParserService",
          "signature": "(self, url_parser)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test model ID extraction for Printables.",
          "line_start": 80,
          "line_end": 91,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_extract_model_id_thingiverse",
          "full_name": "TestUrlParserService.test_extract_model_id_thingiverse",
          "class": "TestUrlParserService",
          "signature": "(self, url_parser)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test model ID extraction for Thingiverse.",
          "line_start": 93,
          "line_end": 104,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_clean_title",
          "full_name": "TestUrlParserService.test_clean_title",
          "class": "TestUrlParserService",
          "signature": "(self, url_parser)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test title cleaning functionality.",
          "line_start": 106,
          "line_end": 118,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_extract_creator_from_title",
          "full_name": "TestUrlParserService.test_extract_creator_from_title",
          "class": "TestUrlParserService",
          "signature": "(self, url_parser)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test creator extraction from titles.",
          "line_start": 120,
          "line_end": 131,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_validate_url",
          "full_name": "TestUrlParserService.test_validate_url",
          "class": "TestUrlParserService",
          "signature": "(self, url_parser)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test URL validation.",
          "line_start": 133,
          "line_end": 152,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_get_supported_platforms",
          "full_name": "TestUrlParserService.test_get_supported_platforms",
          "class": "TestUrlParserService",
          "signature": "(self, url_parser)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test getting supported platforms list.",
          "line_start": 154,
          "line_end": 161,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_get_platform_info",
          "full_name": "TestUrlParserService.test_get_platform_info",
          "class": "TestUrlParserService",
          "signature": "(self, url_parser)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test getting platform information.",
          "line_start": 163,
          "line_end": 175,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_parse_url_success",
          "full_name": "TestUrlParserService.test_parse_url_success",
          "class": "TestUrlParserService",
          "signature": "(self, url_parser)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test successful URL parsing with mocked HTTP response.",
          "line_start": 178,
          "line_end": 198,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_parse_url_http_error",
          "full_name": "TestUrlParserService.test_parse_url_http_error",
          "class": "TestUrlParserService",
          "signature": "(self, url_parser)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test URL parsing with HTTP error.",
          "line_start": 201,
          "line_end": 218,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_parse_url_invalid_url",
          "full_name": "TestUrlParserService.test_parse_url_invalid_url",
          "class": "TestUrlParserService",
          "signature": "(self, url_parser)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test URL parsing with invalid URL.",
          "line_start": 221,
          "line_end": 230,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_fetch_page_title_success",
          "full_name": "TestUrlParserService.test_fetch_page_title_success",
          "class": "TestUrlParserService",
          "signature": "(self, url_parser)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test successful page title fetching.",
          "line_start": 233,
          "line_end": 247,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_fetch_page_title_no_title_tag",
          "full_name": "TestUrlParserService.test_fetch_page_title_no_title_tag",
          "class": "TestUrlParserService",
          "signature": "(self, url_parser)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test page title fetching with no title tag.",
          "line_start": 250,
          "line_end": 264,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_close_session",
          "full_name": "TestUrlParserService.test_close_session",
          "class": "TestUrlParserService",
          "signature": "(self, url_parser)",
          "return_type": "",
          "decorators": [
            "pytest.mark.asyncio"
          ],
          "docstring": "Test session cleanup.",
          "line_start": 267,
          "line_end": 275,
          "access_level": "public",
          "is_method": true,
          "is_async": true,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "pytest",
          "alias": null,
          "line": 4
        },
        {
          "type": "from_import",
          "module": "unittest.mock",
          "name": "AsyncMock",
          "alias": null,
          "line": 5
        },
        {
          "type": "from_import",
          "module": "unittest.mock",
          "name": "patch",
          "alias": null,
          "line": 5
        },
        {
          "type": "from_import",
          "module": "src.services.url_parser_service",
          "name": "UrlParserService",
          "alias": null,
          "line": 7
        }
      ],
      "function_calls": [
        {
          "caller": "url_parser",
          "callee": "UrlParserService",
          "line": 13,
          "type": "direct"
        },
        {
          "caller": "TestUrlParserService.test_detect_platform_makerworld",
          "callee": "detect_platform",
          "line": 28,
          "type": "attribute"
        },
        {
          "caller": "TestUrlParserService.test_detect_platform_printables",
          "callee": "detect_platform",
          "line": 40,
          "type": "attribute"
        },
        {
          "caller": "TestUrlParserService.test_detect_platform_thingiverse",
          "callee": "detect_platform",
          "line": 52,
          "type": "attribute"
        },
        {
          "caller": "TestUrlParserService.test_detect_platform_unknown",
          "callee": "detect_platform",
          "line": 64,
          "type": "attribute"
        },
        {
          "caller": "TestUrlParserService.test_extract_model_id_makerworld",
          "callee": "extract_model_id",
          "line": 77,
          "type": "attribute"
        },
        {
          "caller": "TestUrlParserService.test_extract_model_id_printables",
          "callee": "extract_model_id",
          "line": 90,
          "type": "attribute"
        },
        {
          "caller": "TestUrlParserService.test_extract_model_id_thingiverse",
          "callee": "extract_model_id",
          "line": 103,
          "type": "attribute"
        },
        {
          "caller": "TestUrlParserService.test_clean_title",
          "callee": "_clean_title",
          "line": 117,
          "type": "attribute"
        },
        {
          "caller": "TestUrlParserService.test_extract_creator_from_title",
          "callee": "extract_creator_from_title",
          "line": 130,
          "type": "attribute"
        },
        {
          "caller": "TestUrlParserService.test_validate_url",
          "callee": "validate_url",
          "line": 149,
          "type": "attribute"
        },
        {
          "caller": "TestUrlParserService.test_validate_url",
          "callee": "validate_url",
          "line": 152,
          "type": "attribute"
        },
        {
          "caller": "TestUrlParserService.test_get_supported_platforms",
          "callee": "get_supported_platforms",
          "line": 156,
          "type": "attribute"
        },
        {
          "caller": "TestUrlParserService.test_get_supported_platforms",
          "callee": "isinstance",
          "line": 159,
          "type": "direct"
        },
        {
          "caller": "TestUrlParserService.test_get_supported_platforms",
          "callee": "all",
          "line": 160,
          "type": "direct"
        },
        {
          "caller": "TestUrlParserService.test_get_supported_platforms",
          "callee": "len",
          "line": 161,
          "type": "direct"
        },
        {
          "caller": "TestUrlParserService.test_get_supported_platforms",
          "callee": "len",
          "line": 161,
          "type": "direct"
        },
        {
          "caller": "TestUrlParserService.test_get_platform_info",
          "callee": "get_platform_info",
          "line": 165,
          "type": "attribute"
        },
        {
          "caller": "TestUrlParserService.test_get_platform_info",
          "callee": "isinstance",
          "line": 167,
          "type": "direct"
        },
        {
          "caller": "TestUrlParserService.test_get_platform_info",
          "callee": "get_platform_info",
          "line": 173,
          "type": "attribute"
        },
        {
          "caller": "TestUrlParserService.test_parse_url_success",
          "callee": "object",
          "line": 183,
          "type": "attribute"
        },
        {
          "caller": "TestUrlParserService.test_parse_url_success",
          "callee": "AsyncMock",
          "line": 184,
          "type": "direct"
        },
        {
          "caller": "TestUrlParserService.test_parse_url_success",
          "callee": "AsyncMock",
          "line": 185,
          "type": "direct"
        },
        {
          "caller": "TestUrlParserService.test_parse_url_success",
          "callee": "parse_url",
          "line": 191,
          "type": "attribute"
        },
        {
          "caller": "TestUrlParserService.test_parse_url_http_error",
          "callee": "object",
          "line": 205,
          "type": "attribute"
        },
        {
          "caller": "TestUrlParserService.test_parse_url_http_error",
          "callee": "AsyncMock",
          "line": 206,
          "type": "direct"
        },
        {
          "caller": "TestUrlParserService.test_parse_url_http_error",
          "callee": "AsyncMock",
          "line": 207,
          "type": "direct"
        },
        {
          "caller": "TestUrlParserService.test_parse_url_http_error",
          "callee": "parse_url",
          "line": 212,
          "type": "attribute"
        },
        {
          "caller": "TestUrlParserService.test_parse_url_invalid_url",
          "callee": "parse_url",
          "line": 225,
          "type": "attribute"
        },
        {
          "caller": "TestUrlParserService.test_fetch_page_title_success",
          "callee": "object",
          "line": 238,
          "type": "attribute"
        },
        {
          "caller": "TestUrlParserService.test_fetch_page_title_success",
          "callee": "AsyncMock",
          "line": 239,
          "type": "direct"
        },
        {
          "caller": "TestUrlParserService.test_fetch_page_title_success",
          "callee": "AsyncMock",
          "line": 240,
          "type": "direct"
        },
        {
          "caller": "TestUrlParserService.test_fetch_page_title_success",
          "callee": "fetch_page_title",
          "line": 246,
          "type": "attribute"
        },
        {
          "caller": "TestUrlParserService.test_fetch_page_title_no_title_tag",
          "callee": "object",
          "line": 255,
          "type": "attribute"
        },
        {
          "caller": "TestUrlParserService.test_fetch_page_title_no_title_tag",
          "callee": "AsyncMock",
          "line": 256,
          "type": "direct"
        },
        {
          "caller": "TestUrlParserService.test_fetch_page_title_no_title_tag",
          "callee": "AsyncMock",
          "line": 257,
          "type": "direct"
        },
        {
          "caller": "TestUrlParserService.test_fetch_page_title_no_title_tag",
          "callee": "fetch_page_title",
          "line": 263,
          "type": "attribute"
        },
        {
          "caller": "TestUrlParserService.test_close_session",
          "callee": "AsyncMock",
          "line": 270,
          "type": "direct"
        },
        {
          "caller": "TestUrlParserService.test_close_session",
          "callee": "close",
          "line": 272,
          "type": "attribute"
        },
        {
          "caller": "TestUrlParserService.test_close_session",
          "callee": "assert_called_once",
          "line": 274,
          "type": "attribute"
        }
      ],
      "error": null
    },
    {
      "filepath": "tests\\test_working_core.py",
      "functions": [
        {
          "name": "test_printer_model_creation",
          "full_name": "TestCoreModels.test_printer_model_creation",
          "class": "TestCoreModels",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test creating printer models for both supported types.",
          "line_start": 21,
          "line_end": 45,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_job_model_business_logic",
          "full_name": "TestCoreModels.test_job_model_business_logic",
          "class": "TestCoreModels",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test job models with German business logic.",
          "line_start": 47,
          "line_end": 75,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_file_model_statuses",
          "full_name": "TestCoreModels.test_file_model_statuses",
          "class": "TestCoreModels",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test file models and status transitions.",
          "line_start": 77,
          "line_end": 103,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_vat_calculations",
          "full_name": "TestGermanBusinessLogic.test_vat_calculations",
          "class": "TestGermanBusinessLogic",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test German VAT (19%) calculations.",
          "line_start": 109,
          "line_end": 124,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_business_classification",
          "full_name": "TestGermanBusinessLogic.test_business_classification",
          "class": "TestGermanBusinessLogic",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test automatic business vs private classification.",
          "line_start": 126,
          "line_end": 141,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "classify_customer",
          "full_name": "TestGermanBusinessLogic.classify_customer",
          "class": "TestGermanBusinessLogic",
          "signature": "(name)",
          "return_type": "",
          "decorators": [],
          "docstring": "",
          "line_start": 130,
          "line_end": 131,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_file_naming_german_support",
          "full_name": "TestGermanBusinessLogic.test_file_naming_german_support",
          "class": "TestGermanBusinessLogic",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test German filename support (umlauts, etc.).",
          "line_start": 143,
          "line_end": 160,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_printer_config_updates",
          "full_name": "TestConfigurationValidation.test_printer_config_updates",
          "class": "TestConfigurationValidation",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test printer configuration updates.",
          "line_start": 166,
          "line_end": 177,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_job_creation_and_updates",
          "full_name": "TestConfigurationValidation.test_job_creation_and_updates",
          "class": "TestConfigurationValidation",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test job creation and update workflows.",
          "line_start": 179,
          "line_end": 200,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_printer_enums",
          "full_name": "TestEnumConsistency.test_printer_enums",
          "class": "TestEnumConsistency",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test printer-related enums.",
          "line_start": 206,
          "line_end": 217,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_job_enums",
          "full_name": "TestEnumConsistency.test_job_enums",
          "class": "TestEnumConsistency",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test job-related enums.",
          "line_start": 219,
          "line_end": 225,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "test_file_enums",
          "full_name": "TestEnumConsistency.test_file_enums",
          "class": "TestEnumConsistency",
          "signature": "(self)",
          "return_type": "",
          "decorators": [],
          "docstring": "Test file-related enums.",
          "line_start": 227,
          "line_end": 237,
          "access_level": "public",
          "is_method": true,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "pytest",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "datetime",
          "name": "datetime",
          "alias": null,
          "line": 9
        },
        {
          "type": "from_import",
          "module": "pydantic",
          "name": "ValidationError",
          "alias": null,
          "line": 10
        },
        {
          "type": "from_import",
          "module": "src.models.printer",
          "name": "Printer",
          "alias": null,
          "line": 13
        },
        {
          "type": "from_import",
          "module": "src.models.printer",
          "name": "PrinterType",
          "alias": null,
          "line": 13
        },
        {
          "type": "from_import",
          "module": "src.models.printer",
          "name": "PrinterStatus",
          "alias": null,
          "line": 13
        },
        {
          "type": "from_import",
          "module": "src.models.printer",
          "name": "PrinterConfig",
          "alias": null,
          "line": 13
        },
        {
          "type": "from_import",
          "module": "src.models.job",
          "name": "Job",
          "alias": null,
          "line": 14
        },
        {
          "type": "from_import",
          "module": "src.models.job",
          "name": "JobStatus",
          "alias": null,
          "line": 14
        },
        {
          "type": "from_import",
          "module": "src.models.job",
          "name": "JobCreate",
          "alias": null,
          "line": 14
        },
        {
          "type": "from_import",
          "module": "src.models.job",
          "name": "JobUpdate",
          "alias": null,
          "line": 14
        },
        {
          "type": "from_import",
          "module": "src.models.file",
          "name": "File",
          "alias": null,
          "line": 15
        },
        {
          "type": "from_import",
          "module": "src.models.file",
          "name": "FileStatus",
          "alias": null,
          "line": 15
        },
        {
          "type": "from_import",
          "module": "src.models.file",
          "name": "FileSource",
          "alias": null,
          "line": 15
        }
      ],
      "function_calls": [
        {
          "caller": "TestCoreModels.test_printer_model_creation",
          "callee": "Printer",
          "line": 24,
          "type": "direct"
        },
        {
          "caller": "TestCoreModels.test_printer_model_creation",
          "callee": "Printer",
          "line": 37,
          "type": "direct"
        },
        {
          "caller": "TestCoreModels.test_job_model_business_logic",
          "callee": "Job",
          "line": 50,
          "type": "direct"
        },
        {
          "caller": "TestCoreModels.test_job_model_business_logic",
          "callee": "Job",
          "line": 66,
          "type": "direct"
        },
        {
          "caller": "TestCoreModels.test_file_model_statuses",
          "callee": "File",
          "line": 80,
          "type": "direct"
        },
        {
          "caller": "TestCoreModels.test_file_model_statuses",
          "callee": "File",
          "line": 93,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessLogic.test_vat_calculations",
          "callee": "abs",
          "line": 124,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessLogic.classify_customer",
          "callee": "any",
          "line": 131,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessLogic.test_business_classification",
          "callee": "classify_customer",
          "line": 134,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessLogic.test_business_classification",
          "callee": "classify_customer",
          "line": 135,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessLogic.test_business_classification",
          "callee": "classify_customer",
          "line": 136,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessLogic.test_business_classification",
          "callee": "classify_customer",
          "line": 139,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessLogic.test_business_classification",
          "callee": "classify_customer",
          "line": 140,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessLogic.test_business_classification",
          "callee": "classify_customer",
          "line": 141,
          "type": "direct"
        },
        {
          "caller": "TestGermanBusinessLogic.test_file_naming_german_support",
          "callee": "split",
          "line": 154,
          "type": "attribute"
        },
        {
          "caller": "TestConfigurationValidation.test_printer_config_updates",
          "callee": "PrinterConfig",
          "line": 168,
          "type": "direct"
        },
        {
          "caller": "TestConfigurationValidation.test_job_creation_and_updates",
          "callee": "JobCreate",
          "line": 182,
          "type": "direct"
        },
        {
          "caller": "TestConfigurationValidation.test_job_creation_and_updates",
          "callee": "JobUpdate",
          "line": 192,
          "type": "direct"
        }
      ],
      "error": null
    },
    {
      "filepath": "verify_phase2_integration.py",
      "functions": [
        {
          "name": "check_file_exists",
          "full_name": "check_file_exists",
          "class": null,
          "signature": "(filepath, description)",
          "return_type": "",
          "decorators": [],
          "docstring": "Check if a file exists and report.",
          "line_start": 11,
          "line_end": 19,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "check_file_contains",
          "full_name": "check_file_contains",
          "class": null,
          "signature": "(filepath, search_string, description)",
          "return_type": "",
          "decorators": [],
          "docstring": "Check if a file contains a specific string.",
          "line_start": 21,
          "line_end": 33,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        },
        {
          "name": "main",
          "full_name": "main",
          "class": null,
          "signature": "()",
          "return_type": "",
          "decorators": [],
          "docstring": "Run integration verification checks.",
          "line_start": 35,
          "line_end": 153,
          "access_level": "public",
          "is_method": false,
          "is_async": false,
          "is_property": false,
          "is_staticmethod": false,
          "is_classmethod": false
        }
      ],
      "imports": [
        {
          "type": "import",
          "module": "os",
          "alias": null,
          "line": 7
        },
        {
          "type": "import",
          "module": "sys",
          "alias": null,
          "line": 8
        },
        {
          "type": "from_import",
          "module": "pathlib",
          "name": "Path",
          "alias": null,
          "line": 9
        },
        {
          "type": "import",
          "module": "subprocess",
          "alias": null,
          "line": 123
        }
      ],
      "function_calls": [
        {
          "caller": "check_file_exists",
          "callee": "exists",
          "line": 13,
          "type": "attribute"
        },
        {
          "caller": "check_file_exists",
          "callee": "stat",
          "line": 14,
          "type": "attribute"
        },
        {
          "caller": "check_file_exists",
          "callee": "print",
          "line": 15,
          "type": "direct"
        },
        {
          "caller": "check_file_exists",
          "callee": "print",
          "line": 18,
          "type": "direct"
        },
        {
          "caller": "check_file_contains",
          "callee": "read_text",
          "line": 24,
          "type": "attribute"
        },
        {
          "caller": "check_file_contains",
          "callee": "print",
          "line": 26,
          "type": "direct"
        },
        {
          "caller": "check_file_contains",
          "callee": "print",
          "line": 29,
          "type": "direct"
        },
        {
          "caller": "check_file_contains",
          "callee": "print",
          "line": 32,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 37,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 38,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 39,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 40,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "Path",
          "line": 42,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 46,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 47,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "check_file_exists",
          "line": 56,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 59,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 62,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 63,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "check_file_contains",
          "line": 72,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 75,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 78,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 79,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "check_file_contains",
          "line": 89,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 92,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 95,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 96,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "check_file_contains",
          "line": 99,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 104,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 107,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 108,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "check_file_contains",
          "line": 111,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 116,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 119,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 120,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "run",
          "line": 124,
          "type": "attribute"
        },
        {
          "caller": "main",
          "callee": "str",
          "line": 125,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 130,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 132,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 135,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 137,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 140,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 142,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 143,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 144,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 145,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 146,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 147,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 148,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 149,
          "type": "direct"
        },
        {
          "caller": "main",
          "callee": "print",
          "line": 152,
          "type": "direct"
        }
      ],
      "error": null
    }
  ],
  "dependency_graph": {
    "demo_gcode_optimization.py:demo_optimization": [
      {
        "callee": "print",
        "line": 76,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 77,
        "type": "direct"
      },
      {
        "callee": "create_sample_gcode",
        "line": 80,
        "type": "direct"
      },
      {
        "callee": "split",
        "line": 81,
        "type": "attribute"
      },
      {
        "callee": "strip",
        "line": 81,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 83,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 83,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 84,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 87,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 88,
        "type": "direct"
      },
      {
        "callee": "GcodeAnalyzer",
        "line": 90,
        "type": "direct"
      },
      {
        "callee": "analyze_gcode_file_lines",
        "line": 93,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 95,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 96,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 97,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 98,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 99,
        "type": "direct"
      },
      {
        "callee": "get_optimized_gcode_lines",
        "line": 102,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 103,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 103,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 103,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 103,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 103,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 107,
        "type": "direct"
      },
      {
        "callee": "enumerate",
        "line": 108,
        "type": "direct"
      },
      {
        "callee": "strip",
        "line": 109,
        "type": "attribute"
      },
      {
        "callee": "startswith",
        "line": 109,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 110,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 112,
        "type": "direct"
      },
      {
        "callee": "enumerate",
        "line": 113,
        "type": "direct"
      },
      {
        "callee": "strip",
        "line": 114,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 115,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 117,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 120,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 121,
        "type": "direct"
      },
      {
        "callee": "GcodeAnalyzer",
        "line": 123,
        "type": "direct"
      },
      {
        "callee": "get_optimized_gcode_lines",
        "line": 124,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 126,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 126,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 127,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 129,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 132,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 133,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 135,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 135,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 135,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 136,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 137,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 138,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 140,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 143,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 144,
        "type": "direct"
      },
      {
        "callee": "NamedTemporaryFile",
        "line": 146,
        "type": "attribute"
      },
      {
        "callee": "write",
        "line": 147,
        "type": "attribute"
      },
      {
        "callee": "join",
        "line": 147,
        "type": "attribute"
      },
      {
        "callee": "NamedTemporaryFile",
        "line": 150,
        "type": "attribute"
      },
      {
        "callee": "write",
        "line": 151,
        "type": "attribute"
      },
      {
        "callee": "join",
        "line": 151,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 154,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 155,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 156,
        "type": "direct"
      }
    ],
    "demo_gcode_optimization.py:analyze_gcode_file_lines": [
      {
        "callee": "find_print_start_line",
        "line": 163,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 166,
        "type": "direct"
      }
    ],
    "scripts\\analyze_codebase.py:FunctionAnalyzer.visit_Import": [
      {
        "callee": "append",
        "line": 34,
        "type": "attribute"
      },
      {
        "callee": "generic_visit",
        "line": 40,
        "type": "attribute"
      }
    ],
    "scripts\\analyze_codebase.py:FunctionAnalyzer.visit_ImportFrom": [
      {
        "callee": "append",
        "line": 46,
        "type": "attribute"
      },
      {
        "callee": "generic_visit",
        "line": 53,
        "type": "attribute"
      }
    ],
    "scripts\\analyze_codebase.py:FunctionAnalyzer.visit_ClassDef": [
      {
        "callee": "generic_visit",
        "line": 59,
        "type": "attribute"
      }
    ],
    "scripts\\analyze_codebase.py:FunctionAnalyzer.visit_FunctionDef": [
      {
        "callee": "unparse",
        "line": 69,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 70,
        "type": "attribute"
      },
      {
        "callee": "unparse",
        "line": 73,
        "type": "attribute"
      },
      {
        "callee": "get_docstring",
        "line": 76,
        "type": "attribute"
      },
      {
        "callee": "unparse",
        "line": 81,
        "type": "attribute"
      },
      {
        "callee": "startswith",
        "line": 84,
        "type": "attribute"
      },
      {
        "callee": "startswith",
        "line": 84,
        "type": "attribute"
      },
      {
        "callee": "startswith",
        "line": 85,
        "type": "attribute"
      },
      {
        "callee": "endswith",
        "line": 85,
        "type": "attribute"
      },
      {
        "callee": "join",
        "line": 95,
        "type": "attribute"
      },
      {
        "callee": "isinstance",
        "line": 103,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 109,
        "type": "attribute"
      },
      {
        "callee": "generic_visit",
        "line": 114,
        "type": "attribute"
      }
    ],
    "scripts\\analyze_codebase.py:FunctionAnalyzer.visit_AsyncFunctionDef": [
      {
        "callee": "visit_FunctionDef",
        "line": 119,
        "type": "attribute"
      }
    ],
    "scripts\\analyze_codebase.py:FunctionAnalyzer.visit_Call": [
      {
        "callee": "isinstance",
        "line": 125,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 127,
        "type": "attribute"
      },
      {
        "callee": "isinstance",
        "line": 133,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 136,
        "type": "attribute"
      },
      {
        "callee": "generic_visit",
        "line": 142,
        "type": "attribute"
      }
    ],
    "scripts\\analyze_codebase.py:analyze_file": [
      {
        "callee": "open",
        "line": 148,
        "type": "direct"
      },
      {
        "callee": "read",
        "line": 149,
        "type": "attribute"
      },
      {
        "callee": "parse",
        "line": 151,
        "type": "attribute"
      },
      {
        "callee": "FunctionAnalyzer",
        "line": 152,
        "type": "direct"
      },
      {
        "callee": "visit",
        "line": 153,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 168,
        "type": "direct"
      }
    ],
    "scripts\\analyze_codebase.py:find_python_files": [
      {
        "callee": "Path",
        "line": 175,
        "type": "direct"
      },
      {
        "callee": "rglob",
        "line": 177,
        "type": "attribute"
      },
      {
        "callee": "any",
        "line": 179,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 181,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 181,
        "type": "direct"
      },
      {
        "callee": "sorted",
        "line": 183,
        "type": "direct"
      }
    ],
    "scripts\\analyze_codebase.py:build_dependency_graph": [
      {
        "callee": "defaultdict",
        "line": 188,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 194,
        "type": "attribute"
      },
      {
        "callee": "dict",
        "line": 200,
        "type": "direct"
      }
    ],
    "scripts\\analyze_codebase.py:find_entry_points": [
      {
        "callee": "open",
        "line": 212,
        "type": "direct"
      },
      {
        "callee": "read",
        "line": 213,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 218,
        "type": "attribute"
      },
      {
        "callee": "join",
        "line": 226,
        "type": "attribute"
      },
      {
        "callee": "any",
        "line": 227,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 228,
        "type": "attribute"
      },
      {
        "callee": "join",
        "line": 237,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 237,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 238,
        "type": "attribute"
      }
    ],
    "scripts\\analyze_codebase.py:generate_function_inventory_report": [
      {
        "callee": "open",
        "line": 249,
        "type": "direct"
      },
      {
        "callee": "write",
        "line": 250,
        "type": "attribute"
      },
      {
        "callee": "write",
        "line": 251,
        "type": "attribute"
      },
      {
        "callee": "stat",
        "line": 251,
        "type": "attribute"
      },
      {
        "callee": "Path",
        "line": 251,
        "type": "direct"
      },
      {
        "callee": "sum",
        "line": 254,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 254,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 255,
        "type": "direct"
      },
      {
        "callee": "write",
        "line": 256,
        "type": "attribute"
      },
      {
        "callee": "write",
        "line": 257,
        "type": "attribute"
      },
      {
        "callee": "write",
        "line": 258,
        "type": "attribute"
      },
      {
        "callee": "write",
        "line": 261,
        "type": "attribute"
      },
      {
        "callee": "write",
        "line": 264,
        "type": "attribute"
      },
      {
        "callee": "write",
        "line": 265,
        "type": "attribute"
      },
      {
        "callee": "write",
        "line": 271,
        "type": "attribute"
      },
      {
        "callee": "write",
        "line": 272,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 272,
        "type": "direct"
      },
      {
        "callee": "write",
        "line": 274,
        "type": "attribute"
      },
      {
        "callee": "write",
        "line": 275,
        "type": "attribute"
      },
      {
        "callee": "join",
        "line": 279,
        "type": "attribute"
      },
      {
        "callee": "write",
        "line": 280,
        "type": "attribute"
      },
      {
        "callee": "write",
        "line": 283,
        "type": "attribute"
      },
      {
        "callee": "write",
        "line": 286,
        "type": "attribute"
      },
      {
        "callee": "sum",
        "line": 288,
        "type": "direct"
      },
      {
        "callee": "sum",
        "line": 289,
        "type": "direct"
      },
      {
        "callee": "sum",
        "line": 290,
        "type": "direct"
      },
      {
        "callee": "write",
        "line": 292,
        "type": "attribute"
      },
      {
        "callee": "write",
        "line": 293,
        "type": "attribute"
      },
      {
        "callee": "write",
        "line": 294,
        "type": "attribute"
      },
      {
        "callee": "sum",
        "line": 296,
        "type": "direct"
      },
      {
        "callee": "sum",
        "line": 297,
        "type": "direct"
      },
      {
        "callee": "sum",
        "line": 298,
        "type": "direct"
      },
      {
        "callee": "write",
        "line": 300,
        "type": "attribute"
      },
      {
        "callee": "write",
        "line": 301,
        "type": "attribute"
      },
      {
        "callee": "write",
        "line": 302,
        "type": "attribute"
      }
    ],
    "scripts\\analyze_codebase.py:generate_dependency_report": [
      {
        "callee": "open",
        "line": 307,
        "type": "direct"
      },
      {
        "callee": "write",
        "line": 308,
        "type": "attribute"
      },
      {
        "callee": "write",
        "line": 310,
        "type": "attribute"
      },
      {
        "callee": "write",
        "line": 311,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 311,
        "type": "direct"
      },
      {
        "callee": "write",
        "line": 312,
        "type": "attribute"
      },
      {
        "callee": "sum",
        "line": 312,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 312,
        "type": "direct"
      },
      {
        "callee": "values",
        "line": 312,
        "type": "attribute"
      },
      {
        "callee": "write",
        "line": 314,
        "type": "attribute"
      },
      {
        "callee": "sorted",
        "line": 315,
        "type": "direct"
      },
      {
        "callee": "items",
        "line": 315,
        "type": "attribute"
      },
      {
        "callee": "write",
        "line": 316,
        "type": "attribute"
      },
      {
        "callee": "write",
        "line": 317,
        "type": "attribute"
      },
      {
        "callee": "write",
        "line": 319,
        "type": "attribute"
      },
      {
        "callee": "write",
        "line": 320,
        "type": "attribute"
      }
    ],
    "scripts\\analyze_codebase.py:generate_entry_points_report": [
      {
        "callee": "open",
        "line": 325,
        "type": "direct"
      },
      {
        "callee": "write",
        "line": 326,
        "type": "attribute"
      },
      {
        "callee": "write",
        "line": 328,
        "type": "attribute"
      },
      {
        "callee": "write",
        "line": 329,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 329,
        "type": "direct"
      },
      {
        "callee": "defaultdict",
        "line": 332,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 334,
        "type": "attribute"
      },
      {
        "callee": "sorted",
        "line": 336,
        "type": "direct"
      },
      {
        "callee": "items",
        "line": 336,
        "type": "attribute"
      },
      {
        "callee": "write",
        "line": 337,
        "type": "attribute"
      },
      {
        "callee": "upper",
        "line": 337,
        "type": "attribute"
      },
      {
        "callee": "write",
        "line": 338,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 338,
        "type": "direct"
      },
      {
        "callee": "write",
        "line": 341,
        "type": "attribute"
      },
      {
        "callee": "write",
        "line": 343,
        "type": "attribute"
      },
      {
        "callee": "write",
        "line": 345,
        "type": "attribute"
      },
      {
        "callee": "join",
        "line": 345,
        "type": "attribute"
      },
      {
        "callee": "write",
        "line": 347,
        "type": "attribute"
      },
      {
        "callee": "write",
        "line": 348,
        "type": "attribute"
      }
    ],
    "scripts\\analyze_codebase.py:main": [
      {
        "callee": "print",
        "line": 353,
        "type": "direct"
      },
      {
        "callee": "find_python_files",
        "line": 357,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 358,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 358,
        "type": "direct"
      },
      {
        "callee": "enumerate",
        "line": 362,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 363,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 363,
        "type": "direct"
      },
      {
        "callee": "analyze_file",
        "line": 364,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 365,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 368,
        "type": "direct"
      },
      {
        "callee": "build_dependency_graph",
        "line": 369,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 372,
        "type": "direct"
      },
      {
        "callee": "find_entry_points",
        "line": 373,
        "type": "direct"
      },
      {
        "callee": "Path",
        "line": 376,
        "type": "direct"
      },
      {
        "callee": "mkdir",
        "line": 377,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 379,
        "type": "direct"
      },
      {
        "callee": "open",
        "line": 380,
        "type": "direct"
      },
      {
        "callee": "dump",
        "line": 381,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 388,
        "type": "direct"
      },
      {
        "callee": "generate_function_inventory_report",
        "line": 389,
        "type": "direct"
      },
      {
        "callee": "generate_dependency_report",
        "line": 390,
        "type": "direct"
      },
      {
        "callee": "generate_entry_points_report",
        "line": 391,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 393,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 394,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 395,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 396,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 397,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 398,
        "type": "direct"
      }
    ],
    "scripts\\bambu_credentials.py:BambuCredentials.get_printer_credentials": [
      {
        "callee": "getenv",
        "line": 35,
        "type": "attribute"
      },
      {
        "callee": "getenv",
        "line": 36,
        "type": "attribute"
      },
      {
        "callee": "_validate_access_code",
        "line": 39,
        "type": "attribute"
      },
      {
        "callee": "ValueError",
        "line": 42,
        "type": "direct"
      },
      {
        "callee": "_is_development_environment",
        "line": 50,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 51,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 52,
        "type": "direct"
      },
      {
        "callee": "getpass",
        "line": 54,
        "type": "attribute"
      },
      {
        "callee": "_validate_access_code",
        "line": 55,
        "type": "attribute"
      },
      {
        "callee": "ValueError",
        "line": 59,
        "type": "direct"
      },
      {
        "callee": "ValueError",
        "line": 61,
        "type": "direct"
      }
    ],
    "scripts\\bambu_credentials.py:BambuCredentials._validate_access_code": [
      {
        "callee": "isinstance",
        "line": 69,
        "type": "direct"
      },
      {
        "callee": "isdigit",
        "line": 70,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 71,
        "type": "direct"
      }
    ],
    "scripts\\bambu_credentials.py:BambuCredentials._is_development_environment": [
      {
        "callee": "lower",
        "line": 77,
        "type": "attribute"
      },
      {
        "callee": "getenv",
        "line": 77,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 78,
        "type": "attribute"
      },
      {
        "callee": "getenv",
        "line": 78,
        "type": "attribute"
      },
      {
        "callee": "isatty",
        "line": 79,
        "type": "attribute"
      }
    ],
    "scripts\\bambu_credentials.py:get_bambu_credentials": [
      {
        "callee": "get_printer_credentials",
        "line": 100,
        "type": "attribute"
      }
    ],
    "scripts\\bambu_credentials.py:setup_example_env": [
      {
        "callee": "print",
        "line": 105,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 106,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 107,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 108,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 109,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 110,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 111,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 112,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 113,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 114,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 115,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 116,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 117,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 118,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 119,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 120,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 121,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 122,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 123,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 124,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 125,
        "type": "direct"
      }
    ],
    "scripts\\debug_bambu_ftp.py:test_direct_ftp": [
      {
        "callee": "print",
        "line": 19,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 20,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 21,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 22,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 23,
        "type": "direct"
      },
      {
        "callee": "get_bambu_credentials",
        "line": 26,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 27,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 28,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 28,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 30,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 32,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 36,
        "type": "direct"
      },
      {
        "callee": "socket",
        "line": 37,
        "type": "attribute"
      },
      {
        "callee": "settimeout",
        "line": 38,
        "type": "attribute"
      },
      {
        "callee": "connect_ex",
        "line": 39,
        "type": "attribute"
      },
      {
        "callee": "close",
        "line": 40,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 43,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 45,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 49,
        "type": "direct"
      },
      {
        "callee": "create_default_context",
        "line": 50,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 53,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 56,
        "type": "direct"
      },
      {
        "callee": "FTP_TLS",
        "line": 57,
        "type": "attribute"
      },
      {
        "callee": "set_debuglevel",
        "line": 58,
        "type": "attribute"
      },
      {
        "callee": "set_pasv",
        "line": 59,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 60,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 63,
        "type": "direct"
      },
      {
        "callee": "connect",
        "line": 64,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 65,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 68,
        "type": "direct"
      },
      {
        "callee": "login",
        "line": 69,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 70,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 73,
        "type": "direct"
      },
      {
        "callee": "prot_p",
        "line": 74,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 75,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 78,
        "type": "direct"
      },
      {
        "callee": "cwd",
        "line": 79,
        "type": "attribute"
      },
      {
        "callee": "pwd",
        "line": 80,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 81,
        "type": "direct"
      },
      {
        "callee": "retrlines",
        "line": 84,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 85,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 85,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 87,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 90,
        "type": "direct"
      },
      {
        "callee": "quit",
        "line": 91,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 92,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 97,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 100,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 103,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 106,
        "type": "direct"
      }
    ],
    "scripts\\debug_bambu_ftp_v2.py:test_alternative_ftp": [
      {
        "callee": "print",
        "line": 19,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 20,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 21,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 22,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 23,
        "type": "direct"
      },
      {
        "callee": "get_bambu_credentials",
        "line": 26,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 27,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 29,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 34,
        "type": "direct"
      },
      {
        "callee": "create_default_context",
        "line": 36,
        "type": "attribute"
      },
      {
        "callee": "FTP_TLS",
        "line": 40,
        "type": "attribute"
      },
      {
        "callee": "set_pasv",
        "line": 41,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 42,
        "type": "direct"
      },
      {
        "callee": "connect",
        "line": 43,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 44,
        "type": "direct"
      },
      {
        "callee": "login",
        "line": 45,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 46,
        "type": "direct"
      },
      {
        "callee": "prot_p",
        "line": 47,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 48,
        "type": "direct"
      },
      {
        "callee": "cwd",
        "line": 51,
        "type": "attribute"
      },
      {
        "callee": "retrlines",
        "line": 53,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 54,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 54,
        "type": "direct"
      },
      {
        "callee": "quit",
        "line": 56,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 60,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 63,
        "type": "direct"
      },
      {
        "callee": "create_default_context",
        "line": 65,
        "type": "attribute"
      },
      {
        "callee": "FTP_TLS",
        "line": 69,
        "type": "attribute"
      },
      {
        "callee": "set_pasv",
        "line": 70,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 71,
        "type": "direct"
      },
      {
        "callee": "connect",
        "line": 72,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 73,
        "type": "direct"
      },
      {
        "callee": "login",
        "line": 74,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 75,
        "type": "direct"
      },
      {
        "callee": "prot_p",
        "line": 76,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 77,
        "type": "direct"
      },
      {
        "callee": "cwd",
        "line": 80,
        "type": "attribute"
      },
      {
        "callee": "retrlines",
        "line": 82,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 83,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 83,
        "type": "direct"
      },
      {
        "callee": "quit",
        "line": 85,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 89,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 92,
        "type": "direct"
      },
      {
        "callee": "socket",
        "line": 95,
        "type": "attribute"
      },
      {
        "callee": "settimeout",
        "line": 96,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 98,
        "type": "direct"
      },
      {
        "callee": "connect",
        "line": 99,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 101,
        "type": "direct"
      },
      {
        "callee": "create_default_context",
        "line": 102,
        "type": "attribute"
      },
      {
        "callee": "wrap_socket",
        "line": 106,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 108,
        "type": "direct"
      },
      {
        "callee": "FTP",
        "line": 109,
        "type": "attribute"
      },
      {
        "callee": "makefile",
        "line": 111,
        "type": "attribute"
      },
      {
        "callee": "getresp",
        "line": 114,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 115,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 117,
        "type": "direct"
      },
      {
        "callee": "login",
        "line": 118,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 119,
        "type": "direct"
      },
      {
        "callee": "cwd",
        "line": 122,
        "type": "attribute"
      },
      {
        "callee": "retrlines",
        "line": 124,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 125,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 125,
        "type": "direct"
      },
      {
        "callee": "quit",
        "line": 127,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 131,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 136,
        "type": "direct"
      }
    ],
    "scripts\\download_bambu_files.py:BambuDownloadManager.__init__": [
      {
        "callee": "Path",
        "line": 61,
        "type": "direct"
      },
      {
        "callee": "mkdir",
        "line": 62,
        "type": "attribute"
      }
    ],
    "scripts\\download_bambu_files.py:BambuDownloadManager.download_from_bambulab_printers": [
      {
        "callee": "now",
        "line": 90,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 92,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 93,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 94,
        "type": "direct"
      },
      {
        "callee": "absolute",
        "line": 94,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 95,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 95,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 96,
        "type": "direct"
      },
      {
        "callee": "strftime",
        "line": 96,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 97,
        "type": "direct"
      },
      {
        "callee": "enumerate",
        "line": 101,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 102,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 103,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 103,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 104,
        "type": "direct"
      },
      {
        "callee": "_process_single_printer",
        "line": 107,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 112,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 115,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 121,
        "type": "direct"
      },
      {
        "callee": "now",
        "line": 123,
        "type": "attribute"
      },
      {
        "callee": "_generate_summary",
        "line": 127,
        "type": "attribute"
      },
      {
        "callee": "_print_summary",
        "line": 128,
        "type": "attribute"
      }
    ],
    "scripts\\download_bambu_files.py:BambuDownloadManager._process_single_printer": [
      {
        "callee": "get",
        "line": 136,
        "type": "attribute"
      },
      {
        "callee": "BambuFTPService",
        "line": 139,
        "type": "direct"
      },
      {
        "callee": "test_connection",
        "line": 142,
        "type": "attribute"
      },
      {
        "callee": "ConnectionError",
        "line": 144,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 146,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 149,
        "type": "direct"
      },
      {
        "callee": "list_files",
        "line": 150,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 155,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 156,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 156,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 156,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 171,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 171,
        "type": "direct"
      },
      {
        "callee": "lower",
        "line": 175,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 175,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 176,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 176,
        "type": "direct"
      },
      {
        "callee": "_interactive_file_selection",
        "line": 180,
        "type": "attribute"
      },
      {
        "callee": "_sanitize_name",
        "line": 191,
        "type": "attribute"
      },
      {
        "callee": "strftime",
        "line": 192,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 192,
        "type": "attribute"
      },
      {
        "callee": "mkdir",
        "line": 193,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 200,
        "type": "direct"
      },
      {
        "callee": "download_file",
        "line": 205,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 205,
        "type": "direct"
      },
      {
        "callee": "exists",
        "line": 207,
        "type": "attribute"
      },
      {
        "callee": "stat",
        "line": 208,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 213,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 215,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 219,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 226,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 227,
        "type": "direct"
      }
    ],
    "scripts\\download_bambu_files.py:BambuDownloadManager._interactive_file_selection": [
      {
        "callee": "print",
        "line": 235,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 236,
        "type": "direct"
      },
      {
        "callee": "enumerate",
        "line": 237,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 239,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 241,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 242,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 243,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 244,
        "type": "direct"
      },
      {
        "callee": "lower",
        "line": 247,
        "type": "attribute"
      },
      {
        "callee": "strip",
        "line": 247,
        "type": "attribute"
      },
      {
        "callee": "input",
        "line": 247,
        "type": "direct"
      },
      {
        "callee": "split",
        "line": 257,
        "type": "attribute"
      },
      {
        "callee": "int",
        "line": 259,
        "type": "direct"
      },
      {
        "callee": "strip",
        "line": 259,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 260,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 261,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 263,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 265,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 268,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 268,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 272,
        "type": "direct"
      }
    ],
    "scripts\\download_bambu_files.py:BambuDownloadManager._sanitize_name": [
      {
        "callee": "sub",
        "line": 279,
        "type": "attribute"
      },
      {
        "callee": "sub",
        "line": 281,
        "type": "attribute"
      },
      {
        "callee": "strip",
        "line": 283,
        "type": "attribute"
      }
    ],
    "scripts\\download_bambu_files.py:BambuDownloadManager._generate_summary": [
      {
        "callee": "total_seconds",
        "line": 288,
        "type": "attribute"
      },
      {
        "callee": "split",
        "line": 289,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 289,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 306,
        "type": "direct"
      },
      {
        "callee": "absolute",
        "line": 306,
        "type": "attribute"
      }
    ],
    "scripts\\download_bambu_files.py:BambuDownloadManager._print_summary": [
      {
        "callee": "print",
        "line": 311,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 312,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 313,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 314,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 315,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 316,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 317,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 319,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 320,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 321,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 322,
        "type": "direct"
      }
    ],
    "scripts\\download_bambu_files.py:main": [
      {
        "callee": "ArgumentParser",
        "line": 327,
        "type": "attribute"
      },
      {
        "callee": "add_argument",
        "line": 328,
        "type": "attribute"
      },
      {
        "callee": "add_argument",
        "line": 329,
        "type": "attribute"
      },
      {
        "callee": "add_argument",
        "line": 330,
        "type": "attribute"
      },
      {
        "callee": "add_argument",
        "line": 331,
        "type": "attribute"
      },
      {
        "callee": "add_argument",
        "line": 332,
        "type": "attribute"
      },
      {
        "callee": "add_argument",
        "line": 333,
        "type": "attribute"
      },
      {
        "callee": "add_argument",
        "line": 334,
        "type": "attribute"
      },
      {
        "callee": "add_argument",
        "line": 335,
        "type": "attribute"
      },
      {
        "callee": "parse_args",
        "line": 337,
        "type": "attribute"
      },
      {
        "callee": "open",
        "line": 348,
        "type": "direct"
      },
      {
        "callee": "load",
        "line": 349,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 350,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 352,
        "type": "direct"
      },
      {
        "callee": "getenv",
        "line": 365,
        "type": "attribute"
      },
      {
        "callee": "getenv",
        "line": 366,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 375,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 376,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 377,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 378,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 379,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 383,
        "type": "direct"
      },
      {
        "callee": "BambuDownloadManager",
        "line": 388,
        "type": "direct"
      },
      {
        "callee": "download_from_bambulab_printers",
        "line": 399,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 407,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 410,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 413,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 417,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 420,
        "type": "direct"
      }
    ],
    "scripts\\download_target_file.py:download_target_file": [
      {
        "callee": "print",
        "line": 29,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 30,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 31,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 32,
        "type": "direct"
      },
      {
        "callee": "get_bambu_credentials",
        "line": 35,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 36,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 38,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 43,
        "type": "direct"
      },
      {
        "callee": "BambuClient",
        "line": 44,
        "type": "direct"
      },
      {
        "callee": "connect",
        "line": 49,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 50,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 53,
        "type": "direct"
      },
      {
        "callee": "list_cache_dir",
        "line": 54,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 55,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 55,
        "type": "direct"
      },
      {
        "callee": "isinstance",
        "line": 62,
        "type": "direct"
      },
      {
        "callee": "split",
        "line": 64,
        "type": "attribute"
      },
      {
        "callee": "strip",
        "line": 64,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 65,
        "type": "direct"
      },
      {
        "callee": "join",
        "line": 66,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 71,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 71,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 77,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 78,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 81,
        "type": "direct"
      },
      {
        "callee": "download_file",
        "line": 83,
        "type": "attribute"
      },
      {
        "callee": "getvalue",
        "line": 85,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 86,
        "type": "direct"
      },
      {
        "callee": "Path",
        "line": 88,
        "type": "direct"
      },
      {
        "callee": "mkdir",
        "line": 89,
        "type": "attribute"
      },
      {
        "callee": "open",
        "line": 92,
        "type": "direct"
      },
      {
        "callee": "write",
        "line": 93,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 95,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 96,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 96,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 97,
        "type": "direct"
      },
      {
        "callee": "absolute",
        "line": 97,
        "type": "attribute"
      },
      {
        "callee": "disconnect",
        "line": 99,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 102,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 104,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 106,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 109,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 110,
        "type": "direct"
      },
      {
        "callee": "isinstance",
        "line": 114,
        "type": "direct"
      },
      {
        "callee": "split",
        "line": 115,
        "type": "attribute"
      },
      {
        "callee": "strip",
        "line": 115,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 116,
        "type": "direct"
      },
      {
        "callee": "join",
        "line": 117,
        "type": "attribute"
      },
      {
        "callee": "any",
        "line": 121,
        "type": "direct"
      },
      {
        "callee": "lower",
        "line": 121,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 122,
        "type": "attribute"
      },
      {
        "callee": "enumerate",
        "line": 125,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 126,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 127,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 129,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 130,
        "type": "direct"
      },
      {
        "callee": "enumerate",
        "line": 131,
        "type": "direct"
      },
      {
        "callee": "split",
        "line": 132,
        "type": "attribute"
      },
      {
        "callee": "strip",
        "line": 132,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 133,
        "type": "direct"
      },
      {
        "callee": "join",
        "line": 134,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 137,
        "type": "direct"
      },
      {
        "callee": "disconnect",
        "line": 139,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 143,
        "type": "direct"
      }
    ],
    "scripts\\error_analysis_agent.py:ErrorAnalysisAgent.__init__": [
      {
        "callee": "Path",
        "line": 32,
        "type": "direct"
      },
      {
        "callee": "defaultdict",
        "line": 35,
        "type": "direct"
      },
      {
        "callee": "defaultdict",
        "line": 36,
        "type": "direct"
      },
      {
        "callee": "defaultdict",
        "line": 37,
        "type": "direct"
      }
    ],
    "scripts\\error_analysis_agent.py:ErrorAnalysisAgent.load_log": [
      {
        "callee": "exists",
        "line": 52,
        "type": "attribute"
      },
      {
        "callee": "FileNotFoundError",
        "line": 53,
        "type": "direct"
      },
      {
        "callee": "open",
        "line": 55,
        "type": "direct"
      },
      {
        "callee": "readlines",
        "line": 56,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 58,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 58,
        "type": "direct"
      }
    ],
    "scripts\\error_analysis_agent.py:ErrorAnalysisAgent.parse_errors": [
      {
        "callee": "enumerate",
        "line": 65,
        "type": "direct"
      },
      {
        "callee": "strip",
        "line": 69,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 71,
        "type": "attribute"
      },
      {
        "callee": "strip",
        "line": 71,
        "type": "attribute"
      },
      {
        "callee": "strip",
        "line": 73,
        "type": "attribute"
      },
      {
        "callee": "startswith",
        "line": 73,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 74,
        "type": "attribute"
      },
      {
        "callee": "search",
        "line": 79,
        "type": "attribute"
      },
      {
        "callee": "group",
        "line": 81,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 82,
        "type": "attribute"
      },
      {
        "callee": "search",
        "line": 85,
        "type": "attribute"
      },
      {
        "callee": "group",
        "line": 87,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 88,
        "type": "attribute"
      },
      {
        "callee": "search",
        "line": 91,
        "type": "attribute"
      },
      {
        "callee": "group",
        "line": 93,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 94,
        "type": "attribute"
      },
      {
        "callee": "search",
        "line": 97,
        "type": "attribute"
      },
      {
        "callee": "group",
        "line": 99,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 100,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 104,
        "type": "attribute"
      },
      {
        "callee": "strip",
        "line": 104,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 106,
        "type": "direct"
      }
    ],
    "scripts\\error_analysis_agent.py:ErrorAnalysisAgent.analyze_root_cause": [
      {
        "callee": "sum",
        "line": 110,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 110,
        "type": "direct"
      },
      {
        "callee": "values",
        "line": 110,
        "type": "attribute"
      },
      {
        "callee": "sum",
        "line": 111,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 111,
        "type": "direct"
      },
      {
        "callee": "values",
        "line": 111,
        "type": "attribute"
      },
      {
        "callee": "sum",
        "line": 112,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 112,
        "type": "direct"
      },
      {
        "callee": "values",
        "line": 112,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 125,
        "type": "attribute"
      },
      {
        "callee": "extend",
        "line": 131,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 138,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 145,
        "type": "attribute"
      },
      {
        "callee": "items",
        "line": 157,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 158,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 161,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 164,
        "type": "attribute"
      },
      {
        "callee": "items",
        "line": 167,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 168,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 171,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 174,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 178,
        "type": "attribute"
      }
    ],
    "scripts\\error_analysis_agent.py:ErrorAnalysisAgent.generate_report": [
      {
        "callee": "analyze_root_cause",
        "line": 184,
        "type": "attribute"
      },
      {
        "callee": "sum",
        "line": 186,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 186,
        "type": "direct"
      },
      {
        "callee": "values",
        "line": 186,
        "type": "attribute"
      },
      {
        "callee": "sum",
        "line": 187,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 187,
        "type": "direct"
      },
      {
        "callee": "values",
        "line": 187,
        "type": "attribute"
      },
      {
        "callee": "sum",
        "line": 188,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 188,
        "type": "direct"
      },
      {
        "callee": "values",
        "line": 188,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 189,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 190,
        "type": "direct"
      },
      {
        "callee": "_print_console_report",
        "line": 193,
        "type": "attribute"
      },
      {
        "callee": "_generate_json_report",
        "line": 196,
        "type": "attribute"
      },
      {
        "callee": "_generate_markdown_report",
        "line": 199,
        "type": "attribute"
      }
    ],
    "scripts\\error_analysis_agent.py:ErrorAnalysisAgent._print_console_report": [
      {
        "callee": "print",
        "line": 205,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 206,
        "type": "direct"
      },
      {
        "callee": "center",
        "line": 206,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 207,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 210,
        "type": "direct"
      },
      {
        "callee": "strftime",
        "line": 210,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 210,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 211,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 219,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 219,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 223,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 224,
        "type": "direct"
      },
      {
        "callee": "items",
        "line": 225,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 226,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 227,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 227,
        "type": "direct"
      },
      {
        "callee": "join",
        "line": 227,
        "type": "attribute"
      },
      {
        "callee": "map",
        "line": 227,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 228,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 232,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 233,
        "type": "direct"
      },
      {
        "callee": "items",
        "line": 234,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 235,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 236,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 236,
        "type": "direct"
      },
      {
        "callee": "join",
        "line": 236,
        "type": "attribute"
      },
      {
        "callee": "map",
        "line": 236,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 237,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 241,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 242,
        "type": "direct"
      },
      {
        "callee": "items",
        "line": 243,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 244,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 245,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 245,
        "type": "direct"
      },
      {
        "callee": "join",
        "line": 245,
        "type": "attribute"
      },
      {
        "callee": "map",
        "line": 245,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 246,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 250,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 251,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 252,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 252,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 253,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 254,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 255,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 258,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 259,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 260,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 260,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 261,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 262,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 263,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 264,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 265,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 266,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 269,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 270,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 273,
        "type": "direct"
      },
      {
        "callee": "upper",
        "line": 273,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 274,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 275,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 277,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 278,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 279,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 282,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 283,
        "type": "direct"
      },
      {
        "callee": "enumerate",
        "line": 284,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 285,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 286,
        "type": "direct"
      }
    ],
    "scripts\\error_analysis_agent.py:ErrorAnalysisAgent._generate_json_report": [
      {
        "callee": "dumps",
        "line": 293,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 294,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 294,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 295,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 299,
        "type": "direct"
      }
    ],
    "scripts\\error_analysis_agent.py:ErrorAnalysisAgent._generate_markdown_report": [
      {
        "callee": "strftime",
        "line": 321,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 321,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 323,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 327,
        "type": "direct"
      },
      {
        "callee": "title",
        "line": 339,
        "type": "attribute"
      },
      {
        "callee": "replace",
        "line": 339,
        "type": "attribute"
      },
      {
        "callee": "enumerate",
        "line": 347,
        "type": "direct"
      }
    ],
    "scripts\\error_analysis_agent.py:ErrorAnalysisAgent.apply_fixes": [
      {
        "callee": "print",
        "line": 355,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 358,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 359,
        "type": "direct"
      },
      {
        "callee": "enumerate",
        "line": 361,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 362,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 363,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 364,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 367,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 368,
        "type": "direct"
      },
      {
        "callee": "repr",
        "line": 368,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 369,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 370,
        "type": "direct"
      },
      {
        "callee": "repr",
        "line": 370,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 373,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 374,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 375,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 379,
        "type": "direct"
      },
      {
        "callee": "lower",
        "line": 380,
        "type": "attribute"
      },
      {
        "callee": "strip",
        "line": 380,
        "type": "attribute"
      },
      {
        "callee": "input",
        "line": 380,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 383,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 387,
        "type": "direct"
      },
      {
        "callee": "Path",
        "line": 392,
        "type": "direct"
      },
      {
        "callee": "exists",
        "line": 393,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 394,
        "type": "direct"
      },
      {
        "callee": "read_text",
        "line": 398,
        "type": "attribute"
      },
      {
        "callee": "replace",
        "line": 403,
        "type": "attribute"
      },
      {
        "callee": "write_text",
        "line": 404,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 405,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 408,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 411,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 413,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 413,
        "type": "direct"
      }
    ],
    "scripts\\error_analysis_agent.py:ErrorAnalysisAgent.run": [
      {
        "callee": "print",
        "line": 426,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 429,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 431,
        "type": "direct"
      },
      {
        "callee": "load_log",
        "line": 434,
        "type": "attribute"
      },
      {
        "callee": "parse_errors",
        "line": 437,
        "type": "attribute"
      },
      {
        "callee": "analyze_root_cause",
        "line": 440,
        "type": "attribute"
      },
      {
        "callee": "generate_report",
        "line": 443,
        "type": "attribute"
      },
      {
        "callee": "apply_fixes",
        "line": 450,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 452,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 456,
        "type": "direct"
      }
    ],
    "scripts\\error_analysis_agent.py:main": [
      {
        "callee": "ArgumentParser",
        "line": 462,
        "type": "attribute"
      },
      {
        "callee": "add_argument",
        "line": 473,
        "type": "attribute"
      },
      {
        "callee": "add_argument",
        "line": 474,
        "type": "attribute"
      },
      {
        "callee": "add_argument",
        "line": 476,
        "type": "attribute"
      },
      {
        "callee": "parse_args",
        "line": 478,
        "type": "attribute"
      },
      {
        "callee": "ErrorAnalysisAgent",
        "line": 481,
        "type": "direct"
      },
      {
        "callee": "run",
        "line": 482,
        "type": "attribute"
      },
      {
        "callee": "Path",
        "line": 486,
        "type": "direct"
      },
      {
        "callee": "write_text",
        "line": 487,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 488,
        "type": "direct"
      }
    ],
    "scripts\\quick_bambu_check.py:main": [
      {
        "callee": "print",
        "line": 10,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 11,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 16,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 17,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 19,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 20,
        "type": "direct"
      },
      {
        "callee": "Printer",
        "line": 26,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 31,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 33,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 33,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 34,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 39,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 41,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 42,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 44,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 45,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 46,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 47,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 48,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 49,
        "type": "direct"
      }
    ],
    "scripts\\simple_bambu_test.py:test_download_specific_file": [
      {
        "callee": "print",
        "line": 25,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 26,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 27,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 28,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 29,
        "type": "direct"
      },
      {
        "callee": "get_bambu_credentials",
        "line": 32,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 33,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 35,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 40,
        "type": "direct"
      },
      {
        "callee": "BambuFTPService",
        "line": 41,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 44,
        "type": "direct"
      },
      {
        "callee": "test_connection",
        "line": 45,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 47,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 49,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 52,
        "type": "direct"
      },
      {
        "callee": "list_files",
        "line": 53,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 54,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 54,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 57,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 61,
        "type": "direct"
      },
      {
        "callee": "enumerate",
        "line": 62,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 63,
        "type": "direct"
      },
      {
        "callee": "lower",
        "line": 68,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 68,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 73,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 74,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 77,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 78,
        "type": "direct"
      },
      {
        "callee": "NamedTemporaryFile",
        "line": 81,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 84,
        "type": "direct"
      },
      {
        "callee": "download_file",
        "line": 85,
        "type": "attribute"
      },
      {
        "callee": "exists",
        "line": 87,
        "type": "attribute"
      },
      {
        "callee": "Path",
        "line": 87,
        "type": "direct"
      },
      {
        "callee": "stat",
        "line": 88,
        "type": "attribute"
      },
      {
        "callee": "Path",
        "line": 88,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 89,
        "type": "direct"
      },
      {
        "callee": "Path",
        "line": 92,
        "type": "direct"
      },
      {
        "callee": "mkdir",
        "line": 93,
        "type": "attribute"
      },
      {
        "callee": "rename",
        "line": 96,
        "type": "attribute"
      },
      {
        "callee": "Path",
        "line": 96,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 97,
        "type": "direct"
      },
      {
        "callee": "absolute",
        "line": 97,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 101,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 105,
        "type": "direct"
      }
    ],
    "scripts\\simple_bambu_test.py:main": [
      {
        "callee": "test_download_specific_file",
        "line": 110,
        "type": "direct"
      }
    ],
    "scripts\\test_bambu_credentials.py:validate_credentials": [
      {
        "callee": "split",
        "line": 33,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 34,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 35,
        "type": "attribute"
      },
      {
        "callee": "int",
        "line": 39,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 41,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 44,
        "type": "attribute"
      },
      {
        "callee": "isdigit",
        "line": 48,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 48,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 49,
        "type": "attribute"
      },
      {
        "callee": "isalnum",
        "line": 52,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 52,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 53,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 55,
        "type": "direct"
      }
    ],
    "scripts\\test_bambu_credentials.py:test_bambu_connection": [
      {
        "callee": "print",
        "line": 60,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 61,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 62,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 62,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 63,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 64,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 77,
        "type": "direct"
      },
      {
        "callee": "Printer",
        "line": 78,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 85,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 88,
        "type": "direct"
      },
      {
        "callee": "get_current_state",
        "line": 90,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 93,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 94,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 96,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 96,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 97,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 97,
        "type": "direct"
      },
      {
        "callee": "get_bed_temperature",
        "line": 101,
        "type": "attribute"
      },
      {
        "callee": "get_nozzle_temperature",
        "line": 102,
        "type": "attribute"
      },
      {
        "callee": "float",
        "line": 105,
        "type": "direct"
      },
      {
        "callee": "float",
        "line": 106,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 108,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 110,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 110,
        "type": "direct"
      },
      {
        "callee": "hasattr",
        "line": 114,
        "type": "direct"
      },
      {
        "callee": "callable",
        "line": 117,
        "type": "direct"
      },
      {
        "callee": "subtask_name",
        "line": 117,
        "type": "attribute"
      },
      {
        "callee": "get_percentage",
        "line": 121,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 124,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 127,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 129,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 131,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 131,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 134,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 139,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 140,
        "type": "direct"
      },
      {
        "callee": "ClientSession",
        "line": 145,
        "type": "attribute"
      },
      {
        "callee": "ClientTimeout",
        "line": 145,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 146,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 150,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 153,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 155,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 155,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 156,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 156,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 163,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 163,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 164,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 164,
        "type": "direct"
      }
    ],
    "scripts\\test_bambu_credentials.py:print_results": [
      {
        "callee": "print",
        "line": 170,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 171,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 172,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 175,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 177,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 179,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 180,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 181,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 182,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 185,
        "type": "direct"
      },
      {
        "callee": "items",
        "line": 186,
        "type": "attribute"
      },
      {
        "callee": "isinstance",
        "line": 187,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 188,
        "type": "direct"
      },
      {
        "callee": "title",
        "line": 188,
        "type": "attribute"
      },
      {
        "callee": "items",
        "line": 189,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 190,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 192,
        "type": "direct"
      },
      {
        "callee": "title",
        "line": 192,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 195,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 197,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 199,
        "type": "direct"
      }
    ],
    "scripts\\test_bambu_credentials.py:get_interactive_input": [
      {
        "callee": "print",
        "line": 203,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 204,
        "type": "direct"
      },
      {
        "callee": "strip",
        "line": 207,
        "type": "attribute"
      },
      {
        "callee": "input",
        "line": 207,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 210,
        "type": "direct"
      },
      {
        "callee": "strip",
        "line": 213,
        "type": "attribute"
      },
      {
        "callee": "input",
        "line": 213,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 216,
        "type": "direct"
      },
      {
        "callee": "strip",
        "line": 219,
        "type": "attribute"
      },
      {
        "callee": "input",
        "line": 219,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 222,
        "type": "direct"
      }
    ],
    "scripts\\test_bambu_credentials.py:main": [
      {
        "callee": "print",
        "line": 227,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 228,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 231,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 232,
        "type": "direct"
      },
      {
        "callee": "exit",
        "line": 233,
        "type": "attribute"
      },
      {
        "callee": "ArgumentParser",
        "line": 235,
        "type": "attribute"
      },
      {
        "callee": "add_argument",
        "line": 236,
        "type": "attribute"
      },
      {
        "callee": "add_argument",
        "line": 237,
        "type": "attribute"
      },
      {
        "callee": "add_argument",
        "line": 238,
        "type": "attribute"
      },
      {
        "callee": "add_argument",
        "line": 239,
        "type": "attribute"
      },
      {
        "callee": "parse_args",
        "line": 241,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 248,
        "type": "direct"
      },
      {
        "callee": "exit",
        "line": 249,
        "type": "attribute"
      },
      {
        "callee": "get_interactive_input",
        "line": 250,
        "type": "direct"
      },
      {
        "callee": "validate_credentials",
        "line": 253,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 256,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 258,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 261,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 262,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 263,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 264,
        "type": "direct"
      },
      {
        "callee": "exit",
        "line": 266,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 269,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 270,
        "type": "direct"
      },
      {
        "callee": "test_bambu_connection",
        "line": 273,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 277,
        "type": "direct"
      },
      {
        "callee": "dumps",
        "line": 277,
        "type": "attribute"
      },
      {
        "callee": "print_results",
        "line": 279,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 283,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 284,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 285,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 286,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 288,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 289,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 290,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 291,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 292,
        "type": "direct"
      },
      {
        "callee": "exit",
        "line": 294,
        "type": "attribute"
      }
    ],
    "scripts\\test_bambu_ftp_direct.py:create_secure_ftp_connection": [
      {
        "callee": "print",
        "line": 50,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 51,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 52,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 52,
        "type": "direct"
      },
      {
        "callee": "create_default_context",
        "line": 55,
        "type": "attribute"
      },
      {
        "callee": "FTP_TLS",
        "line": 61,
        "type": "attribute"
      },
      {
        "callee": "set_pasv",
        "line": 64,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 68,
        "type": "direct"
      },
      {
        "callee": "connect",
        "line": 69,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 72,
        "type": "direct"
      },
      {
        "callee": "login",
        "line": 73,
        "type": "attribute"
      },
      {
        "callee": "prot_p",
        "line": 76,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 78,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 82,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 85,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 88,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 89,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 92,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 93,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 96,
        "type": "direct"
      }
    ],
    "scripts\\test_bambu_ftp_direct.py:list_directory": [
      {
        "callee": "print",
        "line": 111,
        "type": "direct"
      },
      {
        "callee": "cwd",
        "line": 115,
        "type": "attribute"
      },
      {
        "callee": "pwd",
        "line": 116,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 117,
        "type": "direct"
      },
      {
        "callee": "retrlines",
        "line": 124,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 126,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 126,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 128,
        "type": "direct"
      },
      {
        "callee": "split",
        "line": 132,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 133,
        "type": "direct"
      },
      {
        "callee": "isdigit",
        "line": 136,
        "type": "attribute"
      },
      {
        "callee": "join",
        "line": 138,
        "type": "attribute"
      },
      {
        "callee": "startswith",
        "line": 141,
        "type": "attribute"
      },
      {
        "callee": "isdigit",
        "line": 144,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 144,
        "type": "direct"
      },
      {
        "callee": "int",
        "line": 144,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 148,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 150,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 150,
        "type": "direct"
      },
      {
        "callee": "enumerate",
        "line": 151,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 153,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 158,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 159,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 160,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 162,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 165,
        "type": "direct"
      }
    ],
    "scripts\\test_bambu_ftp_direct.py:download_file": [
      {
        "callee": "print",
        "line": 181,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 182,
        "type": "direct"
      },
      {
        "callee": "mkdir",
        "line": 186,
        "type": "attribute"
      },
      {
        "callee": "Path",
        "line": 186,
        "type": "direct"
      },
      {
        "callee": "open",
        "line": 189,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 196,
        "type": "direct"
      },
      {
        "callee": "retrbinary",
        "line": 197,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 198,
        "type": "direct"
      },
      {
        "callee": "exists",
        "line": 201,
        "type": "attribute"
      },
      {
        "callee": "Path",
        "line": 201,
        "type": "direct"
      },
      {
        "callee": "stat",
        "line": 202,
        "type": "attribute"
      },
      {
        "callee": "Path",
        "line": 202,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 203,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 206,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 210,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 213,
        "type": "direct"
      }
    ],
    "scripts\\test_bambu_ftp_direct.py:progress_callback": [
      {
        "callee": "write",
        "line": 191,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 193,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 194,
        "type": "direct"
      }
    ],
    "scripts\\test_bambu_ftp_direct.py:test_bambu_ftp": [
      {
        "callee": "print",
        "line": 228,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 229,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 230,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 231,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 231,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 232,
        "type": "direct"
      },
      {
        "callee": "strftime",
        "line": 232,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 232,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 233,
        "type": "direct"
      },
      {
        "callee": "create_secure_ftp_connection",
        "line": 238,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 239,
        "type": "direct"
      },
      {
        "callee": "list_directory",
        "line": 242,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 243,
        "type": "direct"
      },
      {
        "callee": "NamedTemporaryFile",
        "line": 252,
        "type": "attribute"
      },
      {
        "callee": "download_file",
        "line": 255,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 258,
        "type": "direct"
      },
      {
        "callee": "unlink",
        "line": 261,
        "type": "attribute"
      },
      {
        "callee": "Path",
        "line": 261,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 262,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 264,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 266,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 269,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 270,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 272,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 273,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 274,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 278,
        "type": "direct"
      },
      {
        "callee": "quit",
        "line": 285,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 286,
        "type": "direct"
      },
      {
        "callee": "close",
        "line": 289,
        "type": "attribute"
      }
    ],
    "scripts\\test_bambu_ftp_direct.py:main": [
      {
        "callee": "ArgumentParser",
        "line": 296,
        "type": "attribute"
      },
      {
        "callee": "add_argument",
        "line": 297,
        "type": "attribute"
      },
      {
        "callee": "getenv",
        "line": 297,
        "type": "attribute"
      },
      {
        "callee": "add_argument",
        "line": 298,
        "type": "attribute"
      },
      {
        "callee": "getenv",
        "line": 298,
        "type": "attribute"
      },
      {
        "callee": "parse_args",
        "line": 300,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 303,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 304,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 305,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 306,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 307,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 308,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 309,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 310,
        "type": "direct"
      },
      {
        "callee": "test_bambu_ftp",
        "line": 314,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 316,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 317,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 319,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 320,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 321,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 323,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 324,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 325,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 330,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 333,
        "type": "direct"
      }
    ],
    "scripts\\test_complete_bambu_ftp.py:BambuFTPTester.run_all_tests": [
      {
        "callee": "print",
        "line": 57,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 58,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 59,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 60,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 60,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 61,
        "type": "direct"
      },
      {
        "callee": "strftime",
        "line": 61,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 61,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 62,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 75,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 76,
        "type": "direct"
      },
      {
        "callee": "test_func",
        "line": 79,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 83,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 85,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 85,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 89,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 90,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 93,
        "type": "direct"
      },
      {
        "callee": "_generate_test_summary",
        "line": 96,
        "type": "attribute"
      },
      {
        "callee": "_print_summary",
        "line": 97,
        "type": "attribute"
      }
    ],
    "scripts\\test_complete_bambu_ftp.py:BambuFTPTester._test_ftp_service": [
      {
        "callee": "BambuFTPService",
        "line": 105,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 106,
        "type": "direct"
      },
      {
        "callee": "test_connection",
        "line": 109,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 113,
        "type": "direct"
      },
      {
        "callee": "list_files",
        "line": 116,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 117,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 117,
        "type": "direct"
      },
      {
        "callee": "get_file_info",
        "line": 122,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 124,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 126,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 130,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 135,
        "type": "direct"
      }
    ],
    "scripts\\test_complete_bambu_ftp.py:BambuFTPTester._test_printer_class": [
      {
        "callee": "BambuLabPrinter",
        "line": 141,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 149,
        "type": "direct"
      },
      {
        "callee": "connect",
        "line": 152,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 156,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 160,
        "type": "direct"
      },
      {
        "callee": "get_status",
        "line": 164,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 165,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 167,
        "type": "direct"
      },
      {
        "callee": "disconnect",
        "line": 170,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 171,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 180,
        "type": "direct"
      }
    ],
    "scripts\\test_complete_bambu_ftp.py:BambuFTPTester._test_file_listing": [
      {
        "callee": "BambuLabPrinter",
        "line": 185,
        "type": "direct"
      },
      {
        "callee": "connect",
        "line": 193,
        "type": "attribute"
      },
      {
        "callee": "list_files",
        "line": 196,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 197,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 197,
        "type": "direct"
      },
      {
        "callee": "getattr",
        "line": 202,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 203,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 205,
        "type": "direct"
      },
      {
        "callee": "dict",
        "line": 205,
        "type": "direct"
      },
      {
        "callee": "enumerate",
        "line": 208,
        "type": "direct"
      },
      {
        "callee": "getattr",
        "line": 209,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 209,
        "type": "direct"
      },
      {
        "callee": "getattr",
        "line": 210,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 211,
        "type": "direct"
      },
      {
        "callee": "disconnect",
        "line": 213,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 217,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 222,
        "type": "direct"
      }
    ],
    "scripts\\test_complete_bambu_ftp.py:BambuFTPTester._test_file_download": [
      {
        "callee": "BambuLabPrinter",
        "line": 227,
        "type": "direct"
      },
      {
        "callee": "connect",
        "line": 235,
        "type": "attribute"
      },
      {
        "callee": "list_files",
        "line": 238,
        "type": "attribute"
      },
      {
        "callee": "disconnect",
        "line": 240,
        "type": "attribute"
      },
      {
        "callee": "getattr",
        "line": 248,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 248,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 250,
        "type": "direct"
      },
      {
        "callee": "NamedTemporaryFile",
        "line": 253,
        "type": "attribute"
      },
      {
        "callee": "download_file",
        "line": 258,
        "type": "attribute"
      },
      {
        "callee": "exists",
        "line": 260,
        "type": "attribute"
      },
      {
        "callee": "Path",
        "line": 260,
        "type": "direct"
      },
      {
        "callee": "stat",
        "line": 261,
        "type": "attribute"
      },
      {
        "callee": "Path",
        "line": 261,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 262,
        "type": "direct"
      },
      {
        "callee": "unlink",
        "line": 265,
        "type": "attribute"
      },
      {
        "callee": "Path",
        "line": 265,
        "type": "direct"
      },
      {
        "callee": "disconnect",
        "line": 267,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 274,
        "type": "direct"
      },
      {
        "callee": "disconnect",
        "line": 275,
        "type": "attribute"
      },
      {
        "callee": "unlink",
        "line": 281,
        "type": "attribute"
      },
      {
        "callee": "Path",
        "line": 281,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 286,
        "type": "direct"
      }
    ],
    "scripts\\test_complete_bambu_ftp.py:BambuFTPTester._test_error_handling": [
      {
        "callee": "print",
        "line": 292,
        "type": "direct"
      },
      {
        "callee": "BambuFTPService",
        "line": 293,
        "type": "direct"
      },
      {
        "callee": "test_connection",
        "line": 294,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 297,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 300,
        "type": "direct"
      },
      {
        "callee": "BambuFTPService",
        "line": 301,
        "type": "direct"
      },
      {
        "callee": "test_connection",
        "line": 302,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 305,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 308,
        "type": "direct"
      },
      {
        "callee": "BambuFTPService",
        "line": 309,
        "type": "direct"
      },
      {
        "callee": "list_files",
        "line": 310,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 311,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 311,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 319,
        "type": "direct"
      }
    ],
    "scripts\\test_complete_bambu_ftp.py:BambuFTPTester._generate_test_summary": [
      {
        "callee": "len",
        "line": 325,
        "type": "direct"
      },
      {
        "callee": "sum",
        "line": 326,
        "type": "direct"
      },
      {
        "callee": "values",
        "line": 326,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 326,
        "type": "attribute"
      },
      {
        "callee": "sum",
        "line": 327,
        "type": "direct"
      },
      {
        "callee": "values",
        "line": 327,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 327,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 329,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 329,
        "type": "attribute"
      }
    ],
    "scripts\\test_complete_bambu_ftp.py:BambuFTPTester._print_summary": [
      {
        "callee": "print",
        "line": 335,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 336,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 337,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 338,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 339,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 340,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 343,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 344,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 345,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 347,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 348,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 349,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 351,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 352,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 353,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 354,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 355,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 356,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 357,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 358,
        "type": "direct"
      }
    ],
    "scripts\\test_complete_bambu_ftp.py:main": [
      {
        "callee": "ArgumentParser",
        "line": 363,
        "type": "attribute"
      },
      {
        "callee": "add_argument",
        "line": 364,
        "type": "attribute"
      },
      {
        "callee": "getenv",
        "line": 364,
        "type": "attribute"
      },
      {
        "callee": "add_argument",
        "line": 365,
        "type": "attribute"
      },
      {
        "callee": "getenv",
        "line": 365,
        "type": "attribute"
      },
      {
        "callee": "parse_args",
        "line": 367,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 373,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 374,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 375,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 376,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 377,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 378,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 379,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 380,
        "type": "direct"
      },
      {
        "callee": "BambuFTPTester",
        "line": 384,
        "type": "direct"
      },
      {
        "callee": "run_all_tests",
        "line": 385,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 390,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 393,
        "type": "direct"
      }
    ],
    "scripts\\test_existing_bambu_api.py:test_bambu_api": [
      {
        "callee": "print",
        "line": 32,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 33,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 34,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 35,
        "type": "direct"
      },
      {
        "callee": "get_bambu_credentials",
        "line": 38,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 39,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 39,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 41,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 46,
        "type": "direct"
      },
      {
        "callee": "BambuClient",
        "line": 47,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 54,
        "type": "direct"
      },
      {
        "callee": "connect",
        "line": 55,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 56,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 59,
        "type": "direct"
      },
      {
        "callee": "get_current_state",
        "line": 61,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 63,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 65,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 67,
        "type": "direct"
      },
      {
        "callee": "hasattr",
        "line": 70,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 71,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 75,
        "type": "direct"
      },
      {
        "callee": "list_cache_dir",
        "line": 76,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 77,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 78,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 78,
        "type": "direct"
      },
      {
        "callee": "enumerate",
        "line": 81,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 82,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 87,
        "type": "direct"
      },
      {
        "callee": "isinstance",
        "line": 90,
        "type": "direct"
      },
      {
        "callee": "split",
        "line": 92,
        "type": "attribute"
      },
      {
        "callee": "strip",
        "line": 92,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 93,
        "type": "direct"
      },
      {
        "callee": "join",
        "line": 94,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 98,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 100,
        "type": "direct"
      },
      {
        "callee": "download_file",
        "line": 104,
        "type": "attribute"
      },
      {
        "callee": "getvalue",
        "line": 106,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 107,
        "type": "direct"
      },
      {
        "callee": "Path",
        "line": 109,
        "type": "direct"
      },
      {
        "callee": "mkdir",
        "line": 110,
        "type": "attribute"
      },
      {
        "callee": "open",
        "line": 113,
        "type": "direct"
      },
      {
        "callee": "write",
        "line": 114,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 116,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 116,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 119,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 121,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 123,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 126,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 129,
        "type": "direct"
      },
      {
        "callee": "disconnect",
        "line": 132,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 135,
        "type": "direct"
      }
    ],
    "scripts\\test_ssl_connection.py:test_ssl_connection": [
      {
        "callee": "print",
        "line": 15,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 16,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 17,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 18,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 19,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 23,
        "type": "direct"
      },
      {
        "callee": "socket",
        "line": 24,
        "type": "attribute"
      },
      {
        "callee": "settimeout",
        "line": 25,
        "type": "attribute"
      },
      {
        "callee": "connect",
        "line": 26,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 27,
        "type": "direct"
      },
      {
        "callee": "close",
        "line": 28,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 31,
        "type": "direct"
      },
      {
        "callee": "socket",
        "line": 32,
        "type": "attribute"
      },
      {
        "callee": "settimeout",
        "line": 33,
        "type": "attribute"
      },
      {
        "callee": "connect",
        "line": 34,
        "type": "attribute"
      },
      {
        "callee": "create_default_context",
        "line": 37,
        "type": "attribute"
      },
      {
        "callee": "wrap_socket",
        "line": 42,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 43,
        "type": "direct"
      },
      {
        "callee": "getpeercert",
        "line": 46,
        "type": "attribute"
      },
      {
        "callee": "cipher",
        "line": 47,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 48,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 49,
        "type": "direct"
      },
      {
        "callee": "version",
        "line": 49,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 52,
        "type": "direct"
      },
      {
        "callee": "settimeout",
        "line": 53,
        "type": "attribute"
      },
      {
        "callee": "decode",
        "line": 55,
        "type": "attribute"
      },
      {
        "callee": "recv",
        "line": 55,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 56,
        "type": "direct"
      },
      {
        "callee": "strip",
        "line": 56,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 58,
        "type": "direct"
      },
      {
        "callee": "close",
        "line": 60,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 64,
        "type": "direct"
      }
    ],
    "scripts\\verify_bambu_download.py:verify_download": [
      {
        "callee": "print",
        "line": 41,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 42,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 43,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 44,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 45,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 45,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 46,
        "type": "direct"
      },
      {
        "callee": "BambuLabPrinter",
        "line": 52,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 62,
        "type": "direct"
      },
      {
        "callee": "connect",
        "line": 63,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 66,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 67,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 70,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 73,
        "type": "direct"
      },
      {
        "callee": "BambuFTPService",
        "line": 75,
        "type": "direct"
      },
      {
        "callee": "test_connection",
        "line": 76,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 78,
        "type": "direct"
      },
      {
        "callee": "list_files",
        "line": 81,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 82,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 82,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 84,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 86,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 89,
        "type": "direct"
      },
      {
        "callee": "get_status",
        "line": 91,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 92,
        "type": "direct"
      },
      {
        "callee": "hasattr",
        "line": 92,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 94,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 97,
        "type": "direct"
      },
      {
        "callee": "list_files",
        "line": 99,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 102,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 103,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 106,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 106,
        "type": "direct"
      },
      {
        "callee": "enumerate",
        "line": 107,
        "type": "direct"
      },
      {
        "callee": "getattr",
        "line": 108,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 108,
        "type": "direct"
      },
      {
        "callee": "getattr",
        "line": 109,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 110,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 112,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 113,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 113,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 116,
        "type": "direct"
      },
      {
        "callee": "lower",
        "line": 123,
        "type": "attribute"
      },
      {
        "callee": "next",
        "line": 124,
        "type": "direct"
      },
      {
        "callee": "lower",
        "line": 124,
        "type": "attribute"
      },
      {
        "callee": "getattr",
        "line": 124,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 124,
        "type": "direct"
      },
      {
        "callee": "getattr",
        "line": 126,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 126,
        "type": "direct"
      },
      {
        "callee": "split",
        "line": 128,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 128,
        "type": "attribute"
      },
      {
        "callee": "getattr",
        "line": 128,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 128,
        "type": "direct"
      },
      {
        "callee": "getattr",
        "line": 130,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 130,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 131,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 133,
        "type": "direct"
      },
      {
        "callee": "getattr",
        "line": 136,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 136,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 140,
        "type": "direct"
      },
      {
        "callee": "NamedTemporaryFile",
        "line": 142,
        "type": "attribute"
      },
      {
        "callee": "download_file",
        "line": 146,
        "type": "attribute"
      },
      {
        "callee": "exists",
        "line": 148,
        "type": "attribute"
      },
      {
        "callee": "Path",
        "line": 148,
        "type": "direct"
      },
      {
        "callee": "stat",
        "line": 149,
        "type": "attribute"
      },
      {
        "callee": "Path",
        "line": 149,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 150,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 151,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 152,
        "type": "direct"
      },
      {
        "callee": "unlink",
        "line": 155,
        "type": "attribute"
      },
      {
        "callee": "Path",
        "line": 155,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 158,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 162,
        "type": "direct"
      },
      {
        "callee": "unlink",
        "line": 167,
        "type": "attribute"
      },
      {
        "callee": "Path",
        "line": 167,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 174,
        "type": "direct"
      },
      {
        "callee": "disconnect",
        "line": 180,
        "type": "attribute"
      }
    ],
    "scripts\\verify_bambu_download.py:main": [
      {
        "callee": "ArgumentParser",
        "line": 187,
        "type": "attribute"
      },
      {
        "callee": "add_argument",
        "line": 188,
        "type": "attribute"
      },
      {
        "callee": "getenv",
        "line": 188,
        "type": "attribute"
      },
      {
        "callee": "add_argument",
        "line": 189,
        "type": "attribute"
      },
      {
        "callee": "getenv",
        "line": 189,
        "type": "attribute"
      },
      {
        "callee": "add_argument",
        "line": 190,
        "type": "attribute"
      },
      {
        "callee": "getenv",
        "line": 190,
        "type": "attribute"
      },
      {
        "callee": "add_argument",
        "line": 191,
        "type": "attribute"
      },
      {
        "callee": "parse_args",
        "line": 193,
        "type": "attribute"
      },
      {
        "callee": "all",
        "line": 195,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 196,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 197,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 198,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 199,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 200,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 201,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 202,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 203,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 204,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 205,
        "type": "direct"
      },
      {
        "callee": "run",
        "line": 209,
        "type": "attribute"
      },
      {
        "callee": "verify_download",
        "line": 209,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 211,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 213,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 214,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 216,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 217,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 218,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 223,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 226,
        "type": "direct"
      }
    ],
    "scripts\\working_bambu_ftp.py:BambuFTP.connect": [
      {
        "callee": "socket",
        "line": 24,
        "type": "attribute"
      },
      {
        "callee": "settimeout",
        "line": 25,
        "type": "attribute"
      },
      {
        "callee": "connect",
        "line": 26,
        "type": "attribute"
      },
      {
        "callee": "create_default_context",
        "line": 29,
        "type": "attribute"
      },
      {
        "callee": "wrap_socket",
        "line": 33,
        "type": "attribute"
      },
      {
        "callee": "_read_response",
        "line": 36,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 37,
        "type": "direct"
      },
      {
        "callee": "startswith",
        "line": 39,
        "type": "attribute"
      },
      {
        "callee": "Exception",
        "line": 40,
        "type": "direct"
      }
    ],
    "scripts\\working_bambu_ftp.py:BambuFTP.login": [
      {
        "callee": "_send_command",
        "line": 45,
        "type": "attribute"
      },
      {
        "callee": "_read_response",
        "line": 46,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 47,
        "type": "direct"
      },
      {
        "callee": "startswith",
        "line": 49,
        "type": "attribute"
      },
      {
        "callee": "_send_command",
        "line": 51,
        "type": "attribute"
      },
      {
        "callee": "_read_response",
        "line": 52,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 53,
        "type": "direct"
      },
      {
        "callee": "startswith",
        "line": 55,
        "type": "attribute"
      },
      {
        "callee": "Exception",
        "line": 56,
        "type": "direct"
      },
      {
        "callee": "startswith",
        "line": 57,
        "type": "attribute"
      },
      {
        "callee": "Exception",
        "line": 58,
        "type": "direct"
      }
    ],
    "scripts\\working_bambu_ftp.py:BambuFTP.cwd": [
      {
        "callee": "_send_command",
        "line": 62,
        "type": "attribute"
      },
      {
        "callee": "_read_response",
        "line": 63,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 64,
        "type": "direct"
      },
      {
        "callee": "startswith",
        "line": 66,
        "type": "attribute"
      },
      {
        "callee": "Exception",
        "line": 67,
        "type": "direct"
      }
    ],
    "scripts\\working_bambu_ftp.py:BambuFTP.list_files": [
      {
        "callee": "_send_command",
        "line": 72,
        "type": "attribute"
      },
      {
        "callee": "_read_response",
        "line": 73,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 74,
        "type": "direct"
      },
      {
        "callee": "startswith",
        "line": 76,
        "type": "attribute"
      },
      {
        "callee": "Exception",
        "line": 77,
        "type": "direct"
      },
      {
        "callee": "search",
        "line": 82,
        "type": "attribute"
      },
      {
        "callee": "Exception",
        "line": 84,
        "type": "direct"
      },
      {
        "callee": "split",
        "line": 86,
        "type": "attribute"
      },
      {
        "callee": "group",
        "line": 86,
        "type": "attribute"
      },
      {
        "callee": "join",
        "line": 87,
        "type": "attribute"
      },
      {
        "callee": "int",
        "line": 88,
        "type": "direct"
      },
      {
        "callee": "int",
        "line": 88,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 90,
        "type": "direct"
      },
      {
        "callee": "socket",
        "line": 93,
        "type": "attribute"
      },
      {
        "callee": "settimeout",
        "line": 94,
        "type": "attribute"
      },
      {
        "callee": "connect",
        "line": 95,
        "type": "attribute"
      },
      {
        "callee": "create_default_context",
        "line": 98,
        "type": "attribute"
      },
      {
        "callee": "wrap_socket",
        "line": 101,
        "type": "attribute"
      },
      {
        "callee": "_send_command",
        "line": 104,
        "type": "attribute"
      },
      {
        "callee": "_read_response",
        "line": 105,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 106,
        "type": "direct"
      },
      {
        "callee": "recv",
        "line": 112,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 115,
        "type": "attribute"
      },
      {
        "callee": "decode",
        "line": 115,
        "type": "attribute"
      },
      {
        "callee": "close",
        "line": 119,
        "type": "attribute"
      },
      {
        "callee": "_read_response",
        "line": 122,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 123,
        "type": "direct"
      },
      {
        "callee": "split",
        "line": 125,
        "type": "attribute"
      },
      {
        "callee": "join",
        "line": 125,
        "type": "attribute"
      }
    ],
    "scripts\\working_bambu_ftp.py:BambuFTP.download_file": [
      {
        "callee": "_send_command",
        "line": 130,
        "type": "attribute"
      },
      {
        "callee": "_read_response",
        "line": 131,
        "type": "attribute"
      },
      {
        "callee": "startswith",
        "line": 133,
        "type": "attribute"
      },
      {
        "callee": "Exception",
        "line": 134,
        "type": "direct"
      },
      {
        "callee": "search",
        "line": 138,
        "type": "attribute"
      },
      {
        "callee": "Exception",
        "line": 140,
        "type": "direct"
      },
      {
        "callee": "split",
        "line": 142,
        "type": "attribute"
      },
      {
        "callee": "group",
        "line": 142,
        "type": "attribute"
      },
      {
        "callee": "join",
        "line": 143,
        "type": "attribute"
      },
      {
        "callee": "int",
        "line": 144,
        "type": "direct"
      },
      {
        "callee": "int",
        "line": 144,
        "type": "direct"
      },
      {
        "callee": "socket",
        "line": 147,
        "type": "attribute"
      },
      {
        "callee": "settimeout",
        "line": 148,
        "type": "attribute"
      },
      {
        "callee": "connect",
        "line": 149,
        "type": "attribute"
      },
      {
        "callee": "create_default_context",
        "line": 152,
        "type": "attribute"
      },
      {
        "callee": "wrap_socket",
        "line": 155,
        "type": "attribute"
      },
      {
        "callee": "_send_command",
        "line": 158,
        "type": "attribute"
      },
      {
        "callee": "_read_response",
        "line": 159,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 160,
        "type": "direct"
      },
      {
        "callee": "startswith",
        "line": 162,
        "type": "attribute"
      },
      {
        "callee": "close",
        "line": 163,
        "type": "attribute"
      },
      {
        "callee": "Exception",
        "line": 164,
        "type": "direct"
      },
      {
        "callee": "open",
        "line": 167,
        "type": "direct"
      },
      {
        "callee": "recv",
        "line": 169,
        "type": "attribute"
      },
      {
        "callee": "write",
        "line": 172,
        "type": "attribute"
      },
      {
        "callee": "close",
        "line": 174,
        "type": "attribute"
      },
      {
        "callee": "_read_response",
        "line": 177,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 178,
        "type": "direct"
      }
    ],
    "scripts\\working_bambu_ftp.py:BambuFTP.quit": [
      {
        "callee": "_send_command",
        "line": 184,
        "type": "attribute"
      },
      {
        "callee": "_read_response",
        "line": 185,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 186,
        "type": "direct"
      },
      {
        "callee": "close",
        "line": 189,
        "type": "attribute"
      },
      {
        "callee": "close",
        "line": 191,
        "type": "attribute"
      }
    ],
    "scripts\\working_bambu_ftp.py:BambuFTP._send_command": [
      {
        "callee": "encode",
        "line": 195,
        "type": "attribute"
      },
      {
        "callee": "send",
        "line": 196,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 197,
        "type": "direct"
      }
    ],
    "scripts\\working_bambu_ftp.py:BambuFTP._read_response": [
      {
        "callee": "recv",
        "line": 203,
        "type": "attribute"
      },
      {
        "callee": "strip",
        "line": 210,
        "type": "attribute"
      },
      {
        "callee": "decode",
        "line": 210,
        "type": "attribute"
      }
    ],
    "scripts\\working_bambu_ftp.py:test_working_ftp": [
      {
        "callee": "print",
        "line": 219,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 220,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 221,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 222,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 223,
        "type": "direct"
      },
      {
        "callee": "get_bambu_credentials",
        "line": 226,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 227,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 229,
        "type": "direct"
      },
      {
        "callee": "BambuFTP",
        "line": 234,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 235,
        "type": "direct"
      },
      {
        "callee": "connect",
        "line": 236,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 239,
        "type": "direct"
      },
      {
        "callee": "login",
        "line": 240,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 243,
        "type": "direct"
      },
      {
        "callee": "cwd",
        "line": 244,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 247,
        "type": "direct"
      },
      {
        "callee": "list_files",
        "line": 248,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 250,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 250,
        "type": "direct"
      },
      {
        "callee": "strip",
        "line": 250,
        "type": "attribute"
      },
      {
        "callee": "strip",
        "line": 251,
        "type": "attribute"
      },
      {
        "callee": "startswith",
        "line": 251,
        "type": "attribute"
      },
      {
        "callee": "enumerate",
        "line": 252,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 253,
        "type": "direct"
      },
      {
        "callee": "strip",
        "line": 253,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 258,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 258,
        "type": "attribute"
      },
      {
        "callee": "strip",
        "line": 259,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 263,
        "type": "direct"
      },
      {
        "callee": "split",
        "line": 266,
        "type": "attribute"
      },
      {
        "callee": "Path",
        "line": 269,
        "type": "direct"
      },
      {
        "callee": "mkdir",
        "line": 270,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 273,
        "type": "direct"
      },
      {
        "callee": "download_file",
        "line": 274,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 274,
        "type": "direct"
      },
      {
        "callee": "exists",
        "line": 276,
        "type": "attribute"
      },
      {
        "callee": "stat",
        "line": 277,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 278,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 281,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 284,
        "type": "direct"
      },
      {
        "callee": "quit",
        "line": 288,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 291,
        "type": "direct"
      }
    ],
    "src\\api\\routers\\analytics.py:get_analytics_summary": [
      {
        "callee": "Query",
        "line": 49,
        "type": "direct"
      },
      {
        "callee": "Query",
        "line": 50,
        "type": "direct"
      },
      {
        "callee": "Depends",
        "line": 51,
        "type": "direct"
      },
      {
        "callee": "get_summary",
        "line": 55,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 58,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 58,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 59,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 47,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\analytics.py:get_business_analytics": [
      {
        "callee": "Query",
        "line": 67,
        "type": "direct"
      },
      {
        "callee": "Query",
        "line": 68,
        "type": "direct"
      },
      {
        "callee": "Depends",
        "line": 69,
        "type": "direct"
      },
      {
        "callee": "get_business_analytics",
        "line": 73,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 76,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 76,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 77,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 65,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\analytics.py:get_analytics_overview": [
      {
        "callee": "Query",
        "line": 85,
        "type": "direct"
      },
      {
        "callee": "Depends",
        "line": 86,
        "type": "direct"
      },
      {
        "callee": "get_dashboard_overview",
        "line": 90,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 93,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 93,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 94,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 83,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\camera.py:get_camera_status": [
      {
        "callee": "Depends",
        "line": 26,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 30,
        "type": "direct"
      },
      {
        "callee": "get_printer_driver",
        "line": 31,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 34,
        "type": "direct"
      },
      {
        "callee": "has_camera",
        "line": 39,
        "type": "attribute"
      },
      {
        "callee": "get_camera_stream_url",
        "line": 45,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 49,
        "type": "direct"
      },
      {
        "callee": "CameraStatus",
        "line": 53,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 63,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 64,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 64,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 65,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 23,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\camera.py:get_camera_stream": [
      {
        "callee": "Depends",
        "line": 74,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 78,
        "type": "direct"
      },
      {
        "callee": "get_printer_driver",
        "line": 79,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 82,
        "type": "direct"
      },
      {
        "callee": "has_camera",
        "line": 87,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 88,
        "type": "direct"
      },
      {
        "callee": "get_camera_stream_url",
        "line": 93,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 95,
        "type": "direct"
      },
      {
        "callee": "Response",
        "line": 102,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 110,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 111,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 111,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 112,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 71,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\camera.py:take_snapshot": [
      {
        "callee": "Depends",
        "line": 122,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 126,
        "type": "direct"
      },
      {
        "callee": "get_printer_driver",
        "line": 127,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 130,
        "type": "direct"
      },
      {
        "callee": "has_camera",
        "line": 135,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 136,
        "type": "direct"
      },
      {
        "callee": "take_snapshot",
        "line": 142,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 144,
        "type": "direct"
      },
      {
        "callee": "strftime",
        "line": 150,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 150,
        "type": "attribute"
      },
      {
        "callee": "makedirs",
        "line": 155,
        "type": "attribute"
      },
      {
        "callee": "join",
        "line": 157,
        "type": "attribute"
      },
      {
        "callee": "open",
        "line": 160,
        "type": "attribute"
      },
      {
        "callee": "write",
        "line": 161,
        "type": "attribute"
      },
      {
        "callee": "SnapshotResponse",
        "line": 164,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 169,
        "type": "direct"
      },
      {
        "callee": "isoformat",
        "line": 171,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 171,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 179,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 182,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 189,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 190,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 190,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 191,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 118,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\camera.py:list_snapshots": [
      {
        "callee": "Depends",
        "line": 201,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 205,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 211,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 212,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 212,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 213,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 197,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\camera.py:download_snapshot": [
      {
        "callee": "Depends",
        "line": 222,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 227,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 235,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 236,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 237,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 219,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\debug.py:debug_printer_thumbnail": [
      {
        "callee": "Query",
        "line": 19,
        "type": "direct"
      },
      {
        "callee": "Query",
        "line": 20,
        "type": "direct"
      },
      {
        "callee": "getattr",
        "line": 27,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 29,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 31,
        "type": "direct"
      },
      {
        "callee": "getattr",
        "line": 33,
        "type": "direct"
      },
      {
        "callee": "bool",
        "line": 37,
        "type": "direct"
      },
      {
        "callee": "hasattr",
        "line": 43,
        "type": "direct"
      },
      {
        "callee": "model_dump",
        "line": 43,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 45,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 47,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 48,
        "type": "attribute"
      },
      {
        "callee": "get_file_by_id",
        "line": 51,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 53,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 55,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 56,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 57,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 58,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 60,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 63,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 64,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 65,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 67,
        "type": "attribute"
      },
      {
        "callee": "items",
        "line": 71,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 15,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\debug.py:debug_file": [
      {
        "callee": "Query",
        "line": 81,
        "type": "direct"
      },
      {
        "callee": "getattr",
        "line": 83,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 85,
        "type": "direct"
      },
      {
        "callee": "get_file_by_id",
        "line": 87,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 89,
        "type": "direct"
      },
      {
        "callee": "items",
        "line": 91,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 92,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 93,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 77,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\debug.py:get_thumbnail_processing_log": [
      {
        "callee": "Query",
        "line": 100,
        "type": "direct"
      },
      {
        "callee": "getattr",
        "line": 109,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 111,
        "type": "direct"
      },
      {
        "callee": "get_thumbnail_processing_log",
        "line": 113,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 118,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 120,
        "type": "attribute"
      },
      {
        "callee": "Path",
        "line": 122,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 122,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 123,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 124,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 128,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 129,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 131,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 134,
        "type": "direct"
      },
      {
        "callee": "sum",
        "line": 135,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 135,
        "type": "attribute"
      },
      {
        "callee": "sum",
        "line": 136,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 136,
        "type": "attribute"
      },
      {
        "callee": "round",
        "line": 137,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 142,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 143,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 97,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\errors.py:ErrorStoreService.__init__": [
      {
        "callee": "Path",
        "line": 49,
        "type": "direct"
      },
      {
        "callee": "ensure_log_directory",
        "line": 51,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\errors.py:ErrorStoreService.ensure_log_directory": [
      {
        "callee": "mkdir",
        "line": 55,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\errors.py:ErrorStoreService.store_errors": [
      {
        "callee": "isoformat",
        "line": 62,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 62,
        "type": "attribute"
      },
      {
        "callee": "dict",
        "line": 63,
        "type": "attribute"
      },
      {
        "callee": "dict",
        "line": 64,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 65,
        "type": "direct"
      },
      {
        "callee": "open",
        "line": 69,
        "type": "direct"
      },
      {
        "callee": "write",
        "line": 70,
        "type": "attribute"
      },
      {
        "callee": "dumps",
        "line": 70,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 73,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 76,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 84,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 84,
        "type": "direct"
      }
    ],
    "src\\api\\routers\\errors.py:ErrorStoreService.get_recent_errors": [
      {
        "callee": "exists",
        "line": 90,
        "type": "attribute"
      },
      {
        "callee": "open",
        "line": 94,
        "type": "direct"
      },
      {
        "callee": "readlines",
        "line": 95,
        "type": "attribute"
      },
      {
        "callee": "loads",
        "line": 100,
        "type": "attribute"
      },
      {
        "callee": "strip",
        "line": 100,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 101,
        "type": "attribute"
      },
      {
        "callee": "list",
        "line": 105,
        "type": "direct"
      },
      {
        "callee": "reversed",
        "line": 105,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 108,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 108,
        "type": "direct"
      }
    ],
    "src\\api\\routers\\errors.py:ErrorStoreService.get_error_statistics": [
      {
        "callee": "timestamp",
        "line": 114,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 114,
        "type": "attribute"
      },
      {
        "callee": "get_recent_errors",
        "line": 115,
        "type": "attribute"
      },
      {
        "callee": "timestamp",
        "line": 120,
        "type": "attribute"
      },
      {
        "callee": "fromisoformat",
        "line": 120,
        "type": "attribute"
      },
      {
        "callee": "extend",
        "line": 122,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 125,
        "type": "direct"
      },
      {
        "callee": "set",
        "line": 128,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 132,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 133,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 136,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 137,
        "type": "attribute"
      },
      {
        "callee": "timestamp",
        "line": 141,
        "type": "attribute"
      },
      {
        "callee": "fromisoformat",
        "line": 141,
        "type": "attribute"
      },
      {
        "callee": "add",
        "line": 142,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 147,
        "type": "direct"
      },
      {
        "callee": "max",
        "line": 150,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 150,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 154,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 154,
        "type": "direct"
      }
    ],
    "src\\api\\routers\\errors.py:report_errors": [
      {
        "callee": "store_errors",
        "line": 180,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 183,
        "type": "direct"
      },
      {
        "callee": "warning",
        "line": 191,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 195,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 205,
        "type": "direct"
      },
      {
        "callee": "isoformat",
        "line": 206,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 206,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 212,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 212,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 213,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 169,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\errors.py:get_recent_errors": [
      {
        "callee": "get_recent_errors",
        "line": 223,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 226,
        "type": "direct"
      },
      {
        "callee": "isoformat",
        "line": 227,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 227,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 230,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 230,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 231,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 219,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\errors.py:get_error_statistics": [
      {
        "callee": "get_error_statistics",
        "line": 241,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 244,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 244,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 247,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 247,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 248,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 237,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\errors.py:error_system_health": [
      {
        "callee": "write_text",
        "line": 260,
        "type": "attribute"
      },
      {
        "callee": "unlink",
        "line": 261,
        "type": "attribute"
      },
      {
        "callee": "get_error_statistics",
        "line": 264,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 268,
        "type": "direct"
      },
      {
        "callee": "isoformat",
        "line": 270,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 270,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 274,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 274,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 277,
        "type": "direct"
      },
      {
        "callee": "isoformat",
        "line": 278,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 278,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 254,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\files.py:list_files": [
      {
        "callee": "Query",
        "line": 62,
        "type": "direct"
      },
      {
        "callee": "Query",
        "line": 63,
        "type": "direct"
      },
      {
        "callee": "Query",
        "line": 64,
        "type": "direct"
      },
      {
        "callee": "Query",
        "line": 65,
        "type": "direct"
      },
      {
        "callee": "Query",
        "line": 66,
        "type": "direct"
      },
      {
        "callee": "Query",
        "line": 67,
        "type": "direct"
      },
      {
        "callee": "Query",
        "line": 68,
        "type": "direct"
      },
      {
        "callee": "Query",
        "line": 69,
        "type": "direct"
      },
      {
        "callee": "Query",
        "line": 70,
        "type": "direct"
      },
      {
        "callee": "Depends",
        "line": 71,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 75,
        "type": "attribute"
      },
      {
        "callee": "get_files",
        "line": 79,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 91,
        "type": "direct"
      },
      {
        "callee": "max",
        "line": 92,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 99,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 99,
        "type": "direct"
      },
      {
        "callee": "model_validate",
        "line": 101,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 103,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 103,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 116,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 116,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 117,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 119,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 60,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\files.py:get_file_statistics": [
      {
        "callee": "Depends",
        "line": 125,
        "type": "direct"
      },
      {
        "callee": "get_file_statistics",
        "line": 129,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 135,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 135,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 136,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 123,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\files.py:get_file_by_id": [
      {
        "callee": "Depends",
        "line": 145,
        "type": "direct"
      },
      {
        "callee": "get_file_by_id",
        "line": 149,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 151,
        "type": "direct"
      },
      {
        "callee": "model_validate",
        "line": 155,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 159,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 159,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 160,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 142,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\files.py:download_file": [
      {
        "callee": "Depends",
        "line": 169,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 176,
        "type": "direct"
      },
      {
        "callee": "split",
        "line": 182,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 186,
        "type": "attribute"
      },
      {
        "callee": "download_file",
        "line": 189,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 191,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 192,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 200,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 200,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 200,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 201,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 166,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\files.py:sync_printer_files": [
      {
        "callee": "Query",
        "line": 209,
        "type": "direct"
      },
      {
        "callee": "Depends",
        "line": 210,
        "type": "direct"
      },
      {
        "callee": "sync_printer_files",
        "line": 214,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 217,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 217,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 217,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 218,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 207,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\files.py:get_file_thumbnail": [
      {
        "callee": "Depends",
        "line": 227,
        "type": "direct"
      },
      {
        "callee": "get_file_by_id",
        "line": 231,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 234,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 239,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 239,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 240,
        "type": "direct"
      },
      {
        "callee": "b64decode",
        "line": 247,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 249,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 249,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 250,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 256,
        "type": "attribute"
      },
      {
        "callee": "Response",
        "line": 260,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 272,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 272,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 273,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 224,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\files.py:get_file_metadata": [
      {
        "callee": "Depends",
        "line": 282,
        "type": "direct"
      },
      {
        "callee": "get_file_by_id",
        "line": 286,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 289,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 295,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 300,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 301,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 302,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 303,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 304,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 313,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 313,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 314,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 279,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\files.py:process_file_thumbnails": [
      {
        "callee": "Depends",
        "line": 323,
        "type": "direct"
      },
      {
        "callee": "get_file_by_id",
        "line": 327,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 330,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 335,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 337,
        "type": "direct"
      },
      {
        "callee": "process_file_thumbnails",
        "line": 342,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 352,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 352,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 353,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 320,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\files.py:get_watch_folder_settings": [
      {
        "callee": "Depends",
        "line": 364,
        "type": "direct"
      },
      {
        "callee": "get_watch_folder_settings",
        "line": 368,
        "type": "attribute"
      },
      {
        "callee": "get_all_watch_folders",
        "line": 370,
        "type": "attribute"
      },
      {
        "callee": "to_dict",
        "line": 371,
        "type": "attribute"
      },
      {
        "callee": "WatchFolderSettings",
        "line": 372,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 374,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 374,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 375,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 362,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\files.py:get_watch_folder_status": [
      {
        "callee": "Depends",
        "line": 383,
        "type": "direct"
      },
      {
        "callee": "Depends",
        "line": 384,
        "type": "direct"
      },
      {
        "callee": "get_watch_status",
        "line": 388,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 391,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 391,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 392,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 381,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\files.py:list_local_files": [
      {
        "callee": "Query",
        "line": 400,
        "type": "direct"
      },
      {
        "callee": "Depends",
        "line": 401,
        "type": "direct"
      },
      {
        "callee": "get_local_files",
        "line": 405,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 409,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 413,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 413,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 414,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 398,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\files.py:reload_watch_folders": [
      {
        "callee": "Depends",
        "line": 422,
        "type": "direct"
      },
      {
        "callee": "reload_watch_folders",
        "line": 426,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 429,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 429,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 430,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 420,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\files.py:validate_watch_folder": [
      {
        "callee": "Query",
        "line": 438,
        "type": "direct"
      },
      {
        "callee": "Depends",
        "line": 439,
        "type": "direct"
      },
      {
        "callee": "validate_watch_folder",
        "line": 443,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 446,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 446,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 447,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 436,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\files.py:add_watch_folder": [
      {
        "callee": "Query",
        "line": 455,
        "type": "direct"
      },
      {
        "callee": "Depends",
        "line": 456,
        "type": "direct"
      },
      {
        "callee": "Depends",
        "line": 457,
        "type": "direct"
      },
      {
        "callee": "validate_watch_folder",
        "line": 462,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 464,
        "type": "direct"
      },
      {
        "callee": "add_watch_folder",
        "line": 470,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 472,
        "type": "direct"
      },
      {
        "callee": "reload_watch_folders",
        "line": 478,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 484,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 484,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 485,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 453,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\files.py:remove_watch_folder": [
      {
        "callee": "Query",
        "line": 493,
        "type": "direct"
      },
      {
        "callee": "Depends",
        "line": 494,
        "type": "direct"
      },
      {
        "callee": "Depends",
        "line": 495,
        "type": "direct"
      },
      {
        "callee": "remove_watch_folder",
        "line": 500,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 502,
        "type": "direct"
      },
      {
        "callee": "reload_watch_folders",
        "line": 508,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 514,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 514,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 515,
        "type": "direct"
      },
      {
        "callee": "delete",
        "line": 491,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\files.py:update_watch_folder": [
      {
        "callee": "Query",
        "line": 523,
        "type": "direct"
      },
      {
        "callee": "Query",
        "line": 524,
        "type": "direct"
      },
      {
        "callee": "Depends",
        "line": 525,
        "type": "direct"
      },
      {
        "callee": "Depends",
        "line": 526,
        "type": "direct"
      },
      {
        "callee": "_ensure_env_migration",
        "line": 531,
        "type": "attribute"
      },
      {
        "callee": "get_watch_folder_by_path",
        "line": 532,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 535,
        "type": "direct"
      },
      {
        "callee": "update_watch_folder",
        "line": 541,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 547,
        "type": "direct"
      },
      {
        "callee": "reload_watch_folders",
        "line": 553,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 566,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 566,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 567,
        "type": "direct"
      },
      {
        "callee": "patch",
        "line": 521,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\files.py:delete_file": [
      {
        "callee": "Depends",
        "line": 576,
        "type": "direct"
      },
      {
        "callee": "delete_file",
        "line": 580,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 583,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 593,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 593,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 594,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 596,
        "type": "direct"
      },
      {
        "callee": "delete",
        "line": 573,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\files.py:get_enhanced_metadata": [
      {
        "callee": "Query",
        "line": 605,
        "type": "direct"
      },
      {
        "callee": "Depends",
        "line": 606,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 622,
        "type": "attribute"
      },
      {
        "callee": "get_file",
        "line": 625,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 627,
        "type": "direct"
      },
      {
        "callee": "extract_enhanced_metadata",
        "line": 637,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 639,
        "type": "attribute"
      },
      {
        "callee": "EnhancedFileMetadata",
        "line": 641,
        "type": "direct"
      },
      {
        "callee": "EnhancedFileMetadata",
        "line": 648,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 653,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 653,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 654,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 656,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 602,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\files.py:analyze_file": [
      {
        "callee": "Query",
        "line": 663,
        "type": "direct"
      },
      {
        "callee": "Depends",
        "line": 664,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 676,
        "type": "attribute"
      },
      {
        "callee": "get_enhanced_metadata",
        "line": 679,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 703,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 710,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 719,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 727,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 735,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 742,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 756,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 756,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 757,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 759,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 660,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\files.py:check_printer_compatibility": [
      {
        "callee": "Depends",
        "line": 767,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 779,
        "type": "attribute"
      },
      {
        "callee": "get_enhanced_metadata",
        "line": 782,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 804,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 811,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 818,
        "type": "attribute"
      },
      {
        "callee": "any",
        "line": 820,
        "type": "direct"
      },
      {
        "callee": "lower",
        "line": 820,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 821,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 831,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 831,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 832,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 834,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 763,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\health.py:health_check": [
      {
        "callee": "Depends",
        "line": 40,
        "type": "direct"
      },
      {
        "callee": "Depends",
        "line": 41,
        "type": "direct"
      },
      {
        "callee": "health_check",
        "line": 49,
        "type": "attribute"
      },
      {
        "callee": "getattr",
        "line": 52,
        "type": "direct"
      },
      {
        "callee": "getattr",
        "line": 53,
        "type": "direct"
      },
      {
        "callee": "getattr",
        "line": 54,
        "type": "direct"
      },
      {
        "callee": "getattr",
        "line": 55,
        "type": "direct"
      },
      {
        "callee": "hasattr",
        "line": 70,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 70,
        "type": "direct"
      },
      {
        "callee": "hasattr",
        "line": 75,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 81,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 106,
        "type": "direct"
      },
      {
        "callee": "values",
        "line": 121,
        "type": "attribute"
      },
      {
        "callee": "all",
        "line": 122,
        "type": "direct"
      },
      {
        "callee": "any",
        "line": 124,
        "type": "direct"
      },
      {
        "callee": "HealthResponse",
        "line": 132,
        "type": "direct"
      },
      {
        "callee": "now",
        "line": 134,
        "type": "attribute"
      },
      {
        "callee": "getattr",
        "line": 136,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 147,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 147,
        "type": "direct"
      },
      {
        "callee": "HealthResponse",
        "line": 151,
        "type": "direct"
      },
      {
        "callee": "now",
        "line": 153,
        "type": "attribute"
      },
      {
        "callee": "getattr",
        "line": 155,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 157,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 37,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\health.py:readiness_check": [
      {
        "callee": "get",
        "line": 161,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\health.py:liveness_check": [
      {
        "callee": "get",
        "line": 170,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\idea_url.py:validate_url": [
      {
        "callee": "Depends",
        "line": 22,
        "type": "direct"
      },
      {
        "callee": "validate_url",
        "line": 26,
        "type": "attribute"
      },
      {
        "callee": "detect_platform",
        "line": 27,
        "type": "attribute"
      },
      {
        "callee": "get_supported_platforms",
        "line": 32,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 36,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 19,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\idea_url.py:preview_url": [
      {
        "callee": "Depends",
        "line": 45,
        "type": "direct"
      },
      {
        "callee": "_extract_url_metadata",
        "line": 49,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 51,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 60,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 61,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 62,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 63,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 70,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 42,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\idea_url.py:get_supported_platforms": [
      {
        "callee": "Depends",
        "line": 78,
        "type": "direct"
      },
      {
        "callee": "get_supported_platforms",
        "line": 82,
        "type": "attribute"
      },
      {
        "callee": "get_platform_info",
        "line": 86,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 87,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 95,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 76,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\ideas.py:create_idea": [
      {
        "callee": "Depends",
        "line": 73,
        "type": "direct"
      },
      {
        "callee": "create_idea",
        "line": 77,
        "type": "attribute"
      },
      {
        "callee": "dict",
        "line": 77,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 79,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 87,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 89,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 92,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 70,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\ideas.py:list_ideas": [
      {
        "callee": "Query",
        "line": 100,
        "type": "direct"
      },
      {
        "callee": "Query",
        "line": 101,
        "type": "direct"
      },
      {
        "callee": "Query",
        "line": 102,
        "type": "direct"
      },
      {
        "callee": "Query",
        "line": 103,
        "type": "direct"
      },
      {
        "callee": "Query",
        "line": 104,
        "type": "direct"
      },
      {
        "callee": "Query",
        "line": 105,
        "type": "direct"
      },
      {
        "callee": "Depends",
        "line": 106,
        "type": "direct"
      },
      {
        "callee": "list_ideas",
        "line": 120,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 124,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 98,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\ideas.py:get_idea": [
      {
        "callee": "Depends",
        "line": 133,
        "type": "direct"
      },
      {
        "callee": "get_idea",
        "line": 137,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 139,
        "type": "direct"
      },
      {
        "callee": "to_dict",
        "line": 144,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 149,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 130,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\ideas.py:update_idea": [
      {
        "callee": "Depends",
        "line": 159,
        "type": "direct"
      },
      {
        "callee": "get_idea",
        "line": 164,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 166,
        "type": "direct"
      },
      {
        "callee": "dict",
        "line": 172,
        "type": "attribute"
      },
      {
        "callee": "update_idea",
        "line": 173,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 176,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 186,
        "type": "direct"
      },
      {
        "callee": "put",
        "line": 155,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\ideas.py:delete_idea": [
      {
        "callee": "Depends",
        "line": 195,
        "type": "direct"
      },
      {
        "callee": "get_idea",
        "line": 200,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 202,
        "type": "direct"
      },
      {
        "callee": "delete_idea",
        "line": 207,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 209,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 219,
        "type": "direct"
      },
      {
        "callee": "delete",
        "line": 192,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\ideas.py:update_idea_status": [
      {
        "callee": "Depends",
        "line": 229,
        "type": "direct"
      },
      {
        "callee": "get_idea",
        "line": 234,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 236,
        "type": "direct"
      },
      {
        "callee": "update_idea_status",
        "line": 241,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 243,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 253,
        "type": "direct"
      },
      {
        "callee": "patch",
        "line": 225,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\ideas.py:import_idea_from_url": [
      {
        "callee": "Depends",
        "line": 262,
        "type": "direct"
      },
      {
        "callee": "dict",
        "line": 266,
        "type": "attribute"
      },
      {
        "callee": "import_from_url",
        "line": 267,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 267,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 270,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 280,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 259,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\ideas.py:get_all_tags": [
      {
        "callee": "Depends",
        "line": 288,
        "type": "direct"
      },
      {
        "callee": "get_all_tags",
        "line": 292,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 294,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 286,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\ideas.py:get_idea_statistics": [
      {
        "callee": "Depends",
        "line": 302,
        "type": "direct"
      },
      {
        "callee": "get_statistics",
        "line": 306,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 308,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 300,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\ideas.py:search_ideas": [
      {
        "callee": "Query",
        "line": 316,
        "type": "direct"
      },
      {
        "callee": "Query",
        "line": 317,
        "type": "direct"
      },
      {
        "callee": "Query",
        "line": 318,
        "type": "direct"
      },
      {
        "callee": "Query",
        "line": 319,
        "type": "direct"
      },
      {
        "callee": "Depends",
        "line": 320,
        "type": "direct"
      },
      {
        "callee": "search_ideas",
        "line": 332,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 334,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 314,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\ideas.py:get_trending_models": [
      {
        "callee": "Query",
        "line": 344,
        "type": "direct"
      },
      {
        "callee": "Depends",
        "line": 345,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 350,
        "type": "direct"
      },
      {
        "callee": "get_trending",
        "line": 356,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 361,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 341,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\ideas.py:save_trending_as_idea": [
      {
        "callee": "Depends",
        "line": 371,
        "type": "direct"
      },
      {
        "callee": "save_trending_as_idea",
        "line": 375,
        "type": "attribute"
      },
      {
        "callee": "dict",
        "line": 375,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 378,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 388,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 367,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\ideas.py:refresh_trending_cache": [
      {
        "callee": "Depends",
        "line": 396,
        "type": "direct"
      },
      {
        "callee": "cleanup_expired_trending",
        "line": 402,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 407,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 415,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 394,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\jobs.py:_transform_job_to_response": [
      {
        "callee": "copy",
        "line": 56,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 63,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 64,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 68,
        "type": "attribute"
      },
      {
        "callee": "isinstance",
        "line": 69,
        "type": "direct"
      },
      {
        "callee": "isoformat",
        "line": 69,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 69,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 71,
        "type": "attribute"
      },
      {
        "callee": "isinstance",
        "line": 72,
        "type": "direct"
      },
      {
        "callee": "isoformat",
        "line": 72,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 72,
        "type": "direct"
      }
    ],
    "src\\api\\routers\\jobs.py:list_jobs": [
      {
        "callee": "Query",
        "line": 79,
        "type": "direct"
      },
      {
        "callee": "Query",
        "line": 80,
        "type": "direct"
      },
      {
        "callee": "Query",
        "line": 81,
        "type": "direct"
      },
      {
        "callee": "Query",
        "line": 82,
        "type": "direct"
      },
      {
        "callee": "Query",
        "line": 83,
        "type": "direct"
      },
      {
        "callee": "Depends",
        "line": 84,
        "type": "direct"
      },
      {
        "callee": "list_jobs",
        "line": 88,
        "type": "attribute"
      },
      {
        "callee": "model_validate",
        "line": 95,
        "type": "attribute"
      },
      {
        "callee": "_transform_job_to_response",
        "line": 95,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 97,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 97,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 98,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 77,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\jobs.py:get_job": [
      {
        "callee": "Depends",
        "line": 107,
        "type": "direct"
      },
      {
        "callee": "get_job",
        "line": 111,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 113,
        "type": "direct"
      },
      {
        "callee": "model_validate",
        "line": 117,
        "type": "attribute"
      },
      {
        "callee": "_transform_job_to_response",
        "line": 117,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 121,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 121,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 121,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 122,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 104,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\jobs.py:delete_job": [
      {
        "callee": "Depends",
        "line": 131,
        "type": "direct"
      },
      {
        "callee": "delete_job",
        "line": 135,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 137,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 144,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 144,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 144,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 145,
        "type": "direct"
      },
      {
        "callee": "delete",
        "line": 128,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\library.py:get_library_service": [
      {
        "callee": "hasattr",
        "line": 85,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 86,
        "type": "direct"
      }
    ],
    "src\\api\\routers\\library.py:list_library_files": [
      {
        "callee": "Query",
        "line": 92,
        "type": "direct"
      },
      {
        "callee": "Query",
        "line": 93,
        "type": "direct"
      },
      {
        "callee": "Query",
        "line": 94,
        "type": "direct"
      },
      {
        "callee": "Query",
        "line": 95,
        "type": "direct"
      },
      {
        "callee": "Query",
        "line": 96,
        "type": "direct"
      },
      {
        "callee": "Query",
        "line": 97,
        "type": "direct"
      },
      {
        "callee": "Query",
        "line": 98,
        "type": "direct"
      },
      {
        "callee": "Query",
        "line": 99,
        "type": "direct"
      },
      {
        "callee": "Query",
        "line": 100,
        "type": "direct"
      },
      {
        "callee": "Query",
        "line": 101,
        "type": "direct"
      },
      {
        "callee": "Query",
        "line": 102,
        "type": "direct"
      },
      {
        "callee": "Query",
        "line": 103,
        "type": "direct"
      },
      {
        "callee": "Depends",
        "line": 104,
        "type": "direct"
      },
      {
        "callee": "list_files",
        "line": 155,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 163,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 163,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 164,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 164,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 90,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\library.py:get_library_file": [
      {
        "callee": "PathParam",
        "line": 169,
        "type": "direct"
      },
      {
        "callee": "Depends",
        "line": 170,
        "type": "direct"
      },
      {
        "callee": "get_file_by_checksum",
        "line": 188,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 191,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 201,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 201,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 202,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 202,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 167,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\library.py:reprocess_library_file": [
      {
        "callee": "PathParam",
        "line": 207,
        "type": "direct"
      },
      {
        "callee": "Depends",
        "line": 208,
        "type": "direct"
      },
      {
        "callee": "get_file_by_checksum",
        "line": 238,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 240,
        "type": "direct"
      },
      {
        "callee": "reprocess_file",
        "line": 246,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 249,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 263,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 263,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 264,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 264,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 205,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\library.py:delete_library_file": [
      {
        "callee": "PathParam",
        "line": 269,
        "type": "direct"
      },
      {
        "callee": "Query",
        "line": 270,
        "type": "direct"
      },
      {
        "callee": "Depends",
        "line": 271,
        "type": "direct"
      },
      {
        "callee": "get_file_by_checksum",
        "line": 299,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 301,
        "type": "direct"
      },
      {
        "callee": "delete_file",
        "line": 307,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 310,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 324,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 324,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 325,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 325,
        "type": "direct"
      },
      {
        "callee": "delete",
        "line": 267,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\library.py:get_library_statistics": [
      {
        "callee": "Depends",
        "line": 330,
        "type": "direct"
      },
      {
        "callee": "get_library_statistics",
        "line": 353,
        "type": "attribute"
      },
      {
        "callee": "LibraryStatsResponse",
        "line": 356,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 357,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 358,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 359,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 360,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 361,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 362,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 363,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 364,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 365,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 366,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 370,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 370,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 371,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 371,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 328,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\library.py:library_health_check": [
      {
        "callee": "Depends",
        "line": 375,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 396,
        "type": "direct"
      },
      {
        "callee": "exists",
        "line": 401,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 405,
        "type": "direct"
      },
      {
        "callee": "get_library_statistics",
        "line": 410,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 415,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 416,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 421,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 421,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 425,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 426,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 374,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\materials.py:get_materials": [
      {
        "callee": "Depends",
        "line": 70,
        "type": "direct"
      },
      {
        "callee": "get_all_materials",
        "line": 74,
        "type": "attribute"
      },
      {
        "callee": "MaterialResponse",
        "line": 89,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 110,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 110,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 63,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\materials.py:get_material_stats": [
      {
        "callee": "Depends",
        "line": 115,
        "type": "direct"
      },
      {
        "callee": "get_statistics",
        "line": 119,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 121,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 121,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 113,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\materials.py:get_material_types": [
      {
        "callee": "get",
        "line": 124,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\materials.py:get_consumption_report": [
      {
        "callee": "Query",
        "line": 136,
        "type": "direct"
      },
      {
        "callee": "Query",
        "line": 137,
        "type": "direct"
      },
      {
        "callee": "Depends",
        "line": 138,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 143,
        "type": "direct"
      },
      {
        "callee": "generate_report",
        "line": 145,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 149,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 149,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 134,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\materials.py:export_inventory": [
      {
        "callee": "Query",
        "line": 154,
        "type": "direct"
      },
      {
        "callee": "Depends",
        "line": 155,
        "type": "direct"
      },
      {
        "callee": "Path",
        "line": 159,
        "type": "direct"
      },
      {
        "callee": "now",
        "line": 159,
        "type": "attribute"
      },
      {
        "callee": "mkdir",
        "line": 160,
        "type": "attribute"
      },
      {
        "callee": "export_inventory",
        "line": 163,
        "type": "attribute"
      },
      {
        "callee": "FileResponse",
        "line": 165,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 166,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 172,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 174,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 178,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 178,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 152,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\materials.py:get_material": [
      {
        "callee": "Depends",
        "line": 184,
        "type": "direct"
      },
      {
        "callee": "get_material",
        "line": 188,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 190,
        "type": "direct"
      },
      {
        "callee": "MaterialResponse",
        "line": 192,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 213,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 213,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 181,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\materials.py:create_material": [
      {
        "callee": "Depends",
        "line": 219,
        "type": "direct"
      },
      {
        "callee": "create_material",
        "line": 223,
        "type": "attribute"
      },
      {
        "callee": "MaterialResponse",
        "line": 225,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 244,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 244,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 246,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 246,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 216,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\materials.py:update_material": [
      {
        "callee": "Depends",
        "line": 253,
        "type": "direct"
      },
      {
        "callee": "update_material",
        "line": 257,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 259,
        "type": "direct"
      },
      {
        "callee": "MaterialResponse",
        "line": 261,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 282,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 282,
        "type": "direct"
      },
      {
        "callee": "patch",
        "line": 249,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\materials.py:record_consumption": [
      {
        "callee": "Depends",
        "line": 288,
        "type": "direct"
      },
      {
        "callee": "record_consumption",
        "line": 292,
        "type": "attribute"
      },
      {
        "callee": "float",
        "line": 308,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 313,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 313,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 315,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 315,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 285,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\materials.py:delete_material": [
      {
        "callee": "Depends",
        "line": 321,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 325,
        "type": "direct"
      },
      {
        "callee": "delete",
        "line": 318,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\materials.py:get_consumption_history": [
      {
        "callee": "Query",
        "line": 333,
        "type": "direct"
      },
      {
        "callee": "Depends",
        "line": 334,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 338,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 328,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\printers.py:_printer_to_response": [
      {
        "callee": "get",
        "line": 80,
        "type": "attribute"
      },
      {
        "callee": "isinstance",
        "line": 86,
        "type": "direct"
      },
      {
        "callee": "strip",
        "line": 86,
        "type": "attribute"
      },
      {
        "callee": "CurrentJobInfo",
        "line": 87,
        "type": "direct"
      },
      {
        "callee": "strip",
        "line": 88,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 103,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 104,
        "type": "direct"
      },
      {
        "callee": "PrinterResponse",
        "line": 106,
        "type": "direct"
      },
      {
        "callee": "getattr",
        "line": 114,
        "type": "direct"
      },
      {
        "callee": "getattr",
        "line": 115,
        "type": "direct"
      },
      {
        "callee": "getattr",
        "line": 116,
        "type": "direct"
      },
      {
        "callee": "getattr",
        "line": 118,
        "type": "direct"
      },
      {
        "callee": "getattr",
        "line": 119,
        "type": "direct"
      },
      {
        "callee": "isoformat",
        "line": 121,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 124,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 125,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\printers.py:list_printers": [
      {
        "callee": "Depends",
        "line": 131,
        "type": "direct"
      },
      {
        "callee": "list_printers",
        "line": 135,
        "type": "attribute"
      },
      {
        "callee": "_printer_to_response",
        "line": 136,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 138,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 138,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 139,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 129,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\printers.py:create_printer": [
      {
        "callee": "Depends",
        "line": 148,
        "type": "direct"
      },
      {
        "callee": "create_printer",
        "line": 152,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 159,
        "type": "attribute"
      },
      {
        "callee": "type",
        "line": 159,
        "type": "direct"
      },
      {
        "callee": "_printer_to_response",
        "line": 160,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 161,
        "type": "attribute"
      },
      {
        "callee": "model_dump",
        "line": 161,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 164,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 166,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 169,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 169,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 170,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 145,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\printers.py:get_printer": [
      {
        "callee": "Depends",
        "line": 179,
        "type": "direct"
      },
      {
        "callee": "get_printer",
        "line": 183,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 183,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 185,
        "type": "direct"
      },
      {
        "callee": "_printer_to_response",
        "line": 189,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 193,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 193,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 193,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 194,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 176,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\printers.py:update_printer": [
      {
        "callee": "Depends",
        "line": 204,
        "type": "direct"
      },
      {
        "callee": "update_printer",
        "line": 208,
        "type": "attribute"
      },
      {
        "callee": "model_dump",
        "line": 208,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 210,
        "type": "direct"
      },
      {
        "callee": "_printer_to_response",
        "line": 214,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 218,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 220,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 223,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 223,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 223,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 224,
        "type": "direct"
      },
      {
        "callee": "put",
        "line": 200,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\printers.py:delete_printer": [
      {
        "callee": "Depends",
        "line": 233,
        "type": "direct"
      },
      {
        "callee": "delete_printer",
        "line": 237,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 239,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 246,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 246,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 246,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 247,
        "type": "direct"
      },
      {
        "callee": "delete",
        "line": 230,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\printers.py:connect_printer": [
      {
        "callee": "Depends",
        "line": 256,
        "type": "direct"
      },
      {
        "callee": "connect_printer",
        "line": 260,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 262,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 270,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 270,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 270,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 271,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 253,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\printers.py:disconnect_printer": [
      {
        "callee": "Depends",
        "line": 280,
        "type": "direct"
      },
      {
        "callee": "disconnect_printer",
        "line": 284,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 287,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 287,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 287,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 288,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 277,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\printers.py:pause_printer": [
      {
        "callee": "Depends",
        "line": 297,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 301,
        "type": "direct"
      },
      {
        "callee": "pause_printer",
        "line": 302,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 304,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 312,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 312,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 312,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 313,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 294,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\printers.py:resume_printer": [
      {
        "callee": "Depends",
        "line": 322,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 326,
        "type": "direct"
      },
      {
        "callee": "resume_printer",
        "line": 327,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 329,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 337,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 337,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 337,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 338,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 319,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\printers.py:stop_printer": [
      {
        "callee": "Depends",
        "line": 347,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 351,
        "type": "direct"
      },
      {
        "callee": "stop_printer",
        "line": 352,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 354,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 362,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 362,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 362,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 363,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 344,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\printers.py:download_current_job_file": [
      {
        "callee": "Depends",
        "line": 372,
        "type": "direct"
      },
      {
        "callee": "download_current_job_file",
        "line": 385,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 385,
        "type": "direct"
      },
      {
        "callee": "isinstance",
        "line": 387,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 393,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 393,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 393,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 394,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 369,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\printers.py:get_printer_files": [
      {
        "callee": "Depends",
        "line": 400,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 404,
        "type": "direct"
      },
      {
        "callee": "get_printer_files",
        "line": 405,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 410,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 410,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 410,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 411,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 397,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\printers.py:start_printer_monitoring": [
      {
        "callee": "Depends",
        "line": 420,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 424,
        "type": "direct"
      },
      {
        "callee": "start_printer_monitoring",
        "line": 425,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 427,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 435,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 435,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 435,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 436,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 417,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\printers.py:stop_printer_monitoring": [
      {
        "callee": "Depends",
        "line": 445,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 449,
        "type": "direct"
      },
      {
        "callee": "stop_printer_monitoring",
        "line": 450,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 452,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 460,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 460,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 460,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 461,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 442,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\printers.py:download_printer_file": [
      {
        "callee": "Depends",
        "line": 471,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 475,
        "type": "direct"
      },
      {
        "callee": "download_printer_file",
        "line": 476,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 478,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 486,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 486,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 486,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 487,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 467,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\printers.py:get_printer_current_thumbnail": [
      {
        "callee": "Depends",
        "line": 496,
        "type": "direct"
      },
      {
        "callee": "get_printer",
        "line": 505,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 505,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 507,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 509,
        "type": "attribute"
      },
      {
        "callee": "getattr",
        "line": 510,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 511,
        "type": "direct"
      },
      {
        "callee": "getattr",
        "line": 514,
        "type": "direct"
      },
      {
        "callee": "getattr",
        "line": 515,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 517,
        "type": "direct"
      },
      {
        "callee": "getattr",
        "line": 520,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 522,
        "type": "direct"
      },
      {
        "callee": "get_file_by_id",
        "line": 524,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 526,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 528,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 528,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 529,
        "type": "direct"
      },
      {
        "callee": "b64decode",
        "line": 533,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 535,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 537,
        "type": "attribute"
      },
      {
        "callee": "Response",
        "line": 538,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 549,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 549,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 549,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 550,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 493,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\settings.py:get_application_settings": [
      {
        "callee": "Depends",
        "line": 98,
        "type": "direct"
      },
      {
        "callee": "get_application_settings",
        "line": 102,
        "type": "attribute"
      },
      {
        "callee": "ApplicationSettingsResponse",
        "line": 103,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 105,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 105,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 106,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 96,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\settings.py:update_application_settings": [
      {
        "callee": "Depends",
        "line": 115,
        "type": "direct"
      },
      {
        "callee": "dict",
        "line": 120,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 121,
        "type": "attribute"
      },
      {
        "callee": "items",
        "line": 122,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 123,
        "type": "attribute"
      },
      {
        "callee": "update_application_settings",
        "line": 125,
        "type": "attribute"
      },
      {
        "callee": "list",
        "line": 128,
        "type": "direct"
      },
      {
        "callee": "keys",
        "line": 128,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 133,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 133,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 134,
        "type": "direct"
      },
      {
        "callee": "put",
        "line": 112,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\settings.py:get_printer_configurations": [
      {
        "callee": "Depends",
        "line": 142,
        "type": "direct"
      },
      {
        "callee": "get_printers",
        "line": 146,
        "type": "attribute"
      },
      {
        "callee": "dict",
        "line": 148,
        "type": "attribute"
      },
      {
        "callee": "PrinterConfigResponse",
        "line": 148,
        "type": "direct"
      },
      {
        "callee": "items",
        "line": 155,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 158,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 158,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 159,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 140,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\settings.py:add_or_update_printer": [
      {
        "callee": "Depends",
        "line": 169,
        "type": "direct"
      },
      {
        "callee": "add_printer",
        "line": 173,
        "type": "attribute"
      },
      {
        "callee": "dict",
        "line": 173,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 178,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 184,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 184,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 185,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 165,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\settings.py:remove_printer": [
      {
        "callee": "Depends",
        "line": 194,
        "type": "direct"
      },
      {
        "callee": "remove_printer",
        "line": 198,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 203,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 209,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 209,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 210,
        "type": "direct"
      },
      {
        "callee": "delete",
        "line": 191,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\settings.py:validate_printer_connection": [
      {
        "callee": "Depends",
        "line": 219,
        "type": "direct"
      },
      {
        "callee": "validate_printer_connection",
        "line": 223,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 226,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 226,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 227,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 216,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\settings.py:get_watch_folder_settings": [
      {
        "callee": "Depends",
        "line": 235,
        "type": "direct"
      },
      {
        "callee": "get_watch_folder_settings",
        "line": 239,
        "type": "attribute"
      },
      {
        "callee": "WatchFolderSettings",
        "line": 240,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 242,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 242,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 243,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 233,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\settings.py:validate_watch_folder": [
      {
        "callee": "Depends",
        "line": 252,
        "type": "direct"
      },
      {
        "callee": "validate_watch_folder",
        "line": 256,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 259,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 259,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 260,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 249,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\settings.py:get_gcode_optimization_settings": [
      {
        "callee": "Depends",
        "line": 275,
        "type": "direct"
      },
      {
        "callee": "get_settings",
        "line": 280,
        "type": "direct"
      },
      {
        "callee": "GcodeOptimizationSettings",
        "line": 282,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 288,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 288,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 289,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 291,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 273,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\settings.py:update_gcode_optimization_settings": [
      {
        "callee": "Depends",
        "line": 298,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 304,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 314,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 314,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 315,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 317,
        "type": "direct"
      },
      {
        "callee": "put",
        "line": 295,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\settings.py:reload_configuration": [
      {
        "callee": "Depends",
        "line": 323,
        "type": "direct"
      },
      {
        "callee": "reload_config",
        "line": 327,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 332,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 338,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 338,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 339,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 321,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\system.py:get_system_info": [
      {
        "callee": "Depends",
        "line": 26,
        "type": "direct"
      },
      {
        "callee": "get_system_info",
        "line": 30,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 33,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 33,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 34,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 24,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\system.py:create_backup": [
      {
        "callee": "Depends",
        "line": 42,
        "type": "direct"
      },
      {
        "callee": "create_backup",
        "line": 46,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 49,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 49,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 50,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 40,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\trending.py:get_trending": [
      {
        "callee": "Query",
        "line": 53,
        "type": "direct"
      },
      {
        "callee": "Query",
        "line": 54,
        "type": "direct"
      },
      {
        "callee": "Query",
        "line": 55,
        "type": "direct"
      },
      {
        "callee": "Depends",
        "line": 56,
        "type": "direct"
      },
      {
        "callee": "get_trending",
        "line": 60,
        "type": "attribute"
      },
      {
        "callee": "TrendingModel",
        "line": 67,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 73,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 74,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 75,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 76,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 77,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 78,
        "type": "attribute"
      },
      {
        "callee": "fromisoformat",
        "line": 79,
        "type": "attribute"
      },
      {
        "callee": "fromisoformat",
        "line": 80,
        "type": "attribute"
      },
      {
        "callee": "isinstance",
        "line": 81,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 81,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 81,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 87,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 87,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 51,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\trending.py:get_supported_platforms": [
      {
        "callee": "get",
        "line": 90,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\trending.py:get_trending_stats": [
      {
        "callee": "Depends",
        "line": 113,
        "type": "direct"
      },
      {
        "callee": "get_statistics",
        "line": 117,
        "type": "attribute"
      },
      {
        "callee": "TrendingStats",
        "line": 118,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 120,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 120,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 111,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\trending.py:refresh_trending": [
      {
        "callee": "Query",
        "line": 125,
        "type": "direct"
      },
      {
        "callee": "Depends",
        "line": 126,
        "type": "direct"
      },
      {
        "callee": "fetch_makerworld_trending",
        "line": 133,
        "type": "attribute"
      },
      {
        "callee": "save_trending_items",
        "line": 134,
        "type": "attribute"
      },
      {
        "callee": "fetch_printables_trending",
        "line": 136,
        "type": "attribute"
      },
      {
        "callee": "save_trending_items",
        "line": 137,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 139,
        "type": "direct"
      },
      {
        "callee": "locals",
        "line": 143,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 143,
        "type": "direct"
      },
      {
        "callee": "refresh_all_platforms",
        "line": 147,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 153,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 153,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 123,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\trending.py:save_trending_as_idea": [
      {
        "callee": "Depends",
        "line": 160,
        "type": "direct"
      },
      {
        "callee": "save_as_idea",
        "line": 164,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 176,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 176,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 178,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 178,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 156,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\trending.py:get_platform_trending": [
      {
        "callee": "Query",
        "line": 184,
        "type": "direct"
      },
      {
        "callee": "Query",
        "line": 185,
        "type": "direct"
      },
      {
        "callee": "Depends",
        "line": 186,
        "type": "direct"
      },
      {
        "callee": "HTTPException",
        "line": 192,
        "type": "direct"
      },
      {
        "callee": "get_trending",
        "line": 195,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 203,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 210,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 211,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 212,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 213,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 221,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 221,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 181,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\trending.py:cleanup_expired": [
      {
        "callee": "Depends",
        "line": 226,
        "type": "direct"
      },
      {
        "callee": "cleanup_expired",
        "line": 230,
        "type": "attribute"
      },
      {
        "callee": "HTTPException",
        "line": 232,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 232,
        "type": "direct"
      },
      {
        "callee": "delete",
        "line": 224,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\trending.py:get_trending_categories": [
      {
        "callee": "Query",
        "line": 237,
        "type": "direct"
      },
      {
        "callee": "Depends",
        "line": 238,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 235,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\websocket.py:ConnectionManager.__init__": [
      {
        "callee": "set",
        "line": 22,
        "type": "direct"
      }
    ],
    "src\\api\\routers\\websocket.py:ConnectionManager.connect": [
      {
        "callee": "accept",
        "line": 26,
        "type": "attribute"
      },
      {
        "callee": "add",
        "line": 27,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 28,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 28,
        "type": "direct"
      }
    ],
    "src\\api\\routers\\websocket.py:ConnectionManager.disconnect": [
      {
        "callee": "discard",
        "line": 31,
        "type": "attribute"
      },
      {
        "callee": "items",
        "line": 33,
        "type": "attribute"
      },
      {
        "callee": "discard",
        "line": 34,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 35,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 35,
        "type": "direct"
      }
    ],
    "src\\api\\routers\\websocket.py:ConnectionManager.broadcast": [
      {
        "callee": "dumps",
        "line": 42,
        "type": "attribute"
      },
      {
        "callee": "set",
        "line": 43,
        "type": "direct"
      },
      {
        "callee": "send_text",
        "line": 47,
        "type": "attribute"
      },
      {
        "callee": "add",
        "line": 49,
        "type": "attribute"
      },
      {
        "callee": "disconnect",
        "line": 53,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\websocket.py:ConnectionManager.send_to_printer_subscribers": [
      {
        "callee": "get",
        "line": 57,
        "type": "attribute"
      },
      {
        "callee": "set",
        "line": 57,
        "type": "direct"
      },
      {
        "callee": "dumps",
        "line": 61,
        "type": "attribute"
      },
      {
        "callee": "set",
        "line": 62,
        "type": "direct"
      },
      {
        "callee": "send_text",
        "line": 66,
        "type": "attribute"
      },
      {
        "callee": "add",
        "line": 68,
        "type": "attribute"
      },
      {
        "callee": "discard",
        "line": 72,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\websocket.py:ConnectionManager.subscribe_to_printer": [
      {
        "callee": "set",
        "line": 77,
        "type": "direct"
      },
      {
        "callee": "add",
        "line": 78,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\websocket.py:ConnectionManager.unsubscribe_from_printer": [
      {
        "callee": "discard",
        "line": 83,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\websocket.py:websocket_endpoint": [
      {
        "callee": "_handle_websocket_connection",
        "line": 93,
        "type": "direct"
      },
      {
        "callee": "websocket",
        "line": 89,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\websocket.py:websocket_endpoint_no_slash": [
      {
        "callee": "_handle_websocket_connection",
        "line": 99,
        "type": "direct"
      },
      {
        "callee": "websocket",
        "line": 95,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\websocket.py:_handle_websocket_connection": [
      {
        "callee": "connect",
        "line": 103,
        "type": "attribute"
      },
      {
        "callee": "receive_text",
        "line": 108,
        "type": "attribute"
      },
      {
        "callee": "loads",
        "line": 110,
        "type": "attribute"
      },
      {
        "callee": "handle_client_message",
        "line": 111,
        "type": "direct"
      },
      {
        "callee": "send_text",
        "line": 113,
        "type": "attribute"
      },
      {
        "callee": "dumps",
        "line": 113,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 118,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 118,
        "type": "direct"
      },
      {
        "callee": "send_text",
        "line": 119,
        "type": "attribute"
      },
      {
        "callee": "dumps",
        "line": 119,
        "type": "attribute"
      },
      {
        "callee": "disconnect",
        "line": 125,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\websocket.py:handle_client_message": [
      {
        "callee": "get",
        "line": 130,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 133,
        "type": "attribute"
      },
      {
        "callee": "subscribe_to_printer",
        "line": 135,
        "type": "attribute"
      },
      {
        "callee": "send_text",
        "line": 136,
        "type": "attribute"
      },
      {
        "callee": "dumps",
        "line": 136,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 142,
        "type": "attribute"
      },
      {
        "callee": "unsubscribe_from_printer",
        "line": 144,
        "type": "attribute"
      },
      {
        "callee": "send_text",
        "line": 145,
        "type": "attribute"
      },
      {
        "callee": "dumps",
        "line": 145,
        "type": "attribute"
      },
      {
        "callee": "send_text",
        "line": 151,
        "type": "attribute"
      },
      {
        "callee": "dumps",
        "line": 151,
        "type": "attribute"
      },
      {
        "callee": "send_text",
        "line": 154,
        "type": "attribute"
      },
      {
        "callee": "dumps",
        "line": 154,
        "type": "attribute"
      }
    ],
    "src\\api\\routers\\websocket.py:broadcast_printer_status": [
      {
        "callee": "send_to_printer_subscribers",
        "line": 163,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 163,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 165,
        "type": "direct"
      }
    ],
    "src\\api\\routers\\websocket.py:broadcast_job_update": [
      {
        "callee": "broadcast",
        "line": 172,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 174,
        "type": "direct"
      }
    ],
    "src\\api\\routers\\websocket.py:broadcast_system_event": [
      {
        "callee": "broadcast",
        "line": 181,
        "type": "attribute"
      }
    ],
    "src\\database\\database.py:Database.__init__": [
      {
        "callee": "Path",
        "line": 25,
        "type": "direct"
      },
      {
        "callee": "Path",
        "line": 27,
        "type": "direct"
      },
      {
        "callee": "mkdir",
        "line": 28,
        "type": "attribute"
      }
    ],
    "src\\database\\database.py:Database.initialize": [
      {
        "callee": "info",
        "line": 33,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 33,
        "type": "direct"
      },
      {
        "callee": "connect",
        "line": 35,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 35,
        "type": "direct"
      },
      {
        "callee": "_create_tables",
        "line": 39,
        "type": "attribute"
      },
      {
        "callee": "_run_migrations",
        "line": 42,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 44,
        "type": "attribute"
      }
    ],
    "src\\database\\database.py:Database._create_tables": [
      {
        "callee": "cursor",
        "line": 48,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 50,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 74,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 97,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 100,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 103,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 108,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 132,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 152,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 162,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 163,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 164,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 165,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 166,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 169,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 186,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 187,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 188,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 189,
        "type": "attribute"
      },
      {
        "callee": "commit",
        "line": 191,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 192,
        "type": "attribute"
      }
    ],
    "src\\database\\database.py:Database._execute_write": [
      {
        "callee": "RuntimeError",
        "line": 210,
        "type": "direct"
      },
      {
        "callee": "perf_counter",
        "line": 214,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 216,
        "type": "attribute"
      },
      {
        "callee": "commit",
        "line": 218,
        "type": "attribute"
      },
      {
        "callee": "perf_counter",
        "line": 219,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 220,
        "type": "attribute"
      },
      {
        "callee": "split",
        "line": 220,
        "type": "attribute"
      },
      {
        "callee": "round",
        "line": 220,
        "type": "direct"
      },
      {
        "callee": "warning",
        "line": 224,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 224,
        "type": "direct"
      },
      {
        "callee": "sleep",
        "line": 225,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 229,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 229,
        "type": "direct"
      },
      {
        "callee": "split",
        "line": 229,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 232,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 232,
        "type": "direct"
      }
    ],
    "src\\database\\database.py:Database._fetch_one": [
      {
        "callee": "RuntimeError",
        "line": 237,
        "type": "direct"
      },
      {
        "callee": "perf_counter",
        "line": 238,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 240,
        "type": "attribute"
      },
      {
        "callee": "fetchone",
        "line": 241,
        "type": "attribute"
      },
      {
        "callee": "perf_counter",
        "line": 242,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 243,
        "type": "attribute"
      },
      {
        "callee": "split",
        "line": 243,
        "type": "attribute"
      },
      {
        "callee": "bool",
        "line": 243,
        "type": "direct"
      },
      {
        "callee": "round",
        "line": 243,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 246,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 246,
        "type": "direct"
      },
      {
        "callee": "split",
        "line": 246,
        "type": "attribute"
      }
    ],
    "src\\database\\database.py:Database._fetch_all": [
      {
        "callee": "RuntimeError",
        "line": 251,
        "type": "direct"
      },
      {
        "callee": "perf_counter",
        "line": 252,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 254,
        "type": "attribute"
      },
      {
        "callee": "fetchall",
        "line": 255,
        "type": "attribute"
      },
      {
        "callee": "perf_counter",
        "line": 256,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 257,
        "type": "attribute"
      },
      {
        "callee": "split",
        "line": 257,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 257,
        "type": "direct"
      },
      {
        "callee": "round",
        "line": 257,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 260,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 260,
        "type": "direct"
      },
      {
        "callee": "split",
        "line": 260,
        "type": "attribute"
      }
    ],
    "src\\database\\database.py:Database.close": [
      {
        "callee": "close",
        "line": 266,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 267,
        "type": "attribute"
      }
    ],
    "src\\database\\database.py:Database.get_connection": [
      {
        "callee": "RuntimeError",
        "line": 272,
        "type": "direct"
      }
    ],
    "src\\database\\database.py:Database.connection": [
      {
        "callee": "RuntimeError",
        "line": 279,
        "type": "direct"
      }
    ],
    "src\\database\\database.py:Database.health_check": [
      {
        "callee": "execute",
        "line": 288,
        "type": "attribute"
      },
      {
        "callee": "fetchone",
        "line": 289,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 292,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 292,
        "type": "direct"
      }
    ],
    "src\\database\\database.py:Database.transaction": [
      {
        "callee": "RuntimeError",
        "line": 299,
        "type": "direct"
      }
    ],
    "src\\database\\database.py:Database.create_printer": [
      {
        "callee": "_execute_write",
        "line": 307,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 314,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 315,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 316,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 317,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 318,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 322,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 322,
        "type": "direct"
      }
    ],
    "src\\database\\database.py:Database.get_printer": [
      {
        "callee": "_fetch_one",
        "line": 328,
        "type": "attribute"
      },
      {
        "callee": "dict",
        "line": 329,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 331,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 331,
        "type": "direct"
      }
    ],
    "src\\database\\database.py:Database.list_printers": [
      {
        "callee": "_fetch_all",
        "line": 341,
        "type": "attribute"
      },
      {
        "callee": "dict",
        "line": 342,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 344,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 344,
        "type": "direct"
      }
    ],
    "src\\database\\database.py:Database.update_printer_status": [
      {
        "callee": "now",
        "line": 351,
        "type": "attribute"
      },
      {
        "callee": "_execute_write",
        "line": 352,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 354,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 357,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 357,
        "type": "direct"
      }
    ],
    "src\\database\\database.py:Database.create_job": [
      {
        "callee": "_execute_write",
        "line": 364,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 373,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 374,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 375,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 376,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 377,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 381,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 381,
        "type": "direct"
      }
    ],
    "src\\database\\database.py:Database.get_job": [
      {
        "callee": "execute",
        "line": 387,
        "type": "attribute"
      },
      {
        "callee": "fetchone",
        "line": 390,
        "type": "attribute"
      },
      {
        "callee": "dict",
        "line": 391,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 393,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 393,
        "type": "direct"
      }
    ],
    "src\\database\\database.py:Database.list_jobs": [
      {
        "callee": "append",
        "line": 406,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 407,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 409,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 410,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 412,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 413,
        "type": "attribute"
      },
      {
        "callee": "int",
        "line": 413,
        "type": "direct"
      },
      {
        "callee": "join",
        "line": 416,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 423,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 426,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 428,
        "type": "attribute"
      },
      {
        "callee": "fetchall",
        "line": 429,
        "type": "attribute"
      },
      {
        "callee": "dict",
        "line": 430,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 432,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 432,
        "type": "direct"
      }
    ],
    "src\\database\\database.py:Database.get_jobs_by_date_range": [
      {
        "callee": "append",
        "line": 444,
        "type": "attribute"
      },
      {
        "callee": "int",
        "line": 444,
        "type": "direct"
      },
      {
        "callee": "execute",
        "line": 448,
        "type": "attribute"
      },
      {
        "callee": "fetchall",
        "line": 449,
        "type": "attribute"
      },
      {
        "callee": "dict",
        "line": 450,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 452,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 452,
        "type": "direct"
      }
    ],
    "src\\database\\database.py:Database.get_job_statistics": [
      {
        "callee": "execute",
        "line": 461,
        "type": "attribute"
      },
      {
        "callee": "fetchall",
        "line": 466,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 471,
        "type": "attribute"
      },
      {
        "callee": "fetchall",
        "line": 476,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 482,
        "type": "attribute"
      },
      {
        "callee": "fetchone",
        "line": 495,
        "type": "attribute"
      },
      {
        "callee": "update",
        "line": 497,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 509,
        "type": "attribute"
      },
      {
        "callee": "fetchone",
        "line": 510,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 516,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 516,
        "type": "direct"
      }
    ],
    "src\\database\\database.py:Database.update_job": [
      {
        "callee": "items",
        "line": 526,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 528,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 529,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 534,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 535,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 535,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 535,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 536,
        "type": "attribute"
      },
      {
        "callee": "join",
        "line": 538,
        "type": "attribute"
      },
      {
        "callee": "_execute_write",
        "line": 540,
        "type": "attribute"
      },
      {
        "callee": "tuple",
        "line": 540,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 542,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 542,
        "type": "direct"
      }
    ],
    "src\\database\\database.py:Database.delete_job": [
      {
        "callee": "_execute_write",
        "line": 548,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 550,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 553,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 553,
        "type": "direct"
      }
    ],
    "src\\database\\database.py:Database.create_file": [
      {
        "callee": "execute",
        "line": 563,
        "type": "attribute"
      },
      {
        "callee": "fetchone",
        "line": 564,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 569,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 570,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 571,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 572,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 576,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 578,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 582,
        "type": "attribute"
      },
      {
        "callee": "update_file",
        "line": 585,
        "type": "attribute"
      },
      {
        "callee": "_execute_write",
        "line": 588,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 595,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 597,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 598,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 599,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 600,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 601,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 602,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 603,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 604,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 605,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 606,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 610,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 610,
        "type": "direct"
      }
    ],
    "src\\database\\database.py:Database.list_files": [
      {
        "callee": "append",
        "line": 622,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 623,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 625,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 626,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 628,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 629,
        "type": "attribute"
      },
      {
        "callee": "join",
        "line": 632,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 636,
        "type": "attribute"
      },
      {
        "callee": "fetchall",
        "line": 637,
        "type": "attribute"
      },
      {
        "callee": "dict",
        "line": 640,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 642,
        "type": "attribute"
      },
      {
        "callee": "isinstance",
        "line": 642,
        "type": "direct"
      },
      {
        "callee": "loads",
        "line": 644,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 648,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 651,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 651,
        "type": "direct"
      }
    ],
    "src\\database\\database.py:Database.update_file": [
      {
        "callee": "items",
        "line": 661,
        "type": "attribute"
      },
      {
        "callee": "isinstance",
        "line": 664,
        "type": "direct"
      },
      {
        "callee": "dumps",
        "line": 665,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 667,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 668,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 673,
        "type": "attribute"
      },
      {
        "callee": "join",
        "line": 674,
        "type": "attribute"
      },
      {
        "callee": "_execute_write",
        "line": 676,
        "type": "attribute"
      },
      {
        "callee": "tuple",
        "line": 676,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 678,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 678,
        "type": "direct"
      }
    ],
    "src\\database\\database.py:Database.update_file_enhanced_metadata": [
      {
        "callee": "get",
        "line": 694,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 695,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 696,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 697,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 698,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 699,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 704,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 705,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 706,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 707,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 708,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 709,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 712,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 713,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 714,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 715,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 716,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 719,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 720,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 721,
        "type": "attribute"
      },
      {
        "callee": "dumps",
        "line": 721,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 721,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 724,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 725,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 726,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 729,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 730,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 731,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 734,
        "type": "attribute"
      },
      {
        "callee": "dumps",
        "line": 734,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 734,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 735,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 736,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 737,
        "type": "attribute"
      },
      {
        "callee": "isinstance",
        "line": 740,
        "type": "direct"
      },
      {
        "callee": "isoformat",
        "line": 740,
        "type": "attribute"
      },
      {
        "callee": "items",
        "line": 744,
        "type": "attribute"
      },
      {
        "callee": "update_file",
        "line": 747,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 750,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 750,
        "type": "direct"
      },
      {
        "callee": "isinstance",
        "line": 1347,
        "type": "direct"
      },
      {
        "callee": "isoformat",
        "line": 1347,
        "type": "attribute"
      },
      {
        "callee": "keys",
        "line": 1380,
        "type": "attribute"
      },
      {
        "callee": "join",
        "line": 1381,
        "type": "attribute"
      },
      {
        "callee": "list",
        "line": 1383,
        "type": "direct"
      },
      {
        "callee": "values",
        "line": 1383,
        "type": "attribute"
      },
      {
        "callee": "_execute_write",
        "line": 1384,
        "type": "attribute"
      },
      {
        "callee": "tuple",
        "line": 1384,
        "type": "direct"
      },
      {
        "callee": "debug",
        "line": 1387,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 1387,
        "type": "direct"
      },
      {
        "callee": "get_library_file",
        "line": 1392,
        "type": "attribute"
      },
      {
        "callee": "update_library_file",
        "line": 1394,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 1397,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 1397,
        "type": "direct"
      }
    ],
    "src\\database\\database.py:Database.create_local_file": [
      {
        "callee": "create_file",
        "line": 761,
        "type": "attribute"
      }
    ],
    "src\\database\\database.py:Database.list_local_files": [
      {
        "callee": "append",
        "line": 771,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 775,
        "type": "attribute"
      },
      {
        "callee": "fetchall",
        "line": 776,
        "type": "attribute"
      },
      {
        "callee": "dict",
        "line": 777,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 779,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 779,
        "type": "direct"
      }
    ],
    "src\\database\\database.py:Database.delete_local_file": [
      {
        "callee": "_execute_write",
        "line": 785,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 787,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 787,
        "type": "direct"
      }
    ],
    "src\\database\\database.py:Database.get_file_statistics": [
      {
        "callee": "execute",
        "line": 796,
        "type": "attribute"
      },
      {
        "callee": "fetchall",
        "line": 797,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 803,
        "type": "attribute"
      },
      {
        "callee": "fetchall",
        "line": 804,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 810,
        "type": "attribute"
      },
      {
        "callee": "fetchall",
        "line": 811,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 819,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 819,
        "type": "direct"
      }
    ],
    "src\\database\\database.py:Database.create_idea": [
      {
        "callee": "_execute_write",
        "line": 826,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 834,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 835,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 836,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 837,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 838,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 839,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 840,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 841,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 842,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 843,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 844,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 845,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 846,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 850,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 850,
        "type": "direct"
      }
    ],
    "src\\database\\database.py:Database.get_idea": [
      {
        "callee": "_fetch_one",
        "line": 856,
        "type": "attribute"
      },
      {
        "callee": "dict",
        "line": 857,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 859,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 859,
        "type": "direct"
      }
    ],
    "src\\database\\database.py:Database.list_ideas": [
      {
        "callee": "append",
        "line": 872,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 873,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 875,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 876,
        "type": "attribute"
      },
      {
        "callee": "int",
        "line": 876,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 878,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 879,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 881,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 882,
        "type": "attribute"
      },
      {
        "callee": "join",
        "line": 885,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 891,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 894,
        "type": "attribute"
      },
      {
        "callee": "_fetch_all",
        "line": 896,
        "type": "attribute"
      },
      {
        "callee": "dict",
        "line": 897,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 899,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 899,
        "type": "direct"
      }
    ],
    "src\\database\\database.py:Database.update_idea": [
      {
        "callee": "items",
        "line": 908,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 910,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 911,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 916,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 917,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 917,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 917,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 918,
        "type": "attribute"
      },
      {
        "callee": "join",
        "line": 920,
        "type": "attribute"
      },
      {
        "callee": "_execute_write",
        "line": 921,
        "type": "attribute"
      },
      {
        "callee": "tuple",
        "line": 921,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 923,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 923,
        "type": "direct"
      }
    ],
    "src\\database\\database.py:Database.delete_idea": [
      {
        "callee": "_execute_write",
        "line": 930,
        "type": "attribute"
      },
      {
        "callee": "_execute_write",
        "line": 932,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 934,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 934,
        "type": "direct"
      }
    ],
    "src\\database\\database.py:Database.update_idea_status": [
      {
        "callee": "isoformat",
        "line": 941,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 941,
        "type": "attribute"
      },
      {
        "callee": "update_idea",
        "line": 942,
        "type": "attribute"
      }
    ],
    "src\\database\\database.py:Database.add_idea_tags": [
      {
        "callee": "_execute_write",
        "line": 949,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 955,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 955,
        "type": "direct"
      }
    ],
    "src\\database\\database.py:Database.remove_idea_tags": [
      {
        "callee": "_execute_write",
        "line": 962,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 968,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 968,
        "type": "direct"
      }
    ],
    "src\\database\\database.py:Database.get_idea_tags": [
      {
        "callee": "_fetch_all",
        "line": 974,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 980,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 980,
        "type": "direct"
      }
    ],
    "src\\database\\database.py:Database.get_all_tags": [
      {
        "callee": "_fetch_all",
        "line": 986,
        "type": "attribute"
      },
      {
        "callee": "dict",
        "line": 990,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 992,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 992,
        "type": "direct"
      }
    ],
    "src\\database\\database.py:Database.upsert_trending": [
      {
        "callee": "_execute_write",
        "line": 999,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1010,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1011,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1012,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1013,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1014,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1015,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 1020,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 1020,
        "type": "direct"
      }
    ],
    "src\\database\\database.py:Database.get_trending": [
      {
        "callee": "append",
        "line": 1031,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 1034,
        "type": "attribute"
      },
      {
        "callee": "_fetch_all",
        "line": 1038,
        "type": "attribute"
      },
      {
        "callee": "dict",
        "line": 1039,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 1041,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 1041,
        "type": "direct"
      }
    ],
    "src\\database\\database.py:Database.clean_expired_trending": [
      {
        "callee": "_execute_write",
        "line": 1047,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 1052,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 1052,
        "type": "direct"
      }
    ],
    "src\\database\\database.py:Database.get_idea_statistics": [
      {
        "callee": "_fetch_all",
        "line": 1061,
        "type": "attribute"
      },
      {
        "callee": "_fetch_all",
        "line": 1069,
        "type": "attribute"
      },
      {
        "callee": "_fetch_all",
        "line": 1078,
        "type": "attribute"
      },
      {
        "callee": "_fetch_one",
        "line": 1086,
        "type": "attribute"
      },
      {
        "callee": "_fetch_one",
        "line": 1090,
        "type": "attribute"
      },
      {
        "callee": "round",
        "line": 1091,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 1095,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 1095,
        "type": "direct"
      }
    ],
    "src\\database\\database.py:Database.create_library_file": [
      {
        "callee": "_execute_write",
        "line": 1105,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1115,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1120,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1122,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1123,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1124,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1125,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1126,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 1130,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 1130,
        "type": "direct"
      }
    ],
    "src\\database\\database.py:Database.get_library_file": [
      {
        "callee": "_fetch_one",
        "line": 1135,
        "type": "attribute"
      },
      {
        "callee": "dict",
        "line": 1139,
        "type": "direct"
      }
    ],
    "src\\database\\database.py:Database.get_library_file_by_checksum": [
      {
        "callee": "_fetch_one",
        "line": 1143,
        "type": "attribute"
      },
      {
        "callee": "dict",
        "line": 1147,
        "type": "direct"
      }
    ],
    "src\\database\\database.py:Database.update_library_file": [
      {
        "callee": "keys",
        "line": 1155,
        "type": "attribute"
      },
      {
        "callee": "join",
        "line": 1156,
        "type": "attribute"
      },
      {
        "callee": "list",
        "line": 1159,
        "type": "direct"
      },
      {
        "callee": "values",
        "line": 1159,
        "type": "attribute"
      },
      {
        "callee": "_execute_write",
        "line": 1161,
        "type": "attribute"
      },
      {
        "callee": "tuple",
        "line": 1161,
        "type": "direct"
      }
    ],
    "src\\database\\database.py:Database.delete_library_file": [
      {
        "callee": "_execute_write",
        "line": 1165,
        "type": "attribute"
      }
    ],
    "src\\database\\database.py:Database.list_library_files": [
      {
        "callee": "get",
        "line": 1182,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1182,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1188,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 1189,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 1190,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1192,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 1193,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 1194,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1196,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 1197,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 1198,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1200,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 1201,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 1202,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 1202,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1204,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 1205,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 1206,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1208,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 1209,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1212,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 1213,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 1214,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1216,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 1217,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 1218,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1221,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 1222,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1224,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 1225,
        "type": "attribute"
      },
      {
        "callee": "join",
        "line": 1228,
        "type": "attribute"
      },
      {
        "callee": "copy",
        "line": 1238,
        "type": "attribute"
      },
      {
        "callee": "copy",
        "line": 1242,
        "type": "attribute"
      },
      {
        "callee": "_fetch_one",
        "line": 1244,
        "type": "attribute"
      },
      {
        "callee": "extend",
        "line": 1272,
        "type": "attribute"
      },
      {
        "callee": "_fetch_all",
        "line": 1274,
        "type": "attribute"
      },
      {
        "callee": "dict",
        "line": 1275,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 1287,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 1287,
        "type": "direct"
      }
    ],
    "src\\database\\database.py:Database.create_library_file_source": [
      {
        "callee": "_execute_write",
        "line": 1293,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1301,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1302,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1303,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1304,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1306,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1307,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1308,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 1312,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 1312,
        "type": "direct"
      }
    ],
    "src\\database\\database.py:Database.get_library_file_sources": [
      {
        "callee": "_fetch_all",
        "line": 1317,
        "type": "attribute"
      },
      {
        "callee": "dict",
        "line": 1321,
        "type": "direct"
      }
    ],
    "src\\database\\database.py:Database.delete_library_file_sources": [
      {
        "callee": "_execute_write",
        "line": 1325,
        "type": "attribute"
      }
    ],
    "src\\database\\database.py:Database.get_library_stats": [
      {
        "callee": "_fetch_one",
        "line": 1333,
        "type": "attribute"
      },
      {
        "callee": "dict",
        "line": 1334,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 1336,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 1336,
        "type": "direct"
      }
    ],
    "src\\database\\database.py:Database._run_migrations": [
      {
        "callee": "cursor",
        "line": 1404,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 1406,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 1416,
        "type": "attribute"
      },
      {
        "callee": "fetchall",
        "line": 1417,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 1421,
        "type": "attribute"
      },
      {
        "callee": "fetchall",
        "line": 1422,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 1427,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 1428,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 1432,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 1433,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 1437,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 1438,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 1440,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 1444,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 1448,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 1451,
        "type": "attribute"
      },
      {
        "callee": "fetchone",
        "line": 1452,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 1456,
        "type": "attribute"
      },
      {
        "callee": "Path",
        "line": 1460,
        "type": "direct"
      },
      {
        "callee": "exists",
        "line": 1462,
        "type": "attribute"
      },
      {
        "callee": "open",
        "line": 1463,
        "type": "direct"
      },
      {
        "callee": "read",
        "line": 1464,
        "type": "attribute"
      },
      {
        "callee": "strip",
        "line": 1468,
        "type": "attribute"
      },
      {
        "callee": "split",
        "line": 1468,
        "type": "attribute"
      },
      {
        "callee": "strip",
        "line": 1468,
        "type": "attribute"
      },
      {
        "callee": "startswith",
        "line": 1471,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 1472,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 1474,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 1477,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 1478,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 1484,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 1486,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 1490,
        "type": "attribute"
      },
      {
        "callee": "commit",
        "line": 1492,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 1493,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 1496,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 1496,
        "type": "direct"
      }
    ],
    "src\\main.py:lifespan": [
      {
        "callee": "setup_logging",
        "line": 91,
        "type": "direct"
      },
      {
        "callee": "get_logger",
        "line": 92,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 93,
        "type": "attribute"
      },
      {
        "callee": "Database",
        "line": 96,
        "type": "direct"
      },
      {
        "callee": "initialize",
        "line": 97,
        "type": "attribute"
      },
      {
        "callee": "MigrationService",
        "line": 101,
        "type": "direct"
      },
      {
        "callee": "run_migrations",
        "line": 102,
        "type": "attribute"
      },
      {
        "callee": "ConfigService",
        "line": 106,
        "type": "direct"
      },
      {
        "callee": "EventService",
        "line": 107,
        "type": "direct"
      },
      {
        "callee": "PrinterService",
        "line": 108,
        "type": "direct"
      },
      {
        "callee": "LibraryService",
        "line": 112,
        "type": "direct"
      },
      {
        "callee": "initialize",
        "line": 113,
        "type": "attribute"
      },
      {
        "callee": "FileWatcherService",
        "line": 116,
        "type": "direct"
      },
      {
        "callee": "FileService",
        "line": 119,
        "type": "direct"
      },
      {
        "callee": "ThumbnailService",
        "line": 125,
        "type": "direct"
      },
      {
        "callee": "UrlParserService",
        "line": 126,
        "type": "direct"
      },
      {
        "callee": "TrendingService",
        "line": 127,
        "type": "direct"
      },
      {
        "callee": "start",
        "line": 140,
        "type": "attribute"
      },
      {
        "callee": "initialize",
        "line": 141,
        "type": "attribute"
      },
      {
        "callee": "subscribe",
        "line": 154,
        "type": "attribute"
      },
      {
        "callee": "initialize",
        "line": 157,
        "type": "attribute"
      },
      {
        "callee": "start_monitoring",
        "line": 161,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 162,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 164,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 164,
        "type": "direct"
      },
      {
        "callee": "start",
        "line": 168,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 169,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 171,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 171,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 173,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 178,
        "type": "attribute"
      },
      {
        "callee": "hasattr",
        "line": 195,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 196,
        "type": "attribute"
      },
      {
        "callee": "shutdown_with_timeout",
        "line": 197,
        "type": "direct"
      },
      {
        "callee": "shutdown",
        "line": 198,
        "type": "attribute"
      },
      {
        "callee": "hasattr",
        "line": 205,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 206,
        "type": "attribute"
      },
      {
        "callee": "shutdown_with_timeout",
        "line": 207,
        "type": "direct"
      },
      {
        "callee": "stop",
        "line": 208,
        "type": "attribute"
      },
      {
        "callee": "hasattr",
        "line": 215,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 216,
        "type": "attribute"
      },
      {
        "callee": "shutdown_with_timeout",
        "line": 217,
        "type": "direct"
      },
      {
        "callee": "cleanup",
        "line": 218,
        "type": "attribute"
      },
      {
        "callee": "hasattr",
        "line": 225,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 226,
        "type": "attribute"
      },
      {
        "callee": "shutdown_with_timeout",
        "line": 227,
        "type": "direct"
      },
      {
        "callee": "cleanup",
        "line": 228,
        "type": "attribute"
      },
      {
        "callee": "hasattr",
        "line": 235,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 236,
        "type": "attribute"
      },
      {
        "callee": "shutdown_with_timeout",
        "line": 237,
        "type": "direct"
      },
      {
        "callee": "close",
        "line": 238,
        "type": "attribute"
      },
      {
        "callee": "gather",
        "line": 246,
        "type": "attribute"
      },
      {
        "callee": "hasattr",
        "line": 249,
        "type": "direct"
      },
      {
        "callee": "shutdown_with_timeout",
        "line": 250,
        "type": "direct"
      },
      {
        "callee": "stop",
        "line": 251,
        "type": "attribute"
      },
      {
        "callee": "hasattr",
        "line": 257,
        "type": "direct"
      },
      {
        "callee": "shutdown_with_timeout",
        "line": 258,
        "type": "direct"
      },
      {
        "callee": "close",
        "line": 259,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 264,
        "type": "attribute"
      }
    ],
    "src\\main.py:_on_printer_status_update": [
      {
        "callee": "broadcast_printer_status",
        "line": 147,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 148,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 152,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 152,
        "type": "direct"
      }
    ],
    "src\\main.py:shutdown_with_timeout": [
      {
        "callee": "wait_for",
        "line": 184,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 185,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 187,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 189,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 189,
        "type": "direct"
      }
    ],
    "src\\main.py:create_application": [
      {
        "callee": "Settings",
        "line": 272,
        "type": "direct"
      },
      {
        "callee": "FastAPI",
        "line": 274,
        "type": "direct"
      },
      {
        "callee": "getenv",
        "line": 278,
        "type": "attribute"
      },
      {
        "callee": "getenv",
        "line": 279,
        "type": "attribute"
      },
      {
        "callee": "get_cors_origins",
        "line": 284,
        "type": "attribute"
      },
      {
        "callee": "extend",
        "line": 287,
        "type": "attribute"
      },
      {
        "callee": "add_middleware",
        "line": 296,
        "type": "attribute"
      },
      {
        "callee": "add_middleware",
        "line": 305,
        "type": "attribute"
      },
      {
        "callee": "add_middleware",
        "line": 306,
        "type": "attribute"
      },
      {
        "callee": "add_middleware",
        "line": 307,
        "type": "attribute"
      },
      {
        "callee": "include_router",
        "line": 310,
        "type": "attribute"
      },
      {
        "callee": "include_router",
        "line": 311,
        "type": "attribute"
      },
      {
        "callee": "include_router",
        "line": 312,
        "type": "attribute"
      },
      {
        "callee": "include_router",
        "line": 313,
        "type": "attribute"
      },
      {
        "callee": "include_router",
        "line": 314,
        "type": "attribute"
      },
      {
        "callee": "include_router",
        "line": 315,
        "type": "attribute"
      },
      {
        "callee": "include_router",
        "line": 316,
        "type": "attribute"
      },
      {
        "callee": "include_router",
        "line": 317,
        "type": "attribute"
      },
      {
        "callee": "include_router",
        "line": 318,
        "type": "attribute"
      },
      {
        "callee": "include_router",
        "line": 319,
        "type": "attribute"
      },
      {
        "callee": "include_router",
        "line": 320,
        "type": "attribute"
      },
      {
        "callee": "include_router",
        "line": 321,
        "type": "attribute"
      },
      {
        "callee": "include_router",
        "line": 322,
        "type": "attribute"
      },
      {
        "callee": "include_router",
        "line": 323,
        "type": "attribute"
      },
      {
        "callee": "include_router",
        "line": 325,
        "type": "attribute"
      },
      {
        "callee": "Path",
        "line": 328,
        "type": "direct"
      },
      {
        "callee": "exists",
        "line": 329,
        "type": "attribute"
      },
      {
        "callee": "mount",
        "line": 330,
        "type": "attribute"
      },
      {
        "callee": "StaticFiles",
        "line": 330,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 330,
        "type": "direct"
      }
    ],
    "src\\main.py:read_index": [
      {
        "callee": "FileResponse",
        "line": 335,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 335,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 332,
        "type": "attribute"
      }
    ],
    "src\\main.py:read_debug": [
      {
        "callee": "FileResponse",
        "line": 340,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 340,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 337,
        "type": "attribute"
      }
    ],
    "src\\main.py:metrics": [
      {
        "callee": "Response",
        "line": 346,
        "type": "direct"
      },
      {
        "callee": "generate_latest",
        "line": 346,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 343,
        "type": "attribute"
      }
    ],
    "src\\main.py:printernizer_exception_handler": [
      {
        "callee": "get_logger",
        "line": 351,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 352,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 352,
        "type": "direct"
      },
      {
        "callee": "JSONResponse",
        "line": 354,
        "type": "direct"
      },
      {
        "callee": "isoformat",
        "line": 360,
        "type": "attribute"
      },
      {
        "callee": "exception_handler",
        "line": 349,
        "type": "attribute"
      }
    ],
    "src\\main.py:validation_exception_handler": [
      {
        "callee": "get_logger",
        "line": 366,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 367,
        "type": "attribute"
      },
      {
        "callee": "errors",
        "line": 367,
        "type": "attribute"
      },
      {
        "callee": "JSONResponse",
        "line": 369,
        "type": "direct"
      },
      {
        "callee": "errors",
        "line": 374,
        "type": "attribute"
      },
      {
        "callee": "exception_handler",
        "line": 364,
        "type": "attribute"
      }
    ],
    "src\\main.py:general_exception_handler": [
      {
        "callee": "get_logger",
        "line": 380,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 381,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 381,
        "type": "direct"
      },
      {
        "callee": "JSONResponse",
        "line": 383,
        "type": "direct"
      },
      {
        "callee": "exception_handler",
        "line": 378,
        "type": "attribute"
      }
    ],
    "src\\main.py:signal_handler": [
      {
        "callee": "get_logger",
        "line": 398,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 399,
        "type": "attribute"
      },
      {
        "callee": "exit",
        "line": 400,
        "type": "attribute"
      }
    ],
    "src\\main.py:setup_signal_handlers": [
      {
        "callee": "signal",
        "line": 402,
        "type": "attribute"
      },
      {
        "callee": "signal",
        "line": 403,
        "type": "attribute"
      }
    ],
    "src\\models\\idea.py:Idea.from_dict": [
      {
        "callee": "cls",
        "line": 76,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 79,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 80,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 81,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 82,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 83,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 84,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 85,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 86,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 87,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 88,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 89,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 90,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 91,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 92,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 93,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 94,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 95,
        "type": "attribute"
      }
    ],
    "src\\models\\idea.py:TrendingItem.from_dict": [
      {
        "callee": "cls",
        "line": 159,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 165,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 166,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 167,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 168,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 169,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 170,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 171,
        "type": "attribute"
      }
    ],
    "src\\models\\idea.py:TrendingItem.is_expired": [
      {
        "callee": "fromisoformat",
        "line": 179,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 180,
        "type": "attribute"
      }
    ],
    "src\\models\\job.py:Job.convert_progress_to_int": [
      {
        "callee": "isinstance",
        "line": 47,
        "type": "direct"
      },
      {
        "callee": "int",
        "line": 48,
        "type": "direct"
      },
      {
        "callee": "field_validator",
        "line": 44,
        "type": "direct"
      }
    ],
    "src\\models\\material.py:MaterialSpool.total_cost": [
      {
        "callee": "Decimal",
        "line": 91,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 91,
        "type": "direct"
      }
    ],
    "src\\models\\material.py:MaterialSpool.remaining_value": [
      {
        "callee": "Decimal",
        "line": 96,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 96,
        "type": "direct"
      }
    ],
    "src\\models\\material.py:MaterialCreate.validate_remaining": [
      {
        "callee": "ValueError",
        "line": 119,
        "type": "direct"
      },
      {
        "callee": "field_validator",
        "line": 115,
        "type": "direct"
      }
    ],
    "src\\models\\watch_folder.py:WatchFolder.to_dict": [
      {
        "callee": "isoformat",
        "line": 57,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 60,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 62,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 63,
        "type": "attribute"
      }
    ],
    "src\\models\\watch_folder.py:WatchFolder.from_dict": [
      {
        "callee": "cls",
        "line": 69,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 70,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 71,
        "type": "attribute"
      },
      {
        "callee": "bool",
        "line": 72,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 72,
        "type": "attribute"
      },
      {
        "callee": "bool",
        "line": 73,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 73,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 74,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 75,
        "type": "attribute"
      },
      {
        "callee": "int",
        "line": 76,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 76,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 77,
        "type": "attribute"
      },
      {
        "callee": "fromisoformat",
        "line": 77,
        "type": "attribute"
      },
      {
        "callee": "bool",
        "line": 78,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 78,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 79,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 80,
        "type": "attribute"
      },
      {
        "callee": "fromisoformat",
        "line": 80,
        "type": "attribute"
      },
      {
        "callee": "WatchFolderSource",
        "line": 81,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 81,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 82,
        "type": "attribute"
      },
      {
        "callee": "fromisoformat",
        "line": 82,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 83,
        "type": "attribute"
      },
      {
        "callee": "fromisoformat",
        "line": 83,
        "type": "attribute"
      }
    ],
    "src\\models\\watch_folder.py:WatchFolder.from_db_row": [
      {
        "callee": "cls",
        "line": 89,
        "type": "direct"
      },
      {
        "callee": "bool",
        "line": 92,
        "type": "direct"
      },
      {
        "callee": "bool",
        "line": 93,
        "type": "direct"
      },
      {
        "callee": "int",
        "line": 96,
        "type": "direct"
      },
      {
        "callee": "fromisoformat",
        "line": 97,
        "type": "attribute"
      },
      {
        "callee": "bool",
        "line": 98,
        "type": "direct"
      },
      {
        "callee": "fromisoformat",
        "line": 100,
        "type": "attribute"
      },
      {
        "callee": "WatchFolderSource",
        "line": 101,
        "type": "direct"
      },
      {
        "callee": "fromisoformat",
        "line": 102,
        "type": "attribute"
      },
      {
        "callee": "fromisoformat",
        "line": 103,
        "type": "attribute"
      }
    ],
    "src\\models\\watch_folder.py:WatchFolder.get_display_name": [
      {
        "callee": "basename",
        "line": 113,
        "type": "attribute"
      }
    ],
    "src\\models\\watch_folder.py:WatchFolder.is_accessible": [
      {
        "callee": "exists",
        "line": 118,
        "type": "attribute"
      },
      {
        "callee": "isdir",
        "line": 118,
        "type": "attribute"
      }
    ],
    "src\\printers\\bambu_lab.py:BambuLabPrinter.__init__": [
      {
        "callee": "__init__",
        "line": 42,
        "type": "attribute"
      },
      {
        "callee": "super",
        "line": 42,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 47,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 50,
        "type": "attribute"
      },
      {
        "callee": "ImportError",
        "line": 52,
        "type": "direct"
      }
    ],
    "src\\printers\\bambu_lab.py:BambuLabPrinter._on_connect": [
      {
        "callee": "info",
        "line": 77,
        "type": "attribute"
      },
      {
        "callee": "subscribe",
        "line": 80,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 81,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 83,
        "type": "attribute"
      }
    ],
    "src\\printers\\bambu_lab.py:BambuLabPrinter._on_message": [
      {
        "callee": "loads",
        "line": 88,
        "type": "attribute"
      },
      {
        "callee": "decode",
        "line": 88,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 90,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 92,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 92,
        "type": "direct"
      }
    ],
    "src\\printers\\bambu_lab.py:BambuLabPrinter._on_disconnect": [
      {
        "callee": "info",
        "line": 96,
        "type": "attribute"
      }
    ],
    "src\\printers\\bambu_lab.py:BambuLabPrinter.connect": [
      {
        "callee": "info",
        "line": 101,
        "type": "attribute"
      },
      {
        "callee": "BambuFTPService",
        "line": 108,
        "type": "direct"
      },
      {
        "callee": "test_connection",
        "line": 110,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 112,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 115,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 119,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 120,
        "type": "direct"
      },
      {
        "callee": "_connect_bambu_api",
        "line": 124,
        "type": "attribute"
      },
      {
        "callee": "_connect_mqtt",
        "line": 126,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 129,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 130,
        "type": "direct"
      },
      {
        "callee": "PrinterConnectionError",
        "line": 131,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 131,
        "type": "direct"
      }
    ],
    "src\\printers\\bambu_lab.py:BambuLabPrinter._connect_bambu_api": [
      {
        "callee": "info",
        "line": 135,
        "type": "attribute"
      },
      {
        "callee": "BambuClient",
        "line": 139,
        "type": "direct"
      },
      {
        "callee": "connect",
        "line": 150,
        "type": "attribute"
      },
      {
        "callee": "hasattr",
        "line": 153,
        "type": "direct"
      },
      {
        "callee": "request_status",
        "line": 154,
        "type": "attribute"
      },
      {
        "callee": "hasattr",
        "line": 157,
        "type": "direct"
      },
      {
        "callee": "request_file_list",
        "line": 158,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 161,
        "type": "attribute"
      }
    ],
    "src\\printers\\bambu_lab.py:BambuLabPrinter._connect_mqtt": [
      {
        "callee": "info",
        "line": 167,
        "type": "attribute"
      },
      {
        "callee": "Client",
        "line": 171,
        "type": "attribute"
      },
      {
        "callee": "username_pw_set",
        "line": 172,
        "type": "attribute"
      },
      {
        "callee": "create_default_context",
        "line": 175,
        "type": "attribute"
      },
      {
        "callee": "tls_set_context",
        "line": 178,
        "type": "attribute"
      },
      {
        "callee": "connect",
        "line": 186,
        "type": "attribute"
      },
      {
        "callee": "ConnectionError",
        "line": 188,
        "type": "direct"
      },
      {
        "callee": "loop_start",
        "line": 191,
        "type": "attribute"
      },
      {
        "callee": "sleep",
        "line": 194,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 197,
        "type": "attribute"
      }
    ],
    "src\\printers\\bambu_lab.py:BambuLabPrinter._on_bambu_status_update": [
      {
        "callee": "debug",
        "line": 205,
        "type": "attribute"
      }
    ],
    "src\\printers\\bambu_lab.py:BambuLabPrinter._on_bambu_file_list_update": [
      {
        "callee": "isinstance",
        "line": 211,
        "type": "direct"
      },
      {
        "callee": "isinstance",
        "line": 213,
        "type": "direct"
      },
      {
        "callee": "isinstance",
        "line": 215,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 216,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 218,
        "type": "attribute"
      },
      {
        "callee": "PrinterFile",
        "line": 218,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 220,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 221,
        "type": "attribute"
      },
      {
        "callee": "_get_file_type_from_name",
        "line": 223,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 227,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 229,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 230,
        "type": "direct"
      },
      {
        "callee": "warning",
        "line": 233,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 234,
        "type": "direct"
      }
    ],
    "src\\printers\\bambu_lab.py:BambuLabPrinter.disconnect": [
      {
        "callee": "disconnect",
        "line": 243,
        "type": "attribute"
      },
      {
        "callee": "loop_stop",
        "line": 247,
        "type": "attribute"
      },
      {
        "callee": "disconnect",
        "line": 248,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 253,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 256,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 257,
        "type": "direct"
      }
    ],
    "src\\printers\\bambu_lab.py:BambuLabPrinter.get_status": [
      {
        "callee": "PrinterConnectionError",
        "line": 265,
        "type": "direct"
      },
      {
        "callee": "_get_status_bambu_api",
        "line": 269,
        "type": "attribute"
      },
      {
        "callee": "_get_status_mqtt",
        "line": 271,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 274,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 275,
        "type": "direct"
      },
      {
        "callee": "PrinterStatusUpdate",
        "line": 276,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 279,
        "type": "direct"
      },
      {
        "callee": "now",
        "line": 280,
        "type": "attribute"
      }
    ],
    "src\\printers\\bambu_lab.py:BambuLabPrinter._get_status_bambu_api": [
      {
        "callee": "PrinterConnectionError",
        "line": 286,
        "type": "direct"
      },
      {
        "callee": "get_current_state",
        "line": 290,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 294,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 295,
        "type": "direct"
      },
      {
        "callee": "type",
        "line": 300,
        "type": "direct"
      },
      {
        "callee": "hasattr",
        "line": 303,
        "type": "direct"
      },
      {
        "callee": "get_state",
        "line": 305,
        "type": "attribute"
      },
      {
        "callee": "get_bed_temperature",
        "line": 312,
        "type": "attribute"
      },
      {
        "callee": "get_nozzle_temperature",
        "line": 313,
        "type": "attribute"
      },
      {
        "callee": "get_percentage",
        "line": 320,
        "type": "attribute"
      },
      {
        "callee": "hasattr",
        "line": 328,
        "type": "direct"
      },
      {
        "callee": "getattr",
        "line": 329,
        "type": "direct"
      },
      {
        "callee": "method",
        "line": 330,
        "type": "direct"
      },
      {
        "callee": "isinstance",
        "line": 331,
        "type": "direct"
      },
      {
        "callee": "strip",
        "line": 331,
        "type": "attribute"
      },
      {
        "callee": "strip",
        "line": 332,
        "type": "attribute"
      },
      {
        "callee": "hasattr",
        "line": 334,
        "type": "direct"
      },
      {
        "callee": "hasattr",
        "line": 340,
        "type": "direct"
      },
      {
        "callee": "hasattr",
        "line": 342,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 345,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 353,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 354,
        "type": "direct"
      },
      {
        "callee": "PrinterStatusUpdate",
        "line": 358,
        "type": "direct"
      },
      {
        "callee": "now",
        "line": 363,
        "type": "attribute"
      },
      {
        "callee": "getattr",
        "line": 368,
        "type": "direct"
      },
      {
        "callee": "getattr",
        "line": 369,
        "type": "direct"
      },
      {
        "callee": "_map_bambu_status",
        "line": 372,
        "type": "attribute"
      },
      {
        "callee": "hasattr",
        "line": 385,
        "type": "direct"
      },
      {
        "callee": "mqtt_dump",
        "line": 386,
        "type": "attribute"
      },
      {
        "callee": "isinstance",
        "line": 387,
        "type": "direct"
      },
      {
        "callee": "isinstance",
        "line": 389,
        "type": "direct"
      },
      {
        "callee": "float",
        "line": 391,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 391,
        "type": "attribute"
      },
      {
        "callee": "float",
        "line": 392,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 392,
        "type": "attribute"
      },
      {
        "callee": "int",
        "line": 395,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 395,
        "type": "attribute"
      },
      {
        "callee": "int",
        "line": 401,
        "type": "direct"
      },
      {
        "callee": "int",
        "line": 409,
        "type": "direct"
      },
      {
        "callee": "now",
        "line": 414,
        "type": "attribute"
      },
      {
        "callee": "timedelta",
        "line": 414,
        "type": "direct"
      },
      {
        "callee": "debug",
        "line": 417,
        "type": "attribute"
      },
      {
        "callee": "list",
        "line": 422,
        "type": "direct"
      },
      {
        "callee": "keys",
        "line": 422,
        "type": "attribute"
      },
      {
        "callee": "hasattr",
        "line": 425,
        "type": "direct"
      },
      {
        "callee": "float",
        "line": 426,
        "type": "direct"
      },
      {
        "callee": "get_bed_temperature",
        "line": 426,
        "type": "attribute"
      },
      {
        "callee": "hasattr",
        "line": 428,
        "type": "direct"
      },
      {
        "callee": "float",
        "line": 429,
        "type": "direct"
      },
      {
        "callee": "get_nozzle_temperature",
        "line": 429,
        "type": "attribute"
      },
      {
        "callee": "hasattr",
        "line": 431,
        "type": "direct"
      },
      {
        "callee": "int",
        "line": 432,
        "type": "direct"
      },
      {
        "callee": "get_percentage",
        "line": 432,
        "type": "attribute"
      },
      {
        "callee": "hasattr",
        "line": 435,
        "type": "direct"
      },
      {
        "callee": "int",
        "line": 436,
        "type": "direct"
      },
      {
        "callee": "current_layer_num",
        "line": 436,
        "type": "attribute"
      },
      {
        "callee": "hasattr",
        "line": 439,
        "type": "direct"
      },
      {
        "callee": "subtask_name",
        "line": 440,
        "type": "attribute"
      },
      {
        "callee": "isinstance",
        "line": 441,
        "type": "direct"
      },
      {
        "callee": "strip",
        "line": 441,
        "type": "attribute"
      },
      {
        "callee": "strip",
        "line": 442,
        "type": "attribute"
      },
      {
        "callee": "hasattr",
        "line": 444,
        "type": "direct"
      },
      {
        "callee": "gcode_file",
        "line": 445,
        "type": "attribute"
      },
      {
        "callee": "isinstance",
        "line": 446,
        "type": "direct"
      },
      {
        "callee": "strip",
        "line": 446,
        "type": "attribute"
      },
      {
        "callee": "strip",
        "line": 447,
        "type": "attribute"
      },
      {
        "callee": "startswith",
        "line": 449,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 453,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 454,
        "type": "direct"
      },
      {
        "callee": "getattr",
        "line": 457,
        "type": "direct"
      },
      {
        "callee": "getattr",
        "line": 458,
        "type": "direct"
      },
      {
        "callee": "getattr",
        "line": 459,
        "type": "direct"
      },
      {
        "callee": "getattr",
        "line": 460,
        "type": "direct"
      },
      {
        "callee": "_map_bambu_status",
        "line": 503,
        "type": "attribute"
      },
      {
        "callee": "startswith",
        "line": 521,
        "type": "attribute"
      },
      {
        "callee": "find_file_by_name",
        "line": 524,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 526,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 527,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 528,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 534,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 537,
        "type": "direct"
      },
      {
        "callee": "debug",
        "line": 546,
        "type": "attribute"
      },
      {
        "callee": "PrinterStatusUpdate",
        "line": 554,
        "type": "direct"
      },
      {
        "callee": "float",
        "line": 558,
        "type": "direct"
      },
      {
        "callee": "float",
        "line": 559,
        "type": "direct"
      },
      {
        "callee": "int",
        "line": 560,
        "type": "direct"
      },
      {
        "callee": "now",
        "line": 567,
        "type": "attribute"
      },
      {
        "callee": "hasattr",
        "line": 568,
        "type": "direct"
      }
    ],
    "src\\printers\\bambu_lab.py:BambuLabPrinter._get_status_mqtt": [
      {
        "callee": "PrinterConnectionError",
        "line": 574,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 577,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 580,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 581,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 582,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 583,
        "type": "attribute"
      },
      {
        "callee": "int",
        "line": 592,
        "type": "direct"
      },
      {
        "callee": "now",
        "line": 597,
        "type": "attribute"
      },
      {
        "callee": "timedelta",
        "line": 597,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 622,
        "type": "attribute"
      },
      {
        "callee": "hasattr",
        "line": 625,
        "type": "direct"
      },
      {
        "callee": "hasattr",
        "line": 630,
        "type": "direct"
      },
      {
        "callee": "getattr",
        "line": 631,
        "type": "direct"
      },
      {
        "callee": "method",
        "line": 632,
        "type": "direct"
      },
      {
        "callee": "isinstance",
        "line": 633,
        "type": "direct"
      },
      {
        "callee": "strip",
        "line": 633,
        "type": "attribute"
      },
      {
        "callee": "strip",
        "line": 634,
        "type": "attribute"
      },
      {
        "callee": "startswith",
        "line": 636,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 638,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 641,
        "type": "attribute"
      },
      {
        "callee": "startswith",
        "line": 654,
        "type": "attribute"
      },
      {
        "callee": "find_file_by_name",
        "line": 657,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 659,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 660,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 661,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 667,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 670,
        "type": "direct"
      },
      {
        "callee": "debug",
        "line": 676,
        "type": "attribute"
      },
      {
        "callee": "PrinterStatusUpdate",
        "line": 683,
        "type": "direct"
      },
      {
        "callee": "float",
        "line": 687,
        "type": "direct"
      },
      {
        "callee": "float",
        "line": 688,
        "type": "direct"
      },
      {
        "callee": "int",
        "line": 689,
        "type": "direct"
      },
      {
        "callee": "now",
        "line": 696,
        "type": "attribute"
      }
    ],
    "src\\printers\\bambu_lab.py:BambuLabPrinter._map_bambu_status": [
      {
        "callee": "hasattr",
        "line": 703,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 706,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 748,
        "type": "attribute"
      },
      {
        "callee": "upper",
        "line": 748,
        "type": "attribute"
      }
    ],
    "src\\printers\\bambu_lab.py:BambuLabPrinter.get_job_info": [
      {
        "callee": "get",
        "line": 756,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 757,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 764,
        "type": "attribute"
      },
      {
        "callee": "strftime",
        "line": 764,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 764,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 765,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 768,
        "type": "attribute"
      },
      {
        "callee": "JobInfo",
        "line": 776,
        "type": "direct"
      },
      {
        "callee": "strftime",
        "line": 777,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 777,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 787,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 788,
        "type": "direct"
      }
    ],
    "src\\printers\\bambu_lab.py:BambuLabPrinter._map_job_status": [
      {
        "callee": "hasattr",
        "line": 794,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 797,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 838,
        "type": "attribute"
      },
      {
        "callee": "upper",
        "line": 838,
        "type": "attribute"
      }
    ],
    "src\\printers\\bambu_lab.py:BambuLabPrinter.list_files": [
      {
        "callee": "PrinterConnectionError",
        "line": 843,
        "type": "direct"
      },
      {
        "callee": "_list_files_direct_ftp",
        "line": 848,
        "type": "attribute"
      },
      {
        "callee": "_list_files_bambu_api",
        "line": 850,
        "type": "attribute"
      },
      {
        "callee": "_list_files_mqtt",
        "line": 852,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 855,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 856,
        "type": "direct"
      },
      {
        "callee": "PrinterConnectionError",
        "line": 857,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 857,
        "type": "direct"
      }
    ],
    "src\\printers\\bambu_lab.py:BambuLabPrinter._list_files_bambu_api": [
      {
        "callee": "PrinterConnectionError",
        "line": 862,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 864,
        "type": "attribute"
      },
      {
        "callee": "hasattr",
        "line": 871,
        "type": "direct"
      },
      {
        "callee": "hasattr",
        "line": 872,
        "type": "direct"
      },
      {
        "callee": "now",
        "line": 873,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 874,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 875,
        "type": "direct"
      },
      {
        "callee": "hasattr",
        "line": 879,
        "type": "direct"
      },
      {
        "callee": "get_files",
        "line": 881,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 884,
        "type": "attribute"
      },
      {
        "callee": "PrinterFile",
        "line": 884,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 885,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 886,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 887,
        "type": "attribute"
      },
      {
        "callee": "_get_file_type_from_name",
        "line": 889,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 889,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 891,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 892,
        "type": "direct"
      },
      {
        "callee": "debug",
        "line": 895,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 896,
        "type": "direct"
      },
      {
        "callee": "hasattr",
        "line": 899,
        "type": "direct"
      },
      {
        "callee": "_discover_files_via_ftp",
        "line": 901,
        "type": "attribute"
      },
      {
        "callee": "extend",
        "line": 902,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 904,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 905,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 908,
        "type": "direct"
      },
      {
        "callee": "_discover_files_via_mqtt_dump",
        "line": 910,
        "type": "attribute"
      },
      {
        "callee": "extend",
        "line": 911,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 913,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 914,
        "type": "direct"
      },
      {
        "callee": "hasattr",
        "line": 917,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 921,
        "type": "attribute"
      },
      {
        "callee": "PrinterFile",
        "line": 921,
        "type": "direct"
      },
      {
        "callee": "_get_file_type_from_name",
        "line": 926,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 929,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 930,
        "type": "direct"
      },
      {
        "callee": "warning",
        "line": 933,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 934,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 937,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 938,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 941,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 942,
        "type": "direct"
      }
    ],
    "src\\printers\\bambu_lab.py:BambuLabPrinter._discover_files_via_ftp": [
      {
        "callee": "hasattr",
        "line": 950,
        "type": "direct"
      },
      {
        "callee": "hasattr",
        "line": 961,
        "type": "direct"
      },
      {
        "callee": "list_images_dir",
        "line": 963,
        "type": "attribute"
      },
      {
        "callee": "endswith",
        "line": 965,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 965,
        "type": "attribute"
      },
      {
        "callee": "replace",
        "line": 967,
        "type": "attribute"
      },
      {
        "callee": "replace",
        "line": 967,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 971,
        "type": "attribute"
      },
      {
        "callee": "PrinterFile",
        "line": 971,
        "type": "direct"
      },
      {
        "callee": "debug",
        "line": 979,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 979,
        "type": "direct"
      },
      {
        "callee": "hasattr",
        "line": 982,
        "type": "direct"
      },
      {
        "callee": "list_cache_dir",
        "line": 984,
        "type": "attribute"
      },
      {
        "callee": "isinstance",
        "line": 989,
        "type": "direct"
      },
      {
        "callee": "split",
        "line": 991,
        "type": "attribute"
      },
      {
        "callee": "strip",
        "line": 991,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 992,
        "type": "direct"
      },
      {
        "callee": "join",
        "line": 993,
        "type": "attribute"
      },
      {
        "callee": "int",
        "line": 996,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 1002,
        "type": "direct"
      },
      {
        "callee": "any",
        "line": 1004,
        "type": "direct"
      },
      {
        "callee": "endswith",
        "line": 1004,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 1004,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 1005,
        "type": "attribute"
      },
      {
        "callee": "PrinterFile",
        "line": 1005,
        "type": "direct"
      },
      {
        "callee": "_get_file_type_from_name",
        "line": 1010,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 1013,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 1013,
        "type": "direct"
      },
      {
        "callee": "debug",
        "line": 1016,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 1016,
        "type": "direct"
      }
    ],
    "src\\printers\\bambu_lab.py:BambuLabPrinter._discover_files_via_mqtt_dump": [
      {
        "callee": "hasattr",
        "line": 1025,
        "type": "direct"
      },
      {
        "callee": "mqtt_dump",
        "line": 1026,
        "type": "attribute"
      },
      {
        "callee": "isinstance",
        "line": 1029,
        "type": "direct"
      },
      {
        "callee": "isinstance",
        "line": 1033,
        "type": "direct"
      },
      {
        "callee": "isinstance",
        "line": 1037,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 1038,
        "type": "attribute"
      },
      {
        "callee": "PrinterFile",
        "line": 1038,
        "type": "direct"
      },
      {
        "callee": "_get_file_type_from_name",
        "line": 1043,
        "type": "attribute"
      },
      {
        "callee": "isinstance",
        "line": 1049,
        "type": "direct"
      },
      {
        "callee": "any",
        "line": 1051,
        "type": "direct"
      },
      {
        "callee": "endswith",
        "line": 1051,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 1051,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 1053,
        "type": "attribute"
      },
      {
        "callee": "PrinterFile",
        "line": 1053,
        "type": "direct"
      },
      {
        "callee": "_get_file_type_from_name",
        "line": 1058,
        "type": "attribute"
      },
      {
        "callee": "isinstance",
        "line": 1064,
        "type": "direct"
      },
      {
        "callee": "isinstance",
        "line": 1069,
        "type": "direct"
      },
      {
        "callee": "isinstance",
        "line": 1071,
        "type": "direct"
      },
      {
        "callee": "isinstance",
        "line": 1073,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 1075,
        "type": "attribute"
      },
      {
        "callee": "PrinterFile",
        "line": 1075,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 1077,
        "type": "attribute"
      },
      {
        "callee": "_get_file_type_from_name",
        "line": 1080,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 1084,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 1084,
        "type": "direct"
      }
    ],
    "src\\printers\\bambu_lab.py:BambuLabPrinter._list_files_mqtt": [
      {
        "callee": "_list_files_mqtt_from_bambu_api",
        "line": 1092,
        "type": "attribute"
      },
      {
        "callee": "PrinterConnectionError",
        "line": 1096,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 1098,
        "type": "attribute"
      },
      {
        "callee": "isinstance",
        "line": 1105,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 1107,
        "type": "attribute"
      },
      {
        "callee": "isinstance",
        "line": 1108,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 1110,
        "type": "attribute"
      },
      {
        "callee": "isinstance",
        "line": 1111,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 1112,
        "type": "attribute"
      },
      {
        "callee": "PrinterFile",
        "line": 1112,
        "type": "direct"
      },
      {
        "callee": "_get_file_type_from_name",
        "line": 1117,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1121,
        "type": "attribute"
      },
      {
        "callee": "isinstance",
        "line": 1122,
        "type": "direct"
      },
      {
        "callee": "any",
        "line": 1125,
        "type": "direct"
      },
      {
        "callee": "endswith",
        "line": 1125,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 1125,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 1127,
        "type": "attribute"
      },
      {
        "callee": "PrinterFile",
        "line": 1127,
        "type": "direct"
      },
      {
        "callee": "_get_file_type_from_name",
        "line": 1132,
        "type": "attribute"
      },
      {
        "callee": "isinstance",
        "line": 1141,
        "type": "direct"
      },
      {
        "callee": "items",
        "line": 1143,
        "type": "attribute"
      },
      {
        "callee": "isinstance",
        "line": 1144,
        "type": "direct"
      },
      {
        "callee": "any",
        "line": 1145,
        "type": "direct"
      },
      {
        "callee": "endswith",
        "line": 1145,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 1145,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 1147,
        "type": "attribute"
      },
      {
        "callee": "PrinterFile",
        "line": 1147,
        "type": "direct"
      },
      {
        "callee": "_get_file_type_from_name",
        "line": 1152,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 1156,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 1157,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 1159,
        "type": "attribute"
      },
      {
        "callee": "list",
        "line": 1159,
        "type": "direct"
      },
      {
        "callee": "keys",
        "line": 1159,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 1161,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 1162,
        "type": "direct"
      },
      {
        "callee": "warning",
        "line": 1165,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 1166,
        "type": "direct"
      }
    ],
    "src\\printers\\bambu_lab.py:BambuLabPrinter._list_files_mqtt_from_bambu_api": [
      {
        "callee": "hasattr",
        "line": 1176,
        "type": "direct"
      },
      {
        "callee": "mqtt_dump",
        "line": 1177,
        "type": "attribute"
      },
      {
        "callee": "isinstance",
        "line": 1179,
        "type": "direct"
      },
      {
        "callee": "isinstance",
        "line": 1183,
        "type": "direct"
      },
      {
        "callee": "isinstance",
        "line": 1187,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 1188,
        "type": "attribute"
      },
      {
        "callee": "PrinterFile",
        "line": 1188,
        "type": "direct"
      },
      {
        "callee": "_get_file_type_from_name",
        "line": 1193,
        "type": "attribute"
      },
      {
        "callee": "isinstance",
        "line": 1199,
        "type": "direct"
      },
      {
        "callee": "any",
        "line": 1201,
        "type": "direct"
      },
      {
        "callee": "endswith",
        "line": 1201,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 1201,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 1203,
        "type": "attribute"
      },
      {
        "callee": "PrinterFile",
        "line": 1203,
        "type": "direct"
      },
      {
        "callee": "_get_file_type_from_name",
        "line": 1208,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 1211,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 1212,
        "type": "direct"
      },
      {
        "callee": "debug",
        "line": 1215,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 1216,
        "type": "direct"
      }
    ],
    "src\\printers\\bambu_lab.py:BambuLabPrinter._list_files_direct_ftp": [
      {
        "callee": "PrinterConnectionError",
        "line": 1223,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 1225,
        "type": "attribute"
      },
      {
        "callee": "list_files",
        "line": 1230,
        "type": "attribute"
      },
      {
        "callee": "PrinterFile",
        "line": 1235,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 1242,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 1244,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 1246,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 1251,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 1252,
        "type": "direct"
      }
    ],
    "src\\printers\\bambu_lab.py:BambuLabPrinter._download_file_direct_ftp": [
      {
        "callee": "warning",
        "line": 1258,
        "type": "attribute"
      },
      {
        "callee": "_download_file_bambu_api",
        "line": 1260,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 1262,
        "type": "attribute"
      },
      {
        "callee": "download_file",
        "line": 1267,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 1270,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 1274,
        "type": "attribute"
      },
      {
        "callee": "_download_file_bambu_api",
        "line": 1277,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 1280,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 1281,
        "type": "direct"
      },
      {
        "callee": "_download_file_bambu_api",
        "line": 1283,
        "type": "attribute"
      }
    ],
    "src\\printers\\bambu_lab.py:BambuLabPrinter._get_file_type_from_name": [
      {
        "callee": "lower",
        "line": 1288,
        "type": "attribute"
      },
      {
        "callee": "Path",
        "line": 1288,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 1297,
        "type": "attribute"
      }
    ],
    "src\\printers\\bambu_lab.py:BambuLabPrinter.download_file": [
      {
        "callee": "PrinterConnectionError",
        "line": 1302,
        "type": "direct"
      },
      {
        "callee": "_download_file_direct_ftp",
        "line": 1307,
        "type": "attribute"
      },
      {
        "callee": "_download_file_bambu_api",
        "line": 1309,
        "type": "attribute"
      },
      {
        "callee": "_download_file_mqtt",
        "line": 1311,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 1314,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 1315,
        "type": "direct"
      }
    ],
    "src\\printers\\bambu_lab.py:BambuLabPrinter._download_file_bambu_api": [
      {
        "callee": "PrinterConnectionError",
        "line": 1321,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 1323,
        "type": "attribute"
      },
      {
        "callee": "hasattr",
        "line": 1327,
        "type": "direct"
      },
      {
        "callee": "mkdir",
        "line": 1333,
        "type": "attribute"
      },
      {
        "callee": "Path",
        "line": 1333,
        "type": "direct"
      },
      {
        "callee": "debug",
        "line": 1335,
        "type": "attribute"
      },
      {
        "callee": "download_file",
        "line": 1339,
        "type": "attribute"
      },
      {
        "callee": "getvalue",
        "line": 1342,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 1343,
        "type": "direct"
      },
      {
        "callee": "open",
        "line": 1345,
        "type": "direct"
      },
      {
        "callee": "write",
        "line": 1346,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 1348,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 1351,
        "type": "direct"
      },
      {
        "callee": "debug",
        "line": 1354,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 1357,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 1361,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 1362,
        "type": "direct"
      },
      {
        "callee": "_download_via_http",
        "line": 1366,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 1368,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 1372,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 1373,
        "type": "direct"
      },
      {
        "callee": "warning",
        "line": 1375,
        "type": "attribute"
      }
    ],
    "src\\printers\\bambu_lab.py:BambuLabPrinter._download_file_mqtt": [
      {
        "callee": "warning",
        "line": 1382,
        "type": "attribute"
      }
    ],
    "src\\printers\\bambu_lab.py:BambuLabPrinter._download_via_ftp": [
      {
        "callee": "mkdir",
        "line": 1393,
        "type": "attribute"
      },
      {
        "callee": "Path",
        "line": 1393,
        "type": "direct"
      },
      {
        "callee": "debug",
        "line": 1405,
        "type": "attribute"
      },
      {
        "callee": "download_file",
        "line": 1411,
        "type": "attribute"
      },
      {
        "callee": "getvalue",
        "line": 1415,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 1417,
        "type": "direct"
      },
      {
        "callee": "open",
        "line": 1419,
        "type": "direct"
      },
      {
        "callee": "write",
        "line": 1420,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 1422,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 1426,
        "type": "direct"
      },
      {
        "callee": "debug",
        "line": 1429,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 1434,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 1437,
        "type": "direct"
      },
      {
        "callee": "debug",
        "line": 1442,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 1459,
        "type": "attribute"
      },
      {
        "callee": "_safe_list",
        "line": 1464,
        "type": "direct"
      },
      {
        "callee": "_safe_list",
        "line": 1464,
        "type": "direct"
      },
      {
        "callee": "isinstance",
        "line": 1469,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 1470,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1470,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1471,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 1473,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 1477,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 1479,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 1479,
        "type": "direct"
      },
      {
        "callee": "next",
        "line": 1483,
        "type": "direct"
      },
      {
        "callee": "lower",
        "line": 1483,
        "type": "attribute"
      },
      {
        "callee": "startswith",
        "line": 1486,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 1488,
        "type": "attribute"
      },
      {
        "callee": "download_file",
        "line": 1489,
        "type": "attribute"
      },
      {
        "callee": "getvalue",
        "line": 1491,
        "type": "attribute"
      },
      {
        "callee": "open",
        "line": 1493,
        "type": "direct"
      },
      {
        "callee": "write",
        "line": 1494,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 1495,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 1495,
        "type": "direct"
      },
      {
        "callee": "debug",
        "line": 1498,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 1498,
        "type": "direct"
      },
      {
        "callee": "rsplit",
        "line": 1501,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 1504,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 1506,
        "type": "attribute"
      },
      {
        "callee": "sort",
        "line": 1519,
        "type": "attribute"
      },
      {
        "callee": "startswith",
        "line": 1522,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 1524,
        "type": "attribute"
      },
      {
        "callee": "download_file",
        "line": 1525,
        "type": "attribute"
      },
      {
        "callee": "getvalue",
        "line": 1527,
        "type": "attribute"
      },
      {
        "callee": "open",
        "line": 1529,
        "type": "direct"
      },
      {
        "callee": "write",
        "line": 1530,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 1531,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 1531,
        "type": "direct"
      },
      {
        "callee": "debug",
        "line": 1534,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 1534,
        "type": "direct"
      },
      {
        "callee": "split",
        "line": 1538,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 1538,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 1539,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 1541,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 1543,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 1543,
        "type": "direct"
      },
      {
        "callee": "warning",
        "line": 1545,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 1550,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 1551,
        "type": "direct"
      }
    ],
    "src\\printers\\bambu_lab.py:BambuLabPrinter._safe_list": [
      {
        "callee": "hasattr",
        "line": 1450,
        "type": "direct"
      },
      {
        "callee": "getattr",
        "line": 1452,
        "type": "direct"
      }
    ],
    "src\\printers\\bambu_lab.py:BambuLabPrinter.rank": [
      {
        "callee": "lower",
        "line": 1512,
        "type": "attribute"
      },
      {
        "callee": "endswith",
        "line": 1514,
        "type": "attribute"
      },
      {
        "callee": "endswith",
        "line": 1515,
        "type": "attribute"
      },
      {
        "callee": "startswith",
        "line": 1516,
        "type": "attribute"
      }
    ],
    "src\\printers\\bambu_lab.py:BambuLabPrinter._download_via_http": [
      {
        "callee": "mkdir",
        "line": 1561,
        "type": "attribute"
      },
      {
        "callee": "Path",
        "line": 1561,
        "type": "direct"
      },
      {
        "callee": "ClientTimeout",
        "line": 1573,
        "type": "attribute"
      },
      {
        "callee": "ClientSession",
        "line": 1575,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 1578,
        "type": "attribute"
      },
      {
        "callee": "hasattr",
        "line": 1583,
        "type": "direct"
      },
      {
        "callee": "BasicAuth",
        "line": 1584,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1586,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1589,
        "type": "attribute"
      },
      {
        "callee": "int",
        "line": 1590,
        "type": "direct"
      },
      {
        "callee": "open",
        "line": 1593,
        "type": "direct"
      },
      {
        "callee": "iter_chunked",
        "line": 1594,
        "type": "attribute"
      },
      {
        "callee": "write",
        "line": 1595,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 1596,
        "type": "direct"
      },
      {
        "callee": "debug",
        "line": 1601,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 1606,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 1614,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 1617,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 1620,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 1625,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 1626,
        "type": "direct"
      },
      {
        "callee": "debug",
        "line": 1629,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 1630,
        "type": "direct"
      },
      {
        "callee": "warning",
        "line": 1633,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 1638,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 1639,
        "type": "direct"
      }
    ],
    "src\\printers\\bambu_lab.py:BambuLabPrinter.pause_print": [
      {
        "callee": "PrinterConnectionError",
        "line": 1645,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 1648,
        "type": "attribute"
      },
      {
        "callee": "pause",
        "line": 1651,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 1654,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 1657,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 1661,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 1662,
        "type": "direct"
      }
    ],
    "src\\printers\\bambu_lab.py:BambuLabPrinter.resume_print": [
      {
        "callee": "PrinterConnectionError",
        "line": 1668,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 1671,
        "type": "attribute"
      },
      {
        "callee": "resume",
        "line": 1674,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 1677,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 1680,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 1684,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 1685,
        "type": "direct"
      }
    ],
    "src\\printers\\bambu_lab.py:BambuLabPrinter.stop_print": [
      {
        "callee": "PrinterConnectionError",
        "line": 1691,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 1694,
        "type": "attribute"
      },
      {
        "callee": "stop",
        "line": 1697,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 1700,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 1703,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 1707,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 1708,
        "type": "direct"
      }
    ],
    "src\\printers\\bambu_lab.py:BambuLabPrinter.has_camera": [
      {
        "callee": "get_camera_stream_url",
        "line": 1719,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 1722,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 1722,
        "type": "direct"
      }
    ],
    "src\\printers\\bambu_lab.py:BambuLabPrinter.get_camera_stream_url": [
      {
        "callee": "warning",
        "line": 1728,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 1737,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 1742,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 1743,
        "type": "direct"
      }
    ],
    "src\\printers\\bambu_lab.py:BambuLabPrinter.take_snapshot": [
      {
        "callee": "warning",
        "line": 1749,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 1759,
        "type": "attribute"
      },
      {
        "callee": "ClientSession",
        "line": 1762,
        "type": "attribute"
      },
      {
        "callee": "ClientTimeout",
        "line": 1762,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1763,
        "type": "attribute"
      },
      {
        "callee": "read",
        "line": 1765,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 1766,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 1768,
        "type": "direct"
      },
      {
        "callee": "warning",
        "line": 1771,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 1777,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 1778,
        "type": "direct"
      }
    ],
    "src\\printers\\base.py:PrinterFile.__init__": [
      {
        "callee": "now",
        "line": 38,
        "type": "attribute"
      },
      {
        "callee": "_guess_file_type",
        "line": 40,
        "type": "attribute"
      }
    ],
    "src\\printers\\base.py:PrinterFile._guess_file_type": [
      {
        "callee": "split",
        "line": 46,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 46,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 55,
        "type": "attribute"
      }
    ],
    "src\\printers\\base.py:BasePrinter.__init__": [
      {
        "callee": "Event",
        "line": 156,
        "type": "attribute"
      }
    ],
    "src\\printers\\base.py:BasePrinter.start_monitoring": [
      {
        "callee": "warning",
        "line": 171,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 174,
        "type": "attribute"
      },
      {
        "callee": "clear",
        "line": 175,
        "type": "attribute"
      },
      {
        "callee": "max",
        "line": 176,
        "type": "direct"
      },
      {
        "callee": "int",
        "line": 176,
        "type": "direct"
      },
      {
        "callee": "create_task",
        "line": 183,
        "type": "attribute"
      },
      {
        "callee": "_monitor_loop",
        "line": 183,
        "type": "attribute"
      }
    ],
    "src\\printers\\base.py:BasePrinter.stop_monitoring": [
      {
        "callee": "info",
        "line": 190,
        "type": "attribute"
      },
      {
        "callee": "set",
        "line": 191,
        "type": "attribute"
      },
      {
        "callee": "done",
        "line": 193,
        "type": "attribute"
      },
      {
        "callee": "cancel",
        "line": 194,
        "type": "attribute"
      }
    ],
    "src\\printers\\base.py:BasePrinter._monitor_loop": [
      {
        "callee": "is_set",
        "line": 205,
        "type": "attribute"
      },
      {
        "callee": "perf_counter",
        "line": 206,
        "type": "attribute"
      },
      {
        "callee": "get_status",
        "line": 208,
        "type": "attribute"
      },
      {
        "callee": "perf_counter",
        "line": 209,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 213,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 215,
        "type": "attribute"
      },
      {
        "callee": "iscoroutinefunction",
        "line": 220,
        "type": "attribute"
      },
      {
        "callee": "callback",
        "line": 221,
        "type": "direct"
      },
      {
        "callee": "callback",
        "line": 223,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 225,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 225,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 229,
        "type": "direct"
      },
      {
        "callee": "now",
        "line": 230,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 231,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 231,
        "type": "direct"
      },
      {
        "callee": "min",
        "line": 232,
        "type": "direct"
      },
      {
        "callee": "uniform",
        "line": 234,
        "type": "attribute"
      },
      {
        "callee": "max",
        "line": 235,
        "type": "direct"
      },
      {
        "callee": "int",
        "line": 235,
        "type": "direct"
      },
      {
        "callee": "warning",
        "line": 236,
        "type": "attribute"
      },
      {
        "callee": "wait_for",
        "line": 239,
        "type": "attribute"
      },
      {
        "callee": "wait",
        "line": 239,
        "type": "attribute"
      }
    ],
    "src\\printers\\base.py:BasePrinter.add_status_callback": [
      {
        "callee": "append",
        "line": 246,
        "type": "attribute"
      }
    ],
    "src\\printers\\base.py:BasePrinter.remove_status_callback": [
      {
        "callee": "remove",
        "line": 251,
        "type": "attribute"
      }
    ],
    "src\\printers\\base.py:BasePrinter.health_check": [
      {
        "callee": "get_status",
        "line": 256,
        "type": "attribute"
      }
    ],
    "src\\printers\\base.py:BasePrinter.get_connection_info": [
      {
        "callee": "dict",
        "line": 268,
        "type": "attribute"
      }
    ],
    "src\\printers\\base.py:BasePrinter.get_monitoring_metrics": [
      {
        "callee": "isoformat",
        "line": 281,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 282,
        "type": "attribute"
      }
    ],
    "src\\printers\\base.py:BasePrinter.__aenter__": [
      {
        "callee": "connect",
        "line": 287,
        "type": "attribute"
      }
    ],
    "src\\printers\\base.py:BasePrinter.__aexit__": [
      {
        "callee": "disconnect",
        "line": 292,
        "type": "attribute"
      }
    ],
    "src\\printers\\prusa.py:PrusaPrinter.__init__": [
      {
        "callee": "__init__",
        "line": 26,
        "type": "attribute"
      },
      {
        "callee": "super",
        "line": 26,
        "type": "direct"
      }
    ],
    "src\\printers\\prusa.py:PrusaPrinter.connect": [
      {
        "callee": "info",
        "line": 35,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 39,
        "type": "attribute"
      },
      {
        "callee": "ClientTimeout",
        "line": 49,
        "type": "attribute"
      },
      {
        "callee": "TCPConnector",
        "line": 50,
        "type": "attribute"
      },
      {
        "callee": "ClientSession",
        "line": 58,
        "type": "attribute"
      },
      {
        "callee": "range",
        "line": 66,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 68,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 70,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 71,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 73,
        "type": "attribute"
      },
      {
        "callee": "ClientError",
        "line": 78,
        "type": "attribute"
      },
      {
        "callee": "ClientError",
        "line": 80,
        "type": "attribute"
      },
      {
        "callee": "ClientError",
        "line": 82,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 87,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 91,
        "type": "direct"
      },
      {
        "callee": "sleep",
        "line": 92,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 98,
        "type": "direct"
      },
      {
        "callee": "type",
        "line": 98,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 100,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 102,
        "type": "attribute"
      },
      {
        "callee": "isinstance",
        "line": 102,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 103,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 106,
        "type": "attribute"
      },
      {
        "callee": "type",
        "line": 108,
        "type": "direct"
      },
      {
        "callee": "close",
        "line": 111,
        "type": "attribute"
      },
      {
        "callee": "PrinterConnectionError",
        "line": 113,
        "type": "direct"
      }
    ],
    "src\\printers\\prusa.py:PrusaPrinter.disconnect": [
      {
        "callee": "close",
        "line": 122,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 127,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 130,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 131,
        "type": "direct"
      }
    ],
    "src\\printers\\prusa.py:PrusaPrinter.get_status": [
      {
        "callee": "PrinterConnectionError",
        "line": 136,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 140,
        "type": "attribute"
      },
      {
        "callee": "ClientError",
        "line": 142,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 144,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 149,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 151,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 153,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 154,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 157,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 157,
        "type": "attribute"
      },
      {
        "callee": "_map_prusa_status",
        "line": 158,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 161,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 162,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 162,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 163,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 163,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 172,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 173,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 174,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 176,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 176,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 178,
        "type": "attribute"
      },
      {
        "callee": "int",
        "line": 180,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 180,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 183,
        "type": "attribute"
      },
      {
        "callee": "int",
        "line": 186,
        "type": "direct"
      },
      {
        "callee": "now",
        "line": 189,
        "type": "attribute"
      },
      {
        "callee": "timedelta",
        "line": 189,
        "type": "direct"
      },
      {
        "callee": "find_file_by_name",
        "line": 196,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 198,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 199,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 200,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 206,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 209,
        "type": "direct"
      },
      {
        "callee": "PrinterStatusUpdate",
        "line": 211,
        "type": "direct"
      },
      {
        "callee": "float",
        "line": 215,
        "type": "direct"
      },
      {
        "callee": "float",
        "line": 216,
        "type": "direct"
      },
      {
        "callee": "now",
        "line": 224,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 229,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 230,
        "type": "direct"
      },
      {
        "callee": "PrinterStatusUpdate",
        "line": 231,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 234,
        "type": "direct"
      },
      {
        "callee": "now",
        "line": 235,
        "type": "attribute"
      }
    ],
    "src\\printers\\prusa.py:PrusaPrinter._map_prusa_status": [
      {
        "callee": "lower",
        "line": 240,
        "type": "attribute"
      }
    ],
    "src\\printers\\prusa.py:PrusaPrinter.get_job_info": [
      {
        "callee": "get",
        "line": 259,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 263,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 265,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 266,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 266,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 269,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 270,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 272,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 272,
        "type": "attribute"
      },
      {
        "callee": "int",
        "line": 273,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 273,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 276,
        "type": "attribute"
      },
      {
        "callee": "_map_job_status",
        "line": 277,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 280,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 281,
        "type": "attribute"
      },
      {
        "callee": "JobInfo",
        "line": 283,
        "type": "direct"
      },
      {
        "callee": "strftime",
        "line": 284,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 284,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 295,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 296,
        "type": "direct"
      }
    ],
    "src\\printers\\prusa.py:PrusaPrinter._map_job_status": [
      {
        "callee": "lower",
        "line": 301,
        "type": "attribute"
      }
    ],
    "src\\printers\\prusa.py:PrusaPrinter.list_files": [
      {
        "callee": "PrinterConnectionError",
        "line": 319,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 323,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 325,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 329,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 333,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 381,
        "type": "attribute"
      },
      {
        "callee": "extend",
        "line": 382,
        "type": "attribute"
      },
      {
        "callee": "extract_files_from_structure",
        "line": 382,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 385,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 386,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 386,
        "type": "attribute"
      },
      {
        "callee": "extract_files_from_structure",
        "line": 387,
        "type": "direct"
      },
      {
        "callee": "extend",
        "line": 388,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 390,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 391,
        "type": "direct"
      },
      {
        "callee": "warning",
        "line": 395,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 396,
        "type": "direct"
      }
    ],
    "src\\printers\\prusa.py:PrusaPrinter.extract_files_from_structure": [
      {
        "callee": "get",
        "line": 344,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 348,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 348,
        "type": "attribute"
      },
      {
        "callee": "extract_files_from_structure",
        "line": 352,
        "type": "direct"
      },
      {
        "callee": "extend",
        "line": 356,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 361,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 362,
        "type": "attribute"
      },
      {
        "callee": "endswith",
        "line": 365,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 365,
        "type": "attribute"
      },
      {
        "callee": "endswith",
        "line": 366,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 366,
        "type": "attribute"
      },
      {
        "callee": "PrinterFile",
        "line": 369,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 371,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 373,
        "type": "attribute"
      },
      {
        "callee": "fromtimestamp",
        "line": 372,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 372,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 374,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 376,
        "type": "attribute"
      }
    ],
    "src\\printers\\prusa.py:PrusaPrinter.get_files": [
      {
        "callee": "PrinterConnectionError",
        "line": 402,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 406,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 408,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 412,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 416,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 459,
        "type": "attribute"
      },
      {
        "callee": "extend",
        "line": 460,
        "type": "attribute"
      },
      {
        "callee": "extract_raw_files_from_structure",
        "line": 460,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 463,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 464,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 464,
        "type": "attribute"
      },
      {
        "callee": "extract_raw_files_from_structure",
        "line": 465,
        "type": "direct"
      },
      {
        "callee": "extend",
        "line": 466,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 468,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 469,
        "type": "direct"
      },
      {
        "callee": "warning",
        "line": 473,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 474,
        "type": "direct"
      }
    ],
    "src\\printers\\prusa.py:PrusaPrinter.extract_raw_files_from_structure": [
      {
        "callee": "get",
        "line": 426,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 430,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 430,
        "type": "attribute"
      },
      {
        "callee": "extract_raw_files_from_structure",
        "line": 434,
        "type": "direct"
      },
      {
        "callee": "extend",
        "line": 438,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 443,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 444,
        "type": "attribute"
      },
      {
        "callee": "endswith",
        "line": 447,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 447,
        "type": "attribute"
      },
      {
        "callee": "endswith",
        "line": 448,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 448,
        "type": "attribute"
      },
      {
        "callee": "dict",
        "line": 452,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 454,
        "type": "attribute"
      }
    ],
    "src\\printers\\prusa.py:PrusaPrinter.download_file": [
      {
        "callee": "PrinterConnectionError",
        "line": 480,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 483,
        "type": "attribute"
      },
      {
        "callee": "_find_file_by_display_name",
        "line": 487,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 489,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 494,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 494,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 496,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 500,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 502,
        "type": "attribute"
      },
      {
        "callee": "startswith",
        "line": 512,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 517,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 520,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 526,
        "type": "attribute"
      },
      {
        "callee": "mkdir",
        "line": 529,
        "type": "attribute"
      },
      {
        "callee": "Path",
        "line": 529,
        "type": "direct"
      },
      {
        "callee": "iter_chunked",
        "line": 535,
        "type": "attribute"
      },
      {
        "callee": "startswith",
        "line": 539,
        "type": "attribute"
      },
      {
        "callee": "startswith",
        "line": 539,
        "type": "attribute"
      },
      {
        "callee": "decode",
        "line": 542,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 543,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 551,
        "type": "attribute"
      },
      {
        "callee": "open",
        "line": 554,
        "type": "direct"
      },
      {
        "callee": "write",
        "line": 556,
        "type": "attribute"
      },
      {
        "callee": "stat",
        "line": 558,
        "type": "attribute"
      },
      {
        "callee": "Path",
        "line": 558,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 559,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 564,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 573,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 574,
        "type": "direct"
      }
    ],
    "src\\printers\\prusa.py:PrusaPrinter._find_file_by_display_name": [
      {
        "callee": "get_files",
        "line": 580,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 582,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 582,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 587,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 588,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 591,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 596,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 598,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 599,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 601,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 602,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 603,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 604,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 606,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 611,
        "type": "attribute"
      },
      {
        "callee": "enumerate",
        "line": 613,
        "type": "direct"
      },
      {
        "callee": "warning",
        "line": 614,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 614,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 614,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 616,
        "type": "direct"
      },
      {
        "callee": "warning",
        "line": 617,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 617,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 622,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 625,
        "type": "direct"
      }
    ],
    "src\\printers\\prusa.py:PrusaPrinter.download_thumbnail": [
      {
        "callee": "warning",
        "line": 640,
        "type": "attribute"
      },
      {
        "callee": "_find_file_by_display_name",
        "line": 646,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 648,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 653,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 654,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 654,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 657,
        "type": "attribute"
      },
      {
        "callee": "startswith",
        "line": 663,
        "type": "attribute"
      },
      {
        "callee": "startswith",
        "line": 665,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 669,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 673,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 678,
        "type": "attribute"
      },
      {
        "callee": "read",
        "line": 680,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 681,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 683,
        "type": "direct"
      },
      {
        "callee": "warning",
        "line": 686,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 692,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 693,
        "type": "direct"
      }
    ],
    "src\\printers\\prusa.py:PrusaPrinter.pause_print": [
      {
        "callee": "PrinterConnectionError",
        "line": 699,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 702,
        "type": "attribute"
      },
      {
        "callee": "post",
        "line": 705,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 708,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 711,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 716,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 717,
        "type": "direct"
      }
    ],
    "src\\printers\\prusa.py:PrusaPrinter.resume_print": [
      {
        "callee": "PrinterConnectionError",
        "line": 723,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 726,
        "type": "attribute"
      },
      {
        "callee": "post",
        "line": 729,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 732,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 735,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 740,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 741,
        "type": "direct"
      }
    ],
    "src\\printers\\prusa.py:PrusaPrinter.stop_print": [
      {
        "callee": "PrinterConnectionError",
        "line": 747,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 750,
        "type": "attribute"
      },
      {
        "callee": "post",
        "line": 753,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 756,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 759,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 764,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 765,
        "type": "direct"
      }
    ],
    "src\\printers\\prusa.py:PrusaPrinter.get_camera_stream_url": [
      {
        "callee": "debug",
        "line": 777,
        "type": "attribute"
      }
    ],
    "src\\printers\\prusa.py:PrusaPrinter.take_snapshot": [
      {
        "callee": "debug",
        "line": 783,
        "type": "attribute"
      }
    ],
    "src\\services\\analytics_service.py:AnalyticsService.get_business_report": [
      {
        "callee": "info",
        "line": 50,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 51,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 51,
        "type": "attribute"
      },
      {
        "callee": "get_jobs_by_date_range",
        "line": 54,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 55,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 55,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 59,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 60,
        "type": "attribute"
      },
      {
        "callee": "sum",
        "line": 63,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 63,
        "type": "attribute"
      },
      {
        "callee": "sum",
        "line": 64,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 64,
        "type": "attribute"
      },
      {
        "callee": "sum",
        "line": 65,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 65,
        "type": "attribute"
      },
      {
        "callee": "sum",
        "line": 69,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 69,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 73,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 74,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 77,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 78,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 79,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 93,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 93,
        "type": "direct"
      },
      {
        "callee": "isoformat",
        "line": 96,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 97,
        "type": "attribute"
      }
    ],
    "src\\services\\analytics_service.py:AnalyticsService.export_data": [
      {
        "callee": "info",
        "line": 119,
        "type": "attribute"
      }
    ],
    "src\\services\\analytics_service.py:AnalyticsService.get_summary": [
      {
        "callee": "now",
        "line": 133,
        "type": "attribute"
      },
      {
        "callee": "timedelta",
        "line": 135,
        "type": "direct"
      },
      {
        "callee": "get_jobs_by_date_range",
        "line": 138,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 139,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 139,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 143,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 144,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 144,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 145,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 145,
        "type": "attribute"
      },
      {
        "callee": "sum",
        "line": 147,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 147,
        "type": "attribute"
      },
      {
        "callee": "sum",
        "line": 148,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 148,
        "type": "attribute"
      },
      {
        "callee": "sum",
        "line": 149,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 149,
        "type": "attribute"
      },
      {
        "callee": "round",
        "line": 158,
        "type": "direct"
      },
      {
        "callee": "round",
        "line": 159,
        "type": "direct"
      },
      {
        "callee": "round",
        "line": 160,
        "type": "direct"
      },
      {
        "callee": "round",
        "line": 161,
        "type": "direct"
      },
      {
        "callee": "round",
        "line": 162,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 165,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 165,
        "type": "direct"
      }
    ],
    "src\\services\\analytics_service.py:AnalyticsService.get_business_analytics": [
      {
        "callee": "now",
        "line": 173,
        "type": "attribute"
      },
      {
        "callee": "timedelta",
        "line": 175,
        "type": "direct"
      },
      {
        "callee": "get_jobs_by_date_range",
        "line": 178,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 179,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 179,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 183,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 184,
        "type": "attribute"
      },
      {
        "callee": "sum",
        "line": 187,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 187,
        "type": "attribute"
      },
      {
        "callee": "sum",
        "line": 188,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 188,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 194,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 202,
        "type": "attribute"
      },
      {
        "callee": "sorted",
        "line": 205,
        "type": "direct"
      },
      {
        "callee": "values",
        "line": 206,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 212,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 213,
        "type": "direct"
      },
      {
        "callee": "round",
        "line": 214,
        "type": "direct"
      },
      {
        "callee": "round",
        "line": 215,
        "type": "direct"
      },
      {
        "callee": "round",
        "line": 216,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 220,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 220,
        "type": "direct"
      }
    ],
    "src\\services\\analytics_service.py:AnalyticsService.get_dashboard_overview": [
      {
        "callee": "_get_job_statistics",
        "line": 227,
        "type": "attribute"
      },
      {
        "callee": "_get_file_statistics",
        "line": 230,
        "type": "attribute"
      },
      {
        "callee": "_get_printer_statistics",
        "line": 233,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 242,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 242,
        "type": "direct"
      }
    ],
    "src\\services\\analytics_service.py:AnalyticsService._get_job_statistics": [
      {
        "callee": "error",
        "line": 275,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 275,
        "type": "direct"
      }
    ],
    "src\\services\\analytics_service.py:AnalyticsService._get_file_statistics": [
      {
        "callee": "get_file_statistics",
        "line": 286,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 290,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 291,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 292,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 303,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 303,
        "type": "direct"
      }
    ],
    "src\\services\\analytics_service.py:AnalyticsService._get_printer_statistics": [
      {
        "callee": "list_printers",
        "line": 314,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 316,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 317,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 317,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 324,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 324,
        "type": "direct"
      }
    ],
    "src\\services\\bambu_ftp_service.py:BambuFTPFile.__init__": [
      {
        "callee": "_determine_file_type",
        "line": 39,
        "type": "attribute"
      }
    ],
    "src\\services\\bambu_ftp_service.py:BambuFTPFile._determine_file_type": [
      {
        "callee": "lower",
        "line": 43,
        "type": "attribute"
      },
      {
        "callee": "Path",
        "line": 43,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 57,
        "type": "attribute"
      }
    ],
    "src\\services\\bambu_ftp_service.py:BambuFTPFile.to_dict": [
      {
        "callee": "isoformat",
        "line": 70,
        "type": "attribute"
      }
    ],
    "src\\services\\bambu_ftp_service.py:BambuFTPService.__init__": [
      {
        "callee": "info",
        "line": 99,
        "type": "attribute"
      }
    ],
    "src\\services\\bambu_ftp_service.py:BambuFTPService._create_ssl_context": [
      {
        "callee": "create_default_context",
        "line": 104,
        "type": "attribute"
      }
    ],
    "src\\services\\bambu_ftp_service.py:BambuFTPService._connect_ftp": [
      {
        "callee": "_create_ssl_context",
        "line": 121,
        "type": "attribute"
      },
      {
        "callee": "get_event_loop",
        "line": 150,
        "type": "attribute"
      },
      {
        "callee": "run_in_executor",
        "line": 151,
        "type": "attribute"
      }
    ],
    "src\\services\\bambu_ftp_service.py:BambuFTPService._sync_connect": [
      {
        "callee": "FTP_TLS",
        "line": 125,
        "type": "attribute"
      },
      {
        "callee": "set_pasv",
        "line": 126,
        "type": "attribute"
      },
      {
        "callee": "connect",
        "line": 130,
        "type": "attribute"
      },
      {
        "callee": "login",
        "line": 133,
        "type": "attribute"
      },
      {
        "callee": "prot_p",
        "line": 136,
        "type": "attribute"
      },
      {
        "callee": "close",
        "line": 141,
        "type": "attribute"
      },
      {
        "callee": "PermissionError",
        "line": 142,
        "type": "direct"
      },
      {
        "callee": "close",
        "line": 144,
        "type": "attribute"
      },
      {
        "callee": "ConnectionError",
        "line": 145,
        "type": "direct"
      },
      {
        "callee": "close",
        "line": 147,
        "type": "attribute"
      },
      {
        "callee": "ConnectionError",
        "line": 148,
        "type": "direct"
      }
    ],
    "src\\services\\bambu_ftp_service.py:BambuFTPService.ftp_connection": [
      {
        "callee": "range",
        "line": 163,
        "type": "direct"
      },
      {
        "callee": "_connect_ftp",
        "line": 165,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 166,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 172,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 176,
        "type": "direct"
      },
      {
        "callee": "sleep",
        "line": 182,
        "type": "attribute"
      },
      {
        "callee": "run_in_executor",
        "line": 187,
        "type": "attribute"
      },
      {
        "callee": "get_event_loop",
        "line": 187,
        "type": "attribute"
      },
      {
        "callee": "close",
        "line": 190,
        "type": "attribute"
      }
    ],
    "src\\services\\bambu_ftp_service.py:BambuFTPService.list_files": [
      {
        "callee": "info",
        "line": 208,
        "type": "attribute"
      },
      {
        "callee": "ftp_connection",
        "line": 211,
        "type": "attribute"
      },
      {
        "callee": "get_event_loop",
        "line": 237,
        "type": "attribute"
      },
      {
        "callee": "run_in_executor",
        "line": 238,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 240,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 243,
        "type": "direct"
      }
    ],
    "src\\services\\bambu_ftp_service.py:BambuFTPService._sync_list": [
      {
        "callee": "cwd",
        "line": 215,
        "type": "attribute"
      },
      {
        "callee": "retrlines",
        "line": 219,
        "type": "attribute"
      },
      {
        "callee": "_parse_ftp_line",
        "line": 223,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 225,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 230,
        "type": "direct"
      },
      {
        "callee": "warning",
        "line": 231,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 232,
        "type": "direct"
      },
      {
        "callee": "PermissionError",
        "line": 235,
        "type": "direct"
      }
    ],
    "src\\services\\bambu_ftp_service.py:BambuFTPService._parse_ftp_line": [
      {
        "callee": "split",
        "line": 258,
        "type": "attribute"
      },
      {
        "callee": "strip",
        "line": 258,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 259,
        "type": "direct"
      },
      {
        "callee": "startswith",
        "line": 265,
        "type": "attribute"
      },
      {
        "callee": "isdigit",
        "line": 269,
        "type": "attribute"
      },
      {
        "callee": "int",
        "line": 269,
        "type": "direct"
      },
      {
        "callee": "join",
        "line": 270,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 278,
        "type": "direct"
      },
      {
        "callee": "BambuFTPFile",
        "line": 284,
        "type": "direct"
      },
      {
        "callee": "debug",
        "line": 293,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 293,
        "type": "direct"
      }
    ],
    "src\\services\\bambu_ftp_service.py:BambuFTPService.download_file": [
      {
        "callee": "info",
        "line": 309,
        "type": "attribute"
      },
      {
        "callee": "mkdir",
        "line": 317,
        "type": "attribute"
      },
      {
        "callee": "Path",
        "line": 317,
        "type": "direct"
      },
      {
        "callee": "ftp_connection",
        "line": 319,
        "type": "attribute"
      },
      {
        "callee": "get_event_loop",
        "line": 344,
        "type": "attribute"
      },
      {
        "callee": "run_in_executor",
        "line": 345,
        "type": "attribute"
      },
      {
        "callee": "exists",
        "line": 347,
        "type": "attribute"
      },
      {
        "callee": "Path",
        "line": 347,
        "type": "direct"
      },
      {
        "callee": "stat",
        "line": 348,
        "type": "attribute"
      },
      {
        "callee": "Path",
        "line": 348,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 349,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 356,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 362,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 365,
        "type": "direct"
      }
    ],
    "src\\services\\bambu_ftp_service.py:BambuFTPService._sync_download": [
      {
        "callee": "cwd",
        "line": 323,
        "type": "attribute"
      },
      {
        "callee": "open",
        "line": 326,
        "type": "direct"
      },
      {
        "callee": "retrbinary",
        "line": 327,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 332,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 335,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 338,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 341,
        "type": "direct"
      }
    ],
    "src\\services\\bambu_ftp_service.py:BambuFTPService.file_exists": [
      {
        "callee": "list_files",
        "line": 380,
        "type": "attribute"
      },
      {
        "callee": "any",
        "line": 381,
        "type": "direct"
      },
      {
        "callee": "debug",
        "line": 383,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 386,
        "type": "direct"
      }
    ],
    "src\\services\\bambu_ftp_service.py:BambuFTPService.get_file_info": [
      {
        "callee": "list_files",
        "line": 401,
        "type": "attribute"
      },
      {
        "callee": "next",
        "line": 402,
        "type": "direct"
      },
      {
        "callee": "debug",
        "line": 404,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 407,
        "type": "direct"
      }
    ],
    "src\\services\\bambu_ftp_service.py:BambuFTPService.test_connection": [
      {
        "callee": "ftp_connection",
        "line": 418,
        "type": "attribute"
      },
      {
        "callee": "get_event_loop",
        "line": 420,
        "type": "attribute"
      },
      {
        "callee": "run_in_executor",
        "line": 421,
        "type": "attribute"
      }
    ],
    "src\\services\\bambu_ftp_service.py:create_bambu_ftp_service": [
      {
        "callee": "BambuFTPService",
        "line": 447,
        "type": "direct"
      },
      {
        "callee": "test_connection",
        "line": 450,
        "type": "attribute"
      },
      {
        "callee": "ConnectionError",
        "line": 452,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 454,
        "type": "attribute"
      }
    ],
    "src\\services\\bambu_parser.py:BambuParser.parse_file": [
      {
        "callee": "Path",
        "line": 102,
        "type": "direct"
      },
      {
        "callee": "exists",
        "line": 104,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 114,
        "type": "attribute"
      },
      {
        "callee": "_parse_3mf_file",
        "line": 115,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 116,
        "type": "attribute"
      },
      {
        "callee": "_parse_gcode_file",
        "line": 117,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 118,
        "type": "attribute"
      },
      {
        "callee": "_parse_bgcode_file",
        "line": 119,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 120,
        "type": "attribute"
      },
      {
        "callee": "_parse_stl_file",
        "line": 121,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 132,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 132,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 132,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 135,
        "type": "direct"
      }
    ],
    "src\\services\\bambu_parser.py:BambuParser._parse_gcode_file": [
      {
        "callee": "open",
        "line": 144,
        "type": "direct"
      },
      {
        "callee": "read",
        "line": 145,
        "type": "attribute"
      },
      {
        "callee": "_extract_gcode_thumbnails",
        "line": 148,
        "type": "attribute"
      },
      {
        "callee": "_extract_gcode_metadata",
        "line": 151,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 153,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 154,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 155,
        "type": "direct"
      },
      {
        "callee": "list",
        "line": 156,
        "type": "direct"
      },
      {
        "callee": "keys",
        "line": 156,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 163,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 167,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 167,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 167,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 170,
        "type": "direct"
      }
    ],
    "src\\services\\bambu_parser.py:BambuParser._parse_3mf_file": [
      {
        "callee": "ZipFile",
        "line": 182,
        "type": "attribute"
      },
      {
        "callee": "namelist",
        "line": 184,
        "type": "attribute"
      },
      {
        "callee": "startswith",
        "line": 185,
        "type": "attribute"
      },
      {
        "callee": "endswith",
        "line": 185,
        "type": "attribute"
      },
      {
        "callee": "open",
        "line": 190,
        "type": "attribute"
      },
      {
        "callee": "read",
        "line": 191,
        "type": "attribute"
      },
      {
        "callee": "decode",
        "line": 192,
        "type": "attribute"
      },
      {
        "callee": "b64encode",
        "line": 192,
        "type": "attribute"
      },
      {
        "callee": "_parse_thumbnail_dimensions",
        "line": 195,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 197,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 206,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 207,
        "type": "direct"
      },
      {
        "callee": "open",
        "line": 212,
        "type": "attribute"
      },
      {
        "callee": "decode",
        "line": 213,
        "type": "attribute"
      },
      {
        "callee": "read",
        "line": 213,
        "type": "attribute"
      },
      {
        "callee": "update",
        "line": 214,
        "type": "attribute"
      },
      {
        "callee": "_extract_3mf_metadata",
        "line": 214,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 216,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 216,
        "type": "direct"
      },
      {
        "callee": "namelist",
        "line": 219,
        "type": "attribute"
      },
      {
        "callee": "startswith",
        "line": 220,
        "type": "attribute"
      },
      {
        "callee": "endswith",
        "line": 220,
        "type": "attribute"
      },
      {
        "callee": "open",
        "line": 224,
        "type": "attribute"
      },
      {
        "callee": "decode",
        "line": 225,
        "type": "attribute"
      },
      {
        "callee": "read",
        "line": 225,
        "type": "attribute"
      },
      {
        "callee": "update",
        "line": 226,
        "type": "attribute"
      },
      {
        "callee": "_extract_3mf_metadata",
        "line": 226,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 228,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 229,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 232,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 233,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 234,
        "type": "direct"
      },
      {
        "callee": "list",
        "line": 235,
        "type": "direct"
      },
      {
        "callee": "keys",
        "line": 235,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 242,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 246,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 246,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 246,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 249,
        "type": "direct"
      }
    ],
    "src\\services\\bambu_parser.py:BambuParser._extract_gcode_thumbnails": [
      {
        "callee": "list",
        "line": 260,
        "type": "direct"
      },
      {
        "callee": "finditer",
        "line": 260,
        "type": "attribute"
      },
      {
        "callee": "list",
        "line": 261,
        "type": "direct"
      },
      {
        "callee": "finditer",
        "line": 261,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 263,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 263,
        "type": "direct"
      },
      {
        "callee": "warning",
        "line": 264,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 265,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 266,
        "type": "direct"
      },
      {
        "callee": "enumerate",
        "line": 269,
        "type": "direct"
      },
      {
        "callee": "int",
        "line": 271,
        "type": "direct"
      },
      {
        "callee": "group",
        "line": 271,
        "type": "attribute"
      },
      {
        "callee": "int",
        "line": 272,
        "type": "direct"
      },
      {
        "callee": "group",
        "line": 272,
        "type": "attribute"
      },
      {
        "callee": "int",
        "line": 273,
        "type": "direct"
      },
      {
        "callee": "group",
        "line": 273,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 275,
        "type": "direct"
      },
      {
        "callee": "end",
        "line": 279,
        "type": "attribute"
      },
      {
        "callee": "start",
        "line": 280,
        "type": "attribute"
      },
      {
        "callee": "split",
        "line": 285,
        "type": "attribute"
      },
      {
        "callee": "strip",
        "line": 286,
        "type": "attribute"
      },
      {
        "callee": "startswith",
        "line": 287,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 287,
        "type": "direct"
      },
      {
        "callee": "strip",
        "line": 289,
        "type": "attribute"
      },
      {
        "callee": "_is_valid_base64",
        "line": 293,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 294,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 303,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 306,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 309,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 309,
        "type": "direct"
      }
    ],
    "src\\services\\bambu_parser.py:BambuParser._extract_gcode_metadata": [
      {
        "callee": "items",
        "line": 319,
        "type": "attribute"
      },
      {
        "callee": "search",
        "line": 320,
        "type": "attribute"
      },
      {
        "callee": "strip",
        "line": 322,
        "type": "attribute"
      },
      {
        "callee": "group",
        "line": 322,
        "type": "attribute"
      },
      {
        "callee": "float",
        "line": 327,
        "type": "direct"
      },
      {
        "callee": "int",
        "line": 332,
        "type": "direct"
      },
      {
        "callee": "_parse_time_duration",
        "line": 336,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 338,
        "type": "attribute"
      },
      {
        "callee": "items",
        "line": 343,
        "type": "attribute"
      },
      {
        "callee": "search",
        "line": 344,
        "type": "attribute"
      },
      {
        "callee": "strip",
        "line": 346,
        "type": "attribute"
      },
      {
        "callee": "group",
        "line": 346,
        "type": "attribute"
      },
      {
        "callee": "float",
        "line": 351,
        "type": "direct"
      },
      {
        "callee": "strip",
        "line": 351,
        "type": "attribute"
      },
      {
        "callee": "split",
        "line": 351,
        "type": "attribute"
      },
      {
        "callee": "sum",
        "line": 353,
        "type": "direct"
      },
      {
        "callee": "float",
        "line": 358,
        "type": "direct"
      },
      {
        "callee": "strip",
        "line": 363,
        "type": "attribute"
      },
      {
        "callee": "split",
        "line": 363,
        "type": "attribute"
      },
      {
        "callee": "update",
        "line": 368,
        "type": "attribute"
      },
      {
        "callee": "_extract_advanced_metadata",
        "line": 368,
        "type": "attribute"
      },
      {
        "callee": "update",
        "line": 371,
        "type": "attribute"
      },
      {
        "callee": "_calculate_derived_metrics",
        "line": 371,
        "type": "attribute"
      }
    ],
    "src\\services\\bambu_parser.py:BambuParser._extract_advanced_metadata": [
      {
        "callee": "items",
        "line": 379,
        "type": "attribute"
      },
      {
        "callee": "search",
        "line": 380,
        "type": "attribute"
      },
      {
        "callee": "strip",
        "line": 382,
        "type": "attribute"
      },
      {
        "callee": "group",
        "line": 382,
        "type": "attribute"
      },
      {
        "callee": "_convert_metadata_value",
        "line": 383,
        "type": "attribute"
      }
    ],
    "src\\services\\bambu_parser.py:BambuParser._convert_metadata_value": [
      {
        "callee": "float",
        "line": 394,
        "type": "direct"
      },
      {
        "callee": "int",
        "line": 402,
        "type": "direct"
      },
      {
        "callee": "float",
        "line": 412,
        "type": "direct"
      },
      {
        "callee": "strip",
        "line": 412,
        "type": "attribute"
      },
      {
        "callee": "split",
        "line": 412,
        "type": "attribute"
      },
      {
        "callee": "float",
        "line": 414,
        "type": "direct"
      },
      {
        "callee": "lower",
        "line": 420,
        "type": "attribute"
      },
      {
        "callee": "strip",
        "line": 428,
        "type": "attribute"
      },
      {
        "callee": "strip",
        "line": 428,
        "type": "attribute"
      },
      {
        "callee": "split",
        "line": 428,
        "type": "attribute"
      },
      {
        "callee": "strip",
        "line": 431,
        "type": "attribute"
      },
      {
        "callee": "strip",
        "line": 431,
        "type": "attribute"
      }
    ],
    "src\\services\\bambu_parser.py:BambuParser._calculate_derived_metrics": [
      {
        "callee": "round",
        "line": 447,
        "type": "direct"
      },
      {
        "callee": "isinstance",
        "line": 454,
        "type": "direct"
      },
      {
        "callee": "round",
        "line": 455,
        "type": "direct"
      },
      {
        "callee": "sum",
        "line": 455,
        "type": "direct"
      },
      {
        "callee": "isinstance",
        "line": 456,
        "type": "direct"
      },
      {
        "callee": "round",
        "line": 457,
        "type": "direct"
      },
      {
        "callee": "float",
        "line": 457,
        "type": "direct"
      },
      {
        "callee": "isinstance",
        "line": 462,
        "type": "direct"
      },
      {
        "callee": "round",
        "line": 464,
        "type": "direct"
      },
      {
        "callee": "sum",
        "line": 464,
        "type": "direct"
      },
      {
        "callee": "isinstance",
        "line": 465,
        "type": "direct"
      },
      {
        "callee": "round",
        "line": 466,
        "type": "direct"
      },
      {
        "callee": "float",
        "line": 466,
        "type": "direct"
      },
      {
        "callee": "_calculate_complexity_score",
        "line": 473,
        "type": "attribute"
      },
      {
        "callee": "_calculate_difficulty_level",
        "line": 476,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 480,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 480,
        "type": "attribute"
      },
      {
        "callee": "round",
        "line": 483,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 488,
        "type": "attribute"
      },
      {
        "callee": "round",
        "line": 501,
        "type": "direct"
      },
      {
        "callee": "round",
        "line": 505,
        "type": "direct"
      }
    ],
    "src\\services\\bambu_parser.py:BambuParser._calculate_complexity_score": [
      {
        "callee": "get",
        "line": 516,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 526,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 526,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 530,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 530,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 536,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 536,
        "type": "attribute"
      },
      {
        "callee": "any",
        "line": 539,
        "type": "direct"
      },
      {
        "callee": "lower",
        "line": 539,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 539,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 543,
        "type": "attribute"
      },
      {
        "callee": "isinstance",
        "line": 544,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 544,
        "type": "direct"
      },
      {
        "callee": "sum",
        "line": 546,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 551,
        "type": "attribute"
      },
      {
        "callee": "max",
        "line": 559,
        "type": "direct"
      },
      {
        "callee": "min",
        "line": 559,
        "type": "direct"
      }
    ],
    "src\\services\\bambu_parser.py:BambuParser._calculate_difficulty_level": [
      {
        "callee": "_calculate_complexity_score",
        "line": 563,
        "type": "attribute"
      }
    ],
    "src\\services\\bambu_parser.py:BambuParser._extract_3mf_metadata": [
      {
        "callee": "fromstring",
        "line": 579,
        "type": "attribute"
      },
      {
        "callee": "iter",
        "line": 582,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 583,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 584,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 585,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 589,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 593,
        "type": "attribute"
      },
      {
        "callee": "float",
        "line": 593,
        "type": "direct"
      },
      {
        "callee": "lower",
        "line": 595,
        "type": "attribute"
      },
      {
        "callee": "int",
        "line": 595,
        "type": "direct"
      },
      {
        "callee": "lower",
        "line": 597,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 599,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 602,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 602,
        "type": "direct"
      }
    ],
    "src\\services\\bambu_parser.py:BambuParser._parse_bgcode_file": [
      {
        "callee": "open",
        "line": 616,
        "type": "direct"
      },
      {
        "callee": "read",
        "line": 619,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 621,
        "type": "attribute"
      },
      {
        "callee": "hex",
        "line": 622,
        "type": "attribute"
      },
      {
        "callee": "hex",
        "line": 625,
        "type": "attribute"
      },
      {
        "callee": "seek",
        "line": 632,
        "type": "attribute"
      },
      {
        "callee": "read",
        "line": 633,
        "type": "attribute"
      },
      {
        "callee": "find",
        "line": 640,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 643,
        "type": "attribute"
      },
      {
        "callee": "enumerate",
        "line": 647,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 650,
        "type": "direct"
      },
      {
        "callee": "find",
        "line": 655,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 657,
        "type": "direct"
      },
      {
        "callee": "min",
        "line": 660,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 660,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 665,
        "type": "direct"
      },
      {
        "callee": "decode",
        "line": 669,
        "type": "attribute"
      },
      {
        "callee": "b64encode",
        "line": 669,
        "type": "attribute"
      },
      {
        "callee": "_extract_png_dimensions",
        "line": 672,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 674,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 681,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 682,
        "type": "direct"
      },
      {
        "callee": "warning",
        "line": 685,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 686,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 692,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 694,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 697,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 698,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 699,
        "type": "direct"
      },
      {
        "callee": "list",
        "line": 700,
        "type": "direct"
      },
      {
        "callee": "keys",
        "line": 700,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 707,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 711,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 711,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 711,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 714,
        "type": "direct"
      }
    ],
    "src\\services\\bambu_parser.py:BambuParser._parse_stl_file": [
      {
        "callee": "stat",
        "line": 734,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 741,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 742,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 754,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 754,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 754,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 757,
        "type": "direct"
      }
    ],
    "src\\services\\bambu_parser.py:BambuParser._extract_png_dimensions": [
      {
        "callee": "len",
        "line": 767,
        "type": "direct"
      },
      {
        "callee": "from_bytes",
        "line": 768,
        "type": "attribute"
      },
      {
        "callee": "from_bytes",
        "line": 769,
        "type": "attribute"
      }
    ],
    "src\\services\\bambu_parser.py:BambuParser._parse_thumbnail_dimensions": [
      {
        "callee": "search",
        "line": 778,
        "type": "attribute"
      },
      {
        "callee": "int",
        "line": 780,
        "type": "direct"
      },
      {
        "callee": "group",
        "line": 780,
        "type": "attribute"
      },
      {
        "callee": "int",
        "line": 780,
        "type": "direct"
      },
      {
        "callee": "group",
        "line": 780,
        "type": "attribute"
      }
    ],
    "src\\services\\bambu_parser.py:BambuParser._parse_time_duration": [
      {
        "callee": "strip",
        "line": 789,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 789,
        "type": "attribute"
      },
      {
        "callee": "search",
        "line": 793,
        "type": "attribute"
      },
      {
        "callee": "int",
        "line": 795,
        "type": "direct"
      },
      {
        "callee": "group",
        "line": 795,
        "type": "attribute"
      },
      {
        "callee": "search",
        "line": 798,
        "type": "attribute"
      },
      {
        "callee": "int",
        "line": 800,
        "type": "direct"
      },
      {
        "callee": "group",
        "line": 800,
        "type": "attribute"
      },
      {
        "callee": "search",
        "line": 803,
        "type": "attribute"
      },
      {
        "callee": "int",
        "line": 805,
        "type": "direct"
      },
      {
        "callee": "group",
        "line": 805,
        "type": "attribute"
      },
      {
        "callee": "int",
        "line": 810,
        "type": "direct"
      },
      {
        "callee": "float",
        "line": 810,
        "type": "direct"
      },
      {
        "callee": "warning",
        "line": 817,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 817,
        "type": "direct"
      }
    ],
    "src\\services\\bambu_parser.py:BambuParser._is_valid_base64": [
      {
        "callee": "len",
        "line": 824,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 825,
        "type": "direct"
      },
      {
        "callee": "b64decode",
        "line": 827,
        "type": "attribute"
      }
    ],
    "src\\services\\bambu_parser.py:BambuParser.get_largest_thumbnail": [
      {
        "callee": "max",
        "line": 838,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 838,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 838,
        "type": "attribute"
      }
    ],
    "src\\services\\bambu_parser.py:BambuParser.get_thumbnail_by_size": [
      {
        "callee": "min",
        "line": 851,
        "type": "direct"
      },
      {
        "callee": "abs",
        "line": 852,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 852,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 852,
        "type": "attribute"
      }
    ],
    "src\\services\\config_service.py:PrinterConfig.__post_init__": [
      {
        "callee": "_validate_config",
        "line": 35,
        "type": "attribute"
      }
    ],
    "src\\services\\config_service.py:PrinterConfig._validate_config": [
      {
        "callee": "ValueError",
        "line": 41,
        "type": "direct"
      },
      {
        "callee": "ValueError",
        "line": 44,
        "type": "direct"
      },
      {
        "callee": "warning",
        "line": 46,
        "type": "attribute"
      }
    ],
    "src\\services\\config_service.py:PrinterConfig.from_dict": [
      {
        "callee": "cls",
        "line": 51,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 53,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 54,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 55,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 56,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 57,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 58,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 59,
        "type": "attribute"
      }
    ],
    "src\\services\\config_service.py:Settings.get_cors_origins": [
      {
        "callee": "strip",
        "line": 117,
        "type": "attribute"
      },
      {
        "callee": "split",
        "line": 117,
        "type": "attribute"
      },
      {
        "callee": "strip",
        "line": 117,
        "type": "attribute"
      }
    ],
    "src\\services\\config_service.py:Settings.normalize_downloads_path": [
      {
        "callee": "any",
        "line": 137,
        "type": "direct"
      },
      {
        "callee": "replace",
        "line": 138,
        "type": "attribute"
      },
      {
        "callee": "replace",
        "line": 138,
        "type": "attribute"
      },
      {
        "callee": "replace",
        "line": 138,
        "type": "attribute"
      },
      {
        "callee": "replace",
        "line": 140,
        "type": "attribute"
      },
      {
        "callee": "replace",
        "line": 142,
        "type": "attribute"
      },
      {
        "callee": "replace",
        "line": 143,
        "type": "attribute"
      },
      {
        "callee": "replace",
        "line": 143,
        "type": "attribute"
      },
      {
        "callee": "replace",
        "line": 143,
        "type": "attribute"
      },
      {
        "callee": "startswith",
        "line": 147,
        "type": "attribute"
      },
      {
        "callee": "startswith",
        "line": 147,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 148,
        "type": "direct"
      },
      {
        "callee": "resolve",
        "line": 148,
        "type": "attribute"
      },
      {
        "callee": "expanduser",
        "line": 148,
        "type": "attribute"
      },
      {
        "callee": "Path",
        "line": 148,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 154,
        "type": "attribute"
      },
      {
        "callee": "field_validator",
        "line": 122,
        "type": "direct"
      }
    ],
    "src\\services\\config_service.py:Settings.normalize_library_path": [
      {
        "callee": "any",
        "line": 165,
        "type": "direct"
      },
      {
        "callee": "replace",
        "line": 166,
        "type": "attribute"
      },
      {
        "callee": "replace",
        "line": 166,
        "type": "attribute"
      },
      {
        "callee": "replace",
        "line": 166,
        "type": "attribute"
      },
      {
        "callee": "replace",
        "line": 168,
        "type": "attribute"
      },
      {
        "callee": "replace",
        "line": 170,
        "type": "attribute"
      },
      {
        "callee": "replace",
        "line": 171,
        "type": "attribute"
      },
      {
        "callee": "replace",
        "line": 171,
        "type": "attribute"
      },
      {
        "callee": "replace",
        "line": 171,
        "type": "attribute"
      },
      {
        "callee": "startswith",
        "line": 174,
        "type": "attribute"
      },
      {
        "callee": "startswith",
        "line": 174,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 175,
        "type": "direct"
      },
      {
        "callee": "resolve",
        "line": 175,
        "type": "attribute"
      },
      {
        "callee": "expanduser",
        "line": 175,
        "type": "attribute"
      },
      {
        "callee": "Path",
        "line": 175,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 179,
        "type": "attribute"
      },
      {
        "callee": "field_validator",
        "line": 157,
        "type": "direct"
      }
    ],
    "src\\services\\config_service.py:ConfigService.__init__": [
      {
        "callee": "Settings",
        "line": 194,
        "type": "direct"
      },
      {
        "callee": "WatchFolderDbService",
        "line": 195,
        "type": "direct"
      },
      {
        "callee": "Path",
        "line": 199,
        "type": "direct"
      },
      {
        "callee": "Path",
        "line": 201,
        "type": "direct"
      },
      {
        "callee": "_load_printer_configs",
        "line": 203,
        "type": "attribute"
      }
    ],
    "src\\services\\config_service.py:ConfigService._load_printer_configs": [
      {
        "callee": "_load_from_environment",
        "line": 208,
        "type": "attribute"
      },
      {
        "callee": "exists",
        "line": 211,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 212,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 212,
        "type": "direct"
      },
      {
        "callee": "_create_default_config",
        "line": 213,
        "type": "attribute"
      },
      {
        "callee": "open",
        "line": 217,
        "type": "direct"
      },
      {
        "callee": "load",
        "line": 218,
        "type": "attribute"
      },
      {
        "callee": "items",
        "line": 221,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 221,
        "type": "attribute"
      },
      {
        "callee": "from_dict",
        "line": 223,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 225,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 225,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 228,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 228,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 231,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 231,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 231,
        "type": "direct"
      },
      {
        "callee": "_create_default_config",
        "line": 232,
        "type": "attribute"
      }
    ],
    "src\\services\\config_service.py:ConfigService._load_from_environment": [
      {
        "callee": "items",
        "line": 241,
        "type": "attribute"
      },
      {
        "callee": "startswith",
        "line": 242,
        "type": "attribute"
      },
      {
        "callee": "split",
        "line": 243,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 244,
        "type": "direct"
      },
      {
        "callee": "join",
        "line": 246,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 247,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 253,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 255,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 257,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 259,
        "type": "direct"
      },
      {
        "callee": "lower",
        "line": 263,
        "type": "attribute"
      },
      {
        "callee": "items",
        "line": 268,
        "type": "attribute"
      },
      {
        "callee": "from_dict",
        "line": 270,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 271,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 273,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 274,
        "type": "direct"
      }
    ],
    "src\\services\\config_service.py:ConfigService._create_default_config": [
      {
        "callee": "mkdir",
        "line": 278,
        "type": "attribute"
      },
      {
        "callee": "open",
        "line": 301,
        "type": "direct"
      },
      {
        "callee": "dump",
        "line": 302,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 303,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 303,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 305,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 305,
        "type": "direct"
      }
    ],
    "src\\services\\config_service.py:ConfigService.get_printers": [
      {
        "callee": "copy",
        "line": 309,
        "type": "attribute"
      }
    ],
    "src\\services\\config_service.py:ConfigService.get_printer": [
      {
        "callee": "get",
        "line": 313,
        "type": "attribute"
      }
    ],
    "src\\services\\config_service.py:ConfigService.get_active_printers": [
      {
        "callee": "items",
        "line": 318,
        "type": "attribute"
      }
    ],
    "src\\services\\config_service.py:ConfigService.add_printer": [
      {
        "callee": "from_dict",
        "line": 326,
        "type": "attribute"
      },
      {
        "callee": "_save_config",
        "line": 328,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 329,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 332,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 332,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 335,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 335,
        "type": "direct"
      }
    ],
    "src\\services\\config_service.py:ConfigService.remove_printer": [
      {
        "callee": "_save_config",
        "line": 342,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 343,
        "type": "attribute"
      }
    ],
    "src\\services\\config_service.py:ConfigService._save_config": [
      {
        "callee": "isoformat",
        "line": 351,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 351,
        "type": "attribute"
      },
      {
        "callee": "to_dict",
        "line": 353,
        "type": "attribute"
      },
      {
        "callee": "items",
        "line": 354,
        "type": "attribute"
      },
      {
        "callee": "exists",
        "line": 360,
        "type": "attribute"
      },
      {
        "callee": "with_suffix",
        "line": 361,
        "type": "attribute"
      },
      {
        "callee": "copy2",
        "line": 363,
        "type": "attribute"
      },
      {
        "callee": "open",
        "line": 365,
        "type": "direct"
      },
      {
        "callee": "dump",
        "line": 366,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 368,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 368,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 370,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 370,
        "type": "direct"
      }
    ],
    "src\\services\\config_service.py:ConfigService.validate_printer_connection": [
      {
        "callee": "get_printer",
        "line": 374,
        "type": "attribute"
      },
      {
        "callee": "_validate_config",
        "line": 379,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 382,
        "type": "direct"
      }
    ],
    "src\\services\\config_service.py:ConfigService.reload_config": [
      {
        "callee": "len",
        "line": 396,
        "type": "direct"
      },
      {
        "callee": "clear",
        "line": 397,
        "type": "attribute"
      },
      {
        "callee": "_load_printer_configs",
        "line": 398,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 400,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 401,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 404,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 404,
        "type": "direct"
      }
    ],
    "src\\services\\config_service.py:ConfigService.get_watch_folders": [
      {
        "callee": "_ensure_env_migration",
        "line": 409,
        "type": "attribute"
      },
      {
        "callee": "get_active_folder_paths",
        "line": 410,
        "type": "attribute"
      }
    ],
    "src\\services\\config_service.py:ConfigService.is_watch_folders_enabled": [
      {
        "callee": "get_settings",
        "line": 414,
        "type": "direct"
      }
    ],
    "src\\services\\config_service.py:ConfigService.is_recursive_watching_enabled": [
      {
        "callee": "get_settings",
        "line": 419,
        "type": "direct"
      }
    ],
    "src\\services\\config_service.py:ConfigService.validate_watch_folder": [
      {
        "callee": "Path",
        "line": 425,
        "type": "direct"
      },
      {
        "callee": "exists",
        "line": 427,
        "type": "attribute"
      },
      {
        "callee": "is_dir",
        "line": 430,
        "type": "attribute"
      },
      {
        "callee": "access",
        "line": 433,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 439,
        "type": "direct"
      }
    ],
    "src\\services\\config_service.py:ConfigService.get_watch_folder_settings": [
      {
        "callee": "_ensure_env_migration",
        "line": 443,
        "type": "attribute"
      },
      {
        "callee": "get_settings",
        "line": 444,
        "type": "direct"
      },
      {
        "callee": "get_all_watch_folders",
        "line": 445,
        "type": "attribute"
      }
    ],
    "src\\services\\config_service.py:ConfigService.get_application_settings": [
      {
        "callee": "get_settings",
        "line": 456,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 458,
        "type": "direct"
      },
      {
        "callee": "getattr",
        "line": 461,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 467,
        "type": "direct"
      },
      {
        "callee": "_get_cors_origins_list",
        "line": 471,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 478,
        "type": "direct"
      },
      {
        "callee": "getattr",
        "line": 481,
        "type": "direct"
      }
    ],
    "src\\services\\config_service.py:ConfigService._get_cors_origins_list": [
      {
        "callee": "strip",
        "line": 488,
        "type": "attribute"
      },
      {
        "callee": "split",
        "line": 488,
        "type": "attribute"
      },
      {
        "callee": "strip",
        "line": 488,
        "type": "attribute"
      }
    ],
    "src\\services\\config_service.py:ConfigService.update_application_settings": [
      {
        "callee": "info",
        "line": 492,
        "type": "attribute"
      },
      {
        "callee": "get_settings",
        "line": 494,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 495,
        "type": "attribute"
      },
      {
        "callee": "type",
        "line": 495,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 503,
        "type": "attribute"
      },
      {
        "callee": "items",
        "line": 505,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 506,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 508,
        "type": "attribute"
      },
      {
        "callee": "hasattr",
        "line": 509,
        "type": "direct"
      },
      {
        "callee": "getattr",
        "line": 510,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 511,
        "type": "attribute"
      },
      {
        "callee": "setattr",
        "line": 513,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 514,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 515,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 517,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 519,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 523,
        "type": "attribute"
      },
      {
        "callee": "_persist_settings_to_env",
        "line": 525,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 526,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 528,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 528,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 531,
        "type": "direct"
      }
    ],
    "src\\services\\config_service.py:ConfigService._persist_settings_to_env": [
      {
        "callee": "Path",
        "line": 539,
        "type": "direct"
      },
      {
        "callee": "exists",
        "line": 543,
        "type": "attribute"
      },
      {
        "callee": "open",
        "line": 544,
        "type": "direct"
      },
      {
        "callee": "strip",
        "line": 546,
        "type": "attribute"
      },
      {
        "callee": "startswith",
        "line": 547,
        "type": "attribute"
      },
      {
        "callee": "split",
        "line": 548,
        "type": "attribute"
      },
      {
        "callee": "strip",
        "line": 549,
        "type": "attribute"
      },
      {
        "callee": "strip",
        "line": 549,
        "type": "attribute"
      },
      {
        "callee": "items",
        "line": 562,
        "type": "attribute"
      },
      {
        "callee": "isinstance",
        "line": 566,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 569,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 570,
        "type": "attribute"
      },
      {
        "callee": "open",
        "line": 573,
        "type": "direct"
      },
      {
        "callee": "items",
        "line": 574,
        "type": "attribute"
      },
      {
        "callee": "write",
        "line": 575,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 577,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 577,
        "type": "direct"
      }
    ],
    "src\\services\\config_service.py:ConfigService.add_watch_folder": [
      {
        "callee": "_ensure_env_migration",
        "line": 582,
        "type": "attribute"
      },
      {
        "callee": "get_watch_folder_by_path",
        "line": 585,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 587,
        "type": "attribute"
      },
      {
        "callee": "validate_watch_folder",
        "line": 591,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 593,
        "type": "attribute"
      },
      {
        "callee": "WatchFolder",
        "line": 598,
        "type": "direct"
      },
      {
        "callee": "Path",
        "line": 600,
        "type": "direct"
      },
      {
        "callee": "create_watch_folder",
        "line": 605,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 606,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 610,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 610,
        "type": "direct"
      }
    ],
    "src\\services\\config_service.py:ConfigService.remove_watch_folder": [
      {
        "callee": "_ensure_env_migration",
        "line": 616,
        "type": "attribute"
      },
      {
        "callee": "get_watch_folder_by_path",
        "line": 619,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 621,
        "type": "attribute"
      },
      {
        "callee": "delete_watch_folder_by_path",
        "line": 625,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 627,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 632,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 632,
        "type": "direct"
      }
    ],
    "src\\services\\config_service.py:ConfigService._ensure_env_migration": [
      {
        "callee": "get_settings",
        "line": 641,
        "type": "direct"
      },
      {
        "callee": "migrate_env_folders",
        "line": 645,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 646,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 647,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 652,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 652,
        "type": "direct"
      }
    ],
    "src\\services\\event_service.py:EventService.__init__": [
      {
        "callee": "now",
        "line": 31,
        "type": "attribute"
      }
    ],
    "src\\services\\event_service.py:EventService.start": [
      {
        "callee": "warning",
        "line": 48,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 52,
        "type": "attribute"
      },
      {
        "callee": "extend",
        "line": 55,
        "type": "attribute"
      },
      {
        "callee": "create_task",
        "line": 56,
        "type": "attribute"
      },
      {
        "callee": "_printer_monitoring_task",
        "line": 56,
        "type": "attribute"
      },
      {
        "callee": "create_task",
        "line": 57,
        "type": "attribute"
      },
      {
        "callee": "_job_status_task",
        "line": 57,
        "type": "attribute"
      },
      {
        "callee": "create_task",
        "line": 58,
        "type": "attribute"
      },
      {
        "callee": "_file_discovery_task",
        "line": 58,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 61,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 61,
        "type": "direct"
      }
    ],
    "src\\services\\event_service.py:EventService.stop": [
      {
        "callee": "info",
        "line": 68,
        "type": "attribute"
      },
      {
        "callee": "done",
        "line": 73,
        "type": "attribute"
      },
      {
        "callee": "cancel",
        "line": 74,
        "type": "attribute"
      },
      {
        "callee": "gather",
        "line": 78,
        "type": "attribute"
      },
      {
        "callee": "clear",
        "line": 80,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 81,
        "type": "attribute"
      }
    ],
    "src\\services\\event_service.py:EventService.subscribe": [
      {
        "callee": "append",
        "line": 87,
        "type": "attribute"
      }
    ],
    "src\\services\\event_service.py:EventService.unsubscribe": [
      {
        "callee": "remove",
        "line": 93,
        "type": "attribute"
      }
    ],
    "src\\services\\event_service.py:EventService.emit_event": [
      {
        "callee": "copy",
        "line": 100,
        "type": "attribute"
      },
      {
        "callee": "iscoroutinefunction",
        "line": 103,
        "type": "attribute"
      },
      {
        "callee": "handler",
        "line": 104,
        "type": "direct"
      },
      {
        "callee": "handler",
        "line": 106,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 108,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 109,
        "type": "direct"
      }
    ],
    "src\\services\\event_service.py:EventService._printer_monitoring_task": [
      {
        "callee": "info",
        "line": 113,
        "type": "attribute"
      },
      {
        "callee": "sleep",
        "line": 118,
        "type": "attribute"
      },
      {
        "callee": "list_printers",
        "line": 127,
        "type": "attribute"
      },
      {
        "callee": "get_printer_status",
        "line": 134,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 137,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 141,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 142,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 143,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 144,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 145,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 145,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 149,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 150,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 150,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 151,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 153,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 154,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 155,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 155,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 159,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 159,
        "type": "attribute"
      },
      {
        "callee": "emit_event",
        "line": 160,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 163,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 163,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 166,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 166,
        "type": "attribute"
      },
      {
        "callee": "emit_event",
        "line": 167,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 170,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 170,
        "type": "attribute"
      },
      {
        "callee": "update_printer_status",
        "line": 179,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 181,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 182,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 186,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 186,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 188,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 193,
        "type": "direct"
      },
      {
        "callee": "isoformat",
        "line": 194,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 194,
        "type": "attribute"
      },
      {
        "callee": "emit_event",
        "line": 198,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 199,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 199,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 205,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 206,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 207,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 210,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 210,
        "type": "direct"
      },
      {
        "callee": "sleep",
        "line": 212,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 217,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 217,
        "type": "direct"
      },
      {
        "callee": "sleep",
        "line": 218,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 220,
        "type": "attribute"
      }
    ],
    "src\\services\\event_service.py:EventService._job_status_task": [
      {
        "callee": "info",
        "line": 224,
        "type": "attribute"
      },
      {
        "callee": "sleep",
        "line": 229,
        "type": "attribute"
      },
      {
        "callee": "get_active_jobs",
        "line": 234,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 240,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 243,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 244,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 245,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 251,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 258,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 258,
        "type": "attribute"
      },
      {
        "callee": "emit_event",
        "line": 264,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 268,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 268,
        "type": "attribute"
      },
      {
        "callee": "emit_event",
        "line": 272,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 277,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 277,
        "type": "attribute"
      },
      {
        "callee": "abs",
        "line": 282,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 283,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 290,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 290,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 299,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 299,
        "type": "attribute"
      },
      {
        "callee": "items",
        "line": 303,
        "type": "attribute"
      },
      {
        "callee": "emit_event",
        "line": 310,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 311,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 311,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 312,
        "type": "direct"
      },
      {
        "callee": "debug",
        "line": 318,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 318,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 321,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 321,
        "type": "direct"
      },
      {
        "callee": "sleep",
        "line": 323,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 328,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 328,
        "type": "direct"
      },
      {
        "callee": "sleep",
        "line": 329,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 331,
        "type": "attribute"
      }
    ],
    "src\\services\\event_service.py:EventService._file_discovery_task": [
      {
        "callee": "info",
        "line": 335,
        "type": "attribute"
      },
      {
        "callee": "sleep",
        "line": 340,
        "type": "attribute"
      },
      {
        "callee": "list_printers",
        "line": 349,
        "type": "attribute"
      },
      {
        "callee": "discover_printer_files",
        "line": 356,
        "type": "attribute"
      },
      {
        "callee": "extend",
        "line": 359,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 364,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 365,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 366,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 366,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 373,
        "type": "direct"
      },
      {
        "callee": "debug",
        "line": 377,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 379,
        "type": "direct"
      },
      {
        "callee": "warning",
        "line": 382,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 383,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 388,
        "type": "direct"
      },
      {
        "callee": "hasattr",
        "line": 392,
        "type": "direct"
      },
      {
        "callee": "scan_local_files",
        "line": 395,
        "type": "attribute"
      },
      {
        "callee": "extend",
        "line": 397,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 402,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 403,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 404,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 405,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 405,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 412,
        "type": "direct"
      },
      {
        "callee": "warning",
        "line": 416,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 416,
        "type": "direct"
      },
      {
        "callee": "emit_event",
        "line": 419,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 420,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 420,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 423,
        "type": "direct"
      },
      {
        "callee": "emit_event",
        "line": 429,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 430,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 430,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 432,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 435,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 435,
        "type": "direct"
      },
      {
        "callee": "now",
        "line": 437,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 440,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 440,
        "type": "direct"
      },
      {
        "callee": "sleep",
        "line": 442,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 447,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 447,
        "type": "direct"
      },
      {
        "callee": "sleep",
        "line": 448,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 450,
        "type": "attribute"
      }
    ],
    "src\\services\\event_service.py:EventService.get_status": [
      {
        "callee": "len",
        "line": 456,
        "type": "direct"
      },
      {
        "callee": "done",
        "line": 456,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 457,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 459,
        "type": "direct"
      },
      {
        "callee": "items",
        "line": 460,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 463,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 464,
        "type": "direct"
      },
      {
        "callee": "isoformat",
        "line": 465,
        "type": "attribute"
      },
      {
        "callee": "copy",
        "line": 467,
        "type": "attribute"
      }
    ],
    "src\\services\\event_service.py:EventService.set_services": [
      {
        "callee": "info",
        "line": 487,
        "type": "attribute"
      }
    ],
    "src\\services\\event_service.py:EventService.force_discovery": [
      {
        "callee": "info",
        "line": 495,
        "type": "attribute"
      },
      {
        "callee": "list_printers",
        "line": 506,
        "type": "attribute"
      },
      {
        "callee": "discover_printer_files",
        "line": 511,
        "type": "attribute"
      },
      {
        "callee": "extend",
        "line": 513,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 515,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 522,
        "type": "direct"
      },
      {
        "callee": "emit_event",
        "line": 526,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 527,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 527,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 535,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 536,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 540,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 540,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 541,
        "type": "direct"
      }
    ],
    "src\\services\\event_service.py:EventService.reset_monitoring_state": [
      {
        "callee": "info",
        "line": 545,
        "type": "attribute"
      },
      {
        "callee": "clear",
        "line": 546,
        "type": "attribute"
      },
      {
        "callee": "clear",
        "line": 547,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 548,
        "type": "attribute"
      }
    ],
    "src\\services\\file_service.py:FileService.__init__": [
      {
        "callee": "BambuParser",
        "line": 34,
        "type": "direct"
      },
      {
        "callee": "PreviewRenderService",
        "line": 35,
        "type": "direct"
      }
    ],
    "src\\services\\file_service.py:FileService.get_files": [
      {
        "callee": "list_files",
        "line": 58,
        "type": "attribute"
      },
      {
        "callee": "list_printers",
        "line": 67,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 71,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 71,
        "type": "direct"
      },
      {
        "callee": "dict",
        "line": 75,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 79,
        "type": "attribute"
      },
      {
        "callee": "hasattr",
        "line": 84,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 84,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 94,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 96,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 96,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 99,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 99,
        "type": "direct"
      },
      {
        "callee": "get_local_files",
        "line": 104,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 108,
        "type": "attribute"
      },
      {
        "callee": "extend",
        "line": 113,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 114,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 114,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 116,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 116,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 120,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 120,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 123,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 126,
        "type": "attribute"
      },
      {
        "callee": "bool",
        "line": 129,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 129,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 133,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 134,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 134,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 137,
        "type": "attribute"
      },
      {
        "callee": "sorted",
        "line": 139,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 139,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 139,
        "type": "attribute"
      },
      {
        "callee": "sorted",
        "line": 141,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 141,
        "type": "attribute"
      },
      {
        "callee": "sorted",
        "line": 143,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 143,
        "type": "attribute"
      },
      {
        "callee": "sorted",
        "line": 145,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 145,
        "type": "attribute"
      }
    ],
    "src\\services\\file_service.py:FileService.get_printer_files": [
      {
        "callee": "warning",
        "line": 158,
        "type": "attribute"
      },
      {
        "callee": "get_printer_files",
        "line": 162,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 172,
        "type": "attribute"
      },
      {
        "callee": "_get_file_type",
        "line": 173,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 177,
        "type": "attribute"
      },
      {
        "callee": "create_file",
        "line": 181,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 182,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 184,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 184,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 188,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 188,
        "type": "direct"
      },
      {
        "callee": "list_files",
        "line": 190,
        "type": "attribute"
      }
    ],
    "src\\services\\file_service.py:FileService.download_file": [
      {
        "callee": "ValueError",
        "line": 197,
        "type": "direct"
      },
      {
        "callee": "warning",
        "line": 213,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 214,
        "type": "direct"
      },
      {
        "callee": "Path",
        "line": 216,
        "type": "direct"
      },
      {
        "callee": "mkdir",
        "line": 218,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 219,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 219,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 222,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 223,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 223,
        "type": "direct"
      },
      {
        "callee": "ValueError",
        "line": 224,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 225,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 227,
        "type": "attribute"
      },
      {
        "callee": "download_printer_file",
        "line": 234,
        "type": "attribute"
      },
      {
        "callee": "update_file",
        "line": 241,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 244,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 244,
        "type": "attribute"
      },
      {
        "callee": "exists",
        "line": 252,
        "type": "attribute"
      },
      {
        "callee": "Path",
        "line": 252,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 253,
        "type": "attribute"
      },
      {
        "callee": "stat",
        "line": 262,
        "type": "attribute"
      },
      {
        "callee": "Path",
        "line": 262,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 263,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 268,
        "type": "attribute"
      },
      {
        "callee": "create_task",
        "line": 272,
        "type": "attribute"
      },
      {
        "callee": "process_file_thumbnails",
        "line": 272,
        "type": "attribute"
      },
      {
        "callee": "get_printer",
        "line": 278,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 279,
        "type": "attribute"
      },
      {
        "callee": "_extract_printer_info",
        "line": 282,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 295,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 295,
        "type": "attribute"
      },
      {
        "callee": "add_file_to_library",
        "line": 299,
        "type": "attribute"
      },
      {
        "callee": "Path",
        "line": 300,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 305,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 313,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 316,
        "type": "direct"
      },
      {
        "callee": "emit_event",
        "line": 321,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 328,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 328,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 330,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 341,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 342,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 346,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 358,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 358,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 363,
        "type": "direct"
      }
    ],
    "src\\services\\file_service.py:FileService.get_download_status": [
      {
        "callee": "get",
        "line": 375,
        "type": "attribute"
      },
      {
        "callee": "list_files",
        "line": 379,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 384,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 385,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 386,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 387,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 398,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 398,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 403,
        "type": "direct"
      }
    ],
    "src\\services\\file_service.py:FileService.get_local_files": [
      {
        "callee": "get_local_files",
        "line": 412,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 414,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 414,
        "type": "direct"
      }
    ],
    "src\\services\\file_service.py:FileService.scan_local_files": [
      {
        "callee": "get_local_files",
        "line": 424,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 429,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 429,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 432,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 432,
        "type": "direct"
      }
    ],
    "src\\services\\file_service.py:FileService.get_watch_status": [
      {
        "callee": "get_watch_status",
        "line": 441,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 443,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 443,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 444,
        "type": "direct"
      }
    ],
    "src\\services\\file_service.py:FileService.reload_watch_folders": [
      {
        "callee": "reload_watch_folders",
        "line": 452,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 455,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 455,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 456,
        "type": "direct"
      }
    ],
    "src\\services\\file_service.py:FileService.get_file_statistics": [
      {
        "callee": "get_files",
        "line": 462,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 465,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 468,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 469,
        "type": "attribute"
      },
      {
        "callee": "sum",
        "line": 472,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 472,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 476,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 476,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 479,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 479,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 482,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 482,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 485,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 491,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 495,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 497,
        "type": "direct"
      },
      {
        "callee": "debug",
        "line": 503,
        "type": "attribute"
      },
      {
        "callee": "min",
        "line": 504,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 504,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 506,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 507,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 508,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 509,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 514,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 515,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 525,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 525,
        "type": "direct"
      }
    ],
    "src\\services\\file_service.py:FileService._get_file_type": [
      {
        "callee": "lower",
        "line": 540,
        "type": "attribute"
      },
      {
        "callee": "Path",
        "line": 540,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 549,
        "type": "attribute"
      }
    ],
    "src\\services\\file_service.py:FileService._extract_printer_info": [
      {
        "callee": "get",
        "line": 567,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 574,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 579,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 579,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 586,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 586,
        "type": "attribute"
      }
    ],
    "src\\services\\file_service.py:FileService.sync_printer_files": [
      {
        "callee": "info",
        "line": 602,
        "type": "attribute"
      },
      {
        "callee": "get_printer_files",
        "line": 605,
        "type": "attribute"
      },
      {
        "callee": "list_files",
        "line": 608,
        "type": "attribute"
      },
      {
        "callee": "update_file",
        "line": 621,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 626,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 628,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 629,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 634,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 635,
        "type": "direct"
      },
      {
        "callee": "isoformat",
        "line": 637,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 637,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 641,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 641,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 644,
        "type": "direct"
      },
      {
        "callee": "isoformat",
        "line": 645,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 645,
        "type": "attribute"
      }
    ],
    "src\\services\\file_service.py:FileService.discover_printer_files": [
      {
        "callee": "info",
        "line": 662,
        "type": "attribute"
      },
      {
        "callee": "get_printer_files",
        "line": 665,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 670,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 672,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 673,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 675,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 678,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 680,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 685,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 685,
        "type": "direct"
      }
    ],
    "src\\services\\file_service.py:FileService.get_file_by_id": [
      {
        "callee": "list_files",
        "line": 692,
        "type": "attribute"
      },
      {
        "callee": "dict",
        "line": 695,
        "type": "direct"
      },
      {
        "callee": "get_local_files",
        "line": 699,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 701,
        "type": "attribute"
      },
      {
        "callee": "dict",
        "line": 702,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 706,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 706,
        "type": "direct"
      }
    ],
    "src\\services\\file_service.py:FileService.find_file_by_name": [
      {
        "callee": "list_files",
        "line": 713,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 715,
        "type": "attribute"
      },
      {
        "callee": "dict",
        "line": 716,
        "type": "direct"
      },
      {
        "callee": "get_local_files",
        "line": 720,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 722,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 724,
        "type": "attribute"
      },
      {
        "callee": "dict",
        "line": 725,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 729,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 729,
        "type": "direct"
      }
    ],
    "src\\services\\file_service.py:FileService.delete_file": [
      {
        "callee": "get_file_by_id",
        "line": 735,
        "type": "attribute"
      },
      {
        "callee": "NotFoundError",
        "line": 737,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 741,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 742,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 742,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 745,
        "type": "attribute"
      },
      {
        "callee": "Path",
        "line": 747,
        "type": "direct"
      },
      {
        "callee": "exists",
        "line": 748,
        "type": "attribute"
      },
      {
        "callee": "unlink",
        "line": 749,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 750,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 750,
        "type": "direct"
      },
      {
        "callee": "warning",
        "line": 752,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 752,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 755,
        "type": "attribute"
      },
      {
        "callee": "delete_local_file",
        "line": 756,
        "type": "attribute"
      },
      {
        "callee": "update_file",
        "line": 759,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 767,
        "type": "attribute"
      },
      {
        "callee": "emit_event",
        "line": 770,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 772,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 773,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 779,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 779,
        "type": "direct"
      }
    ],
    "src\\services\\file_service.py:FileService.cleanup_download_status": [
      {
        "callee": "timestamp",
        "line": 785,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 785,
        "type": "attribute"
      },
      {
        "callee": "items",
        "line": 789,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 791,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 799,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 799,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 801,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 801,
        "type": "direct"
      }
    ],
    "src\\services\\file_service.py:FileService.process_file_thumbnails": [
      {
        "callee": "utcnow",
        "line": 814,
        "type": "attribute"
      },
      {
        "callee": "_log_thumbnail_processing",
        "line": 818,
        "type": "attribute"
      },
      {
        "callee": "exists",
        "line": 820,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 822,
        "type": "attribute"
      },
      {
        "callee": "_log_thumbnail_processing",
        "line": 823,
        "type": "attribute"
      },
      {
        "callee": "parse_file",
        "line": 827,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 830,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 831,
        "type": "attribute"
      },
      {
        "callee": "_log_thumbnail_processing",
        "line": 833,
        "type": "attribute"
      },
      {
        "callee": "get_thumbnail_by_size",
        "line": 848,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 856,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 858,
        "type": "attribute"
      },
      {
        "callee": "startswith",
        "line": 862,
        "type": "attribute"
      },
      {
        "callee": "split",
        "line": 866,
        "type": "attribute"
      },
      {
        "callee": "basename",
        "line": 866,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 868,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 872,
        "type": "attribute"
      },
      {
        "callee": "hasattr",
        "line": 873,
        "type": "direct"
      },
      {
        "callee": "download_thumbnail",
        "line": 874,
        "type": "attribute"
      },
      {
        "callee": "decode",
        "line": 877,
        "type": "attribute"
      },
      {
        "callee": "b64encode",
        "line": 877,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 879,
        "type": "direct"
      },
      {
        "callee": "unpack",
        "line": 882,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 893,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 894,
        "type": "direct"
      },
      {
        "callee": "warning",
        "line": 896,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 897,
        "type": "direct"
      },
      {
        "callee": "_get_file_type",
        "line": 903,
        "type": "attribute"
      },
      {
        "callee": "basename",
        "line": 903,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 904,
        "type": "attribute"
      },
      {
        "callee": "get_or_generate_preview",
        "line": 907,
        "type": "attribute"
      },
      {
        "callee": "decode",
        "line": 912,
        "type": "attribute"
      },
      {
        "callee": "b64encode",
        "line": 912,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 917,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 920,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 923,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 924,
        "type": "direct"
      },
      {
        "callee": "get_file_by_id",
        "line": 937,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 939,
        "type": "attribute"
      },
      {
        "callee": "update_file",
        "line": 945,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 948,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 949,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 952,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 953,
        "type": "direct"
      },
      {
        "callee": "list",
        "line": 954,
        "type": "direct"
      },
      {
        "callee": "keys",
        "line": 954,
        "type": "attribute"
      },
      {
        "callee": "_log_thumbnail_processing",
        "line": 956,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 957,
        "type": "direct"
      },
      {
        "callee": "emit_event",
        "line": 960,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 963,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 964,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 971,
        "type": "attribute"
      },
      {
        "callee": "_log_thumbnail_processing",
        "line": 972,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 976,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 977,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 978,
        "type": "direct"
      },
      {
        "callee": "_log_thumbnail_processing",
        "line": 979,
        "type": "attribute"
      }
    ],
    "src\\services\\file_service.py:FileService._log_thumbnail_processing": [
      {
        "callee": "isoformat",
        "line": 986,
        "type": "attribute"
      },
      {
        "callee": "utcnow",
        "line": 986,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 991,
        "type": "attribute"
      },
      {
        "callee": "Path",
        "line": 991,
        "type": "direct"
      },
      {
        "callee": "insert",
        "line": 995,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 998,
        "type": "direct"
      }
    ],
    "src\\services\\file_service.py:FileService.extract_enhanced_metadata": [
      {
        "callee": "info",
        "line": 1028,
        "type": "attribute"
      },
      {
        "callee": "get_file",
        "line": 1031,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 1033,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1036,
        "type": "attribute"
      },
      {
        "callee": "exists",
        "line": 1037,
        "type": "attribute"
      },
      {
        "callee": "Path",
        "line": 1037,
        "type": "direct"
      },
      {
        "callee": "warning",
        "line": 1038,
        "type": "attribute"
      },
      {
        "callee": "Path",
        "line": 1042,
        "type": "direct"
      },
      {
        "callee": "lower",
        "line": 1043,
        "type": "attribute"
      },
      {
        "callee": "ThreeMFAnalyzer",
        "line": 1050,
        "type": "direct"
      },
      {
        "callee": "analyze_file",
        "line": 1051,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1053,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 1056,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1057,
        "type": "attribute"
      },
      {
        "callee": "parse_file",
        "line": 1062,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 1062,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 1064,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1065,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1070,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1071,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1072,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1076,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1077,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1078,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1079,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1080,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1081,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1081,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1082,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1082,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1083,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1083,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1084,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1085,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1086,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1087,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1090,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1090,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1091,
        "type": "attribute"
      },
      {
        "callee": "isinstance",
        "line": 1092,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 1092,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 1093,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 1093,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1096,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1097,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1098,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1101,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1102,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1103,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1103,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1106,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1107,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1108,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 1113,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 1117,
        "type": "attribute"
      },
      {
        "callee": "EnhancedFileMetadata",
        "line": 1123,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 1125,
        "type": "attribute"
      },
      {
        "callee": "PhysicalProperties",
        "line": 1124,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 1124,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1127,
        "type": "attribute"
      },
      {
        "callee": "PrintSettings",
        "line": 1126,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 1126,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1129,
        "type": "attribute"
      },
      {
        "callee": "MaterialRequirements",
        "line": 1128,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 1128,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1131,
        "type": "attribute"
      },
      {
        "callee": "CostBreakdown",
        "line": 1130,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 1130,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1133,
        "type": "attribute"
      },
      {
        "callee": "QualityMetrics",
        "line": 1132,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 1132,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 1135,
        "type": "attribute"
      },
      {
        "callee": "CompatibilityInfo",
        "line": 1134,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 1134,
        "type": "attribute"
      },
      {
        "callee": "update_file_enhanced_metadata",
        "line": 1139,
        "type": "attribute"
      },
      {
        "callee": "model_dump",
        "line": 1141,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 1142,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 1145,
        "type": "attribute"
      },
      {
        "callee": "emit_event",
        "line": 1148,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 1150,
        "type": "direct"
      },
      {
        "callee": "model_dump",
        "line": 1156,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 1159,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 1159,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 1163,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 1163,
        "type": "direct"
      },
      {
        "callee": "copy",
        "line": 1164,
        "type": "attribute"
      }
    ],
    "src\\services\\file_watcher_service.py:PrintFileHandler.__init__": [
      {
        "callee": "__init__",
        "line": 56,
        "type": "attribute"
      },
      {
        "callee": "super",
        "line": 56,
        "type": "direct"
      }
    ],
    "src\\services\\file_watcher_service.py:PrintFileHandler.should_process_file": [
      {
        "callee": "Path",
        "line": 63,
        "type": "direct"
      },
      {
        "callee": "lower",
        "line": 66,
        "type": "attribute"
      },
      {
        "callee": "startswith",
        "line": 71,
        "type": "attribute"
      },
      {
        "callee": "endswith",
        "line": 72,
        "type": "attribute"
      },
      {
        "callee": "startswith",
        "line": 74,
        "type": "attribute"
      },
      {
        "callee": "startswith",
        "line": 75,
        "type": "attribute"
      }
    ],
    "src\\services\\file_watcher_service.py:PrintFileHandler._debounce_event": [
      {
        "callee": "now",
        "line": 82,
        "type": "attribute"
      },
      {
        "callee": "total_seconds",
        "line": 86,
        "type": "attribute"
      }
    ],
    "src\\services\\file_watcher_service.py:PrintFileHandler.on_created": [
      {
        "callee": "should_process_file",
        "line": 94,
        "type": "attribute"
      },
      {
        "callee": "_debounce_event",
        "line": 95,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 96,
        "type": "attribute"
      },
      {
        "callee": "create_task",
        "line": 97,
        "type": "attribute"
      },
      {
        "callee": "_handle_file_created",
        "line": 97,
        "type": "attribute"
      }
    ],
    "src\\services\\file_watcher_service.py:PrintFileHandler.on_modified": [
      {
        "callee": "should_process_file",
        "line": 101,
        "type": "attribute"
      },
      {
        "callee": "_debounce_event",
        "line": 102,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 103,
        "type": "attribute"
      },
      {
        "callee": "create_task",
        "line": 104,
        "type": "attribute"
      },
      {
        "callee": "_handle_file_modified",
        "line": 104,
        "type": "attribute"
      }
    ],
    "src\\services\\file_watcher_service.py:PrintFileHandler.on_deleted": [
      {
        "callee": "should_process_file",
        "line": 108,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 109,
        "type": "attribute"
      },
      {
        "callee": "create_task",
        "line": 110,
        "type": "attribute"
      },
      {
        "callee": "_handle_file_deleted",
        "line": 110,
        "type": "attribute"
      }
    ],
    "src\\services\\file_watcher_service.py:PrintFileHandler.on_moved": [
      {
        "callee": "hasattr",
        "line": 114,
        "type": "direct"
      },
      {
        "callee": "should_process_file",
        "line": 115,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 116,
        "type": "attribute"
      },
      {
        "callee": "create_task",
        "line": 118,
        "type": "attribute"
      },
      {
        "callee": "_handle_file_moved",
        "line": 119,
        "type": "attribute"
      }
    ],
    "src\\services\\file_watcher_service.py:FileWatcherService.__init__": [
      {
        "callee": "Lock",
        "line": 136,
        "type": "attribute"
      },
      {
        "callee": "PrintFileHandler",
        "line": 139,
        "type": "direct"
      }
    ],
    "src\\services\\file_watcher_service.py:FileWatcherService.start": [
      {
        "callee": "warning",
        "line": 144,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 147,
        "type": "attribute"
      },
      {
        "callee": "type",
        "line": 147,
        "type": "direct"
      },
      {
        "callee": "type",
        "line": 147,
        "type": "direct"
      },
      {
        "callee": "is_watch_folders_enabled",
        "line": 149,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 150,
        "type": "attribute"
      },
      {
        "callee": "Observer",
        "line": 156,
        "type": "direct"
      },
      {
        "callee": "warning",
        "line": 158,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 158,
        "type": "direct"
      },
      {
        "callee": "WindowsObserver",
        "line": 160,
        "type": "direct"
      },
      {
        "callee": "get_watch_folders",
        "line": 163,
        "type": "attribute"
      },
      {
        "callee": "is_recursive_watching_enabled",
        "line": 164,
        "type": "attribute"
      },
      {
        "callee": "_add_watch_folder",
        "line": 167,
        "type": "attribute"
      },
      {
        "callee": "start",
        "line": 173,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 176,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 177,
        "type": "direct"
      },
      {
        "callee": "type",
        "line": 179,
        "type": "direct"
      },
      {
        "callee": "warning",
        "line": 181,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 182,
        "type": "direct"
      },
      {
        "callee": "type",
        "line": 183,
        "type": "direct"
      },
      {
        "callee": "stop",
        "line": 188,
        "type": "attribute"
      },
      {
        "callee": "_initial_scan",
        "line": 195,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 198,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 198,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 201,
        "type": "attribute"
      }
    ],
    "src\\services\\file_watcher_service.py:FileWatcherService.stop": [
      {
        "callee": "stop",
        "line": 213,
        "type": "attribute"
      },
      {
        "callee": "hasattr",
        "line": 216,
        "type": "direct"
      },
      {
        "callee": "is_alive",
        "line": 216,
        "type": "attribute"
      },
      {
        "callee": "get_running_loop",
        "line": 218,
        "type": "attribute"
      },
      {
        "callee": "run_in_executor",
        "line": 219,
        "type": "attribute"
      },
      {
        "callee": "join",
        "line": 221,
        "type": "attribute"
      },
      {
        "callee": "hasattr",
        "line": 225,
        "type": "direct"
      },
      {
        "callee": "is_alive",
        "line": 225,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 226,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 229,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 229,
        "type": "direct"
      },
      {
        "callee": "clear",
        "line": 233,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 236,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 239,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 239,
        "type": "direct"
      }
    ],
    "src\\services\\file_watcher_service.py:FileWatcherService._add_watch_folder": [
      {
        "callee": "Path",
        "line": 244,
        "type": "direct"
      },
      {
        "callee": "validate_watch_folder",
        "line": 247,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 247,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 249,
        "type": "attribute"
      },
      {
        "callee": "schedule",
        "line": 258,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 260,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 263,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 266,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 277,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 278,
        "type": "direct"
      }
    ],
    "src\\services\\file_watcher_service.py:FileWatcherService._initial_scan": [
      {
        "callee": "info",
        "line": 282,
        "type": "attribute"
      },
      {
        "callee": "items",
        "line": 284,
        "type": "attribute"
      },
      {
        "callee": "_scan_folder",
        "line": 286,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 289,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 290,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 292,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 292,
        "type": "direct"
      }
    ],
    "src\\services\\file_watcher_service.py:FileWatcherService._scan_folder": [
      {
        "callee": "glob",
        "line": 302,
        "type": "attribute"
      },
      {
        "callee": "is_file",
        "line": 303,
        "type": "attribute"
      },
      {
        "callee": "should_process_file",
        "line": 303,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 303,
        "type": "direct"
      },
      {
        "callee": "_process_discovered_file",
        "line": 304,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 304,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 307,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 308,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 308,
        "type": "direct"
      }
    ],
    "src\\services\\file_watcher_service.py:FileWatcherService._process_discovered_file": [
      {
        "callee": "Path",
        "line": 313,
        "type": "direct"
      },
      {
        "callee": "exists",
        "line": 315,
        "type": "attribute"
      },
      {
        "callee": "stat",
        "line": 318,
        "type": "attribute"
      },
      {
        "callee": "_find_watch_folder_for_file",
        "line": 321,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 323,
        "type": "attribute"
      },
      {
        "callee": "Path",
        "line": 327,
        "type": "direct"
      },
      {
        "callee": "relative_to",
        "line": 329,
        "type": "attribute"
      },
      {
        "callee": "Path",
        "line": 331,
        "type": "direct"
      },
      {
        "callee": "abs",
        "line": 334,
        "type": "direct"
      },
      {
        "callee": "hash",
        "line": 334,
        "type": "direct"
      },
      {
        "callee": "LocalFile",
        "line": 337,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 340,
        "type": "direct"
      },
      {
        "callee": "lower",
        "line": 342,
        "type": "attribute"
      },
      {
        "callee": "fromtimestamp",
        "line": 343,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 345,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 357,
        "type": "direct"
      },
      {
        "callee": "isoformat",
        "line": 358,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 358,
        "type": "attribute"
      },
      {
        "callee": "add_file_to_library",
        "line": 362,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 368,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 373,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 375,
        "type": "direct"
      },
      {
        "callee": "_emit_file_event",
        "line": 379,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 381,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 385,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 386,
        "type": "direct"
      }
    ],
    "src\\services\\file_watcher_service.py:FileWatcherService._find_watch_folder_for_file": [
      {
        "callee": "Path",
        "line": 390,
        "type": "direct"
      },
      {
        "callee": "keys",
        "line": 392,
        "type": "attribute"
      },
      {
        "callee": "Path",
        "line": 393,
        "type": "direct"
      },
      {
        "callee": "relative_to",
        "line": 396,
        "type": "attribute"
      }
    ],
    "src\\services\\file_watcher_service.py:FileWatcherService._handle_file_created": [
      {
        "callee": "_process_discovered_file",
        "line": 405,
        "type": "attribute"
      }
    ],
    "src\\services\\file_watcher_service.py:FileWatcherService._handle_file_modified": [
      {
        "callee": "values",
        "line": 410,
        "type": "attribute"
      },
      {
        "callee": "Path",
        "line": 414,
        "type": "direct"
      },
      {
        "callee": "exists",
        "line": 415,
        "type": "attribute"
      },
      {
        "callee": "stat",
        "line": 416,
        "type": "attribute"
      },
      {
        "callee": "fromtimestamp",
        "line": 418,
        "type": "attribute"
      },
      {
        "callee": "_emit_file_event",
        "line": 420,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 422,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 425,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 426,
        "type": "direct"
      }
    ],
    "src\\services\\file_watcher_service.py:FileWatcherService._handle_file_deleted": [
      {
        "callee": "list",
        "line": 432,
        "type": "direct"
      },
      {
        "callee": "items",
        "line": 432,
        "type": "attribute"
      },
      {
        "callee": "_emit_file_event",
        "line": 436,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 438,
        "type": "attribute"
      }
    ],
    "src\\services\\file_watcher_service.py:FileWatcherService._handle_file_moved": [
      {
        "callee": "values",
        "line": 445,
        "type": "attribute"
      },
      {
        "callee": "Path",
        "line": 448,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 449,
        "type": "direct"
      },
      {
        "callee": "_find_watch_folder_for_file",
        "line": 453,
        "type": "attribute"
      },
      {
        "callee": "Path",
        "line": 455,
        "type": "direct"
      },
      {
        "callee": "relative_to",
        "line": 457,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 458,
        "type": "direct"
      },
      {
        "callee": "_emit_file_event",
        "line": 462,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 464,
        "type": "attribute"
      }
    ],
    "src\\services\\file_watcher_service.py:FileWatcherService._emit_file_event": [
      {
        "callee": "isoformat",
        "line": 479,
        "type": "attribute"
      },
      {
        "callee": "emit_event",
        "line": 485,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 488,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 489,
        "type": "direct"
      }
    ],
    "src\\services\\file_watcher_service.py:FileWatcherService.get_local_files": [
      {
        "callee": "values",
        "line": 495,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 496,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 502,
        "type": "attribute"
      }
    ],
    "src\\services\\file_watcher_service.py:FileWatcherService.get_watch_status": [
      {
        "callee": "list",
        "line": 515,
        "type": "direct"
      },
      {
        "callee": "keys",
        "line": 515,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 516,
        "type": "direct"
      },
      {
        "callee": "list",
        "line": 517,
        "type": "direct"
      }
    ],
    "src\\services\\file_watcher_service.py:FileWatcherService.reload_watch_folders": [
      {
        "callee": "warning",
        "line": 523,
        "type": "attribute"
      },
      {
        "callee": "stop",
        "line": 528,
        "type": "attribute"
      },
      {
        "callee": "start",
        "line": 531,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 533,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 536,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 536,
        "type": "direct"
      }
    ],
    "src\\services\\idea_service.py:IdeaService.__init__": [
      {
        "callee": "UrlParserService",
        "line": 22,
        "type": "direct"
      }
    ],
    "src\\services\\idea_service.py:IdeaService.create_idea": [
      {
        "callee": "str",
        "line": 29,
        "type": "direct"
      },
      {
        "callee": "uuid4",
        "line": 29,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 32,
        "type": "attribute"
      },
      {
        "callee": "ValueError",
        "line": 33,
        "type": "direct"
      },
      {
        "callee": "from_dict",
        "line": 36,
        "type": "attribute"
      },
      {
        "callee": "validate",
        "line": 37,
        "type": "attribute"
      },
      {
        "callee": "ValueError",
        "line": 38,
        "type": "direct"
      },
      {
        "callee": "to_dict",
        "line": 41,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 44,
        "type": "attribute"
      },
      {
        "callee": "dumps",
        "line": 45,
        "type": "attribute"
      },
      {
        "callee": "create_idea",
        "line": 48,
        "type": "attribute"
      },
      {
        "callee": "RuntimeError",
        "line": 50,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 53,
        "type": "attribute"
      },
      {
        "callee": "add_idea_tags",
        "line": 54,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 56,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 60,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 60,
        "type": "direct"
      }
    ],
    "src\\services\\idea_service.py:IdeaService.get_idea": [
      {
        "callee": "get_idea",
        "line": 67,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 72,
        "type": "attribute"
      },
      {
        "callee": "loads",
        "line": 74,
        "type": "attribute"
      },
      {
        "callee": "get_idea_tags",
        "line": 79,
        "type": "attribute"
      },
      {
        "callee": "from_dict",
        "line": 82,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 85,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 85,
        "type": "direct"
      }
    ],
    "src\\services\\idea_service.py:IdeaService.list_ideas": [
      {
        "callee": "list_ideas",
        "line": 96,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 97,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 98,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 99,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 100,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 108,
        "type": "attribute"
      },
      {
        "callee": "loads",
        "line": 110,
        "type": "attribute"
      },
      {
        "callee": "get_idea_tags",
        "line": 115,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 118,
        "type": "attribute"
      },
      {
        "callee": "from_dict",
        "line": 118,
        "type": "attribute"
      },
      {
        "callee": "to_dict",
        "line": 121,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 127,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 131,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 131,
        "type": "direct"
      }
    ],
    "src\\services\\idea_service.py:IdeaService.update_idea": [
      {
        "callee": "dumps",
        "line": 139,
        "type": "attribute"
      },
      {
        "callee": "pop",
        "line": 142,
        "type": "attribute"
      },
      {
        "callee": "update_idea",
        "line": 145,
        "type": "attribute"
      },
      {
        "callee": "get_idea_tags",
        "line": 152,
        "type": "attribute"
      },
      {
        "callee": "remove_idea_tags",
        "line": 154,
        "type": "attribute"
      },
      {
        "callee": "add_idea_tags",
        "line": 156,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 158,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 162,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 162,
        "type": "direct"
      }
    ],
    "src\\services\\idea_service.py:IdeaService.delete_idea": [
      {
        "callee": "delete_idea",
        "line": 168,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 170,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 174,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 174,
        "type": "direct"
      }
    ],
    "src\\services\\idea_service.py:IdeaService.update_idea_status": [
      {
        "callee": "update_idea_status",
        "line": 180,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 182,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 186,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 186,
        "type": "direct"
      }
    ],
    "src\\services\\idea_service.py:IdeaService.get_all_tags": [
      {
        "callee": "get_all_tags",
        "line": 192,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 194,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 194,
        "type": "direct"
      }
    ],
    "src\\services\\idea_service.py:IdeaService.get_statistics": [
      {
        "callee": "get_idea_statistics",
        "line": 200,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 202,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 202,
        "type": "direct"
      }
    ],
    "src\\services\\idea_service.py:IdeaService.import_from_url": [
      {
        "callee": "_extract_url_metadata",
        "line": 209,
        "type": "attribute"
      },
      {
        "callee": "ValueError",
        "line": 211,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 215,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 216,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 217,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 219,
        "type": "attribute"
      },
      {
        "callee": "update",
        "line": 225,
        "type": "attribute"
      },
      {
        "callee": "create_idea",
        "line": 227,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 230,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 230,
        "type": "direct"
      }
    ],
    "src\\services\\idea_service.py:IdeaService._extract_url_metadata": [
      {
        "callee": "parse_url",
        "line": 236,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 238,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 238,
        "type": "direct"
      }
    ],
    "src\\services\\idea_service.py:IdeaService.cache_trending": [
      {
        "callee": "now",
        "line": 246,
        "type": "attribute"
      },
      {
        "callee": "timedelta",
        "line": 246,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 250,
        "type": "attribute"
      },
      {
        "callee": "uuid4",
        "line": 250,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 252,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 252,
        "type": "attribute"
      },
      {
        "callee": "uuid4",
        "line": 252,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 255,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 256,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 257,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 258,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 259,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 260,
        "type": "attribute"
      },
      {
        "callee": "upsert_trending",
        "line": 263,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 265,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 265,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 269,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 269,
        "type": "direct"
      }
    ],
    "src\\services\\idea_service.py:IdeaService.get_trending": [
      {
        "callee": "get_trending",
        "line": 276,
        "type": "attribute"
      },
      {
        "callee": "to_dict",
        "line": 277,
        "type": "attribute"
      },
      {
        "callee": "from_dict",
        "line": 277,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 280,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 280,
        "type": "direct"
      }
    ],
    "src\\services\\idea_service.py:IdeaService.save_trending_as_idea": [
      {
        "callee": "get_trending",
        "line": 288,
        "type": "attribute"
      },
      {
        "callee": "next",
        "line": 289,
        "type": "direct"
      },
      {
        "callee": "ValueError",
        "line": 292,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 300,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 304,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 305,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 306,
        "type": "attribute"
      },
      {
        "callee": "update",
        "line": 312,
        "type": "attribute"
      },
      {
        "callee": "create_idea",
        "line": 314,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 317,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 317,
        "type": "direct"
      }
    ],
    "src\\services\\idea_service.py:IdeaService.cleanup_expired_trending": [
      {
        "callee": "clean_expired_trending",
        "line": 323,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 325,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 329,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 329,
        "type": "direct"
      }
    ],
    "src\\services\\idea_service.py:IdeaService.search_ideas": [
      {
        "callee": "list_ideas",
        "line": 336,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 340,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 344,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 345,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 345,
        "type": "attribute"
      },
      {
        "callee": "any",
        "line": 346,
        "type": "direct"
      },
      {
        "callee": "lower",
        "line": 346,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 346,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 347,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 352,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 352,
        "type": "direct"
      }
    ],
    "src\\services\\job_service.py:JobService.get_jobs": [
      {
        "callee": "list_jobs",
        "line": 28,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 41,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 42,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 43,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 44,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 50,
        "type": "attribute"
      },
      {
        "callee": "loads",
        "line": 51,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 55,
        "type": "attribute"
      },
      {
        "callee": "fromisoformat",
        "line": 56,
        "type": "attribute"
      },
      {
        "callee": "Job",
        "line": 58,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 59,
        "type": "attribute"
      },
      {
        "callee": "dict",
        "line": 59,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 61,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 62,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 63,
        "type": "direct"
      },
      {
        "callee": "type",
        "line": 64,
        "type": "direct"
      },
      {
        "callee": "warning",
        "line": 69,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 71,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 73,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 73,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 73,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 77,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 77,
        "type": "direct"
      }
    ],
    "src\\services\\job_service.py:JobService.list_jobs": [
      {
        "callee": "list_jobs",
        "line": 84,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 98,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 99,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 100,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 101,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 106,
        "type": "attribute"
      },
      {
        "callee": "loads",
        "line": 107,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 111,
        "type": "attribute"
      },
      {
        "callee": "fromisoformat",
        "line": 112,
        "type": "attribute"
      },
      {
        "callee": "Job",
        "line": 114,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 115,
        "type": "attribute"
      },
      {
        "callee": "dict",
        "line": 115,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 117,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 118,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 119,
        "type": "direct"
      },
      {
        "callee": "type",
        "line": 120,
        "type": "direct"
      },
      {
        "callee": "warning",
        "line": 125,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 127,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 129,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 133,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 139,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 139,
        "type": "direct"
      }
    ],
    "src\\services\\job_service.py:JobService.get_job": [
      {
        "callee": "get_job",
        "line": 145,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 145,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 150,
        "type": "attribute"
      },
      {
        "callee": "loads",
        "line": 151,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 155,
        "type": "attribute"
      },
      {
        "callee": "fromisoformat",
        "line": 156,
        "type": "attribute"
      },
      {
        "callee": "Job",
        "line": 159,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 160,
        "type": "attribute"
      },
      {
        "callee": "dict",
        "line": 161,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 164,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 164,
        "type": "direct"
      }
    ],
    "src\\services\\job_service.py:JobService.delete_job": [
      {
        "callee": "get_job",
        "line": 171,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 171,
        "type": "direct"
      },
      {
        "callee": "warning",
        "line": 173,
        "type": "attribute"
      },
      {
        "callee": "delete_job",
        "line": 177,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 177,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 180,
        "type": "attribute"
      },
      {
        "callee": "emit_event",
        "line": 182,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 183,
        "type": "direct"
      },
      {
        "callee": "isoformat",
        "line": 184,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 184,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 190,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 190,
        "type": "direct"
      }
    ],
    "src\\services\\job_service.py:JobService.get_active_jobs": [
      {
        "callee": "list_jobs",
        "line": 201,
        "type": "attribute"
      },
      {
        "callee": "extend",
        "line": 202,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 209,
        "type": "attribute"
      },
      {
        "callee": "loads",
        "line": 210,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 214,
        "type": "attribute"
      },
      {
        "callee": "fromisoformat",
        "line": 215,
        "type": "attribute"
      },
      {
        "callee": "Job",
        "line": 217,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 218,
        "type": "attribute"
      },
      {
        "callee": "dict",
        "line": 218,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 220,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 220,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 220,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 223,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 223,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 227,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 227,
        "type": "direct"
      }
    ],
    "src\\services\\job_service.py:JobService.create_job": [
      {
        "callee": "isinstance",
        "line": 234,
        "type": "direct"
      },
      {
        "callee": "JobCreate",
        "line": 235,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 240,
        "type": "direct"
      },
      {
        "callee": "uuid4",
        "line": 240,
        "type": "attribute"
      },
      {
        "callee": "ValueError",
        "line": 242,
        "type": "direct"
      },
      {
        "callee": "dumps",
        "line": 254,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 260,
        "type": "attribute"
      },
      {
        "callee": "ValueError",
        "line": 261,
        "type": "direct"
      },
      {
        "callee": "create_job",
        "line": 264,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 267,
        "type": "attribute"
      },
      {
        "callee": "emit_event",
        "line": 270,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 275,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 275,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 280,
        "type": "attribute"
      },
      {
        "callee": "Exception",
        "line": 281,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 284,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 284,
        "type": "direct"
      },
      {
        "callee": "type",
        "line": 284,
        "type": "direct"
      }
    ],
    "src\\services\\job_service.py:JobService.update_job_status": [
      {
        "callee": "ValueError",
        "line": 292,
        "type": "direct"
      },
      {
        "callee": "isoformat",
        "line": 297,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 297,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 316,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 316,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 318,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 318,
        "type": "attribute"
      },
      {
        "callee": "update_job",
        "line": 321,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 321,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 324,
        "type": "attribute"
      },
      {
        "callee": "emit_event",
        "line": 327,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 328,
        "type": "direct"
      },
      {
        "callee": "isoformat",
        "line": 331,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 331,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 334,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 337,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 337,
        "type": "direct"
      }
    ],
    "src\\services\\job_service.py:JobService.get_job_statistics": [
      {
        "callee": "get_job_statistics",
        "line": 343,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 347,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 348,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 349,
        "type": "attribute"
      },
      {
        "callee": "items",
        "line": 375,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 379,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 383,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 383,
        "type": "direct"
      }
    ],
    "src\\services\\job_service.py:JobService.get_jobs_by_date_range": [
      {
        "callee": "get_jobs_by_date_range",
        "line": 394,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 401,
        "type": "attribute"
      },
      {
        "callee": "loads",
        "line": 402,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 406,
        "type": "attribute"
      },
      {
        "callee": "fromisoformat",
        "line": 407,
        "type": "attribute"
      },
      {
        "callee": "Job",
        "line": 409,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 410,
        "type": "attribute"
      },
      {
        "callee": "dict",
        "line": 410,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 412,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 412,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 412,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 415,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 419,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 423,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 423,
        "type": "direct"
      }
    ],
    "src\\services\\job_service.py:JobService.get_business_jobs": [
      {
        "callee": "list_jobs",
        "line": 428,
        "type": "attribute"
      }
    ],
    "src\\services\\job_service.py:JobService.get_private_jobs": [
      {
        "callee": "list_jobs",
        "line": 432,
        "type": "attribute"
      }
    ],
    "src\\services\\job_service.py:JobService.calculate_material_costs": [
      {
        "callee": "get_job",
        "line": 437,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 444,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 448,
        "type": "attribute"
      },
      {
        "callee": "update_job",
        "line": 455,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 460,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 464,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 464,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 465,
        "type": "direct"
      }
    ],
    "src\\services\\job_service.py:JobService.get_printer_jobs": [
      {
        "callee": "list_jobs",
        "line": 469,
        "type": "attribute"
      }
    ],
    "src\\services\\job_service.py:JobService.update_job_progress": [
      {
        "callee": "max",
        "line": 475,
        "type": "direct"
      },
      {
        "callee": "min",
        "line": 475,
        "type": "direct"
      },
      {
        "callee": "isoformat",
        "line": 476,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 476,
        "type": "attribute"
      },
      {
        "callee": "update_job",
        "line": 482,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 482,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 485,
        "type": "attribute"
      },
      {
        "callee": "emit_event",
        "line": 488,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 489,
        "type": "direct"
      },
      {
        "callee": "isoformat",
        "line": 492,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 492,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 498,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 498,
        "type": "direct"
      }
    ],
    "src\\services\\library_service.py:LibraryService.__init__": [
      {
        "callee": "Path",
        "line": 38,
        "type": "direct"
      },
      {
        "callee": "getattr",
        "line": 38,
        "type": "direct"
      },
      {
        "callee": "getattr",
        "line": 39,
        "type": "direct"
      },
      {
        "callee": "getattr",
        "line": 40,
        "type": "direct"
      },
      {
        "callee": "getattr",
        "line": 41,
        "type": "direct"
      },
      {
        "callee": "getattr",
        "line": 42,
        "type": "direct"
      },
      {
        "callee": "getattr",
        "line": 43,
        "type": "direct"
      },
      {
        "callee": "set",
        "line": 46,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 48,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 49,
        "type": "direct"
      }
    ],
    "src\\services\\library_service.py:LibraryService.initialize": [
      {
        "callee": "info",
        "line": 55,
        "type": "attribute"
      },
      {
        "callee": "mkdir",
        "line": 70,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 71,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 71,
        "type": "direct"
      },
      {
        "callee": "write_text",
        "line": 76,
        "type": "attribute"
      },
      {
        "callee": "unlink",
        "line": 77,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 78,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 80,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 80,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 83,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 86,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 86,
        "type": "direct"
      }
    ],
    "src\\services\\library_service.py:LibraryService.calculate_checksum": [
      {
        "callee": "to_thread",
        "line": 104,
        "type": "attribute"
      }
    ],
    "src\\services\\library_service.py:LibraryService._calculate_checksum_sync": [
      {
        "callee": "sha256",
        "line": 109,
        "type": "attribute"
      },
      {
        "callee": "md5",
        "line": 111,
        "type": "attribute"
      },
      {
        "callee": "ValueError",
        "line": 113,
        "type": "direct"
      },
      {
        "callee": "stat",
        "line": 115,
        "type": "attribute"
      },
      {
        "callee": "open",
        "line": 118,
        "type": "direct"
      },
      {
        "callee": "read",
        "line": 120,
        "type": "attribute"
      },
      {
        "callee": "update",
        "line": 121,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 122,
        "type": "direct"
      },
      {
        "callee": "debug",
        "line": 128,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 129,
        "type": "direct"
      },
      {
        "callee": "hexdigest",
        "line": 132,
        "type": "attribute"
      }
    ],
    "src\\services\\library_service.py:LibraryService.get_library_path_for_file": [
      {
        "callee": "ValueError",
        "line": 150,
        "type": "direct"
      },
      {
        "callee": "ValueError",
        "line": 167,
        "type": "direct"
      }
    ],
    "src\\services\\library_service.py:LibraryService._resolve_filename_conflict": [
      {
        "callee": "exists",
        "line": 179,
        "type": "attribute"
      },
      {
        "callee": "exists",
        "line": 191,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 192,
        "type": "attribute"
      },
      {
        "callee": "RuntimeError",
        "line": 200,
        "type": "direct"
      }
    ],
    "src\\services\\library_service.py:LibraryService._check_duplicate": [
      {
        "callee": "get_file_by_checksum",
        "line": 212,
        "type": "attribute"
      }
    ],
    "src\\services\\library_service.py:LibraryService.add_file_to_library": [
      {
        "callee": "exists",
        "line": 235,
        "type": "attribute"
      },
      {
        "callee": "FileNotFoundError",
        "line": 236,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 239,
        "type": "attribute"
      },
      {
        "callee": "ValueError",
        "line": 241,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 245,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 245,
        "type": "direct"
      },
      {
        "callee": "calculate_checksum",
        "line": 246,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 247,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 247,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 249,
        "type": "attribute"
      },
      {
        "callee": "ValueError",
        "line": 251,
        "type": "direct"
      },
      {
        "callee": "_check_duplicate",
        "line": 254,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 259,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 267,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 269,
        "type": "attribute"
      },
      {
        "callee": "stat",
        "line": 274,
        "type": "attribute"
      },
      {
        "callee": "disk_usage",
        "line": 276,
        "type": "attribute"
      },
      {
        "callee": "IOError",
        "line": 280,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 286,
        "type": "attribute"
      },
      {
        "callee": "get_library_path_for_file",
        "line": 287,
        "type": "attribute"
      },
      {
        "callee": "_resolve_filename_conflict",
        "line": 295,
        "type": "attribute"
      },
      {
        "callee": "mkdir",
        "line": 298,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 302,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 303,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 304,
        "type": "direct"
      },
      {
        "callee": "to_thread",
        "line": 305,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 307,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 308,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 309,
        "type": "direct"
      },
      {
        "callee": "to_thread",
        "line": 310,
        "type": "attribute"
      },
      {
        "callee": "calculate_checksum",
        "line": 313,
        "type": "attribute"
      },
      {
        "callee": "unlink",
        "line": 316,
        "type": "attribute"
      },
      {
        "callee": "ValueError",
        "line": 317,
        "type": "direct"
      },
      {
        "callee": "stat",
        "line": 320,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 322,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 330,
        "type": "direct"
      },
      {
        "callee": "uuid4",
        "line": 330,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 334,
        "type": "direct"
      },
      {
        "callee": "uuid4",
        "line": 334,
        "type": "direct"
      },
      {
        "callee": "lower",
        "line": 340,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 347,
        "type": "direct"
      },
      {
        "callee": "relative_to",
        "line": 347,
        "type": "attribute"
      },
      {
        "callee": "dumps",
        "line": 350,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 352,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 352,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 353,
        "type": "attribute"
      },
      {
        "callee": "fromtimestamp",
        "line": 353,
        "type": "attribute"
      },
      {
        "callee": "create_library_file",
        "line": 362,
        "type": "attribute"
      },
      {
        "callee": "get_file_by_checksum",
        "line": 367,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 369,
        "type": "attribute"
      },
      {
        "callee": "unlink",
        "line": 372,
        "type": "attribute"
      },
      {
        "callee": "add_file_source",
        "line": 373,
        "type": "attribute"
      },
      {
        "callee": "unlink",
        "line": 377,
        "type": "attribute"
      },
      {
        "callee": "RuntimeError",
        "line": 378,
        "type": "direct"
      },
      {
        "callee": "exists",
        "line": 382,
        "type": "attribute"
      },
      {
        "callee": "unlink",
        "line": 383,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 384,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 384,
        "type": "direct"
      },
      {
        "callee": "add_file_source",
        "line": 388,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 392,
        "type": "attribute"
      },
      {
        "callee": "update_library_file",
        "line": 393,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 396,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 400,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 402,
        "type": "direct"
      },
      {
        "callee": "emit_event",
        "line": 406,
        "type": "attribute"
      },
      {
        "callee": "create_task",
        "line": 415,
        "type": "attribute"
      },
      {
        "callee": "_extract_metadata_async",
        "line": 415,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 420,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 421,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 422,
        "type": "direct"
      }
    ],
    "src\\services\\library_service.py:LibraryService.get_file_by_checksum": [
      {
        "callee": "get_library_file_by_checksum",
        "line": 435,
        "type": "attribute"
      }
    ],
    "src\\services\\library_service.py:LibraryService.get_file_by_id": [
      {
        "callee": "get_library_file",
        "line": 447,
        "type": "attribute"
      }
    ],
    "src\\services\\library_service.py:LibraryService.list_files": [
      {
        "callee": "list_library_files",
        "line": 468,
        "type": "attribute"
      }
    ],
    "src\\services\\library_service.py:LibraryService.add_file_source": [
      {
        "callee": "get_file_by_checksum",
        "line": 479,
        "type": "attribute"
      },
      {
        "callee": "ValueError",
        "line": 481,
        "type": "direct"
      },
      {
        "callee": "loads",
        "line": 484,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 484,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 487,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 487,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 487,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 488,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 488,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 488,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 493,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 493,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 495,
        "type": "attribute"
      },
      {
        "callee": "update_library_file",
        "line": 498,
        "type": "attribute"
      },
      {
        "callee": "dumps",
        "line": 499,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 502,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 502,
        "type": "attribute"
      },
      {
        "callee": "create_library_file_source",
        "line": 505,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 507,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 508,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 508,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 509,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 509,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 510,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 511,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 512,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 513,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 514,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 514,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 514,
        "type": "attribute"
      },
      {
        "callee": "dumps",
        "line": 515,
        "type": "attribute"
      }
    ],
    "src\\services\\library_service.py:LibraryService.delete_file": [
      {
        "callee": "get_file_by_checksum",
        "line": 530,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 532,
        "type": "attribute"
      },
      {
        "callee": "exists",
        "line": 538,
        "type": "attribute"
      },
      {
        "callee": "unlink",
        "line": 539,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 540,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 540,
        "type": "direct"
      },
      {
        "callee": "delete_library_file",
        "line": 543,
        "type": "attribute"
      },
      {
        "callee": "delete_library_file_sources",
        "line": 544,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 546,
        "type": "attribute"
      },
      {
        "callee": "emit_event",
        "line": 549,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 551,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 557,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 557,
        "type": "direct"
      }
    ],
    "src\\services\\library_service.py:LibraryService.get_library_statistics": [
      {
        "callee": "get_library_stats",
        "line": 567,
        "type": "attribute"
      }
    ],
    "src\\services\\library_service.py:LibraryService._extract_metadata_async": [
      {
        "callee": "debug",
        "line": 581,
        "type": "attribute"
      },
      {
        "callee": "add",
        "line": 584,
        "type": "attribute"
      },
      {
        "callee": "update_library_file",
        "line": 587,
        "type": "attribute"
      },
      {
        "callee": "get_file_by_checksum",
        "line": 592,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 602,
        "type": "attribute"
      },
      {
        "callee": "update_library_file",
        "line": 608,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 610,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 610,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 613,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 616,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 616,
        "type": "direct"
      },
      {
        "callee": "update_library_file",
        "line": 617,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 619,
        "type": "direct"
      },
      {
        "callee": "discard",
        "line": 623,
        "type": "attribute"
      }
    ],
    "src\\services\\library_service.py:LibraryService.reprocess_file": [
      {
        "callee": "get_file_by_checksum",
        "line": 636,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 638,
        "type": "attribute"
      },
      {
        "callee": "create_task",
        "line": 642,
        "type": "attribute"
      },
      {
        "callee": "_extract_metadata_async",
        "line": 642,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 644,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 648,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 648,
        "type": "direct"
      }
    ],
    "src\\services\\material_service.py:MaterialService.initialize": [
      {
        "callee": "_create_tables",
        "line": 49,
        "type": "attribute"
      },
      {
        "callee": "_load_materials",
        "line": 50,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 51,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 53,
        "type": "attribute"
      }
    ],
    "src\\services\\material_service.py:MaterialService._create_tables": [
      {
        "callee": "connection",
        "line": 58,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 60,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 82,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 100,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 101,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 102,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 103,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 104,
        "type": "attribute"
      },
      {
        "callee": "commit",
        "line": 106,
        "type": "attribute"
      }
    ],
    "src\\services\\material_service.py:MaterialService._load_materials": [
      {
        "callee": "get_connection",
        "line": 110,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 111,
        "type": "attribute"
      },
      {
        "callee": "fetchall",
        "line": 112,
        "type": "attribute"
      },
      {
        "callee": "clear",
        "line": 114,
        "type": "attribute"
      },
      {
        "callee": "_row_to_material",
        "line": 116,
        "type": "attribute"
      }
    ],
    "src\\services\\material_service.py:MaterialService._row_to_material": [
      {
        "callee": "MaterialSpool",
        "line": 121,
        "type": "direct"
      },
      {
        "callee": "MaterialType",
        "line": 123,
        "type": "direct"
      },
      {
        "callee": "MaterialBrand",
        "line": 124,
        "type": "direct"
      },
      {
        "callee": "MaterialColor",
        "line": 125,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 129,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 129,
        "type": "direct"
      },
      {
        "callee": "fromisoformat",
        "line": 130,
        "type": "attribute"
      },
      {
        "callee": "fromisoformat",
        "line": 135,
        "type": "attribute"
      },
      {
        "callee": "fromisoformat",
        "line": 136,
        "type": "attribute"
      }
    ],
    "src\\services\\material_service.py:MaterialService.create_material": [
      {
        "callee": "str",
        "line": 141,
        "type": "direct"
      },
      {
        "callee": "uuid4",
        "line": 141,
        "type": "direct"
      },
      {
        "callee": "now",
        "line": 142,
        "type": "attribute"
      },
      {
        "callee": "MaterialSpool",
        "line": 144,
        "type": "direct"
      },
      {
        "callee": "get_connection",
        "line": 162,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 163,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 172,
        "type": "direct"
      },
      {
        "callee": "isoformat",
        "line": 173,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 175,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 175,
        "type": "attribute"
      },
      {
        "callee": "commit",
        "line": 177,
        "type": "attribute"
      },
      {
        "callee": "emit_event",
        "line": 180,
        "type": "attribute"
      }
    ],
    "src\\services\\material_service.py:MaterialService.update_material": [
      {
        "callee": "model_dump",
        "line": 190,
        "type": "attribute"
      },
      {
        "callee": "items",
        "line": 196,
        "type": "attribute"
      },
      {
        "callee": "hasattr",
        "line": 197,
        "type": "direct"
      },
      {
        "callee": "setattr",
        "line": 198,
        "type": "direct"
      },
      {
        "callee": "now",
        "line": 200,
        "type": "attribute"
      },
      {
        "callee": "get_connection",
        "line": 203,
        "type": "attribute"
      },
      {
        "callee": "items",
        "line": 206,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 207,
        "type": "attribute"
      },
      {
        "callee": "isinstance",
        "line": 208,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 209,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 209,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 211,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 213,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 214,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 214,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 215,
        "type": "attribute"
      },
      {
        "callee": "join",
        "line": 217,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 218,
        "type": "attribute"
      },
      {
        "callee": "commit",
        "line": 219,
        "type": "attribute"
      },
      {
        "callee": "emit_event",
        "line": 221,
        "type": "attribute"
      }
    ],
    "src\\services\\material_service.py:MaterialService.record_consumption": [
      {
        "callee": "ValueError",
        "line": 230,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 234,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 234,
        "type": "direct"
      },
      {
        "callee": "MaterialConsumption",
        "line": 236,
        "type": "direct"
      },
      {
        "callee": "max",
        "line": 247,
        "type": "direct"
      },
      {
        "callee": "now",
        "line": 248,
        "type": "attribute"
      },
      {
        "callee": "get_connection",
        "line": 250,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 252,
        "type": "direct"
      },
      {
        "callee": "uuid4",
        "line": 252,
        "type": "direct"
      },
      {
        "callee": "execute",
        "line": 253,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 260,
        "type": "direct"
      },
      {
        "callee": "isoformat",
        "line": 261,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 266,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 270,
        "type": "attribute"
      },
      {
        "callee": "commit",
        "line": 272,
        "type": "attribute"
      },
      {
        "callee": "emit_event",
        "line": 276,
        "type": "attribute"
      }
    ],
    "src\\services\\material_service.py:MaterialService.get_material": [
      {
        "callee": "get",
        "line": 286,
        "type": "attribute"
      }
    ],
    "src\\services\\material_service.py:MaterialService.get_all_materials": [
      {
        "callee": "list",
        "line": 290,
        "type": "direct"
      },
      {
        "callee": "values",
        "line": 290,
        "type": "attribute"
      }
    ],
    "src\\services\\material_service.py:MaterialService.get_materials_by_type": [
      {
        "callee": "values",
        "line": 294,
        "type": "attribute"
      }
    ],
    "src\\services\\material_service.py:MaterialService.get_materials_by_printer": [
      {
        "callee": "values",
        "line": 298,
        "type": "attribute"
      }
    ],
    "src\\services\\material_service.py:MaterialService.get_low_stock_materials": [
      {
        "callee": "values",
        "line": 302,
        "type": "attribute"
      }
    ],
    "src\\services\\material_service.py:MaterialService.get_statistics": [
      {
        "callee": "list",
        "line": 306,
        "type": "direct"
      },
      {
        "callee": "values",
        "line": 306,
        "type": "attribute"
      },
      {
        "callee": "MaterialStats",
        "line": 309,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 313,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 314,
        "type": "direct"
      },
      {
        "callee": "sum",
        "line": 324,
        "type": "direct"
      },
      {
        "callee": "sum",
        "line": 325,
        "type": "direct"
      },
      {
        "callee": "sum",
        "line": 326,
        "type": "direct"
      },
      {
        "callee": "sum",
        "line": 327,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 338,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 363,
        "type": "attribute"
      },
      {
        "callee": "_calculate_consumption_period",
        "line": 369,
        "type": "attribute"
      },
      {
        "callee": "MaterialStats",
        "line": 372,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 373,
        "type": "direct"
      }
    ],
    "src\\services\\material_service.py:MaterialService._calculate_consumption_period": [
      {
        "callee": "now",
        "line": 388,
        "type": "attribute"
      },
      {
        "callee": "timedelta",
        "line": 388,
        "type": "direct"
      },
      {
        "callee": "get_connection",
        "line": 390,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 391,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 395,
        "type": "attribute"
      },
      {
        "callee": "fetchone",
        "line": 397,
        "type": "attribute"
      }
    ],
    "src\\services\\material_service.py:MaterialService.generate_report": [
      {
        "callee": "get_connection",
        "line": 404,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 406,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 413,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 413,
        "type": "attribute"
      },
      {
        "callee": "fetchall",
        "line": 415,
        "type": "attribute"
      },
      {
        "callee": "MaterialReport",
        "line": 418,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 422,
        "type": "direct"
      },
      {
        "callee": "sum",
        "line": 431,
        "type": "direct"
      },
      {
        "callee": "sum",
        "line": 432,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 432,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 432,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 441,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 445,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 445,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 455,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 459,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 459,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 463,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 464,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 467,
        "type": "attribute"
      },
      {
        "callee": "Decimal",
        "line": 469,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 469,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 479,
        "type": "attribute"
      },
      {
        "callee": "Decimal",
        "line": 481,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 484,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 484,
        "type": "direct"
      },
      {
        "callee": "sorted",
        "line": 486,
        "type": "direct"
      },
      {
        "callee": "values",
        "line": 486,
        "type": "attribute"
      },
      {
        "callee": "sum",
        "line": 491,
        "type": "direct"
      },
      {
        "callee": "float",
        "line": 497,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 497,
        "type": "direct"
      },
      {
        "callee": "set",
        "line": 497,
        "type": "direct"
      },
      {
        "callee": "MaterialReport",
        "line": 501,
        "type": "direct"
      }
    ],
    "src\\services\\material_service.py:MaterialService.export_inventory": [
      {
        "callee": "list",
        "line": 516,
        "type": "direct"
      },
      {
        "callee": "values",
        "line": 516,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 523,
        "type": "attribute"
      },
      {
        "callee": "open",
        "line": 529,
        "type": "attribute"
      },
      {
        "callee": "write",
        "line": 530,
        "type": "attribute"
      },
      {
        "callee": "join",
        "line": 530,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 532,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 532,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 536,
        "type": "attribute"
      }
    ],
    "src\\services\\material_service.py:MaterialService.cleanup": [
      {
        "callee": "clear",
        "line": 541,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 542,
        "type": "attribute"
      }
    ],
    "src\\services\\migration_service.py:MigrationService.__init__": [
      {
        "callee": "Path",
        "line": 22,
        "type": "direct"
      },
      {
        "callee": "mkdir",
        "line": 23,
        "type": "attribute"
      }
    ],
    "src\\services\\migration_service.py:MigrationService.run_migrations": [
      {
        "callee": "warning",
        "line": 29,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 32,
        "type": "attribute"
      },
      {
        "callee": "_ensure_migrations_table",
        "line": 35,
        "type": "attribute"
      },
      {
        "callee": "_get_completed_migrations",
        "line": 38,
        "type": "attribute"
      },
      {
        "callee": "_get_migration_files",
        "line": 41,
        "type": "attribute"
      },
      {
        "callee": "_run_migration_file",
        "line": 49,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 52,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 53,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 57,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 57,
        "type": "direct"
      }
    ],
    "src\\services\\migration_service.py:MigrationService._ensure_migrations_table": [
      {
        "callee": "RuntimeError",
        "line": 64,
        "type": "direct"
      },
      {
        "callee": "get_connection",
        "line": 66,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 67,
        "type": "attribute"
      },
      {
        "callee": "commit",
        "line": 75,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 78,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 78,
        "type": "direct"
      }
    ],
    "src\\services\\migration_service.py:MigrationService._get_completed_migrations": [
      {
        "callee": "RuntimeError",
        "line": 85,
        "type": "direct"
      },
      {
        "callee": "get_connection",
        "line": 87,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 91,
        "type": "attribute"
      },
      {
        "callee": "fetchall",
        "line": 92,
        "type": "attribute"
      },
      {
        "callee": "set",
        "line": 96,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 99,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 99,
        "type": "direct"
      }
    ],
    "src\\services\\migration_service.py:MigrationService._get_migration_files": [
      {
        "callee": "list",
        "line": 105,
        "type": "direct"
      },
      {
        "callee": "glob",
        "line": 105,
        "type": "attribute"
      },
      {
        "callee": "sort",
        "line": 106,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 108,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 109,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 115,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 115,
        "type": "direct"
      }
    ],
    "src\\services\\migration_service.py:MigrationService._run_migration_file": [
      {
        "callee": "RuntimeError",
        "line": 122,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 124,
        "type": "attribute"
      },
      {
        "callee": "read_text",
        "line": 127,
        "type": "attribute"
      },
      {
        "callee": "get_connection",
        "line": 130,
        "type": "attribute"
      },
      {
        "callee": "executescript",
        "line": 133,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 136,
        "type": "attribute"
      },
      {
        "callee": "commit",
        "line": 142,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 144,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 147,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 149,
        "type": "direct"
      }
    ],
    "src\\services\\migration_service.py:MigrationService.get_migration_status": [
      {
        "callee": "_get_completed_migrations",
        "line": 158,
        "type": "attribute"
      },
      {
        "callee": "_get_migration_files",
        "line": 159,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 165,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 166,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 167,
        "type": "direct"
      },
      {
        "callee": "sorted",
        "line": 168,
        "type": "direct"
      },
      {
        "callee": "sorted",
        "line": 169,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 174,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 174,
        "type": "direct"
      }
    ],
    "src\\services\\migration_service.py:MigrationService.force_run_migration": [
      {
        "callee": "RuntimeError",
        "line": 181,
        "type": "direct"
      },
      {
        "callee": "exists",
        "line": 185,
        "type": "attribute"
      },
      {
        "callee": "ValueError",
        "line": 186,
        "type": "direct"
      },
      {
        "callee": "_run_migration_file",
        "line": 188,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 189,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 192,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 193,
        "type": "direct"
      }
    ],
    "src\\services\\monitoring_service.py:MonitoringService.__init__": [
      {
        "callee": "get_settings",
        "line": 22,
        "type": "direct"
      }
    ],
    "src\\services\\monitoring_service.py:MonitoringService.start_monitoring": [
      {
        "callee": "info",
        "line": 42,
        "type": "attribute"
      },
      {
        "callee": "create_task",
        "line": 45,
        "type": "attribute"
      },
      {
        "callee": "_error_monitoring_loop",
        "line": 45,
        "type": "attribute"
      },
      {
        "callee": "create_task",
        "line": 46,
        "type": "attribute"
      },
      {
        "callee": "_health_check_loop",
        "line": 46,
        "type": "attribute"
      },
      {
        "callee": "create_task",
        "line": 47,
        "type": "attribute"
      },
      {
        "callee": "_cleanup_old_logs_loop",
        "line": 47,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 49,
        "type": "attribute"
      }
    ],
    "src\\services\\monitoring_service.py:MonitoringService._error_monitoring_loop": [
      {
        "callee": "_check_error_rates",
        "line": 55,
        "type": "attribute"
      },
      {
        "callee": "sleep",
        "line": 56,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 58,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 58,
        "type": "direct"
      },
      {
        "callee": "sleep",
        "line": 59,
        "type": "attribute"
      }
    ],
    "src\\services\\monitoring_service.py:MonitoringService._health_check_loop": [
      {
        "callee": "_perform_health_checks",
        "line": 65,
        "type": "attribute"
      },
      {
        "callee": "sleep",
        "line": 66,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 68,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 68,
        "type": "direct"
      },
      {
        "callee": "sleep",
        "line": 69,
        "type": "attribute"
      }
    ],
    "src\\services\\monitoring_service.py:MonitoringService._cleanup_old_logs_loop": [
      {
        "callee": "_cleanup_old_logs",
        "line": 75,
        "type": "attribute"
      },
      {
        "callee": "sleep",
        "line": 76,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 78,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 78,
        "type": "direct"
      },
      {
        "callee": "sleep",
        "line": 79,
        "type": "attribute"
      }
    ],
    "src\\services\\monitoring_service.py:MonitoringService._check_error_rates": [
      {
        "callee": "get_error_statistics",
        "line": 85,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 89,
        "type": "attribute"
      },
      {
        "callee": "_trigger_alert",
        "line": 91,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 98,
        "type": "attribute"
      },
      {
        "callee": "_trigger_alert",
        "line": 100,
        "type": "attribute"
      },
      {
        "callee": "_trigger_alert",
        "line": 108,
        "type": "attribute"
      },
      {
        "callee": "_check_error_patterns",
        "line": 115,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 118,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 118,
        "type": "direct"
      }
    ],
    "src\\services\\monitoring_service.py:MonitoringService._check_error_patterns": [
      {
        "callee": "items",
        "line": 126,
        "type": "attribute"
      },
      {
        "callee": "_trigger_alert",
        "line": 128,
        "type": "attribute"
      },
      {
        "callee": "items",
        "line": 135,
        "type": "attribute"
      },
      {
        "callee": "_trigger_alert",
        "line": 137,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 144,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 144,
        "type": "direct"
      }
    ],
    "src\\services\\monitoring_service.py:MonitoringService._perform_health_checks": [
      {
        "callee": "_check_database_health",
        "line": 153,
        "type": "attribute"
      },
      {
        "callee": "_check_file_system_health",
        "line": 157,
        "type": "attribute"
      },
      {
        "callee": "items",
        "line": 160,
        "type": "attribute"
      },
      {
        "callee": "_trigger_alert",
        "line": 162,
        "type": "attribute"
      },
      {
        "callee": "join",
        "line": 164,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 168,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 171,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 171,
        "type": "direct"
      }
    ],
    "src\\services\\monitoring_service.py:MonitoringService._check_database_health": [
      {
        "callee": "Database",
        "line": 179,
        "type": "direct"
      },
      {
        "callee": "execute_query",
        "line": 182,
        "type": "attribute"
      },
      {
        "callee": "Path",
        "line": 185,
        "type": "direct"
      },
      {
        "callee": "exists",
        "line": 186,
        "type": "attribute"
      },
      {
        "callee": "stat",
        "line": 187,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 191,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 191,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 197,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 197,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 203,
        "type": "direct"
      },
      {
        "callee": "isoformat",
        "line": 204,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 204,
        "type": "attribute"
      }
    ],
    "src\\services\\monitoring_service.py:MonitoringService._check_file_system_health": [
      {
        "callee": "Path",
        "line": 211,
        "type": "direct"
      },
      {
        "callee": "mkdir",
        "line": 212,
        "type": "attribute"
      },
      {
        "callee": "write_text",
        "line": 215,
        "type": "attribute"
      },
      {
        "callee": "unlink",
        "line": 216,
        "type": "attribute"
      },
      {
        "callee": "disk_usage",
        "line": 220,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 228,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 228,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 234,
        "type": "direct"
      },
      {
        "callee": "isoformat",
        "line": 235,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 235,
        "type": "attribute"
      }
    ],
    "src\\services\\monitoring_service.py:MonitoringService._trigger_alert": [
      {
        "callee": "timestamp",
        "line": 241,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 241,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 242,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 252,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 257,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 257,
        "type": "attribute"
      },
      {
        "callee": "_store_alert",
        "line": 261,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 270,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 270,
        "type": "direct"
      }
    ],
    "src\\services\\monitoring_service.py:MonitoringService._store_alert": [
      {
        "callee": "Path",
        "line": 275,
        "type": "direct"
      },
      {
        "callee": "mkdir",
        "line": 276,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 279,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 279,
        "type": "attribute"
      },
      {
        "callee": "open",
        "line": 285,
        "type": "direct"
      },
      {
        "callee": "write",
        "line": 286,
        "type": "attribute"
      },
      {
        "callee": "dumps",
        "line": 286,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 289,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 289,
        "type": "direct"
      }
    ],
    "src\\services\\monitoring_service.py:MonitoringService._cleanup_old_logs": [
      {
        "callee": "Path",
        "line": 294,
        "type": "direct"
      },
      {
        "callee": "exists",
        "line": 295,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 299,
        "type": "attribute"
      },
      {
        "callee": "timedelta",
        "line": 299,
        "type": "direct"
      },
      {
        "callee": "timestamp",
        "line": 300,
        "type": "attribute"
      },
      {
        "callee": "glob",
        "line": 303,
        "type": "attribute"
      },
      {
        "callee": "stat",
        "line": 305,
        "type": "attribute"
      },
      {
        "callee": "unlink",
        "line": 306,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 309,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 309,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 312,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 315,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 315,
        "type": "direct"
      }
    ],
    "src\\services\\monitoring_service.py:MonitoringService.get_monitoring_status": [
      {
        "callee": "get_error_statistics",
        "line": 321,
        "type": "attribute"
      },
      {
        "callee": "Path",
        "line": 324,
        "type": "direct"
      },
      {
        "callee": "exists",
        "line": 326,
        "type": "attribute"
      },
      {
        "callee": "open",
        "line": 328,
        "type": "direct"
      },
      {
        "callee": "readlines",
        "line": 329,
        "type": "attribute"
      },
      {
        "callee": "loads",
        "line": 334,
        "type": "attribute"
      },
      {
        "callee": "strip",
        "line": 334,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 335,
        "type": "attribute"
      },
      {
        "callee": "_check_database_health",
        "line": 343,
        "type": "attribute"
      },
      {
        "callee": "_check_file_system_health",
        "line": 344,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 349,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 349,
        "type": "attribute"
      },
      {
        "callee": "list",
        "line": 351,
        "type": "direct"
      },
      {
        "callee": "reversed",
        "line": 351,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 357,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 357,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 360,
        "type": "direct"
      },
      {
        "callee": "isoformat",
        "line": 361,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 361,
        "type": "attribute"
      }
    ],
    "src\\services\\preview_render_service.py:PreviewRenderService.__init__": [
      {
        "callee": "Path",
        "line": 39,
        "type": "direct"
      },
      {
        "callee": "mkdir",
        "line": 40,
        "type": "attribute"
      },
      {
        "callee": "get_settings",
        "line": 60,
        "type": "direct"
      },
      {
        "callee": "GcodeAnalyzer",
        "line": 73,
        "type": "direct"
      },
      {
        "callee": "timedelta",
        "line": 76,
        "type": "direct"
      }
    ],
    "src\\services\\preview_render_service.py:PreviewRenderService.get_or_generate_preview": [
      {
        "callee": "warning",
        "line": 104,
        "type": "attribute"
      },
      {
        "callee": "_get_cache_key",
        "line": 109,
        "type": "attribute"
      },
      {
        "callee": "exists",
        "line": 112,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 114,
        "type": "attribute"
      },
      {
        "callee": "fromtimestamp",
        "line": 114,
        "type": "attribute"
      },
      {
        "callee": "stat",
        "line": 114,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 116,
        "type": "attribute"
      },
      {
        "callee": "open",
        "line": 117,
        "type": "direct"
      },
      {
        "callee": "read",
        "line": 119,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 122,
        "type": "attribute"
      },
      {
        "callee": "get_event_loop",
        "line": 125,
        "type": "attribute"
      },
      {
        "callee": "wait_for",
        "line": 126,
        "type": "attribute"
      },
      {
        "callee": "run_in_executor",
        "line": 127,
        "type": "attribute"
      },
      {
        "callee": "open",
        "line": 133,
        "type": "direct"
      },
      {
        "callee": "write",
        "line": 134,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 137,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 144,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 148,
        "type": "attribute"
      }
    ],
    "src\\services\\preview_render_service.py:PreviewRenderService._render_file": [
      {
        "callee": "lower",
        "line": 169,
        "type": "attribute"
      },
      {
        "callee": "_render_stl",
        "line": 172,
        "type": "attribute"
      },
      {
        "callee": "_render_3mf",
        "line": 174,
        "type": "attribute"
      },
      {
        "callee": "_render_gcode_toolpath",
        "line": 176,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 178,
        "type": "attribute"
      }
    ],
    "src\\services\\preview_render_service.py:PreviewRenderService._render_stl": [
      {
        "callee": "load_mesh",
        "line": 194,
        "type": "attribute"
      },
      {
        "callee": "max",
        "line": 201,
        "type": "direct"
      },
      {
        "callee": "figure",
        "line": 209,
        "type": "attribute"
      },
      {
        "callee": "add_subplot",
        "line": 210,
        "type": "attribute"
      },
      {
        "callee": "set_facecolor",
        "line": 213,
        "type": "attribute"
      },
      {
        "callee": "set_facecolor",
        "line": 214,
        "type": "attribute"
      },
      {
        "callee": "plot_trisurf",
        "line": 217,
        "type": "attribute"
      },
      {
        "callee": "view_init",
        "line": 231,
        "type": "attribute"
      },
      {
        "callee": "set_axis_off",
        "line": 234,
        "type": "attribute"
      },
      {
        "callee": "set_xlim",
        "line": 238,
        "type": "attribute"
      },
      {
        "callee": "set_ylim",
        "line": 239,
        "type": "attribute"
      },
      {
        "callee": "set_zlim",
        "line": 240,
        "type": "attribute"
      },
      {
        "callee": "BytesIO",
        "line": 243,
        "type": "direct"
      },
      {
        "callee": "savefig",
        "line": 244,
        "type": "attribute"
      },
      {
        "callee": "close",
        "line": 252,
        "type": "attribute"
      },
      {
        "callee": "seek",
        "line": 254,
        "type": "attribute"
      },
      {
        "callee": "read",
        "line": 255,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 257,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 261,
        "type": "attribute"
      }
    ],
    "src\\services\\preview_render_service.py:PreviewRenderService._render_3mf": [
      {
        "callee": "load",
        "line": 277,
        "type": "attribute"
      },
      {
        "callee": "isinstance",
        "line": 280,
        "type": "direct"
      },
      {
        "callee": "concatenate",
        "line": 282,
        "type": "attribute"
      },
      {
        "callee": "values",
        "line": 283,
        "type": "attribute"
      },
      {
        "callee": "isinstance",
        "line": 283,
        "type": "direct"
      },
      {
        "callee": "_render_mesh_common",
        "line": 289,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 291,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 295,
        "type": "attribute"
      }
    ],
    "src\\services\\preview_render_service.py:PreviewRenderService._render_mesh_common": [
      {
        "callee": "max",
        "line": 314,
        "type": "direct"
      },
      {
        "callee": "figure",
        "line": 322,
        "type": "attribute"
      },
      {
        "callee": "add_subplot",
        "line": 323,
        "type": "attribute"
      },
      {
        "callee": "set_facecolor",
        "line": 326,
        "type": "attribute"
      },
      {
        "callee": "set_facecolor",
        "line": 327,
        "type": "attribute"
      },
      {
        "callee": "plot_trisurf",
        "line": 330,
        "type": "attribute"
      },
      {
        "callee": "view_init",
        "line": 344,
        "type": "attribute"
      },
      {
        "callee": "set_axis_off",
        "line": 345,
        "type": "attribute"
      },
      {
        "callee": "set_xlim",
        "line": 349,
        "type": "attribute"
      },
      {
        "callee": "set_ylim",
        "line": 350,
        "type": "attribute"
      },
      {
        "callee": "set_zlim",
        "line": 351,
        "type": "attribute"
      },
      {
        "callee": "BytesIO",
        "line": 354,
        "type": "direct"
      },
      {
        "callee": "savefig",
        "line": 355,
        "type": "attribute"
      },
      {
        "callee": "close",
        "line": 363,
        "type": "attribute"
      },
      {
        "callee": "seek",
        "line": 365,
        "type": "attribute"
      },
      {
        "callee": "read",
        "line": 366,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 369,
        "type": "attribute"
      }
    ],
    "src\\services\\preview_render_service.py:PreviewRenderService._render_gcode_toolpath": [
      {
        "callee": "info",
        "line": 384,
        "type": "attribute"
      },
      {
        "callee": "open",
        "line": 388,
        "type": "direct"
      },
      {
        "callee": "enumerate",
        "line": 390,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 397,
        "type": "attribute"
      },
      {
        "callee": "rstrip",
        "line": 397,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 401,
        "type": "direct"
      },
      {
        "callee": "get_optimized_gcode_lines",
        "line": 402,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 405,
        "type": "direct"
      },
      {
        "callee": "open",
        "line": 406,
        "type": "direct"
      },
      {
        "callee": "readlines",
        "line": 407,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 408,
        "type": "direct"
      },
      {
        "callee": "min",
        "line": 409,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 409,
        "type": "direct"
      },
      {
        "callee": "rstrip",
        "line": 410,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 412,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 412,
        "type": "direct"
      },
      {
        "callee": "startswith",
        "line": 420,
        "type": "attribute"
      },
      {
        "callee": "startswith",
        "line": 420,
        "type": "attribute"
      },
      {
        "callee": "split",
        "line": 421,
        "type": "attribute"
      },
      {
        "callee": "strip",
        "line": 421,
        "type": "attribute"
      },
      {
        "callee": "startswith",
        "line": 424,
        "type": "attribute"
      },
      {
        "callee": "float",
        "line": 425,
        "type": "direct"
      },
      {
        "callee": "startswith",
        "line": 426,
        "type": "attribute"
      },
      {
        "callee": "float",
        "line": 427,
        "type": "direct"
      },
      {
        "callee": "startswith",
        "line": 428,
        "type": "attribute"
      },
      {
        "callee": "float",
        "line": 429,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 433,
        "type": "attribute"
      },
      {
        "callee": "copy",
        "line": 433,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 436,
        "type": "attribute"
      },
      {
        "callee": "array",
        "line": 440,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 441,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 441,
        "type": "direct"
      },
      {
        "callee": "figure",
        "line": 448,
        "type": "attribute"
      },
      {
        "callee": "add_subplot",
        "line": 449,
        "type": "attribute"
      },
      {
        "callee": "plot",
        "line": 452,
        "type": "attribute"
      },
      {
        "callee": "set_facecolor",
        "line": 456,
        "type": "attribute"
      },
      {
        "callee": "set_facecolor",
        "line": 457,
        "type": "attribute"
      },
      {
        "callee": "set_axis_off",
        "line": 458,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 461,
        "type": "direct"
      },
      {
        "callee": "set_xlim",
        "line": 462,
        "type": "attribute"
      },
      {
        "callee": "min",
        "line": 462,
        "type": "attribute"
      },
      {
        "callee": "max",
        "line": 462,
        "type": "attribute"
      },
      {
        "callee": "set_ylim",
        "line": 463,
        "type": "attribute"
      },
      {
        "callee": "min",
        "line": 463,
        "type": "attribute"
      },
      {
        "callee": "max",
        "line": 463,
        "type": "attribute"
      },
      {
        "callee": "set_zlim",
        "line": 464,
        "type": "attribute"
      },
      {
        "callee": "min",
        "line": 464,
        "type": "attribute"
      },
      {
        "callee": "max",
        "line": 464,
        "type": "attribute"
      },
      {
        "callee": "BytesIO",
        "line": 467,
        "type": "direct"
      },
      {
        "callee": "savefig",
        "line": 468,
        "type": "attribute"
      },
      {
        "callee": "close",
        "line": 470,
        "type": "attribute"
      },
      {
        "callee": "seek",
        "line": 472,
        "type": "attribute"
      },
      {
        "callee": "read",
        "line": 473,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 476,
        "type": "attribute"
      }
    ],
    "src\\services\\preview_render_service.py:PreviewRenderService._get_cache_key": [
      {
        "callee": "getmtime",
        "line": 492,
        "type": "attribute"
      },
      {
        "callee": "hexdigest",
        "line": 497,
        "type": "attribute"
      },
      {
        "callee": "md5",
        "line": 497,
        "type": "attribute"
      },
      {
        "callee": "encode",
        "line": 497,
        "type": "attribute"
      }
    ],
    "src\\services\\preview_render_service.py:PreviewRenderService.clear_cache": [
      {
        "callee": "now",
        "line": 515,
        "type": "attribute"
      },
      {
        "callee": "timedelta",
        "line": 515,
        "type": "direct"
      },
      {
        "callee": "glob",
        "line": 517,
        "type": "attribute"
      },
      {
        "callee": "is_file",
        "line": 518,
        "type": "attribute"
      },
      {
        "callee": "unlink",
        "line": 521,
        "type": "attribute"
      },
      {
        "callee": "fromtimestamp",
        "line": 525,
        "type": "attribute"
      },
      {
        "callee": "stat",
        "line": 525,
        "type": "attribute"
      },
      {
        "callee": "unlink",
        "line": 527,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 530,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 533,
        "type": "attribute"
      }
    ],
    "src\\services\\preview_render_service.py:PreviewRenderService.get_statistics": [
      {
        "callee": "sum",
        "line": 539,
        "type": "direct"
      },
      {
        "callee": "stat",
        "line": 540,
        "type": "attribute"
      },
      {
        "callee": "glob",
        "line": 540,
        "type": "attribute"
      },
      {
        "callee": "is_file",
        "line": 540,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 542,
        "type": "direct"
      },
      {
        "callee": "list",
        "line": 542,
        "type": "direct"
      },
      {
        "callee": "glob",
        "line": 542,
        "type": "attribute"
      },
      {
        "callee": "round",
        "line": 546,
        "type": "direct"
      }
    ],
    "src\\services\\preview_render_service.py:PreviewRenderService.update_config": [
      {
        "callee": "update",
        "line": 559,
        "type": "attribute"
      },
      {
        "callee": "update",
        "line": 562,
        "type": "attribute"
      },
      {
        "callee": "timedelta",
        "line": 568,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 573,
        "type": "attribute"
      }
    ],
    "src\\services\\printer_service.py:PrinterService.initialize": [
      {
        "callee": "info",
        "line": 37,
        "type": "attribute"
      },
      {
        "callee": "_load_printers",
        "line": 38,
        "type": "attribute"
      },
      {
        "callee": "_sync_database_printers",
        "line": 39,
        "type": "attribute"
      }
    ],
    "src\\services\\printer_service.py:PrinterService._load_printers": [
      {
        "callee": "get_active_printers",
        "line": 44,
        "type": "attribute"
      },
      {
        "callee": "items",
        "line": 46,
        "type": "attribute"
      },
      {
        "callee": "_create_printer_instance",
        "line": 49,
        "type": "attribute"
      },
      {
        "callee": "add_status_callback",
        "line": 55,
        "type": "attribute"
      },
      {
        "callee": "create_task",
        "line": 56,
        "type": "attribute"
      },
      {
        "callee": "_handle_status_update",
        "line": 57,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 61,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 65,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 66,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 68,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 68,
        "type": "direct"
      }
    ],
    "src\\services\\printer_service.py:PrinterService._create_printer_instance": [
      {
        "callee": "BambuLabPrinter",
        "line": 73,
        "type": "direct"
      },
      {
        "callee": "PrusaPrinter",
        "line": 82,
        "type": "direct"
      },
      {
        "callee": "warning",
        "line": 90,
        "type": "attribute"
      }
    ],
    "src\\services\\printer_service.py:PrinterService._sync_database_printers": [
      {
        "callee": "cursor",
        "line": 95,
        "type": "attribute"
      },
      {
        "callee": "items",
        "line": 96,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 98,
        "type": "attribute"
      },
      {
        "callee": "replace",
        "line": 105,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 105,
        "type": "attribute"
      },
      {
        "callee": "getattr",
        "line": 105,
        "type": "direct"
      },
      {
        "callee": "getattr",
        "line": 107,
        "type": "direct"
      },
      {
        "callee": "getattr",
        "line": 108,
        "type": "direct"
      },
      {
        "callee": "getattr",
        "line": 109,
        "type": "direct"
      },
      {
        "callee": "commit",
        "line": 113,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 114,
        "type": "attribute"
      }
    ],
    "src\\services\\printer_service.py:PrinterService._handle_status_update": [
      {
        "callee": "_store_status_update",
        "line": 119,
        "type": "attribute"
      },
      {
        "callee": "emit_event",
        "line": 122,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 133,
        "type": "attribute"
      },
      {
        "callee": "set",
        "line": 149,
        "type": "direct"
      },
      {
        "callee": "startswith",
        "line": 152,
        "type": "attribute"
      },
      {
        "callee": "split",
        "line": 153,
        "type": "attribute"
      },
      {
        "callee": "_is_print_file",
        "line": 158,
        "type": "attribute"
      },
      {
        "callee": "add",
        "line": 160,
        "type": "attribute"
      },
      {
        "callee": "create_task",
        "line": 161,
        "type": "attribute"
      },
      {
        "callee": "_attempt_download_current_job",
        "line": 161,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 163,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 163,
        "type": "direct"
      }
    ],
    "src\\services\\printer_service.py:PrinterService._is_print_file": [
      {
        "callee": "lower",
        "line": 168,
        "type": "attribute"
      },
      {
        "callee": "splitext",
        "line": 170,
        "type": "attribute"
      }
    ],
    "src\\services\\printer_service.py:PrinterService._attempt_download_current_job": [
      {
        "callee": "info",
        "line": 175,
        "type": "attribute"
      },
      {
        "callee": "_attempt",
        "line": 187,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 188,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 190,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 191,
        "type": "attribute"
      },
      {
        "callee": "get_printer_files",
        "line": 196,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 199,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 199,
        "type": "direct"
      },
      {
        "callee": "strip",
        "line": 201,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 201,
        "type": "attribute"
      },
      {
        "callee": "set",
        "line": 203,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 206,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 207,
        "type": "attribute"
      },
      {
        "callee": "add",
        "line": 208,
        "type": "attribute"
      },
      {
        "callee": "strip",
        "line": 210,
        "type": "attribute"
      },
      {
        "callee": "replace",
        "line": 210,
        "type": "attribute"
      },
      {
        "callee": "replace",
        "line": 210,
        "type": "attribute"
      },
      {
        "callee": "replace",
        "line": 210,
        "type": "attribute"
      },
      {
        "callee": "replace",
        "line": 210,
        "type": "attribute"
      },
      {
        "callee": "add",
        "line": 212,
        "type": "attribute"
      },
      {
        "callee": "replace",
        "line": 213,
        "type": "attribute"
      },
      {
        "callee": "add",
        "line": 215,
        "type": "attribute"
      },
      {
        "callee": "strip",
        "line": 218,
        "type": "attribute"
      },
      {
        "callee": "sub",
        "line": 218,
        "type": "attribute"
      },
      {
        "callee": "add",
        "line": 220,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 223,
        "type": "attribute"
      },
      {
        "callee": "startswith",
        "line": 224,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 224,
        "type": "attribute"
      },
      {
        "callee": "abs",
        "line": 224,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 224,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 224,
        "type": "direct"
      },
      {
        "callee": "add",
        "line": 225,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 229,
        "type": "attribute"
      },
      {
        "callee": "set",
        "line": 229,
        "type": "direct"
      },
      {
        "callee": "add",
        "line": 231,
        "type": "attribute"
      },
      {
        "callee": "_attempt",
        "line": 232,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 233,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 234,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 235,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 239,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 240,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 240,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 240,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 242,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 242,
        "type": "direct"
      }
    ],
    "src\\services\\printer_service.py:PrinterService._attempt": [
      {
        "callee": "download_file",
        "line": 180,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 182,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 182,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 183,
        "type": "direct"
      }
    ],
    "src\\services\\printer_service.py:PrinterService._store_status_update": [
      {
        "callee": "info",
        "line": 249,
        "type": "attribute"
      }
    ],
    "src\\services\\printer_service.py:PrinterService.list_printers": [
      {
        "callee": "items",
        "line": 258,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 270,
        "type": "attribute"
      },
      {
        "callee": "Printer",
        "line": 272,
        "type": "direct"
      },
      {
        "callee": "lower",
        "line": 275,
        "type": "attribute"
      },
      {
        "callee": "type",
        "line": 275,
        "type": "direct"
      },
      {
        "callee": "getattr",
        "line": 277,
        "type": "direct"
      },
      {
        "callee": "getattr",
        "line": 278,
        "type": "direct"
      },
      {
        "callee": "getattr",
        "line": 279,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 284,
        "type": "attribute"
      }
    ],
    "src\\services\\printer_service.py:PrinterService.get_printers": [
      {
        "callee": "items",
        "line": 292,
        "type": "attribute"
      },
      {
        "callee": "replace",
        "line": 296,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 296,
        "type": "attribute"
      },
      {
        "callee": "type",
        "line": 296,
        "type": "direct"
      },
      {
        "callee": "dict",
        "line": 299,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 301,
        "type": "attribute"
      }
    ],
    "src\\services\\printer_service.py:PrinterService.get_printer": [
      {
        "callee": "get",
        "line": 307,
        "type": "attribute"
      },
      {
        "callee": "Printer",
        "line": 320,
        "type": "direct"
      },
      {
        "callee": "lower",
        "line": 323,
        "type": "attribute"
      },
      {
        "callee": "type",
        "line": 323,
        "type": "direct"
      },
      {
        "callee": "getattr",
        "line": 325,
        "type": "direct"
      },
      {
        "callee": "getattr",
        "line": 326,
        "type": "direct"
      },
      {
        "callee": "getattr",
        "line": 327,
        "type": "direct"
      }
    ],
    "src\\services\\printer_service.py:PrinterService.get_printer_driver": [
      {
        "callee": "get",
        "line": 335,
        "type": "attribute"
      }
    ],
    "src\\services\\printer_service.py:PrinterService.get_printer_status": [
      {
        "callee": "get",
        "line": 339,
        "type": "attribute"
      },
      {
        "callee": "NotFoundError",
        "line": 341,
        "type": "direct"
      },
      {
        "callee": "get_status",
        "line": 344,
        "type": "attribute"
      },
      {
        "callee": "update_printer_status",
        "line": 347,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 349,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 350,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 360,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 363,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 363,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 367,
        "type": "direct"
      }
    ],
    "src\\services\\printer_service.py:PrinterService.connect_printer": [
      {
        "callee": "get",
        "line": 372,
        "type": "attribute"
      },
      {
        "callee": "NotFoundError",
        "line": 374,
        "type": "direct"
      },
      {
        "callee": "connect",
        "line": 377,
        "type": "attribute"
      },
      {
        "callee": "update_printer_status",
        "line": 381,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 384,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 388,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 388,
        "type": "direct"
      },
      {
        "callee": "PrinterConnectionError",
        "line": 389,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 389,
        "type": "direct"
      }
    ],
    "src\\services\\printer_service.py:PrinterService.disconnect_printer": [
      {
        "callee": "get",
        "line": 393,
        "type": "attribute"
      },
      {
        "callee": "NotFoundError",
        "line": 395,
        "type": "direct"
      },
      {
        "callee": "disconnect",
        "line": 398,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 401,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 401,
        "type": "direct"
      }
    ],
    "src\\services\\printer_service.py:PrinterService._connect_and_monitor_printer": [
      {
        "callee": "info",
        "line": 408,
        "type": "attribute"
      },
      {
        "callee": "connect",
        "line": 409,
        "type": "attribute"
      },
      {
        "callee": "update_printer_status",
        "line": 413,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 416,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 418,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 420,
        "type": "attribute"
      },
      {
        "callee": "start_monitoring",
        "line": 423,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 424,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 427,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 428,
        "type": "direct"
      }
    ],
    "src\\services\\printer_service.py:PrinterService.start_monitoring": [
      {
        "callee": "get",
        "line": 434,
        "type": "attribute"
      },
      {
        "callee": "NotFoundError",
        "line": 436,
        "type": "direct"
      },
      {
        "callee": "connect",
        "line": 440,
        "type": "attribute"
      },
      {
        "callee": "update_printer_status",
        "line": 444,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 447,
        "type": "attribute"
      },
      {
        "callee": "start_monitoring",
        "line": 449,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 450,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 453,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 453,
        "type": "direct"
      },
      {
        "callee": "items",
        "line": 459,
        "type": "attribute"
      },
      {
        "callee": "create_task",
        "line": 461,
        "type": "attribute"
      },
      {
        "callee": "_connect_and_monitor_printer",
        "line": 462,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 464,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 468,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 469,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 472,
        "type": "direct"
      }
    ],
    "src\\services\\printer_service.py:PrinterService.stop_monitoring": [
      {
        "callee": "get",
        "line": 479,
        "type": "attribute"
      },
      {
        "callee": "NotFoundError",
        "line": 481,
        "type": "direct"
      },
      {
        "callee": "stop_monitoring",
        "line": 484,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 485,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 488,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 488,
        "type": "direct"
      },
      {
        "callee": "items",
        "line": 492,
        "type": "attribute"
      },
      {
        "callee": "stop_monitoring",
        "line": 494,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 496,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 496,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 499,
        "type": "attribute"
      }
    ],
    "src\\services\\printer_service.py:PrinterService.get_printer_files": [
      {
        "callee": "get",
        "line": 504,
        "type": "attribute"
      },
      {
        "callee": "NotFoundError",
        "line": 506,
        "type": "direct"
      },
      {
        "callee": "connect",
        "line": 509,
        "type": "attribute"
      },
      {
        "callee": "list_files",
        "line": 512,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 517,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 523,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 523,
        "type": "direct"
      },
      {
        "callee": "PrinterConnectionError",
        "line": 524,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 524,
        "type": "direct"
      }
    ],
    "src\\services\\printer_service.py:PrinterService.download_printer_file": [
      {
        "callee": "get",
        "line": 528,
        "type": "attribute"
      },
      {
        "callee": "NotFoundError",
        "line": 530,
        "type": "direct"
      },
      {
        "callee": "connect",
        "line": 533,
        "type": "attribute"
      },
      {
        "callee": "download_file",
        "line": 538,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 539,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 541,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 542,
        "type": "direct"
      },
      {
        "callee": "download_file",
        "line": 546,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 548,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 549,
        "type": "direct"
      }
    ],
    "src\\services\\printer_service.py:PrinterService.download_current_job_file": [
      {
        "callee": "get",
        "line": 565,
        "type": "attribute"
      },
      {
        "callee": "NotFoundError",
        "line": 567,
        "type": "direct"
      },
      {
        "callee": "connect",
        "line": 572,
        "type": "attribute"
      },
      {
        "callee": "get_status",
        "line": 577,
        "type": "attribute"
      },
      {
        "callee": "startswith",
        "line": 585,
        "type": "attribute"
      },
      {
        "callee": "split",
        "line": 586,
        "type": "attribute"
      },
      {
        "callee": "find_file_by_name",
        "line": 591,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 595,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 598,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 603,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 603,
        "type": "attribute"
      },
      {
        "callee": "process_file_thumbnails",
        "line": 604,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 604,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 604,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 607,
        "type": "attribute"
      },
      {
        "callee": "download_file",
        "line": 613,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 615,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 616,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 617,
        "type": "attribute"
      }
    ],
    "src\\services\\printer_service.py:PrinterService.health_check": [
      {
        "callee": "len",
        "line": 628,
        "type": "direct"
      },
      {
        "callee": "items",
        "line": 634,
        "type": "attribute"
      },
      {
        "callee": "health_check",
        "line": 636,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 646,
        "type": "attribute"
      },
      {
        "callee": "getattr",
        "line": 648,
        "type": "direct"
      }
    ],
    "src\\services\\printer_service.py:PrinterService.shutdown": [
      {
        "callee": "info",
        "line": 655,
        "type": "attribute"
      },
      {
        "callee": "stop_monitoring",
        "line": 658,
        "type": "attribute"
      },
      {
        "callee": "items",
        "line": 661,
        "type": "attribute"
      },
      {
        "callee": "disconnect",
        "line": 663,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 665,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 665,
        "type": "direct"
      },
      {
        "callee": "clear",
        "line": 667,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 668,
        "type": "attribute"
      }
    ],
    "src\\services\\printer_service.py:PrinterService.create_printer": [
      {
        "callee": "str",
        "line": 676,
        "type": "direct"
      },
      {
        "callee": "uuid4",
        "line": 676,
        "type": "direct"
      },
      {
        "callee": "add_printer",
        "line": 689,
        "type": "attribute"
      },
      {
        "callee": "ValueError",
        "line": 690,
        "type": "direct"
      },
      {
        "callee": "get_printer",
        "line": 693,
        "type": "attribute"
      },
      {
        "callee": "_create_printer_instance",
        "line": 695,
        "type": "attribute"
      },
      {
        "callee": "create_printer",
        "line": 700,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 704,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 705,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 706,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 707,
        "type": "attribute"
      },
      {
        "callee": "Printer",
        "line": 711,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 715,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 716,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 717,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 718,
        "type": "attribute"
      }
    ],
    "src\\services\\printer_service.py:PrinterService.update_printer": [
      {
        "callee": "str",
        "line": 725,
        "type": "direct"
      },
      {
        "callee": "get_printer",
        "line": 728,
        "type": "attribute"
      },
      {
        "callee": "to_dict",
        "line": 733,
        "type": "attribute"
      },
      {
        "callee": "update",
        "line": 739,
        "type": "attribute"
      },
      {
        "callee": "add_printer",
        "line": 744,
        "type": "attribute"
      },
      {
        "callee": "disconnect",
        "line": 751,
        "type": "attribute"
      },
      {
        "callee": "get_printer",
        "line": 753,
        "type": "attribute"
      },
      {
        "callee": "_create_printer_instance",
        "line": 755,
        "type": "attribute"
      },
      {
        "callee": "get_printer",
        "line": 760,
        "type": "attribute"
      },
      {
        "callee": "Printer",
        "line": 762,
        "type": "direct"
      }
    ],
    "src\\services\\printer_service.py:PrinterService.delete_printer": [
      {
        "callee": "str",
        "line": 777,
        "type": "direct"
      },
      {
        "callee": "disconnect",
        "line": 783,
        "type": "attribute"
      },
      {
        "callee": "remove_printer",
        "line": 787,
        "type": "attribute"
      }
    ],
    "src\\services\\printer_service.py:PrinterService.pause_printer": [
      {
        "callee": "get",
        "line": 791,
        "type": "attribute"
      },
      {
        "callee": "NotFoundError",
        "line": 793,
        "type": "direct"
      },
      {
        "callee": "connect",
        "line": 797,
        "type": "attribute"
      },
      {
        "callee": "pause_print",
        "line": 798,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 800,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 800,
        "type": "direct"
      },
      {
        "callee": "PrinterConnectionError",
        "line": 801,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 801,
        "type": "direct"
      }
    ],
    "src\\services\\printer_service.py:PrinterService.resume_printer": [
      {
        "callee": "get",
        "line": 805,
        "type": "attribute"
      },
      {
        "callee": "NotFoundError",
        "line": 807,
        "type": "direct"
      },
      {
        "callee": "connect",
        "line": 811,
        "type": "attribute"
      },
      {
        "callee": "resume_print",
        "line": 812,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 814,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 814,
        "type": "direct"
      },
      {
        "callee": "PrinterConnectionError",
        "line": 815,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 815,
        "type": "direct"
      }
    ],
    "src\\services\\printer_service.py:PrinterService.stop_printer": [
      {
        "callee": "get",
        "line": 819,
        "type": "attribute"
      },
      {
        "callee": "NotFoundError",
        "line": 821,
        "type": "direct"
      },
      {
        "callee": "connect",
        "line": 825,
        "type": "attribute"
      },
      {
        "callee": "stop_print",
        "line": 826,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 828,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 828,
        "type": "direct"
      },
      {
        "callee": "PrinterConnectionError",
        "line": 829,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 829,
        "type": "direct"
      }
    ],
    "src\\services\\printer_service.py:PrinterService.start_printer_monitoring": [
      {
        "callee": "get",
        "line": 833,
        "type": "attribute"
      },
      {
        "callee": "NotFoundError",
        "line": 835,
        "type": "direct"
      },
      {
        "callee": "connect",
        "line": 839,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 843,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 846,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 846,
        "type": "direct"
      }
    ],
    "src\\services\\printer_service.py:PrinterService.stop_printer_monitoring": [
      {
        "callee": "get",
        "line": 851,
        "type": "attribute"
      },
      {
        "callee": "NotFoundError",
        "line": 853,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 858,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 861,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 861,
        "type": "direct"
      }
    ],
    "src\\services\\threemf_analyzer.py:ThreeMFAnalyzer.analyze_file": [
      {
        "callee": "ZipFile",
        "line": 43,
        "type": "attribute"
      },
      {
        "callee": "_analyze_model_geometry",
        "line": 45,
        "type": "attribute"
      },
      {
        "callee": "_analyze_print_settings",
        "line": 46,
        "type": "attribute"
      },
      {
        "callee": "_analyze_material_usage",
        "line": 47,
        "type": "attribute"
      },
      {
        "callee": "_analyze_compatibility",
        "line": 48,
        "type": "attribute"
      },
      {
        "callee": "_calculate_costs",
        "line": 51,
        "type": "attribute"
      },
      {
        "callee": "_assess_quality",
        "line": 52,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 55,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 56,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 57,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 60,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 60,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 63,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 63,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 66,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 67,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 68,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 69,
        "type": "direct"
      }
    ],
    "src\\services\\threemf_analyzer.py:ThreeMFAnalyzer._analyze_model_geometry": [
      {
        "callee": "namelist",
        "line": 79,
        "type": "attribute"
      },
      {
        "callee": "open",
        "line": 80,
        "type": "attribute"
      },
      {
        "callee": "loads",
        "line": 81,
        "type": "attribute"
      },
      {
        "callee": "decode",
        "line": 81,
        "type": "attribute"
      },
      {
        "callee": "read",
        "line": 81,
        "type": "attribute"
      },
      {
        "callee": "round",
        "line": 86,
        "type": "direct"
      },
      {
        "callee": "round",
        "line": 87,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 99,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 101,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 106,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 107,
        "type": "attribute"
      },
      {
        "callee": "round",
        "line": 109,
        "type": "direct"
      },
      {
        "callee": "debug",
        "line": 111,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 112,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 113,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 116,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 118,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 118,
        "type": "direct"
      }
    ],
    "src\\services\\threemf_analyzer.py:ThreeMFAnalyzer._analyze_print_settings": [
      {
        "callee": "namelist",
        "line": 128,
        "type": "attribute"
      },
      {
        "callee": "open",
        "line": 129,
        "type": "attribute"
      },
      {
        "callee": "loads",
        "line": 130,
        "type": "attribute"
      },
      {
        "callee": "decode",
        "line": 130,
        "type": "attribute"
      },
      {
        "callee": "read",
        "line": 130,
        "type": "attribute"
      },
      {
        "callee": "_safe_extract",
        "line": 133,
        "type": "attribute"
      },
      {
        "callee": "_safe_extract",
        "line": 134,
        "type": "attribute"
      },
      {
        "callee": "_safe_extract",
        "line": 135,
        "type": "attribute"
      },
      {
        "callee": "_safe_extract",
        "line": 136,
        "type": "attribute"
      },
      {
        "callee": "_safe_extract",
        "line": 137,
        "type": "attribute"
      },
      {
        "callee": "_safe_extract",
        "line": 138,
        "type": "attribute"
      },
      {
        "callee": "_safe_extract",
        "line": 141,
        "type": "attribute"
      },
      {
        "callee": "isinstance",
        "line": 142,
        "type": "direct"
      },
      {
        "callee": "float",
        "line": 143,
        "type": "direct"
      },
      {
        "callee": "rstrip",
        "line": 143,
        "type": "attribute"
      },
      {
        "callee": "float",
        "line": 145,
        "type": "direct"
      },
      {
        "callee": "_safe_extract",
        "line": 147,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 148,
        "type": "attribute"
      },
      {
        "callee": "_safe_extract",
        "line": 151,
        "type": "attribute"
      },
      {
        "callee": "_safe_extract",
        "line": 152,
        "type": "attribute"
      },
      {
        "callee": "_safe_extract",
        "line": 153,
        "type": "attribute"
      },
      {
        "callee": "_safe_extract",
        "line": 156,
        "type": "attribute"
      },
      {
        "callee": "_safe_extract",
        "line": 157,
        "type": "attribute"
      },
      {
        "callee": "_safe_extract",
        "line": 158,
        "type": "attribute"
      },
      {
        "callee": "round",
        "line": 162,
        "type": "direct"
      },
      {
        "callee": "debug",
        "line": 166,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 167,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 168,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 171,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 173,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 173,
        "type": "direct"
      }
    ],
    "src\\services\\threemf_analyzer.py:ThreeMFAnalyzer._analyze_material_usage": [
      {
        "callee": "namelist",
        "line": 183,
        "type": "attribute"
      },
      {
        "callee": "open",
        "line": 184,
        "type": "attribute"
      },
      {
        "callee": "decode",
        "line": 185,
        "type": "attribute"
      },
      {
        "callee": "read",
        "line": 185,
        "type": "attribute"
      },
      {
        "callee": "fromstring",
        "line": 188,
        "type": "attribute"
      },
      {
        "callee": "find",
        "line": 189,
        "type": "attribute"
      },
      {
        "callee": "find",
        "line": 193,
        "type": "attribute"
      },
      {
        "callee": "float",
        "line": 195,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 195,
        "type": "attribute"
      },
      {
        "callee": "find",
        "line": 197,
        "type": "attribute"
      },
      {
        "callee": "int",
        "line": 199,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 199,
        "type": "attribute"
      },
      {
        "callee": "find",
        "line": 201,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 203,
        "type": "attribute"
      },
      {
        "callee": "find",
        "line": 206,
        "type": "attribute"
      },
      {
        "callee": "split",
        "line": 208,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 208,
        "type": "attribute"
      },
      {
        "callee": "int",
        "line": 210,
        "type": "direct"
      },
      {
        "callee": "isdigit",
        "line": 210,
        "type": "attribute"
      },
      {
        "callee": "namelist",
        "line": 214,
        "type": "attribute"
      },
      {
        "callee": "open",
        "line": 215,
        "type": "attribute"
      },
      {
        "callee": "loads",
        "line": 216,
        "type": "attribute"
      },
      {
        "callee": "decode",
        "line": 216,
        "type": "attribute"
      },
      {
        "callee": "read",
        "line": 216,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 218,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 219,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 221,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 222,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 223,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 223,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 226,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 226,
        "type": "direct"
      }
    ],
    "src\\services\\threemf_analyzer.py:ThreeMFAnalyzer._analyze_compatibility": [
      {
        "callee": "namelist",
        "line": 236,
        "type": "attribute"
      },
      {
        "callee": "open",
        "line": 237,
        "type": "attribute"
      },
      {
        "callee": "loads",
        "line": 238,
        "type": "attribute"
      },
      {
        "callee": "decode",
        "line": 238,
        "type": "attribute"
      },
      {
        "callee": "read",
        "line": 238,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 241,
        "type": "attribute"
      },
      {
        "callee": "isinstance",
        "line": 242,
        "type": "direct"
      },
      {
        "callee": "isinstance",
        "line": 244,
        "type": "direct"
      },
      {
        "callee": "strip",
        "line": 246,
        "type": "attribute"
      },
      {
        "callee": "split",
        "line": 246,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 250,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 256,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 257,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 257,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 260,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 260,
        "type": "direct"
      }
    ],
    "src\\services\\threemf_analyzer.py:ThreeMFAnalyzer._calculate_costs": [
      {
        "callee": "get",
        "line": 276,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 276,
        "type": "attribute"
      },
      {
        "callee": "round",
        "line": 280,
        "type": "direct"
      },
      {
        "callee": "round",
        "line": 281,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 284,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 284,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 285,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 285,
        "type": "attribute"
      },
      {
        "callee": "round",
        "line": 298,
        "type": "direct"
      },
      {
        "callee": "round",
        "line": 301,
        "type": "direct"
      },
      {
        "callee": "round",
        "line": 307,
        "type": "direct"
      },
      {
        "callee": "debug",
        "line": 311,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 317,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 317,
        "type": "direct"
      }
    ],
    "src\\services\\threemf_analyzer.py:ThreeMFAnalyzer._assess_quality": [
      {
        "callee": "get",
        "line": 330,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 331,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 337,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 346,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 346,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 350,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 350,
        "type": "attribute"
      },
      {
        "callee": "any",
        "line": 351,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 355,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 359,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 360,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 361,
        "type": "direct"
      },
      {
        "callee": "max",
        "line": 364,
        "type": "direct"
      },
      {
        "callee": "min",
        "line": 364,
        "type": "direct"
      },
      {
        "callee": "round",
        "line": 378,
        "type": "direct"
      },
      {
        "callee": "max",
        "line": 379,
        "type": "direct"
      },
      {
        "callee": "debug",
        "line": 382,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 388,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 388,
        "type": "direct"
      }
    ],
    "src\\services\\threemf_analyzer.py:ThreeMFAnalyzer._safe_extract": [
      {
        "callee": "get",
        "line": 394,
        "type": "attribute"
      },
      {
        "callee": "isinstance",
        "line": 397,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 397,
        "type": "direct"
      },
      {
        "callee": "isinstance",
        "line": 403,
        "type": "direct"
      },
      {
        "callee": "int",
        "line": 403,
        "type": "direct"
      },
      {
        "callee": "float",
        "line": 403,
        "type": "direct"
      },
      {
        "callee": "int",
        "line": 403,
        "type": "direct"
      },
      {
        "callee": "isinstance",
        "line": 408,
        "type": "direct"
      },
      {
        "callee": "float",
        "line": 410,
        "type": "direct"
      }
    ],
    "src\\services\\thumbnail_service.py:ThumbnailService.__init__": [
      {
        "callee": "Path",
        "line": 31,
        "type": "direct"
      },
      {
        "callee": "mkdir",
        "line": 32,
        "type": "attribute"
      },
      {
        "callee": "timedelta",
        "line": 35,
        "type": "direct"
      }
    ],
    "src\\services\\thumbnail_service.py:ThumbnailService._get_session": [
      {
        "callee": "ClientTimeout",
        "line": 43,
        "type": "attribute"
      },
      {
        "callee": "ClientSession",
        "line": 44,
        "type": "attribute"
      }
    ],
    "src\\services\\thumbnail_service.py:ThumbnailService._get_cache_path": [
      {
        "callee": "hexdigest",
        "line": 50,
        "type": "attribute"
      },
      {
        "callee": "md5",
        "line": 50,
        "type": "attribute"
      },
      {
        "callee": "encode",
        "line": 50,
        "type": "attribute"
      },
      {
        "callee": "urlparse",
        "line": 53,
        "type": "direct"
      },
      {
        "callee": "split",
        "line": 54,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 55,
        "type": "direct"
      },
      {
        "callee": "lower",
        "line": 55,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 56,
        "type": "attribute"
      },
      {
        "callee": "mkdir",
        "line": 62,
        "type": "attribute"
      }
    ],
    "src\\services\\thumbnail_service.py:ThumbnailService.download_thumbnail": [
      {
        "callee": "_get_cache_path",
        "line": 70,
        "type": "attribute"
      },
      {
        "callee": "exists",
        "line": 73,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 75,
        "type": "attribute"
      },
      {
        "callee": "fromtimestamp",
        "line": 75,
        "type": "attribute"
      },
      {
        "callee": "stat",
        "line": 75,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 77,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 78,
        "type": "direct"
      },
      {
        "callee": "_get_session",
        "line": 81,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 82,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 84,
        "type": "attribute"
      },
      {
        "callee": "startswith",
        "line": 86,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 87,
        "type": "attribute"
      },
      {
        "callee": "read",
        "line": 91,
        "type": "attribute"
      },
      {
        "callee": "_process_and_save_image",
        "line": 94,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 99,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 100,
        "type": "direct"
      },
      {
        "callee": "warning",
        "line": 103,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 106,
        "type": "attribute"
      }
    ],
    "src\\services\\thumbnail_service.py:ThumbnailService._process_and_save_image": [
      {
        "callee": "with_suffix",
        "line": 115,
        "type": "attribute"
      },
      {
        "callee": "open",
        "line": 118,
        "type": "attribute"
      },
      {
        "callee": "write",
        "line": 119,
        "type": "attribute"
      },
      {
        "callee": "open",
        "line": 122,
        "type": "attribute"
      },
      {
        "callee": "new",
        "line": 126,
        "type": "attribute"
      },
      {
        "callee": "paste",
        "line": 128,
        "type": "attribute"
      },
      {
        "callee": "split",
        "line": 128,
        "type": "attribute"
      },
      {
        "callee": "paste",
        "line": 130,
        "type": "attribute"
      },
      {
        "callee": "thumbnail",
        "line": 135,
        "type": "attribute"
      },
      {
        "callee": "with_suffix",
        "line": 138,
        "type": "attribute"
      },
      {
        "callee": "save",
        "line": 139,
        "type": "attribute"
      },
      {
        "callee": "unlink",
        "line": 142,
        "type": "attribute"
      },
      {
        "callee": "emit_event",
        "line": 145,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 147,
        "type": "direct"
      },
      {
        "callee": "stat",
        "line": 149,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 155,
        "type": "attribute"
      },
      {
        "callee": "locals",
        "line": 157,
        "type": "direct"
      },
      {
        "callee": "unlink",
        "line": 158,
        "type": "attribute"
      }
    ],
    "src\\services\\thumbnail_service.py:ThumbnailService.get_thumbnail": [
      {
        "callee": "_get_cache_path",
        "line": 164,
        "type": "attribute"
      },
      {
        "callee": "exists",
        "line": 167,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 168,
        "type": "direct"
      },
      {
        "callee": "with_suffix",
        "line": 171,
        "type": "attribute"
      },
      {
        "callee": "exists",
        "line": 172,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 173,
        "type": "direct"
      },
      {
        "callee": "download_thumbnail",
        "line": 177,
        "type": "attribute"
      }
    ],
    "src\\services\\thumbnail_service.py:ThumbnailService.cache_multiple_thumbnails": [
      {
        "callee": "Semaphore",
        "line": 184,
        "type": "attribute"
      },
      {
        "callee": "download_single",
        "line": 195,
        "type": "direct"
      },
      {
        "callee": "gather",
        "line": 198,
        "type": "attribute"
      },
      {
        "callee": "isinstance",
        "line": 202,
        "type": "direct"
      },
      {
        "callee": "warning",
        "line": 203,
        "type": "attribute"
      }
    ],
    "src\\services\\thumbnail_service.py:ThumbnailService.download_single": [
      {
        "callee": "get",
        "line": 190,
        "type": "attribute"
      },
      {
        "callee": "download_thumbnail",
        "line": 191,
        "type": "attribute"
      }
    ],
    "src\\services\\thumbnail_service.py:ThumbnailService.cleanup_expired": [
      {
        "callee": "now",
        "line": 213,
        "type": "attribute"
      },
      {
        "callee": "rglob",
        "line": 216,
        "type": "attribute"
      },
      {
        "callee": "is_file",
        "line": 217,
        "type": "attribute"
      },
      {
        "callee": "fromtimestamp",
        "line": 218,
        "type": "attribute"
      },
      {
        "callee": "stat",
        "line": 218,
        "type": "attribute"
      },
      {
        "callee": "unlink",
        "line": 221,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 224,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 226,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 229,
        "type": "attribute"
      }
    ],
    "src\\services\\thumbnail_service.py:ThumbnailService.get_cache_statistics": [
      {
        "callee": "rglob",
        "line": 248,
        "type": "attribute"
      },
      {
        "callee": "is_file",
        "line": 249,
        "type": "attribute"
      },
      {
        "callee": "stat",
        "line": 253,
        "type": "attribute"
      },
      {
        "callee": "fromtimestamp",
        "line": 267,
        "type": "attribute"
      },
      {
        "callee": "stat",
        "line": 267,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 270,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 273,
        "type": "direct"
      },
      {
        "callee": "round",
        "line": 278,
        "type": "direct"
      },
      {
        "callee": "values",
        "line": 279,
        "type": "attribute"
      },
      {
        "callee": "round",
        "line": 280,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 283,
        "type": "attribute"
      }
    ],
    "src\\services\\thumbnail_service.py:ThumbnailService.clear_cache": [
      {
        "callee": "exists",
        "line": 295,
        "type": "attribute"
      },
      {
        "callee": "iterdir",
        "line": 296,
        "type": "attribute"
      },
      {
        "callee": "is_file",
        "line": 297,
        "type": "attribute"
      },
      {
        "callee": "unlink",
        "line": 298,
        "type": "attribute"
      },
      {
        "callee": "rglob",
        "line": 302,
        "type": "attribute"
      },
      {
        "callee": "is_file",
        "line": 303,
        "type": "attribute"
      },
      {
        "callee": "unlink",
        "line": 304,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 307,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 311,
        "type": "attribute"
      }
    ],
    "src\\services\\thumbnail_service.py:ThumbnailService.cleanup": [
      {
        "callee": "close",
        "line": 318,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 321,
        "type": "attribute"
      }
    ],
    "src\\services\\trending_service.py:TrendingService.__init__": [
      {
        "callee": "Path",
        "line": 39,
        "type": "direct"
      },
      {
        "callee": "mkdir",
        "line": 40,
        "type": "attribute"
      }
    ],
    "src\\services\\trending_service.py:TrendingService.initialize": [
      {
        "callee": "_create_tables",
        "line": 58,
        "type": "attribute"
      },
      {
        "callee": "_start_refresh_task",
        "line": 59,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 60,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 62,
        "type": "attribute"
      }
    ],
    "src\\services\\trending_service.py:TrendingService._create_tables": [
      {
        "callee": "connection",
        "line": 67,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 68,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 89,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 90,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 91,
        "type": "attribute"
      },
      {
        "callee": "commit",
        "line": 93,
        "type": "attribute"
      }
    ],
    "src\\services\\trending_service.py:TrendingService._retry_with_backoff": [
      {
        "callee": "range",
        "line": 99,
        "type": "direct"
      },
      {
        "callee": "func",
        "line": 101,
        "type": "direct"
      },
      {
        "callee": "lower",
        "line": 105,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 105,
        "type": "direct"
      },
      {
        "callee": "warning",
        "line": 106,
        "type": "attribute"
      },
      {
        "callee": "_close_session",
        "line": 109,
        "type": "attribute"
      },
      {
        "callee": "min",
        "line": 111,
        "type": "direct"
      },
      {
        "callee": "warning",
        "line": 112,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 117,
        "type": "direct"
      },
      {
        "callee": "sleep",
        "line": 119,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 121,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 122,
        "type": "direct"
      },
      {
        "callee": "lower",
        "line": 125,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 125,
        "type": "direct"
      },
      {
        "callee": "any",
        "line": 127,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 128,
        "type": "attribute"
      },
      {
        "callee": "_close_session",
        "line": 130,
        "type": "attribute"
      },
      {
        "callee": "min",
        "line": 133,
        "type": "direct"
      },
      {
        "callee": "warning",
        "line": 134,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 138,
        "type": "direct"
      },
      {
        "callee": "sleep",
        "line": 140,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 142,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 142,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 145,
        "type": "attribute"
      }
    ],
    "src\\services\\trending_service.py:TrendingService._get_session": [
      {
        "callee": "ClientTimeout",
        "line": 163,
        "type": "attribute"
      },
      {
        "callee": "TCPConnector",
        "line": 166,
        "type": "attribute"
      },
      {
        "callee": "ClientSession",
        "line": 174,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 181,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 183,
        "type": "attribute"
      }
    ],
    "src\\services\\trending_service.py:TrendingService._close_session": [
      {
        "callee": "close",
        "line": 191,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 192,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 194,
        "type": "attribute"
      }
    ],
    "src\\services\\trending_service.py:TrendingService._start_refresh_task": [
      {
        "callee": "create_task",
        "line": 200,
        "type": "attribute"
      },
      {
        "callee": "_refresh_loop",
        "line": 200,
        "type": "attribute"
      }
    ],
    "src\\services\\trending_service.py:TrendingService._refresh_loop": [
      {
        "callee": "_needs_refresh",
        "line": 207,
        "type": "attribute"
      },
      {
        "callee": "refresh_all_platforms",
        "line": 208,
        "type": "attribute"
      },
      {
        "callee": "sleep",
        "line": 211,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 216,
        "type": "attribute"
      },
      {
        "callee": "sleep",
        "line": 217,
        "type": "attribute"
      }
    ],
    "src\\services\\trending_service.py:TrendingService._needs_refresh": [
      {
        "callee": "connection",
        "line": 221,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 222,
        "type": "attribute"
      },
      {
        "callee": "fetchone",
        "line": 227,
        "type": "attribute"
      },
      {
        "callee": "fromisoformat",
        "line": 233,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 234,
        "type": "attribute"
      }
    ],
    "src\\services\\trending_service.py:TrendingService._fetch": [
      {
        "callee": "_get_session",
        "line": 244,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 247,
        "type": "attribute"
      },
      {
        "callee": "raise_for_status",
        "line": 248,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 251,
        "type": "attribute"
      },
      {
        "callee": "int",
        "line": 252,
        "type": "direct"
      },
      {
        "callee": "warning",
        "line": 253,
        "type": "attribute"
      },
      {
        "callee": "iter_chunked",
        "line": 260,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 261,
        "type": "direct"
      },
      {
        "callee": "ClientPayloadError",
        "line": 263,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 264,
        "type": "attribute"
      },
      {
        "callee": "join",
        "line": 267,
        "type": "attribute"
      },
      {
        "callee": "get_encoding",
        "line": 268,
        "type": "attribute"
      },
      {
        "callee": "decode",
        "line": 270,
        "type": "attribute"
      },
      {
        "callee": "decode",
        "line": 273,
        "type": "attribute"
      }
    ],
    "src\\services\\trending_service.py:TrendingService._fetch_url": [
      {
        "callee": "_retry_with_backoff",
        "line": 276,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 278,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 278,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 282,
        "type": "direct"
      }
    ],
    "src\\services\\trending_service.py:TrendingService.fetch_makerworld_trending": [
      {
        "callee": "_fetch_url",
        "line": 293,
        "type": "attribute"
      },
      {
        "callee": "BeautifulSoup",
        "line": 294,
        "type": "direct"
      },
      {
        "callee": "find_all",
        "line": 297,
        "type": "attribute"
      },
      {
        "callee": "find",
        "line": 302,
        "type": "attribute"
      },
      {
        "callee": "find",
        "line": 303,
        "type": "attribute"
      },
      {
        "callee": "find",
        "line": 304,
        "type": "attribute"
      },
      {
        "callee": "find",
        "line": 305,
        "type": "attribute"
      },
      {
        "callee": "_extract_id_from_url",
        "line": 309,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 311,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 313,
        "type": "direct"
      },
      {
        "callee": "uuid4",
        "line": 313,
        "type": "direct"
      },
      {
        "callee": "strip",
        "line": 314,
        "type": "attribute"
      },
      {
        "callee": "strip",
        "line": 316,
        "type": "attribute"
      },
      {
        "callee": "_parse_count",
        "line": 317,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 321,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 323,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 323,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 326,
        "type": "attribute"
      }
    ],
    "src\\services\\trending_service.py:TrendingService.fetch_printables_trending": [
      {
        "callee": "_fetch_url",
        "line": 338,
        "type": "attribute"
      },
      {
        "callee": "BeautifulSoup",
        "line": 339,
        "type": "direct"
      },
      {
        "callee": "find_all",
        "line": 342,
        "type": "attribute"
      },
      {
        "callee": "find",
        "line": 346,
        "type": "attribute"
      },
      {
        "callee": "find",
        "line": 347,
        "type": "attribute"
      },
      {
        "callee": "find",
        "line": 348,
        "type": "attribute"
      },
      {
        "callee": "find",
        "line": 349,
        "type": "attribute"
      },
      {
        "callee": "find",
        "line": 350,
        "type": "attribute"
      },
      {
        "callee": "_extract_id_from_url",
        "line": 354,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 356,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 358,
        "type": "direct"
      },
      {
        "callee": "uuid4",
        "line": 358,
        "type": "direct"
      },
      {
        "callee": "strip",
        "line": 359,
        "type": "attribute"
      },
      {
        "callee": "strip",
        "line": 361,
        "type": "attribute"
      },
      {
        "callee": "_parse_count",
        "line": 362,
        "type": "attribute"
      },
      {
        "callee": "_parse_count",
        "line": 363,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 367,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 369,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 369,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 372,
        "type": "attribute"
      }
    ],
    "src\\services\\trending_service.py:TrendingService._extract_id_from_url": [
      {
        "callee": "search",
        "line": 381,
        "type": "attribute"
      },
      {
        "callee": "group",
        "line": 382,
        "type": "attribute"
      },
      {
        "callee": "search",
        "line": 384,
        "type": "attribute"
      },
      {
        "callee": "group",
        "line": 385,
        "type": "attribute"
      }
    ],
    "src\\services\\trending_service.py:TrendingService._parse_count": [
      {
        "callee": "upper",
        "line": 394,
        "type": "attribute"
      },
      {
        "callee": "strip",
        "line": 394,
        "type": "attribute"
      },
      {
        "callee": "int",
        "line": 398,
        "type": "direct"
      },
      {
        "callee": "float",
        "line": 398,
        "type": "direct"
      },
      {
        "callee": "replace",
        "line": 398,
        "type": "attribute"
      },
      {
        "callee": "int",
        "line": 400,
        "type": "direct"
      },
      {
        "callee": "float",
        "line": 400,
        "type": "direct"
      },
      {
        "callee": "replace",
        "line": 400,
        "type": "attribute"
      },
      {
        "callee": "findall",
        "line": 404,
        "type": "attribute"
      },
      {
        "callee": "int",
        "line": 405,
        "type": "direct"
      }
    ],
    "src\\services\\trending_service.py:TrendingService.save_trending_items": [
      {
        "callee": "now",
        "line": 411,
        "type": "attribute"
      },
      {
        "callee": "timedelta",
        "line": 411,
        "type": "direct"
      },
      {
        "callee": "connection",
        "line": 413,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 416,
        "type": "direct"
      },
      {
        "callee": "uuid4",
        "line": 416,
        "type": "direct"
      },
      {
        "callee": "execute",
        "line": 419,
        "type": "attribute"
      },
      {
        "callee": "fetchone",
        "line": 424,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 428,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 436,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 436,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 437,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 437,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 438,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 438,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 438,
        "type": "attribute"
      },
      {
        "callee": "dumps",
        "line": 439,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 439,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 444,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 453,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 454,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 455,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 455,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 456,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 456,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 457,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 457,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 457,
        "type": "attribute"
      },
      {
        "callee": "dumps",
        "line": 458,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 458,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 462,
        "type": "attribute"
      },
      {
        "callee": "commit",
        "line": 464,
        "type": "attribute"
      }
    ],
    "src\\services\\trending_service.py:TrendingService.get_trending": [
      {
        "callee": "append",
        "line": 479,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 483,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 486,
        "type": "attribute"
      },
      {
        "callee": "connection",
        "line": 488,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 489,
        "type": "attribute"
      },
      {
        "callee": "fetchall",
        "line": 490,
        "type": "attribute"
      },
      {
        "callee": "dict",
        "line": 492,
        "type": "direct"
      }
    ],
    "src\\services\\trending_service.py:TrendingService.refresh_all_platforms": [
      {
        "callee": "info",
        "line": 496,
        "type": "attribute"
      },
      {
        "callee": "fetch_makerworld_trending",
        "line": 500,
        "type": "attribute"
      },
      {
        "callee": "fetch_printables_trending",
        "line": 501,
        "type": "attribute"
      },
      {
        "callee": "save_trending_items",
        "line": 505,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 506,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 506,
        "type": "direct"
      },
      {
        "callee": "save_trending_items",
        "line": 509,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 510,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 510,
        "type": "direct"
      },
      {
        "callee": "cleanup_expired",
        "line": 513,
        "type": "attribute"
      },
      {
        "callee": "emit_event",
        "line": 516,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 518,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 518,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 522,
        "type": "attribute"
      }
    ],
    "src\\services\\trending_service.py:TrendingService.cleanup_expired": [
      {
        "callee": "connection",
        "line": 526,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 528,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 534,
        "type": "attribute"
      },
      {
        "callee": "fetchall",
        "line": 535,
        "type": "attribute"
      },
      {
        "callee": "glob",
        "line": 539,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 540,
        "type": "direct"
      },
      {
        "callee": "unlink",
        "line": 542,
        "type": "attribute"
      },
      {
        "callee": "commit",
        "line": 546,
        "type": "attribute"
      }
    ],
    "src\\services\\trending_service.py:TrendingService.save_as_idea": [
      {
        "callee": "connection",
        "line": 550,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 552,
        "type": "attribute"
      },
      {
        "callee": "fetchone",
        "line": 556,
        "type": "attribute"
      },
      {
        "callee": "ValueError",
        "line": 558,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 561,
        "type": "direct"
      },
      {
        "callee": "uuid4",
        "line": 561,
        "type": "direct"
      },
      {
        "callee": "execute",
        "line": 563,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 574,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 574,
        "type": "attribute"
      },
      {
        "callee": "dumps",
        "line": 575,
        "type": "attribute"
      },
      {
        "callee": "commit",
        "line": 584,
        "type": "attribute"
      },
      {
        "callee": "emit_event",
        "line": 587,
        "type": "attribute"
      }
    ],
    "src\\services\\trending_service.py:TrendingService.get_statistics": [
      {
        "callee": "connection",
        "line": 597,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 599,
        "type": "attribute"
      },
      {
        "callee": "fetchone",
        "line": 600,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 603,
        "type": "attribute"
      },
      {
        "callee": "fetchone",
        "line": 607,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 610,
        "type": "attribute"
      },
      {
        "callee": "fetchall",
        "line": 616,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 619,
        "type": "attribute"
      },
      {
        "callee": "fetchall",
        "line": 625,
        "type": "attribute"
      }
    ],
    "src\\services\\trending_service.py:TrendingService.cleanup": [
      {
        "callee": "cancel",
        "line": 655,
        "type": "attribute"
      },
      {
        "callee": "close",
        "line": 658,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 660,
        "type": "attribute"
      }
    ],
    "src\\services\\url_parser_service.py:UrlParserService._get_session": [
      {
        "callee": "ClientTimeout",
        "line": 28,
        "type": "attribute"
      },
      {
        "callee": "ClientSession",
        "line": 29,
        "type": "attribute"
      }
    ],
    "src\\services\\url_parser_service.py:UrlParserService.close": [
      {
        "callee": "close",
        "line": 35,
        "type": "attribute"
      }
    ],
    "src\\services\\url_parser_service.py:UrlParserService.detect_platform": [
      {
        "callee": "lower",
        "line": 40,
        "type": "attribute"
      }
    ],
    "src\\services\\url_parser_service.py:UrlParserService.extract_model_id": [
      {
        "callee": "search",
        "line": 60,
        "type": "attribute"
      },
      {
        "callee": "group",
        "line": 61,
        "type": "attribute"
      },
      {
        "callee": "search",
        "line": 65,
        "type": "attribute"
      },
      {
        "callee": "group",
        "line": 66,
        "type": "attribute"
      },
      {
        "callee": "search",
        "line": 70,
        "type": "attribute"
      },
      {
        "callee": "group",
        "line": 71,
        "type": "attribute"
      },
      {
        "callee": "search",
        "line": 75,
        "type": "attribute"
      },
      {
        "callee": "group",
        "line": 76,
        "type": "attribute"
      },
      {
        "callee": "urlparse",
        "line": 81,
        "type": "attribute"
      },
      {
        "callee": "split",
        "line": 82,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 85,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 85,
        "type": "direct"
      }
    ],
    "src\\services\\url_parser_service.py:UrlParserService.fetch_page_title": [
      {
        "callee": "_get_session",
        "line": 92,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 93,
        "type": "attribute"
      },
      {
        "callee": "text",
        "line": 95,
        "type": "attribute"
      },
      {
        "callee": "BeautifulSoup",
        "line": 96,
        "type": "direct"
      },
      {
        "callee": "find",
        "line": 98,
        "type": "attribute"
      },
      {
        "callee": "strip",
        "line": 100,
        "type": "attribute"
      },
      {
        "callee": "get_text",
        "line": 100,
        "type": "attribute"
      },
      {
        "callee": "_clean_title",
        "line": 102,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 106,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 106,
        "type": "direct"
      }
    ],
    "src\\services\\url_parser_service.py:UrlParserService._clean_title": [
      {
        "callee": "sub",
        "line": 125,
        "type": "attribute"
      },
      {
        "callee": "strip",
        "line": 127,
        "type": "attribute"
      }
    ],
    "src\\services\\url_parser_service.py:UrlParserService.extract_creator_from_title": [
      {
        "callee": "search",
        "line": 134,
        "type": "attribute"
      },
      {
        "callee": "strip",
        "line": 135,
        "type": "attribute"
      },
      {
        "callee": "group",
        "line": 135,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 140,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 140,
        "type": "direct"
      }
    ],
    "src\\services\\url_parser_service.py:UrlParserService.parse_url": [
      {
        "callee": "urlparse",
        "line": 148,
        "type": "attribute"
      },
      {
        "callee": "ValueError",
        "line": 150,
        "type": "direct"
      },
      {
        "callee": "detect_platform",
        "line": 153,
        "type": "attribute"
      },
      {
        "callee": "extract_model_id",
        "line": 159,
        "type": "attribute"
      },
      {
        "callee": "fetch_page_title",
        "line": 162,
        "type": "attribute"
      },
      {
        "callee": "_clean_title",
        "line": 168,
        "type": "attribute"
      },
      {
        "callee": "extract_creator_from_title",
        "line": 169,
        "type": "attribute"
      },
      {
        "callee": "title",
        "line": 176,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 179,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 179,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 183,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 187,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 187,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 194,
        "type": "direct"
      },
      {
        "callee": "isoformat",
        "line": 195,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 195,
        "type": "attribute"
      }
    ],
    "src\\services\\url_parser_service.py:UrlParserService.get_platform_info": [
      {
        "callee": "get",
        "line": 238,
        "type": "attribute"
      },
      {
        "callee": "title",
        "line": 239,
        "type": "attribute"
      }
    ],
    "src\\services\\url_parser_service.py:UrlParserService.validate_url": [
      {
        "callee": "urlparse",
        "line": 246,
        "type": "attribute"
      },
      {
        "callee": "detect_platform",
        "line": 250,
        "type": "attribute"
      }
    ],
    "src\\services\\watch_folder_db_service.py:WatchFolderDbService.create_watch_folder": [
      {
        "callee": "RuntimeError",
        "line": 29,
        "type": "direct"
      },
      {
        "callee": "get_connection",
        "line": 31,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 32,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 45,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 48,
        "type": "attribute"
      },
      {
        "callee": "commit",
        "line": 53,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 55,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 60,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 61,
        "type": "direct"
      },
      {
        "callee": "ValueError",
        "line": 62,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 64,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 65,
        "type": "direct"
      }
    ],
    "src\\services\\watch_folder_db_service.py:WatchFolderDbService.get_watch_folder_by_id": [
      {
        "callee": "RuntimeError",
        "line": 72,
        "type": "direct"
      },
      {
        "callee": "get_connection",
        "line": 74,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 75,
        "type": "attribute"
      },
      {
        "callee": "fetchone",
        "line": 76,
        "type": "attribute"
      },
      {
        "callee": "from_db_row",
        "line": 79,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 83,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 83,
        "type": "direct"
      }
    ],
    "src\\services\\watch_folder_db_service.py:WatchFolderDbService.get_watch_folder_by_path": [
      {
        "callee": "RuntimeError",
        "line": 90,
        "type": "direct"
      },
      {
        "callee": "get_connection",
        "line": 92,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 93,
        "type": "attribute"
      },
      {
        "callee": "fetchone",
        "line": 94,
        "type": "attribute"
      },
      {
        "callee": "from_db_row",
        "line": 97,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 101,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 101,
        "type": "direct"
      }
    ],
    "src\\services\\watch_folder_db_service.py:WatchFolderDbService.get_all_watch_folders": [
      {
        "callee": "RuntimeError",
        "line": 108,
        "type": "direct"
      },
      {
        "callee": "get_connection",
        "line": 110,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 117,
        "type": "attribute"
      },
      {
        "callee": "fetchall",
        "line": 118,
        "type": "attribute"
      },
      {
        "callee": "from_db_row",
        "line": 119,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 122,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 122,
        "type": "direct"
      }
    ],
    "src\\services\\watch_folder_db_service.py:WatchFolderDbService.update_watch_folder": [
      {
        "callee": "RuntimeError",
        "line": 129,
        "type": "direct"
      },
      {
        "callee": "items",
        "line": 138,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 140,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 141,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 143,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 144,
        "type": "attribute"
      },
      {
        "callee": "bool",
        "line": 144,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 146,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 147,
        "type": "attribute"
      },
      {
        "callee": "int",
        "line": 147,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 149,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 150,
        "type": "attribute"
      },
      {
        "callee": "isinstance",
        "line": 150,
        "type": "direct"
      },
      {
        "callee": "isoformat",
        "line": 150,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 155,
        "type": "attribute"
      },
      {
        "callee": "get_connection",
        "line": 157,
        "type": "attribute"
      },
      {
        "callee": "join",
        "line": 158,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 159,
        "type": "attribute"
      },
      {
        "callee": "commit",
        "line": 162,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 165,
        "type": "attribute"
      },
      {
        "callee": "list",
        "line": 165,
        "type": "direct"
      },
      {
        "callee": "keys",
        "line": 165,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 170,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 170,
        "type": "direct"
      }
    ],
    "src\\services\\watch_folder_db_service.py:WatchFolderDbService.delete_watch_folder": [
      {
        "callee": "RuntimeError",
        "line": 177,
        "type": "direct"
      },
      {
        "callee": "get_connection",
        "line": 179,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 180,
        "type": "attribute"
      },
      {
        "callee": "commit",
        "line": 183,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 186,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 191,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 191,
        "type": "direct"
      }
    ],
    "src\\services\\watch_folder_db_service.py:WatchFolderDbService.delete_watch_folder_by_path": [
      {
        "callee": "RuntimeError",
        "line": 198,
        "type": "direct"
      },
      {
        "callee": "get_connection",
        "line": 200,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 201,
        "type": "attribute"
      },
      {
        "callee": "commit",
        "line": 204,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 207,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 212,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 212,
        "type": "direct"
      }
    ],
    "src\\services\\watch_folder_db_service.py:WatchFolderDbService.get_active_folder_paths": [
      {
        "callee": "RuntimeError",
        "line": 219,
        "type": "direct"
      },
      {
        "callee": "get_connection",
        "line": 221,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 222,
        "type": "attribute"
      },
      {
        "callee": "fetchall",
        "line": 223,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 227,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 227,
        "type": "direct"
      }
    ],
    "src\\services\\watch_folder_db_service.py:WatchFolderDbService.update_folder_statistics": [
      {
        "callee": "RuntimeError",
        "line": 234,
        "type": "direct"
      },
      {
        "callee": "now",
        "line": 236,
        "type": "attribute"
      },
      {
        "callee": "get_connection",
        "line": 237,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 238,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 242,
        "type": "attribute"
      },
      {
        "callee": "commit",
        "line": 245,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 249,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 250,
        "type": "direct"
      }
    ],
    "src\\services\\watch_folder_db_service.py:WatchFolderDbService.validate_and_update_folder": [
      {
        "callee": "RuntimeError",
        "line": 258,
        "type": "direct"
      },
      {
        "callee": "now",
        "line": 260,
        "type": "attribute"
      },
      {
        "callee": "get_connection",
        "line": 261,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 262,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 266,
        "type": "attribute"
      },
      {
        "callee": "commit",
        "line": 269,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 273,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 274,
        "type": "direct"
      }
    ],
    "src\\services\\watch_folder_db_service.py:WatchFolderDbService.migrate_env_folders": [
      {
        "callee": "get_watch_folder_by_path",
        "line": 284,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 286,
        "type": "attribute"
      },
      {
        "callee": "WatchFolder",
        "line": 290,
        "type": "direct"
      },
      {
        "callee": "Path",
        "line": 293,
        "type": "direct"
      },
      {
        "callee": "create_watch_folder",
        "line": 297,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 299,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 304,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 308,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 308,
        "type": "direct"
      }
    ],
    "src\\utils\\config.py:PrinternizerSettings.validate_secret_key": [
      {
        "callee": "token_urlsafe",
        "line": 94,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 95,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 96,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 100,
        "type": "direct"
      },
      {
        "callee": "ValueError",
        "line": 101,
        "type": "direct"
      },
      {
        "callee": "validator",
        "line": 89,
        "type": "direct"
      }
    ],
    "src\\utils\\config.py:PrinternizerSettings.validate_library_path": [
      {
        "callee": "Path",
        "line": 111,
        "type": "direct"
      },
      {
        "callee": "is_absolute",
        "line": 114,
        "type": "attribute"
      },
      {
        "callee": "warning",
        "line": 115,
        "type": "attribute"
      },
      {
        "callee": "absolute",
        "line": 117,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 119,
        "type": "direct"
      },
      {
        "callee": "absolute",
        "line": 119,
        "type": "attribute"
      },
      {
        "callee": "validator",
        "line": 104,
        "type": "direct"
      }
    ],
    "src\\utils\\config.py:PrinternizerSettings.cors_origins_list": [
      {
        "callee": "strip",
        "line": 128,
        "type": "attribute"
      },
      {
        "callee": "split",
        "line": 128,
        "type": "attribute"
      },
      {
        "callee": "strip",
        "line": 128,
        "type": "attribute"
      }
    ],
    "src\\utils\\config.py:PrinternizerSettings.watch_folders_list": [
      {
        "callee": "strip",
        "line": 135,
        "type": "attribute"
      },
      {
        "callee": "split",
        "line": 135,
        "type": "attribute"
      },
      {
        "callee": "strip",
        "line": 135,
        "type": "attribute"
      }
    ],
    "src\\utils\\config.py:PrinternizerSettings.is_homeassistant_addon": [
      {
        "callee": "exists",
        "line": 140,
        "type": "attribute"
      }
    ],
    "src\\utils\\config.py:get_settings": [
      {
        "callee": "PrinternizerSettings",
        "line": 161,
        "type": "direct"
      }
    ],
    "src\\utils\\config.py:reload_settings": [
      {
        "callee": "PrinternizerSettings",
        "line": 168,
        "type": "direct"
      }
    ],
    "src\\utils\\dependencies.py:get_job_service": [
      {
        "callee": "Depends",
        "line": 40,
        "type": "direct"
      },
      {
        "callee": "Depends",
        "line": 41,
        "type": "direct"
      },
      {
        "callee": "JobService",
        "line": 44,
        "type": "direct"
      }
    ],
    "src\\utils\\dependencies.py:get_analytics_service": [
      {
        "callee": "Depends",
        "line": 53,
        "type": "direct"
      },
      {
        "callee": "AnalyticsService",
        "line": 56,
        "type": "direct"
      }
    ],
    "src\\utils\\dependencies.py:get_idea_service": [
      {
        "callee": "Depends",
        "line": 60,
        "type": "direct"
      },
      {
        "callee": "IdeaService",
        "line": 63,
        "type": "direct"
      }
    ],
    "src\\utils\\error_handling.py:ErrorHandler.__init__": [
      {
        "callee": "Path",
        "line": 46,
        "type": "direct"
      },
      {
        "callee": "ensure_log_directory",
        "line": 47,
        "type": "attribute"
      }
    ],
    "src\\utils\\error_handling.py:ErrorHandler.ensure_log_directory": [
      {
        "callee": "mkdir",
        "line": 51,
        "type": "attribute"
      }
    ],
    "src\\utils\\error_handling.py:ErrorHandler.handle_error": [
      {
        "callee": "_generate_error_id",
        "line": 77,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 78,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 78,
        "type": "attribute"
      },
      {
        "callee": "type",
        "line": 81,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 82,
        "type": "direct"
      },
      {
        "callee": "format_exc",
        "line": 83,
        "type": "attribute"
      },
      {
        "callee": "_generate_user_message",
        "line": 85,
        "type": "attribute"
      },
      {
        "callee": "_get_log_level",
        "line": 89,
        "type": "attribute"
      },
      {
        "callee": "getattr",
        "line": 90,
        "type": "direct"
      },
      {
        "callee": "title",
        "line": 91,
        "type": "attribute"
      },
      {
        "callee": "_log_to_file",
        "line": 101,
        "type": "attribute"
      },
      {
        "callee": "_handle_critical_error",
        "line": 105,
        "type": "attribute"
      }
    ],
    "src\\utils\\error_handling.py:ErrorHandler._generate_error_id": [
      {
        "callee": "int",
        "line": 111,
        "type": "direct"
      },
      {
        "callee": "timestamp",
        "line": 111,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 111,
        "type": "attribute"
      },
      {
        "callee": "id",
        "line": 111,
        "type": "direct"
      },
      {
        "callee": "object",
        "line": 111,
        "type": "direct"
      }
    ],
    "src\\utils\\error_handling.py:ErrorHandler._get_log_level": [
      {
        "callee": "get",
        "line": 121,
        "type": "attribute"
      }
    ],
    "src\\utils\\error_handling.py:ErrorHandler._generate_user_message": [
      {
        "callee": "get",
        "line": 138,
        "type": "attribute"
      }
    ],
    "src\\utils\\error_handling.py:ErrorHandler._log_to_file": [
      {
        "callee": "open",
        "line": 143,
        "type": "direct"
      },
      {
        "callee": "write",
        "line": 144,
        "type": "attribute"
      },
      {
        "callee": "dumps",
        "line": 144,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 146,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 146,
        "type": "direct"
      }
    ],
    "src\\utils\\error_handling.py:ErrorHandler._handle_critical_error": [
      {
        "callee": "critical",
        "line": 150,
        "type": "attribute"
      }
    ],
    "src\\utils\\error_handling.py:ErrorHandler.get_error_statistics": [
      {
        "callee": "exists",
        "line": 167,
        "type": "attribute"
      },
      {
        "callee": "_empty_stats",
        "line": 168,
        "type": "attribute"
      },
      {
        "callee": "timestamp",
        "line": 170,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 170,
        "type": "attribute"
      },
      {
        "callee": "open",
        "line": 173,
        "type": "direct"
      },
      {
        "callee": "loads",
        "line": 176,
        "type": "attribute"
      },
      {
        "callee": "strip",
        "line": 176,
        "type": "attribute"
      },
      {
        "callee": "timestamp",
        "line": 177,
        "type": "attribute"
      },
      {
        "callee": "fromisoformat",
        "line": 177,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 179,
        "type": "attribute"
      },
      {
        "callee": "_calculate_statistics",
        "line": 183,
        "type": "attribute"
      },
      {
        "callee": "error",
        "line": 186,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 186,
        "type": "direct"
      },
      {
        "callee": "_empty_stats",
        "line": 187,
        "type": "attribute"
      }
    ],
    "src\\utils\\error_handling.py:ErrorHandler._calculate_statistics": [
      {
        "callee": "get",
        "line": 208,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 209,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 212,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 213,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 216,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 217,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 221,
        "type": "direct"
      }
    ],
    "src\\utils\\error_handling.py:sync_wrapper": [
      {
        "callee": "func",
        "line": 252,
        "type": "direct"
      },
      {
        "callee": "handle_error",
        "line": 254,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 260,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 261,
        "type": "direct"
      },
      {
        "callee": "wraps",
        "line": 249,
        "type": "attribute"
      }
    ],
    "src\\utils\\error_handling.py:async_wrapper": [
      {
        "callee": "func",
        "line": 272,
        "type": "direct"
      },
      {
        "callee": "handle_error",
        "line": 274,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 280,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 281,
        "type": "direct"
      },
      {
        "callee": "wraps",
        "line": 269,
        "type": "attribute"
      }
    ],
    "src\\utils\\error_handling.py:decorator": [
      {
        "callee": "iscoroutinefunction",
        "line": 289,
        "type": "attribute"
      }
    ],
    "src\\utils\\error_handling.py:ErrorReportingMixin.report_error": [
      {
        "callee": "handle_error",
        "line": 306,
        "type": "attribute"
      }
    ],
    "src\\utils\\error_handling.py:handle_database_error": [
      {
        "callee": "handle_error",
        "line": 318,
        "type": "attribute"
      }
    ],
    "src\\utils\\error_handling.py:handle_api_error": [
      {
        "callee": "handle_error",
        "line": 328,
        "type": "attribute"
      }
    ],
    "src\\utils\\error_handling.py:handle_printer_error": [
      {
        "callee": "handle_error",
        "line": 338,
        "type": "attribute"
      }
    ],
    "src\\utils\\error_handling.py:handle_file_error": [
      {
        "callee": "handle_error",
        "line": 348,
        "type": "attribute"
      }
    ],
    "src\\utils\\error_handling.py:handle_validation_error": [
      {
        "callee": "handle_error",
        "line": 358,
        "type": "attribute"
      }
    ],
    "src\\utils\\exceptions.py:PrinternizerException.__init__": [
      {
        "callee": "__init__",
        "line": 20,
        "type": "attribute"
      },
      {
        "callee": "super",
        "line": 20,
        "type": "direct"
      },
      {
        "callee": "now",
        "line": 25,
        "type": "attribute"
      }
    ],
    "src\\utils\\exceptions.py:ConfigurationError.__init__": [
      {
        "callee": "__init__",
        "line": 32,
        "type": "attribute"
      },
      {
        "callee": "super",
        "line": 32,
        "type": "direct"
      }
    ],
    "src\\utils\\exceptions.py:DatabaseError.__init__": [
      {
        "callee": "__init__",
        "line": 44,
        "type": "attribute"
      },
      {
        "callee": "super",
        "line": 44,
        "type": "direct"
      }
    ],
    "src\\utils\\exceptions.py:PrinterConnectionError.__init__": [
      {
        "callee": "__init__",
        "line": 56,
        "type": "attribute"
      },
      {
        "callee": "super",
        "line": 56,
        "type": "direct"
      }
    ],
    "src\\utils\\exceptions.py:FileOperationError.__init__": [
      {
        "callee": "__init__",
        "line": 68,
        "type": "attribute"
      },
      {
        "callee": "super",
        "line": 68,
        "type": "direct"
      }
    ],
    "src\\utils\\exceptions.py:ValidationError.__init__": [
      {
        "callee": "__init__",
        "line": 80,
        "type": "attribute"
      },
      {
        "callee": "super",
        "line": 80,
        "type": "direct"
      }
    ],
    "src\\utils\\exceptions.py:AuthenticationError.__init__": [
      {
        "callee": "__init__",
        "line": 92,
        "type": "attribute"
      },
      {
        "callee": "super",
        "line": 92,
        "type": "direct"
      }
    ],
    "src\\utils\\exceptions.py:AuthorizationError.__init__": [
      {
        "callee": "__init__",
        "line": 104,
        "type": "attribute"
      },
      {
        "callee": "super",
        "line": 104,
        "type": "direct"
      }
    ],
    "src\\utils\\exceptions.py:NotFoundError.__init__": [
      {
        "callee": "__init__",
        "line": 116,
        "type": "attribute"
      },
      {
        "callee": "super",
        "line": 116,
        "type": "direct"
      }
    ],
    "src\\utils\\gcode_analyzer.py:GcodeAnalyzer.find_print_start_line": [
      {
        "callee": "enumerate",
        "line": 63,
        "type": "direct"
      },
      {
        "callee": "upper",
        "line": 64,
        "type": "attribute"
      },
      {
        "callee": "strip",
        "line": 64,
        "type": "attribute"
      },
      {
        "callee": "strip",
        "line": 65,
        "type": "attribute"
      },
      {
        "callee": "upper",
        "line": 69,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 70,
        "type": "attribute"
      },
      {
        "callee": "startswith",
        "line": 74,
        "type": "attribute"
      },
      {
        "callee": "startswith",
        "line": 74,
        "type": "attribute"
      },
      {
        "callee": "startswith",
        "line": 76,
        "type": "attribute"
      },
      {
        "callee": "startswith",
        "line": 76,
        "type": "attribute"
      },
      {
        "callee": "match",
        "line": 81,
        "type": "attribute"
      },
      {
        "callee": "startswith",
        "line": 85,
        "type": "attribute"
      },
      {
        "callee": "_is_likely_print_move",
        "line": 92,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 93,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 106,
        "type": "attribute"
      }
    ],
    "src\\utils\\gcode_analyzer.py:GcodeAnalyzer._is_likely_print_move": [
      {
        "callee": "search",
        "line": 120,
        "type": "attribute"
      },
      {
        "callee": "float",
        "line": 123,
        "type": "direct"
      },
      {
        "callee": "group",
        "line": 123,
        "type": "attribute"
      },
      {
        "callee": "abs",
        "line": 125,
        "type": "direct"
      },
      {
        "callee": "search",
        "line": 131,
        "type": "attribute"
      },
      {
        "callee": "search",
        "line": 132,
        "type": "attribute"
      },
      {
        "callee": "float",
        "line": 136,
        "type": "direct"
      },
      {
        "callee": "group",
        "line": 136,
        "type": "attribute"
      },
      {
        "callee": "float",
        "line": 137,
        "type": "direct"
      },
      {
        "callee": "group",
        "line": 137,
        "type": "attribute"
      }
    ],
    "src\\utils\\gcode_analyzer.py:GcodeAnalyzer.get_optimized_gcode_lines": [
      {
        "callee": "find_print_start_line",
        "line": 166,
        "type": "attribute"
      },
      {
        "callee": "debug",
        "line": 169,
        "type": "attribute"
      },
      {
        "callee": "info",
        "line": 173,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 174,
        "type": "direct"
      }
    ],
    "src\\utils\\gcode_analyzer.py:GcodeAnalyzer.analyze_gcode_file": [
      {
        "callee": "open",
        "line": 190,
        "type": "direct"
      },
      {
        "callee": "enumerate",
        "line": 192,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 195,
        "type": "attribute"
      },
      {
        "callee": "rstrip",
        "line": 195,
        "type": "attribute"
      },
      {
        "callee": "find_print_start_line",
        "line": 197,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 200,
        "type": "direct"
      },
      {
        "callee": "error",
        "line": 208,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 215,
        "type": "direct"
      }
    ],
    "src\\utils\\logging_config.py:setup_logging": [
      {
        "callee": "basicConfig",
        "line": 16,
        "type": "attribute"
      },
      {
        "callee": "getattr",
        "line": 19,
        "type": "direct"
      },
      {
        "callee": "upper",
        "line": 19,
        "type": "attribute"
      },
      {
        "callee": "PositionalArgumentsFormatter",
        "line": 27,
        "type": "attribute"
      },
      {
        "callee": "TimeStamper",
        "line": 28,
        "type": "attribute"
      },
      {
        "callee": "StackInfoRenderer",
        "line": 29,
        "type": "attribute"
      },
      {
        "callee": "UnicodeDecoder",
        "line": 31,
        "type": "attribute"
      },
      {
        "callee": "Path",
        "line": 36,
        "type": "direct"
      },
      {
        "callee": "mkdir",
        "line": 37,
        "type": "attribute"
      },
      {
        "callee": "FileHandler",
        "line": 39,
        "type": "attribute"
      },
      {
        "callee": "setLevel",
        "line": 40,
        "type": "attribute"
      },
      {
        "callee": "getattr",
        "line": 40,
        "type": "direct"
      },
      {
        "callee": "upper",
        "line": 40,
        "type": "attribute"
      },
      {
        "callee": "Formatter",
        "line": 42,
        "type": "attribute"
      },
      {
        "callee": "setFormatter",
        "line": 45,
        "type": "attribute"
      },
      {
        "callee": "getLogger",
        "line": 48,
        "type": "attribute"
      },
      {
        "callee": "addHandler",
        "line": 49,
        "type": "attribute"
      },
      {
        "callee": "upper",
        "line": 52,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 53,
        "type": "attribute"
      },
      {
        "callee": "ConsoleRenderer",
        "line": 53,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 55,
        "type": "attribute"
      },
      {
        "callee": "JSONRenderer",
        "line": 55,
        "type": "attribute"
      },
      {
        "callee": "configure",
        "line": 57,
        "type": "attribute"
      },
      {
        "callee": "LoggerFactory",
        "line": 60,
        "type": "attribute"
      }
    ],
    "src\\utils\\logging_config.py:get_logger": [
      {
        "callee": "get_logger",
        "line": 68,
        "type": "attribute"
      }
    ],
    "src\\utils\\middleware.py:RequestTimingMiddleware.dispatch": [
      {
        "callee": "time",
        "line": 19,
        "type": "attribute"
      },
      {
        "callee": "call_next",
        "line": 22,
        "type": "direct"
      },
      {
        "callee": "time",
        "line": 25,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 28,
        "type": "direct"
      },
      {
        "callee": "info",
        "line": 31,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 34,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 37,
        "type": "attribute"
      }
    ],
    "src\\utils\\middleware.py:SecurityHeadersMiddleware.dispatch": [
      {
        "callee": "call_next",
        "line": 48,
        "type": "direct"
      }
    ],
    "src\\utils\\middleware.py:GermanComplianceMiddleware.dispatch": [
      {
        "callee": "info",
        "line": 83,
        "type": "attribute"
      },
      {
        "callee": "hash",
        "line": 87,
        "type": "direct"
      },
      {
        "callee": "time",
        "line": 88,
        "type": "attribute"
      },
      {
        "callee": "call_next",
        "line": 92,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_api_files.py:TestFileAPI.test_get_files_unified_empty": [
      {
        "callee": "patch",
        "line": 19,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 22,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 25,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_files.py:TestFileAPI.test_get_files_unified_with_data": [
      {
        "callee": "patch",
        "line": 34,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 37,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 40,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 41,
        "type": "direct"
      },
      {
        "callee": "next",
        "line": 45,
        "type": "direct"
      },
      {
        "callee": "next",
        "line": 52,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_api_files.py:TestFileAPI.test_get_files_filter_by_printer": [
      {
        "callee": "patch",
        "line": 65,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 68,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 71,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 72,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_api_files.py:TestFileAPI.test_get_files_filter_by_status": [
      {
        "callee": "patch",
        "line": 77,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 80,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 83,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 84,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_api_files.py:TestFileAPI.test_get_files_filter_by_type": [
      {
        "callee": "patch",
        "line": 89,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 92,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 95,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 96,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_api_files.py:TestFileAPI.test_post_file_download_bambu_lab": [
      {
        "callee": "patch",
        "line": 103,
        "type": "direct"
      },
      {
        "callee": "patch",
        "line": 109,
        "type": "direct"
      },
      {
        "callee": "patch",
        "line": 112,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 115,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 120,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_files.py:TestFileAPI.test_post_file_download_prusa": [
      {
        "callee": "patch",
        "line": 132,
        "type": "direct"
      },
      {
        "callee": "patch",
        "line": 138,
        "type": "direct"
      },
      {
        "callee": "patch",
        "line": 141,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 144,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 149,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_files.py:TestFileAPI.test_post_file_download_already_downloaded": [
      {
        "callee": "patch",
        "line": 156,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 159,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 164,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_files.py:TestFileAPI.test_post_file_download_printer_offline": [
      {
        "callee": "patch",
        "line": 171,
        "type": "direct"
      },
      {
        "callee": "patch",
        "line": 175,
        "type": "direct"
      },
      {
        "callee": "ConnectionError",
        "line": 176,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 178,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 183,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_files.py:TestFileAPI.test_post_file_download_disk_space_error": [
      {
        "callee": "patch",
        "line": 190,
        "type": "direct"
      },
      {
        "callee": "patch",
        "line": 193,
        "type": "direct"
      },
      {
        "callee": "patch",
        "line": 197,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 200,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 205,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_files.py:TestFileAPI.test_post_file_download_with_progress_tracking": [
      {
        "callee": "patch",
        "line": 213,
        "type": "direct"
      },
      {
        "callee": "Mock",
        "line": 217,
        "type": "direct"
      },
      {
        "callee": "patch",
        "line": 220,
        "type": "direct"
      },
      {
        "callee": "patch",
        "line": 223,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 226,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 231,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_files.py:TestFileAPI.test_delete_file_local": [
      {
        "callee": "join",
        "line": 240,
        "type": "attribute"
      },
      {
        "callee": "open",
        "line": 241,
        "type": "direct"
      },
      {
        "callee": "write",
        "line": 242,
        "type": "attribute"
      },
      {
        "callee": "patch",
        "line": 244,
        "type": "direct"
      },
      {
        "callee": "patch",
        "line": 247,
        "type": "direct"
      },
      {
        "callee": "delete",
        "line": 250,
        "type": "attribute"
      },
      {
        "callee": "exists",
        "line": 255,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_files.py:TestFileAPI.test_delete_file_available_only": [
      {
        "callee": "patch",
        "line": 261,
        "type": "direct"
      },
      {
        "callee": "delete",
        "line": 264,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_files.py:TestFileAPI.test_get_file_download_progress": [
      {
        "callee": "patch",
        "line": 273,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 284,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 289,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_files.py:TestFileAPI.test_get_file_download_history": [
      {
        "callee": "patch",
        "line": 296,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 299,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 302,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_files.py:TestFileAPI.test_post_file_cleanup": [
      {
        "callee": "patch",
        "line": 316,
        "type": "direct"
      },
      {
        "callee": "patch",
        "line": 319,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 326,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 332,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_files.py:TestFileBusinessLogic.test_german_file_naming_sanitization": [
      {
        "callee": "sanitize_german_filename",
        "line": 361,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_api_files.py:TestFileBusinessLogic.test_file_download_path_organization": [
      {
        "callee": "berlin_timestamp",
        "line": 373,
        "type": "attribute"
      },
      {
        "callee": "patch",
        "line": 375,
        "type": "direct"
      },
      {
        "callee": "generate_download_path",
        "line": 378,
        "type": "direct"
      },
      {
        "callee": "join",
        "line": 384,
        "type": "attribute"
      },
      {
        "callee": "normpath",
        "line": 392,
        "type": "attribute"
      },
      {
        "callee": "normpath",
        "line": 392,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_files.py:TestFileBusinessLogic.test_file_checksum_verification": [
      {
        "callee": "hexdigest",
        "line": 397,
        "type": "attribute"
      },
      {
        "callee": "md5",
        "line": 397,
        "type": "attribute"
      },
      {
        "callee": "hexdigest",
        "line": 398,
        "type": "attribute"
      },
      {
        "callee": "sha256",
        "line": 398,
        "type": "attribute"
      },
      {
        "callee": "calculate_file_checksum",
        "line": 401,
        "type": "direct"
      },
      {
        "callee": "calculate_file_checksum",
        "line": 402,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_api_files.py:TestFileBusinessLogic.test_file_size_validation_german_limits": [
      {
        "callee": "validate_file_size",
        "line": 420,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_api_files.py:TestFileBusinessLogic.test_file_metadata_extraction_3mf": [
      {
        "callee": "extract_3mf_metadata",
        "line": 425,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_api_files.py:TestFileBusinessLogic.test_disk_space_monitoring": [
      {
        "callee": "patch",
        "line": 436,
        "type": "direct"
      },
      {
        "callee": "check_disk_space",
        "line": 441,
        "type": "direct"
      },
      {
        "callee": "check_disk_space",
        "line": 445,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_api_files.py:TestFileAPIPerformance.test_large_file_list_performance": [
      {
        "callee": "cursor",
        "line": 454,
        "type": "attribute"
      },
      {
        "callee": "range",
        "line": 457,
        "type": "direct"
      },
      {
        "callee": "execute",
        "line": 458,
        "type": "attribute"
      },
      {
        "callee": "commit",
        "line": 470,
        "type": "attribute"
      },
      {
        "callee": "time",
        "line": 474,
        "type": "attribute"
      },
      {
        "callee": "patch",
        "line": 476,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 478,
        "type": "attribute"
      },
      {
        "callee": "time",
        "line": 480,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 487,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 488,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_api_files.py:TestFileAPIPerformance.download_file": [
      {
        "callee": "post",
        "line": 498,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 501,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 503,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_files.py:TestFileAPIPerformance.test_concurrent_file_downloads": [
      {
        "callee": "range",
        "line": 507,
        "type": "direct"
      },
      {
        "callee": "Thread",
        "line": 508,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 509,
        "type": "attribute"
      },
      {
        "callee": "start",
        "line": 512,
        "type": "attribute"
      },
      {
        "callee": "join",
        "line": 515,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 518,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 519,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_api_files.py:sanitize_german_filename": [
      {
        "callee": "items",
        "line": 536,
        "type": "attribute"
      },
      {
        "callee": "replace",
        "line": 537,
        "type": "attribute"
      },
      {
        "callee": "sub",
        "line": 540,
        "type": "attribute"
      },
      {
        "callee": "sub",
        "line": 541,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 542,
        "type": "attribute"
      },
      {
        "callee": "replace",
        "line": 545,
        "type": "attribute"
      },
      {
        "callee": "replace",
        "line": 546,
        "type": "attribute"
      },
      {
        "callee": "replace",
        "line": 547,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_files.py:generate_download_path": [
      {
        "callee": "strftime",
        "line": 557,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 557,
        "type": "attribute"
      },
      {
        "callee": "join",
        "line": 559,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_files.py:calculate_file_checksum": [
      {
        "callee": "hexdigest",
        "line": 565,
        "type": "attribute"
      },
      {
        "callee": "md5",
        "line": 565,
        "type": "attribute"
      },
      {
        "callee": "hexdigest",
        "line": 567,
        "type": "attribute"
      },
      {
        "callee": "sha256",
        "line": 567,
        "type": "attribute"
      },
      {
        "callee": "ValueError",
        "line": 569,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_api_files.py:extract_3mf_metadata": [
      {
        "callee": "fromstring",
        "line": 583,
        "type": "attribute"
      },
      {
        "callee": "decode",
        "line": 583,
        "type": "attribute"
      },
      {
        "callee": "findall",
        "line": 587,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 588,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 591,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_files.py:check_disk_space": [
      {
        "callee": "disk_usage",
        "line": 603,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_health.py:client": [
      {
        "callee": "TestClient",
        "line": 14,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_api_health.py:TestHealthEndpoint.test_health_check_success": [
      {
        "callee": "get",
        "line": 22,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 25,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_health.py:TestHealthEndpoint.test_health_check_includes_system_info": [
      {
        "callee": "get",
        "line": 33,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 36,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_health.py:TestHealthEndpoint.test_health_check_response_format": [
      {
        "callee": "get",
        "line": 45,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 51,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_health.py:TestHealthEndpoint.test_health_check_german_timezone": [
      {
        "callee": "get",
        "line": 58,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 61,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 63,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_health.py:TestHealthEndpoint.test_health_check_performance": [
      {
        "callee": "time",
        "line": 72,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 73,
        "type": "attribute"
      },
      {
        "callee": "time",
        "line": 74,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_jobs.py:TestJobAPI.test_get_jobs_empty_database": [
      {
        "callee": "patch",
        "line": 18,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 21,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 24,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_jobs.py:TestJobAPI.test_get_jobs_with_data": [
      {
        "callee": "patch",
        "line": 32,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 35,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 38,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 39,
        "type": "direct"
      },
      {
        "callee": "next",
        "line": 44,
        "type": "direct"
      },
      {
        "callee": "next",
        "line": 50,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_api_jobs.py:TestJobAPI.test_get_jobs_filter_by_status": [
      {
        "callee": "patch",
        "line": 56,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 59,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 62,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 63,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_api_jobs.py:TestJobAPI.test_get_jobs_filter_by_printer": [
      {
        "callee": "patch",
        "line": 68,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 71,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 74,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 75,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_api_jobs.py:TestJobAPI.test_get_jobs_filter_by_business_type": [
      {
        "callee": "patch",
        "line": 80,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 83,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 86,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 87,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_api_jobs.py:TestJobAPI.test_get_jobs_date_range_filter": [
      {
        "callee": "strftime",
        "line": 93,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 93,
        "type": "attribute"
      },
      {
        "callee": "strftime",
        "line": 94,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 94,
        "type": "attribute"
      },
      {
        "callee": "timedelta",
        "line": 94,
        "type": "direct"
      },
      {
        "callee": "patch",
        "line": 96,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 99,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 104,
        "type": "attribute"
      },
      {
        "callee": "isinstance",
        "line": 106,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_api_jobs.py:TestJobAPI.test_get_jobs_pagination": [
      {
        "callee": "patch",
        "line": 110,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 113,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 116,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 117,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_api_jobs.py:TestJobAPI.test_post_jobs_create_new_job": [
      {
        "callee": "patch",
        "line": 143,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 146,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 152,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_jobs.py:TestJobAPI.test_post_jobs_validation_errors": [
      {
        "callee": "post",
        "line": 198,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 205,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_jobs.py:TestJobAPI.test_get_job_details": [
      {
        "callee": "patch",
        "line": 211,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 214,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 217,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_jobs.py:TestJobAPI.test_get_job_details_not_found": [
      {
        "callee": "get",
        "line": 241,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 244,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_jobs.py:TestJobAPI.test_put_job_status_update": [
      {
        "callee": "patch",
        "line": 256,
        "type": "direct"
      },
      {
        "callee": "put",
        "line": 259,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 265,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_jobs.py:TestJobAPI.test_put_job_completion_with_quality_assessment": [
      {
        "callee": "isoformat",
        "line": 277,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 277,
        "type": "attribute"
      },
      {
        "callee": "patch",
        "line": 286,
        "type": "direct"
      },
      {
        "callee": "put",
        "line": 289,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 295,
        "type": "attribute"
      },
      {
        "callee": "abs",
        "line": 303,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_api_jobs.py:TestJobAPI.test_put_job_failure_handling": [
      {
        "callee": "isoformat",
        "line": 311,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 311,
        "type": "attribute"
      },
      {
        "callee": "patch",
        "line": 318,
        "type": "direct"
      },
      {
        "callee": "put",
        "line": 321,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 327,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_jobs.py:TestJobAPI.test_put_job_status_invalid_transitions": [
      {
        "callee": "put",
        "line": 351,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 357,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_jobs.py:TestJobAPI.test_delete_job": [
      {
        "callee": "patch",
        "line": 363,
        "type": "direct"
      },
      {
        "callee": "delete",
        "line": 366,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_jobs.py:TestJobAPI.test_delete_active_job_forbidden": [
      {
        "callee": "patch",
        "line": 374,
        "type": "direct"
      },
      {
        "callee": "delete",
        "line": 377,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 380,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_jobs.py:TestJobBusinessLogic.test_german_cost_calculations": [
      {
        "callee": "float",
        "line": 405,
        "type": "direct"
      },
      {
        "callee": "round",
        "line": 406,
        "type": "direct"
      },
      {
        "callee": "round",
        "line": 409,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_api_jobs.py:TestJobBusinessLogic.test_business_vs_private_job_classification": [
      {
        "callee": "cursor",
        "line": 421,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 424,
        "type": "attribute"
      },
      {
        "callee": "fetchone",
        "line": 425,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 428,
        "type": "direct"
      },
      {
        "callee": "execute",
        "line": 431,
        "type": "attribute"
      },
      {
        "callee": "fetchone",
        "line": 432,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_jobs.py:TestJobBusinessLogic.test_job_timezone_handling": [
      {
        "callee": "cursor",
        "line": 438,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 439,
        "type": "attribute"
      },
      {
        "callee": "fetchone",
        "line": 440,
        "type": "attribute"
      },
      {
        "callee": "berlin_timestamp",
        "line": 443,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_jobs.py:TestJobBusinessLogic.test_material_usage_tracking": [
      {
        "callee": "abs",
        "line": 462,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_api_jobs.py:TestJobBusinessLogic.test_print_quality_assessment_german_standards": [
      {
        "callee": "get",
        "line": 469,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 474,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 479,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_jobs.py:TestJobAPIPerformance.test_large_job_list_performance": [
      {
        "callee": "cursor",
        "line": 489,
        "type": "attribute"
      },
      {
        "callee": "range",
        "line": 492,
        "type": "direct"
      },
      {
        "callee": "execute",
        "line": 493,
        "type": "attribute"
      },
      {
        "callee": "commit",
        "line": 504,
        "type": "attribute"
      },
      {
        "callee": "time",
        "line": 508,
        "type": "attribute"
      },
      {
        "callee": "patch",
        "line": 510,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 512,
        "type": "attribute"
      },
      {
        "callee": "time",
        "line": 514,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 521,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_jobs.py:TestJobAPIPerformance.test_job_filtering_performance": [
      {
        "callee": "time",
        "line": 536,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 538,
        "type": "attribute"
      },
      {
        "callee": "time",
        "line": 540,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_jobs.py:TestJobAPIPerformance.update_job_status": [
      {
        "callee": "put",
        "line": 555,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 559,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 561,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_jobs.py:TestJobAPIPerformance.test_concurrent_job_updates": [
      {
        "callee": "range",
        "line": 565,
        "type": "direct"
      },
      {
        "callee": "Thread",
        "line": 566,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 567,
        "type": "attribute"
      },
      {
        "callee": "start",
        "line": 571,
        "type": "attribute"
      },
      {
        "callee": "join",
        "line": 575,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 578,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_api_jobs.py:TestJobAPIErrorHandling.test_job_api_database_connection_error": [
      {
        "callee": "patch",
        "line": 587,
        "type": "direct"
      },
      {
        "callee": "OperationalError",
        "line": 588,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 590,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 593,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_jobs.py:TestJobAPIErrorHandling.test_job_creation_with_invalid_printer": [
      {
        "callee": "post",
        "line": 603,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 609,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_jobs.py:TestJobAPIErrorHandling.test_job_update_race_condition_handling": [
      {
        "callee": "patch",
        "line": 616,
        "type": "direct"
      },
      {
        "callee": "put",
        "line": 620,
        "type": "attribute"
      },
      {
        "callee": "put",
        "line": 626,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_jobs.py:TestJobAPIErrorHandling.test_job_deletion_safety_checks": [
      {
        "callee": "delete",
        "line": 638,
        "type": "attribute"
      },
      {
        "callee": "delete",
        "line": 643,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_printers.py:TestPrinterAPI.test_get_printers_empty_database": [
      {
        "callee": "patch",
        "line": 19,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 22,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 25,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_printers.py:TestPrinterAPI.test_get_printers_with_data": [
      {
        "callee": "patch",
        "line": 32,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 35,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 38,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 39,
        "type": "direct"
      },
      {
        "callee": "next",
        "line": 43,
        "type": "direct"
      },
      {
        "callee": "next",
        "line": 49,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_api_printers.py:TestPrinterAPI.test_get_printers_filter_by_type": [
      {
        "callee": "patch",
        "line": 55,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 58,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 61,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 62,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_api_printers.py:TestPrinterAPI.test_get_printers_filter_by_active_status": [
      {
        "callee": "patch",
        "line": 67,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 70,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 73,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_printers.py:TestPrinterAPI.test_post_printers_bambu_lab": [
      {
        "callee": "patch",
        "line": 91,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 94,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 100,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_printers.py:TestPrinterAPI.test_post_printers_prusa": [
      {
        "callee": "patch",
        "line": 116,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 119,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 125,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_printers.py:TestPrinterAPI.test_post_printers_validation_errors": [
      {
        "callee": "post",
        "line": 168,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 175,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_printers.py:TestPrinterAPI.test_get_printer_status_bambu_lab": [
      {
        "callee": "patch",
        "line": 181,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 184,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 189,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_printers.py:TestPrinterAPI.test_get_printer_status_prusa": [
      {
        "callee": "patch",
        "line": 213,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 216,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 221,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_printers.py:TestPrinterAPI.test_get_printer_status_offline": [
      {
        "callee": "patch",
        "line": 237,
        "type": "direct"
      },
      {
        "callee": "ConnectionError",
        "line": 238,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 240,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 245,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_printers.py:TestPrinterAPI.test_get_printer_status_not_found": [
      {
        "callee": "get",
        "line": 251,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 256,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_printers.py:TestPrinterAPI.test_put_printers_update_config": [
      {
        "callee": "patch",
        "line": 267,
        "type": "direct"
      },
      {
        "callee": "put",
        "line": 270,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 276,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_printers.py:TestPrinterAPI.test_put_printers_invalid_update": [
      {
        "callee": "put",
        "line": 297,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 303,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_printers.py:TestPrinterAPI.test_delete_printers": [
      {
        "callee": "patch",
        "line": 309,
        "type": "direct"
      },
      {
        "callee": "delete",
        "line": 312,
        "type": "attribute"
      },
      {
        "callee": "cursor",
        "line": 319,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 320,
        "type": "attribute"
      },
      {
        "callee": "fetchone",
        "line": 321,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_printers.py:TestPrinterAPI.test_delete_printer_with_active_jobs": [
      {
        "callee": "patch",
        "line": 329,
        "type": "direct"
      },
      {
        "callee": "delete",
        "line": 332,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 337,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_printers.py:TestPrinterAPI.test_printer_connection_test": [
      {
        "callee": "patch",
        "line": 344,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 348,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 353,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_printers.py:TestPrinterAPI.test_printer_connection_test_failed": [
      {
        "callee": "patch",
        "line": 361,
        "type": "direct"
      },
      {
        "callee": "ConnectionError",
        "line": 362,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 364,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 369,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_printers.py:TestPrinterBusinessLogic.test_printer_timezone_handling": [
      {
        "callee": "cursor",
        "line": 379,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 380,
        "type": "attribute"
      },
      {
        "callee": "fetchone",
        "line": 384,
        "type": "attribute"
      },
      {
        "callee": "berlin_timestamp",
        "line": 388,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_printers.py:TestPrinterBusinessLogic.test_printer_cost_calculations_euro": [
      {
        "callee": "calculate_vat",
        "line": 405,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_printers.py:TestPrinterBusinessLogic.test_printer_business_hours_validation": [
      {
        "callee": "fromisoformat",
        "line": 419,
        "type": "attribute"
      },
      {
        "callee": "fromisoformat",
        "line": 420,
        "type": "attribute"
      },
      {
        "callee": "time",
        "line": 424,
        "type": "direct"
      },
      {
        "callee": "time",
        "line": 425,
        "type": "direct"
      },
      {
        "callee": "time",
        "line": 426,
        "type": "direct"
      },
      {
        "callee": "time",
        "line": 427,
        "type": "direct"
      },
      {
        "callee": "time",
        "line": 428,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_api_printers.py:TestPrinterBusinessLogic.test_printer_id_generation_german_locale": [
      {
        "callee": "generate_printer_id",
        "line": 445,
        "type": "direct"
      },
      {
        "callee": "startswith",
        "line": 446,
        "type": "attribute"
      },
      {
        "callee": "split",
        "line": 446,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_printers.py:generate_printer_id": [
      {
        "callee": "sub",
        "line": 454,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 454,
        "type": "attribute"
      },
      {
        "callee": "sub",
        "line": 455,
        "type": "attribute"
      },
      {
        "callee": "strip",
        "line": 455,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_printers.py:TestPrinterAPIEdgeCases.make_request": [
      {
        "callee": "get",
        "line": 473,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 474,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_printers.py:TestPrinterAPIEdgeCases.test_concurrent_printer_requests": [
      {
        "callee": "range",
        "line": 478,
        "type": "direct"
      },
      {
        "callee": "Thread",
        "line": 479,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 480,
        "type": "attribute"
      },
      {
        "callee": "start",
        "line": 484,
        "type": "attribute"
      },
      {
        "callee": "join",
        "line": 488,
        "type": "attribute"
      },
      {
        "callee": "all",
        "line": 491,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 492,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_api_printers.py:TestPrinterAPIEdgeCases.test_large_printer_list_performance": [
      {
        "callee": "cursor",
        "line": 497,
        "type": "attribute"
      },
      {
        "callee": "range",
        "line": 499,
        "type": "direct"
      },
      {
        "callee": "execute",
        "line": 500,
        "type": "attribute"
      },
      {
        "callee": "commit",
        "line": 512,
        "type": "attribute"
      },
      {
        "callee": "time",
        "line": 516,
        "type": "attribute"
      },
      {
        "callee": "patch",
        "line": 518,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 520,
        "type": "attribute"
      },
      {
        "callee": "time",
        "line": 522,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 529,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 530,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_api_printers.py:TestPrinterAPIEdgeCases.test_printer_api_rate_limiting": [
      {
        "callee": "range",
        "line": 538,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 539,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 540,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 544,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_api_printers.py:TestPrinterAPIEdgeCases.test_invalid_json_handling": [
      {
        "callee": "post",
        "line": 550,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 557,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_api_printers.py:TestPrinterAPIEdgeCases.test_oversized_request_handling": [
      {
        "callee": "post",
        "line": 570,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_database.py:TestDatabaseSchema.test_database_creation": [
      {
        "callee": "connect",
        "line": 16,
        "type": "attribute"
      },
      {
        "callee": "cursor",
        "line": 17,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 20,
        "type": "attribute"
      },
      {
        "callee": "fetchall",
        "line": 25,
        "type": "attribute"
      },
      {
        "callee": "close",
        "line": 35,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_database.py:TestDatabaseSchema.test_printer_table_constraints": [
      {
        "callee": "cursor",
        "line": 39,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 42,
        "type": "attribute"
      },
      {
        "callee": "commit",
        "line": 46,
        "type": "attribute"
      },
      {
        "callee": "raises",
        "line": 49,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 50,
        "type": "attribute"
      },
      {
        "callee": "commit",
        "line": 54,
        "type": "attribute"
      },
      {
        "callee": "raises",
        "line": 57,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 58,
        "type": "attribute"
      },
      {
        "callee": "commit",
        "line": 62,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_database.py:TestDatabaseSchema.test_job_table_constraints": [
      {
        "callee": "cursor",
        "line": 66,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 69,
        "type": "attribute"
      },
      {
        "callee": "commit",
        "line": 73,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 76,
        "type": "attribute"
      },
      {
        "callee": "fetchone",
        "line": 79,
        "type": "attribute"
      },
      {
        "callee": "raises",
        "line": 83,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 84,
        "type": "attribute"
      },
      {
        "callee": "commit",
        "line": 88,
        "type": "attribute"
      },
      {
        "callee": "raises",
        "line": 91,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 92,
        "type": "attribute"
      },
      {
        "callee": "commit",
        "line": 96,
        "type": "attribute"
      },
      {
        "callee": "raises",
        "line": 99,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 100,
        "type": "attribute"
      },
      {
        "callee": "commit",
        "line": 104,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_database.py:TestDatabaseSchema.test_file_table_generated_columns": [
      {
        "callee": "cursor",
        "line": 108,
        "type": "attribute"
      },
      {
        "callee": "enumerate",
        "line": 119,
        "type": "direct"
      },
      {
        "callee": "execute",
        "line": 120,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 126,
        "type": "attribute"
      },
      {
        "callee": "fetchone",
        "line": 130,
        "type": "attribute"
      },
      {
        "callee": "commit",
        "line": 133,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_database.py:TestDatabaseSchema.test_database_indexes": [
      {
        "callee": "connect",
        "line": 137,
        "type": "attribute"
      },
      {
        "callee": "cursor",
        "line": 138,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 141,
        "type": "attribute"
      },
      {
        "callee": "fetchall",
        "line": 145,
        "type": "attribute"
      },
      {
        "callee": "close",
        "line": 161,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_database.py:TestDatabaseSchema.test_database_triggers": [
      {
        "callee": "cursor",
        "line": 165,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 168,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 170,
        "type": "attribute"
      },
      {
        "callee": "commit",
        "line": 174,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 176,
        "type": "attribute"
      },
      {
        "callee": "fetchone",
        "line": 179,
        "type": "attribute"
      },
      {
        "callee": "fromisoformat",
        "line": 180,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_database.py:TestDatabaseSchema.test_job_status_change_trigger": [
      {
        "callee": "cursor",
        "line": 187,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 190,
        "type": "attribute"
      },
      {
        "callee": "fetchone",
        "line": 191,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 194,
        "type": "attribute"
      },
      {
        "callee": "commit",
        "line": 198,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 201,
        "type": "attribute"
      },
      {
        "callee": "fetchone",
        "line": 202,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 207,
        "type": "attribute"
      },
      {
        "callee": "fetchone",
        "line": 212,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_database.py:TestDatabaseSchema.test_foreign_key_constraints": [
      {
        "callee": "cursor",
        "line": 219,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 222,
        "type": "attribute"
      },
      {
        "callee": "raises",
        "line": 225,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 226,
        "type": "attribute"
      },
      {
        "callee": "commit",
        "line": 227,
        "type": "attribute"
      },
      {
        "callee": "raises",
        "line": 230,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 231,
        "type": "attribute"
      },
      {
        "callee": "commit",
        "line": 235,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_database.py:TestDatabaseSchema.test_database_views": [
      {
        "callee": "cursor",
        "line": 239,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 242,
        "type": "attribute"
      },
      {
        "callee": "fetchall",
        "line": 243,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 245,
        "type": "direct"
      },
      {
        "callee": "execute",
        "line": 253,
        "type": "attribute"
      },
      {
        "callee": "fetchall",
        "line": 254,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 256,
        "type": "direct"
      },
      {
        "callee": "execute",
        "line": 259,
        "type": "attribute"
      },
      {
        "callee": "fetchall",
        "line": 260,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 263,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_database.py:TestGermanBusinessLogic.test_european_timezone_handling": [
      {
        "callee": "cursor",
        "line": 271,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 274,
        "type": "attribute"
      },
      {
        "callee": "fetchone",
        "line": 275,
        "type": "attribute"
      },
      {
        "callee": "berlin_timestamp",
        "line": 279,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 281,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 284,
        "type": "attribute"
      },
      {
        "callee": "commit",
        "line": 285,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 288,
        "type": "attribute"
      },
      {
        "callee": "fetchone",
        "line": 291,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_database.py:TestGermanBusinessLogic.test_euro_currency_calculations": [
      {
        "callee": "cursor",
        "line": 298,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 301,
        "type": "attribute"
      },
      {
        "callee": "float",
        "line": 302,
        "type": "direct"
      },
      {
        "callee": "fetchone",
        "line": 302,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 310,
        "type": "attribute"
      },
      {
        "callee": "commit",
        "line": 314,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 317,
        "type": "attribute"
      },
      {
        "callee": "fetchone",
        "line": 320,
        "type": "attribute"
      },
      {
        "callee": "abs",
        "line": 323,
        "type": "direct"
      },
      {
        "callee": "round",
        "line": 326,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_database.py:TestGermanBusinessLogic.test_german_business_hours_config": [
      {
        "callee": "cursor",
        "line": 335,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 345,
        "type": "attribute"
      },
      {
        "callee": "fetchone",
        "line": 346,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_database.py:TestGermanBusinessLogic.test_material_cost_per_gram_tracking": [
      {
        "callee": "cursor",
        "line": 352,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 355,
        "type": "attribute"
      },
      {
        "callee": "float",
        "line": 359,
        "type": "direct"
      },
      {
        "callee": "fetchone",
        "line": 359,
        "type": "attribute"
      },
      {
        "callee": "round",
        "line": 370,
        "type": "direct"
      },
      {
        "callee": "abs",
        "line": 371,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_database.py:TestGermanBusinessLogic.test_power_cost_calculation_german_rates": [
      {
        "callee": "cursor",
        "line": 375,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 378,
        "type": "attribute"
      },
      {
        "callee": "float",
        "line": 381,
        "type": "direct"
      },
      {
        "callee": "fetchone",
        "line": 381,
        "type": "attribute"
      },
      {
        "callee": "round",
        "line": 392,
        "type": "direct"
      },
      {
        "callee": "abs",
        "line": 393,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_database.py:TestGermanBusinessLogic.test_business_vs_private_job_tracking": [
      {
        "callee": "cursor",
        "line": 397,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 400,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 408,
        "type": "attribute"
      },
      {
        "callee": "commit",
        "line": 415,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 418,
        "type": "attribute"
      },
      {
        "callee": "fetchone",
        "line": 422,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 424,
        "type": "attribute"
      },
      {
        "callee": "fetchone",
        "line": 428,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_database.py:TestGermanBusinessLogic.test_german_file_retention_policies": [
      {
        "callee": "cursor",
        "line": 437,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 440,
        "type": "attribute"
      },
      {
        "callee": "int",
        "line": 443,
        "type": "direct"
      },
      {
        "callee": "fetchone",
        "line": 443,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 447,
        "type": "attribute"
      },
      {
        "callee": "timedelta",
        "line": 447,
        "type": "direct"
      },
      {
        "callee": "now",
        "line": 448,
        "type": "attribute"
      },
      {
        "callee": "timedelta",
        "line": 448,
        "type": "direct"
      },
      {
        "callee": "execute",
        "line": 451,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 454,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 457,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 460,
        "type": "attribute"
      },
      {
        "callee": "commit",
        "line": 462,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 465,
        "type": "attribute"
      },
      {
        "callee": "fetchone",
        "line": 470,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_database.py:TestDatabasePerformance.test_job_query_performance_with_indexes": [
      {
        "callee": "cursor",
        "line": 480,
        "type": "attribute"
      },
      {
        "callee": "range",
        "line": 483,
        "type": "direct"
      },
      {
        "callee": "execute",
        "line": 484,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 492,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 492,
        "type": "attribute"
      },
      {
        "callee": "commit",
        "line": 495,
        "type": "attribute"
      },
      {
        "callee": "time",
        "line": 501,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 502,
        "type": "attribute"
      },
      {
        "callee": "fetchone",
        "line": 503,
        "type": "attribute"
      },
      {
        "callee": "time",
        "line": 504,
        "type": "attribute"
      },
      {
        "callee": "time",
        "line": 510,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 511,
        "type": "attribute"
      },
      {
        "callee": "fetchone",
        "line": 512,
        "type": "attribute"
      },
      {
        "callee": "time",
        "line": 513,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_database.py:TestDatabasePerformance.test_database_size_estimates": [
      {
        "callee": "cursor",
        "line": 520,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 523,
        "type": "attribute"
      },
      {
        "callee": "fetchone",
        "line": 524,
        "type": "attribute"
      },
      {
        "callee": "range",
        "line": 528,
        "type": "direct"
      },
      {
        "callee": "execute",
        "line": 529,
        "type": "attribute"
      },
      {
        "callee": "round",
        "line": 535,
        "type": "direct"
      },
      {
        "callee": "round",
        "line": 536,
        "type": "direct"
      },
      {
        "callee": "round",
        "line": 537,
        "type": "direct"
      },
      {
        "callee": "range",
        "line": 540,
        "type": "direct"
      },
      {
        "callee": "execute",
        "line": 541,
        "type": "attribute"
      },
      {
        "callee": "commit",
        "line": 550,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 553,
        "type": "attribute"
      },
      {
        "callee": "fetchone",
        "line": 554,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_end_to_end.py:TestE2EPrinterSetupWorkflow.test_complete_bambu_lab_setup": [
      {
        "callee": "patch",
        "line": 27,
        "type": "direct"
      },
      {
        "callee": "connect",
        "line": 28,
        "type": "attribute"
      },
      {
        "callee": "patch",
        "line": 46,
        "type": "direct"
      },
      {
        "callee": "patch",
        "line": 48,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 51,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 54,
        "type": "attribute"
      },
      {
        "callee": "cursor",
        "line": 58,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 59,
        "type": "attribute"
      },
      {
        "callee": "fetchone",
        "line": 60,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 66,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 69,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 70,
        "type": "direct"
      },
      {
        "callee": "next",
        "line": 72,
        "type": "direct"
      },
      {
        "callee": "patch",
        "line": 77,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 92,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 95,
        "type": "attribute"
      },
      {
        "callee": "put",
        "line": 106,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 110,
        "type": "attribute"
      },
      {
        "callee": "fetchone",
        "line": 111,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_end_to_end.py:TestE2EPrinterSetupWorkflow.test_complete_prusa_setup": [
      {
        "callee": "patch",
        "line": 118,
        "type": "direct"
      },
      {
        "callee": "connect",
        "line": 119,
        "type": "attribute"
      },
      {
        "callee": "patch",
        "line": 136,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 139,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 142,
        "type": "attribute"
      },
      {
        "callee": "patch",
        "line": 145,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 161,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 164,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_end_to_end.py:TestE2EJobManagementWorkflow.test_complete_print_job_lifecycle": [
      {
        "callee": "patch",
        "line": 175,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 197,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 200,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 212,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 212,
        "type": "attribute"
      },
      {
        "callee": "put",
        "line": 215,
        "type": "attribute"
      },
      {
        "callee": "put",
        "line": 226,
        "type": "attribute"
      },
      {
        "callee": "cursor",
        "line": 230,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 231,
        "type": "attribute"
      },
      {
        "callee": "fetchone",
        "line": 232,
        "type": "attribute"
      },
      {
        "callee": "abs",
        "line": 233,
        "type": "direct"
      },
      {
        "callee": "isoformat",
        "line": 244,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 244,
        "type": "attribute"
      },
      {
        "callee": "patch",
        "line": 247,
        "type": "direct"
      },
      {
        "callee": "put",
        "line": 259,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 263,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 266,
        "type": "attribute"
      },
      {
        "callee": "abs",
        "line": 279,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 282,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 285,
        "type": "attribute"
      },
      {
        "callee": "next",
        "line": 286,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_end_to_end.py:TestE2EJobManagementWorkflow.test_job_failure_and_recovery": [
      {
        "callee": "patch",
        "line": 292,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 306,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 307,
        "type": "attribute"
      },
      {
        "callee": "put",
        "line": 310,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 320,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 320,
        "type": "attribute"
      },
      {
        "callee": "put",
        "line": 323,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 327,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 328,
        "type": "attribute"
      },
      {
        "callee": "put",
        "line": 340,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 344,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 345,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_end_to_end.py:TestE2EFileManagementWorkflow.test_complete_file_download_workflow": [
      {
        "callee": "patch",
        "line": 357,
        "type": "direct"
      },
      {
        "callee": "patch",
        "line": 363,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 384,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 387,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 391,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 394,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 395,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 400,
        "type": "direct"
      },
      {
        "callee": "patch",
        "line": 405,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 414,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 417,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 422,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 423,
        "type": "attribute"
      },
      {
        "callee": "next",
        "line": 425,
        "type": "direct"
      },
      {
        "callee": "patch",
        "line": 437,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 440,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 446,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 449,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 451,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 454,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 455,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_end_to_end.py:TestE2EFileManagementWorkflow.test_file_cleanup_workflow": [
      {
        "callee": "patch",
        "line": 467,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 480,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 483,
        "type": "attribute"
      },
      {
        "callee": "patch",
        "line": 494,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 505,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 508,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_end_to_end.py:TestE2EDashboardWorkflow.test_complete_dashboard_monitoring": [
      {
        "callee": "patch",
        "line": 520,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 526,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 529,
        "type": "attribute"
      },
      {
        "callee": "patch",
        "line": 550,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 576,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 579,
        "type": "attribute"
      },
      {
        "callee": "round",
        "line": 584,
        "type": "direct"
      },
      {
        "callee": "abs",
        "line": 585,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 596,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_end_to_end.py:TestE2EDashboardWorkflow.test_real_time_dashboard_updates": [
      {
        "callee": "patch",
        "line": 609,
        "type": "direct"
      },
      {
        "callee": "mock_websocket_handler",
        "line": 668,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 671,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_end_to_end.py:TestE2EDashboardWorkflow.mock_websocket_handler": [
      {
        "callee": "send",
        "line": 630,
        "type": "attribute"
      },
      {
        "callee": "dumps",
        "line": 630,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 664,
        "type": "attribute"
      },
      {
        "callee": "sleep",
        "line": 665,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_end_to_end.py:TestE2EGermanBusinessCompliance.test_complete_vat_compliance_workflow": [
      {
        "callee": "patch",
        "line": 689,
        "type": "direct"
      },
      {
        "callee": "connect",
        "line": 690,
        "type": "attribute"
      },
      {
        "callee": "cursor",
        "line": 695,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 696,
        "type": "attribute"
      },
      {
        "callee": "commit",
        "line": 703,
        "type": "attribute"
      },
      {
        "callee": "post",
        "line": 731,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 733,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 733,
        "type": "attribute"
      },
      {
        "callee": "enumerate",
        "line": 736,
        "type": "direct"
      },
      {
        "callee": "patch",
        "line": 744,
        "type": "direct"
      },
      {
        "callee": "round",
        "line": 746,
        "type": "direct"
      },
      {
        "callee": "put",
        "line": 756,
        "type": "attribute"
      },
      {
        "callee": "patch",
        "line": 767,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 790,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 793,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 796,
        "type": "direct"
      },
      {
        "callee": "sum",
        "line": 799,
        "type": "direct"
      },
      {
        "callee": "abs",
        "line": 800,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 813,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_error_handling.py:TestNetworkErrorHandling.test_printer_connection_timeout": [
      {
        "callee": "patch",
        "line": 43,
        "type": "direct"
      },
      {
        "callee": "ConnectTimeout",
        "line": 44,
        "type": "attribute"
      },
      {
        "callee": "post",
        "line": 46,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 49,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 51,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_error_handling.py:TestNetworkErrorHandling.test_network_interruption_during_operation": [
      {
        "callee": "patch",
        "line": 56,
        "type": "direct"
      },
      {
        "callee": "patch",
        "line": 62,
        "type": "direct"
      },
      {
        "callee": "ConnectionError",
        "line": 63,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 65,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 68,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_error_handling.py:TestNetworkErrorHandling.test_dns_resolution_failure": [
      {
        "callee": "patch",
        "line": 82,
        "type": "direct"
      },
      {
        "callee": "ConnectionError",
        "line": 83,
        "type": "attribute"
      },
      {
        "callee": "post",
        "line": 87,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 90,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 92,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_error_handling.py:TestNetworkErrorHandling.test_ssl_certificate_errors": [
      {
        "callee": "patch",
        "line": 104,
        "type": "direct"
      },
      {
        "callee": "SSLError",
        "line": 105,
        "type": "attribute"
      },
      {
        "callee": "post",
        "line": 109,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 112,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 114,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_error_handling.py:TestDataValidationErrors.test_malformed_json_requests": [
      {
        "callee": "patch",
        "line": 138,
        "type": "direct"
      },
      {
        "callee": "Mock",
        "line": 139,
        "type": "direct"
      },
      {
        "callee": "mock_post",
        "line": 148,
        "type": "direct"
      },
      {
        "callee": "json",
        "line": 152,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_error_handling.py:TestDataValidationErrors.test_invalid_data_types": [
      {
        "callee": "patch",
        "line": 171,
        "type": "direct"
      },
      {
        "callee": "next",
        "line": 176,
        "type": "direct"
      },
      {
        "callee": "iter",
        "line": 176,
        "type": "direct"
      },
      {
        "callee": "keys",
        "line": 176,
        "type": "attribute"
      },
      {
        "callee": "type",
        "line": 179,
        "type": "direct"
      },
      {
        "callee": "list",
        "line": 179,
        "type": "direct"
      },
      {
        "callee": "values",
        "line": 179,
        "type": "attribute"
      },
      {
        "callee": "post",
        "line": 184,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 187,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_error_handling.py:TestDataValidationErrors.test_out_of_range_values": [
      {
        "callee": "patch",
        "line": 205,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 215,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 218,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 219,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_error_handling.py:TestDataValidationErrors.test_string_length_validation": [
      {
        "callee": "patch",
        "line": 241,
        "type": "direct"
      },
      {
        "callee": "list",
        "line": 245,
        "type": "direct"
      },
      {
        "callee": "keys",
        "line": 245,
        "type": "attribute"
      },
      {
        "callee": "post",
        "line": 251,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_error_handling.py:TestDatabaseErrorHandling.test_database_connection_failure": [
      {
        "callee": "patch",
        "line": 262,
        "type": "direct"
      },
      {
        "callee": "OperationalError",
        "line": 263,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 265,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 268,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 270,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_error_handling.py:TestDatabaseErrorHandling.test_database_corruption": [
      {
        "callee": "open",
        "line": 276,
        "type": "direct"
      },
      {
        "callee": "write",
        "line": 277,
        "type": "attribute"
      },
      {
        "callee": "patch",
        "line": 279,
        "type": "direct"
      },
      {
        "callee": "DatabaseError",
        "line": 280,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 282,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 285,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 287,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_error_handling.py:TestDatabaseErrorHandling.test_constraint_violations": [
      {
        "callee": "patch",
        "line": 291,
        "type": "direct"
      },
      {
        "callee": "patch",
        "line": 303,
        "type": "direct"
      },
      {
        "callee": "IntegrityError",
        "line": 304,
        "type": "attribute"
      },
      {
        "callee": "post",
        "line": 306,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 309,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_error_handling.py:TestDatabaseErrorHandling.test_transaction_rollback_on_error": [
      {
        "callee": "patch",
        "line": 315,
        "type": "direct"
      },
      {
        "callee": "patch",
        "line": 327,
        "type": "direct"
      },
      {
        "callee": "patch",
        "line": 328,
        "type": "direct"
      },
      {
        "callee": "Error",
        "line": 331,
        "type": "attribute"
      },
      {
        "callee": "post",
        "line": 333,
        "type": "attribute"
      },
      {
        "callee": "cursor",
        "line": 338,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 339,
        "type": "attribute"
      },
      {
        "callee": "fetchone",
        "line": 340,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_error_handling.py:TestFileSystemErrorHandling.test_insufficient_disk_space": [
      {
        "callee": "patch",
        "line": 352,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 359,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 362,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_error_handling.py:TestFileSystemErrorHandling.test_permission_denied_errors": [
      {
        "callee": "patch",
        "line": 372,
        "type": "direct"
      },
      {
        "callee": "PermissionError",
        "line": 373,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 375,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 378,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 380,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_error_handling.py:TestFileSystemErrorHandling.test_file_corruption_during_download": [
      {
        "callee": "patch",
        "line": 387,
        "type": "direct"
      },
      {
        "callee": "patch",
        "line": 388,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 402,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 405,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 407,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_error_handling.py:TestFileSystemErrorHandling.test_missing_file_errors": [
      {
        "callee": "patch",
        "line": 414,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 417,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 420,
        "type": "attribute"
      },
      {
        "callee": "delete",
        "line": 425,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 428,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_error_handling.py:TestConcurrencyErrorHandling.test_concurrent_resource_access": [
      {
        "callee": "patch",
        "line": 437,
        "type": "direct"
      },
      {
        "callee": "patch",
        "line": 447,
        "type": "direct"
      },
      {
        "callee": "Error",
        "line": 451,
        "type": "attribute"
      },
      {
        "callee": "Thread",
        "line": 466,
        "type": "attribute"
      },
      {
        "callee": "Thread",
        "line": 467,
        "type": "attribute"
      },
      {
        "callee": "start",
        "line": 471,
        "type": "attribute"
      },
      {
        "callee": "join",
        "line": 474,
        "type": "attribute"
      },
      {
        "callee": "hasattr",
        "line": 477,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_error_handling.py:TestConcurrencyErrorHandling.make_update": [
      {
        "callee": "put",
        "line": 460,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 461,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 463,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_error_handling.py:TestConcurrencyErrorHandling.test_race_condition_in_job_creation": [
      {
        "callee": "patch",
        "line": 483,
        "type": "direct"
      },
      {
        "callee": "patch",
        "line": 495,
        "type": "direct"
      },
      {
        "callee": "patch",
        "line": 499,
        "type": "direct"
      },
      {
        "callee": "IntegrityError",
        "line": 503,
        "type": "attribute"
      },
      {
        "callee": "Thread",
        "line": 516,
        "type": "attribute"
      },
      {
        "callee": "range",
        "line": 516,
        "type": "direct"
      },
      {
        "callee": "start",
        "line": 519,
        "type": "attribute"
      },
      {
        "callee": "join",
        "line": 522,
        "type": "attribute"
      },
      {
        "callee": "sum",
        "line": 525,
        "type": "direct"
      },
      {
        "callee": "hasattr",
        "line": 525,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_error_handling.py:TestConcurrencyErrorHandling.create_job": [
      {
        "callee": "post",
        "line": 511,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 512,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 514,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_error_handling.py:TestSecurityErrorHandling.test_sql_injection_attempts": [
      {
        "callee": "patch",
        "line": 552,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 559,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 562,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_error_handling.py:TestSecurityErrorHandling.test_path_traversal_attempts": [
      {
        "callee": "patch",
        "line": 586,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 593,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 596,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 598,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_error_handling.py:TestSecurityErrorHandling.test_xss_prevention": [
      {
        "callee": "patch",
        "line": 620,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 627,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 631,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 635,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_error_handling.py:TestResourceExhaustionHandling.test_memory_exhaustion_handling": [
      {
        "callee": "patch",
        "line": 648,
        "type": "direct"
      },
      {
        "callee": "MemoryError",
        "line": 649,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 651,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 654,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 656,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_error_handling.py:TestResourceExhaustionHandling.test_too_many_concurrent_requests": [
      {
        "callee": "patch",
        "line": 664,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 673,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 678,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_error_handling.py:TestResourceExhaustionHandling.test_disk_space_exhaustion": [
      {
        "callee": "patch",
        "line": 686,
        "type": "direct"
      },
      {
        "callee": "OSError",
        "line": 687,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 689,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 692,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 694,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_error_handling.py:TestEdgeCaseScenarios.test_unicode_and_special_characters": [
      {
        "callee": "post",
        "line": 722,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 727,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_error_handling.py:TestEdgeCaseScenarios.test_extreme_numeric_values": [
      {
        "callee": "float",
        "line": 736,
        "type": "direct"
      },
      {
        "callee": "float",
        "line": 737,
        "type": "direct"
      },
      {
        "callee": "float",
        "line": 738,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 741,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 752,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 756,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_error_handling.py:TestEdgeCaseScenarios.test_very_long_operations": [
      {
        "callee": "patch",
        "line": 763,
        "type": "direct"
      },
      {
        "callee": "patch",
        "line": 774,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 775,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 778,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 780,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_error_handling.py:TestEdgeCaseScenarios.slow_download": [
      {
        "callee": "sleep",
        "line": 768,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_error_handling.py:TestEdgeCaseScenarios.test_circular_references_in_data": [
      {
        "callee": "CircularReference",
        "line": 791,
        "type": "direct"
      },
      {
        "callee": "patch",
        "line": 794,
        "type": "direct"
      },
      {
        "callee": "ValueError",
        "line": 795,
        "type": "direct"
      },
      {
        "callee": "dumps",
        "line": 799,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 801,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 801,
        "type": "direct"
      },
      {
        "callee": "lower",
        "line": 801,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 801,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_german_business.py:TestGermanCurrencyHandling.test_eur_currency_formatting": [
      {
        "callee": "patch",
        "line": 40,
        "type": "direct"
      },
      {
        "callee": "mock_format",
        "line": 43,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_german_business.py:TestGermanCurrencyHandling.test_currency_precision": [
      {
        "callee": "patch",
        "line": 50,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 53,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 54,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 55,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 56,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 57,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 58,
        "type": "direct"
      },
      {
        "callee": "mock_round",
        "line": 63,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 63,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 63,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_german_business.py:TestGermanCurrencyHandling.test_currency_conversion_edge_cases": [
      {
        "callee": "patch",
        "line": 70,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 72,
        "type": "direct"
      },
      {
        "callee": "mock_handle",
        "line": 73,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 73,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 74,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 77,
        "type": "direct"
      },
      {
        "callee": "mock_handle",
        "line": 78,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 78,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 79,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 82,
        "type": "direct"
      },
      {
        "callee": "mock_handle",
        "line": 83,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 83,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 84,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_german_business.py:TestGermanVATCalculations.test_standard_vat_rate_19_percent": [
      {
        "callee": "patch",
        "line": 94,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 97,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 97,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 97,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 98,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 98,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 98,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 99,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 99,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 99,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 100,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 100,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 100,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 101,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 101,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 101,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 102,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 102,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 102,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 108,
        "type": "direct"
      },
      {
        "callee": "mock_vat",
        "line": 113,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 113,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 118,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_german_business.py:TestGermanVATCalculations.test_reverse_vat_calculation": [
      {
        "callee": "patch",
        "line": 124,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 127,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 127,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 127,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 128,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 128,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 128,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 129,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 129,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 129,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 130,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 130,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 130,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 138,
        "type": "direct"
      },
      {
        "callee": "mock_reverse",
        "line": 141,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 141,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_german_business.py:TestGermanVATCalculations.test_vat_exemption_cases": [
      {
        "callee": "patch",
        "line": 150,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 152,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 153,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 154,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 155,
        "type": "direct"
      },
      {
        "callee": "mock_exempt",
        "line": 159,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 159,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 161,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_german_business.py:TestGermanVATCalculations.test_complex_invoice_vat_calculation": [
      {
        "callee": "Decimal",
        "line": 170,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 171,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 172,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 173,
        "type": "direct"
      },
      {
        "callee": "patch",
        "line": 176,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 179,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 180,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 181,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 184,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 185,
        "type": "direct"
      },
      {
        "callee": "mock_invoice",
        "line": 190,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 190,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 192,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 193,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 194,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_german_business.py:TestGermanTimezoneHandling.test_berlin_timezone_conversion": [
      {
        "callee": "patch",
        "line": 204,
        "type": "direct"
      },
      {
        "callee": "patch",
        "line": 205,
        "type": "direct"
      },
      {
        "callee": "datetime",
        "line": 207,
        "type": "direct"
      },
      {
        "callee": "datetime",
        "line": 208,
        "type": "direct"
      },
      {
        "callee": "timezone",
        "line": 208,
        "type": "attribute"
      },
      {
        "callee": "mock_to_berlin",
        "line": 211,
        "type": "direct"
      },
      {
        "callee": "mock_from_berlin",
        "line": 218,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_german_business.py:TestGermanTimezoneHandling.test_daylight_saving_time_transitions": [
      {
        "callee": "patch",
        "line": 227,
        "type": "direct"
      },
      {
        "callee": "datetime",
        "line": 229,
        "type": "direct"
      },
      {
        "callee": "datetime",
        "line": 232,
        "type": "direct"
      },
      {
        "callee": "datetime",
        "line": 233,
        "type": "direct"
      },
      {
        "callee": "mock_dst",
        "line": 238,
        "type": "direct"
      },
      {
        "callee": "datetime",
        "line": 243,
        "type": "direct"
      },
      {
        "callee": "datetime",
        "line": 246,
        "type": "direct"
      },
      {
        "callee": "datetime",
        "line": 247,
        "type": "direct"
      },
      {
        "callee": "mock_dst",
        "line": 252,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_german_business.py:TestGermanTimezoneHandling.test_business_hours_calculation": [
      {
        "callee": "timezone",
        "line": 260,
        "type": "attribute"
      },
      {
        "callee": "patch",
        "line": 262,
        "type": "direct"
      },
      {
        "callee": "patch",
        "line": 263,
        "type": "direct"
      },
      {
        "callee": "localize",
        "line": 265,
        "type": "attribute"
      },
      {
        "callee": "datetime",
        "line": 265,
        "type": "direct"
      },
      {
        "callee": "mock_hours",
        "line": 267,
        "type": "direct"
      },
      {
        "callee": "localize",
        "line": 270,
        "type": "attribute"
      },
      {
        "callee": "datetime",
        "line": 270,
        "type": "direct"
      },
      {
        "callee": "mock_hours",
        "line": 272,
        "type": "direct"
      },
      {
        "callee": "localize",
        "line": 275,
        "type": "attribute"
      },
      {
        "callee": "datetime",
        "line": 275,
        "type": "direct"
      },
      {
        "callee": "localize",
        "line": 276,
        "type": "attribute"
      },
      {
        "callee": "datetime",
        "line": 276,
        "type": "direct"
      },
      {
        "callee": "mock_duration",
        "line": 285,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_german_business.py:TestGermanDateTimeFormatting.test_german_date_formatting": [
      {
        "callee": "patch",
        "line": 297,
        "type": "direct"
      },
      {
        "callee": "datetime",
        "line": 299,
        "type": "direct"
      },
      {
        "callee": "datetime",
        "line": 300,
        "type": "direct"
      },
      {
        "callee": "datetime",
        "line": 301,
        "type": "direct"
      },
      {
        "callee": "datetime",
        "line": 302,
        "type": "direct"
      },
      {
        "callee": "mock_format",
        "line": 307,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_german_business.py:TestGermanDateTimeFormatting.test_german_time_formatting": [
      {
        "callee": "patch",
        "line": 314,
        "type": "direct"
      },
      {
        "callee": "datetime",
        "line": 316,
        "type": "direct"
      },
      {
        "callee": "datetime",
        "line": 317,
        "type": "direct"
      },
      {
        "callee": "datetime",
        "line": 318,
        "type": "direct"
      },
      {
        "callee": "datetime",
        "line": 319,
        "type": "direct"
      },
      {
        "callee": "mock_format",
        "line": 324,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_german_business.py:TestGermanDateTimeFormatting.test_german_datetime_formatting": [
      {
        "callee": "patch",
        "line": 331,
        "type": "direct"
      },
      {
        "callee": "datetime",
        "line": 332,
        "type": "direct"
      },
      {
        "callee": "items",
        "line": 339,
        "type": "attribute"
      },
      {
        "callee": "mock_format",
        "line": 341,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_german_business.py:TestGermanAccountingStandards.test_hgb_compliance": [
      {
        "callee": "patch",
        "line": 352,
        "type": "direct"
      },
      {
        "callee": "datetime",
        "line": 355,
        "type": "direct"
      },
      {
        "callee": "mock_validate",
        "line": 377,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 379,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_german_business.py:TestGermanAccountingStandards.test_gob_electronic_records": [
      {
        "callee": "patch",
        "line": 385,
        "type": "direct"
      },
      {
        "callee": "datetime",
        "line": 388,
        "type": "direct"
      },
      {
        "callee": "timezone",
        "line": 388,
        "type": "attribute"
      },
      {
        "callee": "Decimal",
        "line": 390,
        "type": "direct"
      },
      {
        "callee": "datetime",
        "line": 399,
        "type": "direct"
      },
      {
        "callee": "datetime",
        "line": 402,
        "type": "direct"
      },
      {
        "callee": "mock_gobd",
        "line": 408,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_german_business.py:TestGermanAccountingStandards.test_invoice_numbering_sequence": [
      {
        "callee": "patch",
        "line": 416,
        "type": "direct"
      },
      {
        "callee": "patch",
        "line": 417,
        "type": "direct"
      },
      {
        "callee": "enumerate",
        "line": 421,
        "type": "direct"
      },
      {
        "callee": "mock_generate",
        "line": 423,
        "type": "direct"
      },
      {
        "callee": "mock_validate",
        "line": 435,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 437,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_german_business.py:TestGermanTaxReporting.test_ustva_vat_return_format": [
      {
        "callee": "patch",
        "line": 447,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 462,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 463,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 464,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 465,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 466,
        "type": "direct"
      },
      {
        "callee": "mock_ustva",
        "line": 476,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 479,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_german_business.py:TestGermanTaxReporting.test_annual_tax_declaration": [
      {
        "callee": "patch",
        "line": 485,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 489,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 490,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 491,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 492,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 493,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 494,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 499,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 500,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 501,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 502,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 503,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 504,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 505,
        "type": "direct"
      },
      {
        "callee": "mock_annual",
        "line": 508,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 510,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_german_business.py:TestGermanTaxReporting.test_elster_xml_export": [
      {
        "callee": "patch",
        "line": 516,
        "type": "direct"
      },
      {
        "callee": "mock_elster",
        "line": 555,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_german_business.py:TestGermanBusinessWorkflows.test_b2b_invoice_workflow": [
      {
        "callee": "patch",
        "line": 568,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 584,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 585,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 590,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 591,
        "type": "direct"
      },
      {
        "callee": "strftime",
        "line": 599,
        "type": "attribute"
      },
      {
        "callee": "datetime",
        "line": 599,
        "type": "direct"
      },
      {
        "callee": "strftime",
        "line": 600,
        "type": "attribute"
      },
      {
        "callee": "datetime",
        "line": 600,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 606,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 607,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 608,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 613,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 614,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 615,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 618,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 619,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 620,
        "type": "direct"
      },
      {
        "callee": "mock_b2b",
        "line": 625,
        "type": "direct"
      },
      {
        "callee": "startswith",
        "line": 627,
        "type": "attribute"
      },
      {
        "callee": "Decimal",
        "line": 628,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 629,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 630,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_german_business.py:TestGermanBusinessWorkflows.test_kleinunternehmer_exemption": [
      {
        "callee": "patch",
        "line": 640,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 643,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 644,
        "type": "direct"
      },
      {
        "callee": "date",
        "line": 653,
        "type": "attribute"
      },
      {
        "callee": "datetime",
        "line": 653,
        "type": "direct"
      },
      {
        "callee": "mock_exempt",
        "line": 656,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_integration.py:TestAPIIntegration.test_complete_printer_lifecycle": [
      {
        "callee": "patch",
        "line": 23,
        "type": "direct"
      },
      {
        "callee": "connect",
        "line": 24,
        "type": "attribute"
      },
      {
        "callee": "patch",
        "line": 42,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 44,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 46,
        "type": "attribute"
      },
      {
        "callee": "patch",
        "line": 49,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 59,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 61,
        "type": "attribute"
      },
      {
        "callee": "put",
        "line": 67,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 71,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 73,
        "type": "attribute"
      },
      {
        "callee": "delete",
        "line": 77,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 81,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_integration.py:TestAPIIntegration.test_complete_job_workflow": [
      {
        "callee": "patch",
        "line": 86,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 105,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 107,
        "type": "attribute"
      },
      {
        "callee": "put",
        "line": 118,
        "type": "attribute"
      },
      {
        "callee": "patch",
        "line": 122,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 130,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 132,
        "type": "attribute"
      },
      {
        "callee": "put",
        "line": 146,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 150,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 152,
        "type": "attribute"
      },
      {
        "callee": "round",
        "line": 167,
        "type": "direct"
      },
      {
        "callee": "float",
        "line": 167,
        "type": "direct"
      },
      {
        "callee": "abs",
        "line": 168,
        "type": "direct"
      },
      {
        "callee": "float",
        "line": 168,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_integration.py:TestAPIIntegration.test_file_management_workflow": [
      {
        "callee": "patch",
        "line": 172,
        "type": "direct"
      },
      {
        "callee": "patch",
        "line": 178,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 190,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 192,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 195,
        "type": "direct"
      },
      {
        "callee": "next",
        "line": 198,
        "type": "direct"
      },
      {
        "callee": "patch",
        "line": 203,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 210,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 212,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 219,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 221,
        "type": "attribute"
      },
      {
        "callee": "next",
        "line": 223,
        "type": "direct"
      },
      {
        "callee": "delete",
        "line": 228,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_integration.py:TestAPIIntegration.test_dashboard_real_time_updates": [
      {
        "callee": "patch",
        "line": 233,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 239,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 241,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_integration.py:TestWebSocketIntegration.mock_send": [
      {
        "callee": "append",
        "line": 275,
        "type": "attribute"
      },
      {
        "callee": "loads",
        "line": 275,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 306,
        "type": "attribute"
      },
      {
        "callee": "loads",
        "line": 306,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 337,
        "type": "attribute"
      },
      {
        "callee": "loads",
        "line": 337,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_integration.py:TestWebSocketIntegration.test_real_time_job_updates": [
      {
        "callee": "patch",
        "line": 280,
        "type": "direct"
      },
      {
        "callee": "mock_broadcast",
        "line": 296,
        "type": "direct"
      },
      {
        "callee": "assert_called_once_with",
        "line": 297,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_integration.py:TestWebSocketIntegration.test_printer_status_broadcast": [
      {
        "callee": "patch",
        "line": 311,
        "type": "direct"
      },
      {
        "callee": "mock_broadcast",
        "line": 327,
        "type": "direct"
      },
      {
        "callee": "assert_called_once_with",
        "line": 328,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_integration.py:TestWebSocketIntegration.test_file_download_progress": [
      {
        "callee": "patch",
        "line": 342,
        "type": "direct"
      },
      {
        "callee": "mock_broadcast",
        "line": 353,
        "type": "direct"
      },
      {
        "callee": "assert_called_once_with",
        "line": 354,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_integration.py:TestGermanBusinessLogic.test_vat_calculations": [
      {
        "callee": "patch",
        "line": 365,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 367,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 368,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 369,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 370,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 371,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 372,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 373,
        "type": "direct"
      },
      {
        "callee": "mock_calc",
        "line": 382,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 385,
        "type": "direct"
      },
      {
        "callee": "abs",
        "line": 386,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 386,
        "type": "direct"
      },
      {
        "callee": "abs",
        "line": 390,
        "type": "direct"
      },
      {
        "callee": "Decimal",
        "line": 390,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_integration.py:TestGermanBusinessLogic.test_berlin_timezone_handling": [
      {
        "callee": "patch",
        "line": 397,
        "type": "direct"
      },
      {
        "callee": "timezone",
        "line": 398,
        "type": "attribute"
      },
      {
        "callee": "localize",
        "line": 399,
        "type": "attribute"
      },
      {
        "callee": "datetime",
        "line": 399,
        "type": "direct"
      },
      {
        "callee": "mock_timestamp",
        "line": 402,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_integration.py:TestGermanBusinessLogic.test_currency_formatting": [
      {
        "callee": "format_currency",
        "line": 411,
        "type": "attribute"
      },
      {
        "callee": "format_currency",
        "line": 412,
        "type": "attribute"
      },
      {
        "callee": "format_currency",
        "line": 413,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_integration.py:TestGermanBusinessLogic.test_business_hours_validation": [
      {
        "callee": "patch",
        "line": 419,
        "type": "direct"
      },
      {
        "callee": "timezone",
        "line": 421,
        "type": "attribute"
      },
      {
        "callee": "localize",
        "line": 422,
        "type": "attribute"
      },
      {
        "callee": "datetime",
        "line": 422,
        "type": "direct"
      },
      {
        "callee": "mock_hours",
        "line": 425,
        "type": "direct"
      },
      {
        "callee": "localize",
        "line": 429,
        "type": "attribute"
      },
      {
        "callee": "datetime",
        "line": 429,
        "type": "direct"
      },
      {
        "callee": "mock_hours",
        "line": 432,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_integration.py:TestGermanBusinessLogic.test_export_data_format": [
      {
        "callee": "patch",
        "line": 437,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 443,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_integration.py:TestErrorHandlingIntegration.test_printer_connection_failure_recovery": [
      {
        "callee": "patch",
        "line": 473,
        "type": "direct"
      },
      {
        "callee": "ConnectionError",
        "line": 474,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 476,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 478,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_integration.py:TestErrorHandlingIntegration.test_database_transaction_rollback": [
      {
        "callee": "patch",
        "line": 483,
        "type": "direct"
      },
      {
        "callee": "connect",
        "line": 484,
        "type": "attribute"
      },
      {
        "callee": "post",
        "line": 495,
        "type": "attribute"
      },
      {
        "callee": "cursor",
        "line": 499,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 500,
        "type": "attribute"
      },
      {
        "callee": "fetchone",
        "line": 501,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_integration.py:TestErrorHandlingIntegration.mock_connect": [
      {
        "callee": "append",
        "line": 511,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_integration.py:TestErrorHandlingIntegration.mock_disconnect": [
      {
        "callee": "append",
        "line": 515,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_integration.py:TestErrorHandlingIntegration.test_websocket_reconnection": [
      {
        "callee": "patch",
        "line": 517,
        "type": "direct"
      },
      {
        "callee": "patch",
        "line": 518,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_integration.py:TestErrorHandlingIntegration.test_file_download_interruption_recovery": [
      {
        "callee": "patch",
        "line": 532,
        "type": "direct"
      },
      {
        "callee": "ConnectionError",
        "line": 534,
        "type": "direct"
      },
      {
        "callee": "post",
        "line": 536,
        "type": "attribute"
      },
      {
        "callee": "post",
        "line": 548,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 550,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_job_null_fix.py:TestNullJobIDFix.test_job_model_rejects_null_id": [
      {
        "callee": "Job",
        "line": 24,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 25,
        "type": "direct"
      },
      {
        "callee": "uuid4",
        "line": 25,
        "type": "attribute"
      },
      {
        "callee": "raises",
        "line": 34,
        "type": "attribute"
      },
      {
        "callee": "Job",
        "line": 35,
        "type": "direct"
      },
      {
        "callee": "errors",
        "line": 43,
        "type": "attribute"
      },
      {
        "callee": "any",
        "line": 44,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_job_null_fix.py:TestNullJobIDFix.test_database_prevents_null_job_ids": [
      {
        "callee": "mkstemp",
        "line": 50,
        "type": "attribute"
      },
      {
        "callee": "close",
        "line": 51,
        "type": "attribute"
      },
      {
        "callee": "Database",
        "line": 53,
        "type": "direct"
      },
      {
        "callee": "initialize",
        "line": 54,
        "type": "attribute"
      },
      {
        "callee": "raises",
        "line": 58,
        "type": "attribute"
      },
      {
        "callee": "connection",
        "line": 59,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 60,
        "type": "attribute"
      },
      {
        "callee": "commit",
        "line": 64,
        "type": "attribute"
      },
      {
        "callee": "raises",
        "line": 67,
        "type": "attribute"
      },
      {
        "callee": "connection",
        "line": 68,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 69,
        "type": "attribute"
      },
      {
        "callee": "commit",
        "line": 73,
        "type": "attribute"
      },
      {
        "callee": "close",
        "line": 76,
        "type": "attribute"
      },
      {
        "callee": "unlink",
        "line": 78,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_job_null_fix.py:TestNullJobIDFix.test_job_service_creates_valid_ids": [
      {
        "callee": "mkstemp",
        "line": 86,
        "type": "attribute"
      },
      {
        "callee": "close",
        "line": 87,
        "type": "attribute"
      },
      {
        "callee": "Database",
        "line": 89,
        "type": "direct"
      },
      {
        "callee": "initialize",
        "line": 90,
        "type": "attribute"
      },
      {
        "callee": "EventService",
        "line": 93,
        "type": "direct"
      },
      {
        "callee": "JobService",
        "line": 94,
        "type": "direct"
      },
      {
        "callee": "range",
        "line": 98,
        "type": "direct"
      },
      {
        "callee": "create_job",
        "line": 99,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 104,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 109,
        "type": "direct"
      },
      {
        "callee": "UUID",
        "line": 110,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 113,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 113,
        "type": "direct"
      },
      {
        "callee": "set",
        "line": 113,
        "type": "direct"
      },
      {
        "callee": "get_job",
        "line": 117,
        "type": "attribute"
      },
      {
        "callee": "close",
        "line": 122,
        "type": "attribute"
      },
      {
        "callee": "unlink",
        "line": 124,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_job_null_fix.py:TestNullJobIDFix.test_migration_005_applied": [
      {
        "callee": "mkstemp",
        "line": 132,
        "type": "attribute"
      },
      {
        "callee": "close",
        "line": 133,
        "type": "attribute"
      },
      {
        "callee": "Database",
        "line": 135,
        "type": "direct"
      },
      {
        "callee": "initialize",
        "line": 136,
        "type": "attribute"
      },
      {
        "callee": "connection",
        "line": 140,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 141,
        "type": "attribute"
      },
      {
        "callee": "fetchone",
        "line": 144,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 148,
        "type": "attribute"
      },
      {
        "callee": "fetchone",
        "line": 151,
        "type": "attribute"
      },
      {
        "callee": "close",
        "line": 156,
        "type": "attribute"
      },
      {
        "callee": "unlink",
        "line": 158,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_job_null_fix.py:TestNullJobIDFix.test_job_service_error_logging": [
      {
        "callee": "mkstemp",
        "line": 166,
        "type": "attribute"
      },
      {
        "callee": "close",
        "line": 167,
        "type": "attribute"
      },
      {
        "callee": "Database",
        "line": 169,
        "type": "direct"
      },
      {
        "callee": "initialize",
        "line": 170,
        "type": "attribute"
      },
      {
        "callee": "EventService",
        "line": 173,
        "type": "direct"
      },
      {
        "callee": "JobService",
        "line": 174,
        "type": "direct"
      },
      {
        "callee": "create_job",
        "line": 177,
        "type": "attribute"
      },
      {
        "callee": "get_jobs",
        "line": 184,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 185,
        "type": "direct"
      },
      {
        "callee": "list_jobs",
        "line": 189,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 190,
        "type": "direct"
      },
      {
        "callee": "close",
        "line": 193,
        "type": "attribute"
      },
      {
        "callee": "unlink",
        "line": 195,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_job_validation.py:create_test_db": [
      {
        "callee": "mkstemp",
        "line": 21,
        "type": "attribute"
      },
      {
        "callee": "close",
        "line": 22,
        "type": "attribute"
      },
      {
        "callee": "Database",
        "line": 24,
        "type": "direct"
      },
      {
        "callee": "initialize",
        "line": 25,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_job_validation.py:TestJobIDValidation.test_database_schema_prevents_null_ids": [
      {
        "callee": "create_test_db",
        "line": 35,
        "type": "direct"
      },
      {
        "callee": "raises",
        "line": 38,
        "type": "attribute"
      },
      {
        "callee": "connection",
        "line": 39,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 40,
        "type": "attribute"
      },
      {
        "callee": "commit",
        "line": 44,
        "type": "attribute"
      },
      {
        "callee": "close",
        "line": 46,
        "type": "attribute"
      },
      {
        "callee": "unlink",
        "line": 47,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_job_validation.py:TestJobIDValidation.test_database_schema_prevents_empty_ids": [
      {
        "callee": "create_test_db",
        "line": 52,
        "type": "direct"
      },
      {
        "callee": "raises",
        "line": 55,
        "type": "attribute"
      },
      {
        "callee": "connection",
        "line": 56,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 57,
        "type": "attribute"
      },
      {
        "callee": "commit",
        "line": 61,
        "type": "attribute"
      },
      {
        "callee": "close",
        "line": 63,
        "type": "attribute"
      },
      {
        "callee": "unlink",
        "line": 64,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_job_validation.py:TestJobIDValidation.test_job_service_creates_valid_id": [
      {
        "callee": "create_test_db",
        "line": 69,
        "type": "direct"
      },
      {
        "callee": "EventService",
        "line": 71,
        "type": "direct"
      },
      {
        "callee": "JobService",
        "line": 72,
        "type": "direct"
      },
      {
        "callee": "create_job",
        "line": 82,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 87,
        "type": "direct"
      },
      {
        "callee": "get_job",
        "line": 90,
        "type": "attribute"
      },
      {
        "callee": "close",
        "line": 94,
        "type": "attribute"
      },
      {
        "callee": "unlink",
        "line": 95,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_job_validation.py:TestJobIDValidation.test_job_model_validates_id_field": [
      {
        "callee": "Job",
        "line": 101,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 102,
        "type": "direct"
      },
      {
        "callee": "uuid4",
        "line": 102,
        "type": "attribute"
      },
      {
        "callee": "raises",
        "line": 112,
        "type": "attribute"
      },
      {
        "callee": "Job",
        "line": 113,
        "type": "direct"
      },
      {
        "callee": "errors",
        "line": 121,
        "type": "attribute"
      },
      {
        "callee": "any",
        "line": 122,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_job_validation.py:TestJobIDValidation.test_get_jobs_skips_invalid_jobs": [
      {
        "callee": "create_job",
        "line": 128,
        "type": "attribute"
      },
      {
        "callee": "get_jobs",
        "line": 135,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 136,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_job_validation.py:TestJobIDValidation.test_list_jobs_skips_invalid_jobs": [
      {
        "callee": "create_job",
        "line": 143,
        "type": "attribute"
      },
      {
        "callee": "create_job",
        "line": 149,
        "type": "attribute"
      },
      {
        "callee": "list_jobs",
        "line": 156,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 157,
        "type": "direct"
      },
      {
        "callee": "list_jobs",
        "line": 160,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 161,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_job_validation.py:TestMigration005.test_migration_tracking_table_created": [
      {
        "callee": "connection",
        "line": 171,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 172,
        "type": "attribute"
      },
      {
        "callee": "fetchone",
        "line": 175,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_job_validation.py:TestMigration005.test_migration_005_recorded": [
      {
        "callee": "connection",
        "line": 181,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 182,
        "type": "attribute"
      },
      {
        "callee": "fetchone",
        "line": 185,
        "type": "attribute"
      },
      {
        "callee": "lower",
        "line": 188,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_job_validation.py:TestMigration005.test_jobs_table_has_not_null_constraint": [
      {
        "callee": "connection",
        "line": 193,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 194,
        "type": "attribute"
      },
      {
        "callee": "fetchall",
        "line": 195,
        "type": "attribute"
      },
      {
        "callee": "next",
        "line": 198,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_job_validation.py:TestJobCreationValidation.test_create_job_validates_required_fields": [
      {
        "callee": "raises",
        "line": 211,
        "type": "attribute"
      },
      {
        "callee": "create_job",
        "line": 212,
        "type": "attribute"
      },
      {
        "callee": "raises",
        "line": 217,
        "type": "attribute"
      },
      {
        "callee": "create_job",
        "line": 218,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_job_validation.py:TestJobCreationValidation.test_create_job_generates_unique_ids": [
      {
        "callee": "range",
        "line": 227,
        "type": "direct"
      },
      {
        "callee": "create_job",
        "line": 228,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 233,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 236,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 236,
        "type": "direct"
      },
      {
        "callee": "set",
        "line": 236,
        "type": "direct"
      },
      {
        "callee": "UUID",
        "line": 240,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_job_validation.py:TestJobCreationValidation.test_create_job_with_business_info": [
      {
        "callee": "create_job",
        "line": 245,
        "type": "attribute"
      },
      {
        "callee": "get_job",
        "line": 257,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_library_service.py:temp_library_path": [
      {
        "callee": "mkdtemp",
        "line": 23,
        "type": "attribute"
      },
      {
        "callee": "Path",
        "line": 24,
        "type": "direct"
      },
      {
        "callee": "rmtree",
        "line": 25,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_library_service.py:mock_database": [
      {
        "callee": "Mock",
        "line": 31,
        "type": "direct"
      },
      {
        "callee": "AsyncMock",
        "line": 32,
        "type": "direct"
      },
      {
        "callee": "AsyncMock",
        "line": 33,
        "type": "direct"
      },
      {
        "callee": "AsyncMock",
        "line": 34,
        "type": "direct"
      },
      {
        "callee": "AsyncMock",
        "line": 35,
        "type": "direct"
      },
      {
        "callee": "AsyncMock",
        "line": 36,
        "type": "direct"
      },
      {
        "callee": "AsyncMock",
        "line": 37,
        "type": "direct"
      },
      {
        "callee": "AsyncMock",
        "line": 38,
        "type": "direct"
      },
      {
        "callee": "AsyncMock",
        "line": 39,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_library_service.py:mock_config_service": [
      {
        "callee": "Mock",
        "line": 46,
        "type": "direct"
      },
      {
        "callee": "Mock",
        "line": 47,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 48,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_library_service.py:mock_event_service": [
      {
        "callee": "Mock",
        "line": 60,
        "type": "direct"
      },
      {
        "callee": "AsyncMock",
        "line": 61,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_library_service.py:library_service": [
      {
        "callee": "LibraryService",
        "line": 69,
        "type": "direct"
      },
      {
        "callee": "initialize",
        "line": 70,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_library_service.py:sample_test_file": [
      {
        "callee": "write_bytes",
        "line": 78,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_library_service.py:TestLibraryServiceInitialization.test_initialize_creates_folders": [
      {
        "callee": "exists",
        "line": 88,
        "type": "attribute"
      },
      {
        "callee": "exists",
        "line": 89,
        "type": "attribute"
      },
      {
        "callee": "exists",
        "line": 90,
        "type": "attribute"
      },
      {
        "callee": "exists",
        "line": 91,
        "type": "attribute"
      },
      {
        "callee": "exists",
        "line": 92,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_library_service.py:TestLibraryServiceInitialization.test_disabled_library_skips_initialization": [
      {
        "callee": "LibraryService",
        "line": 105,
        "type": "direct"
      },
      {
        "callee": "initialize",
        "line": 106,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_library_service.py:TestChecksumCalculation.test_calculate_checksum_sha256": [
      {
        "callee": "calculate_checksum",
        "line": 116,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 118,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_library_service.py:TestChecksumCalculation.test_calculate_checksum_consistent": [
      {
        "callee": "calculate_checksum",
        "line": 123,
        "type": "attribute"
      },
      {
        "callee": "calculate_checksum",
        "line": 124,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_library_service.py:TestChecksumCalculation.test_calculate_checksum_different_files": [
      {
        "callee": "write_bytes",
        "line": 132,
        "type": "attribute"
      },
      {
        "callee": "write_bytes",
        "line": 133,
        "type": "attribute"
      },
      {
        "callee": "calculate_checksum",
        "line": 135,
        "type": "attribute"
      },
      {
        "callee": "calculate_checksum",
        "line": 136,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_library_service.py:TestLibraryPathGeneration.test_watch_folder_path_generation": [
      {
        "callee": "get_library_path_for_file",
        "line": 146,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 150,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 151,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 152,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_library_service.py:TestLibraryPathGeneration.test_printer_path_generation": [
      {
        "callee": "get_library_path_for_file",
        "line": 158,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 162,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 163,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 164,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 165,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 166,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_library_service.py:TestLibraryPathGeneration.test_upload_path_generation": [
      {
        "callee": "get_library_path_for_file",
        "line": 171,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 175,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 176,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 177,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_library_service.py:TestLibraryPathGeneration.test_path_sharding_distribution": [
      {
        "callee": "get_library_path_for_file",
        "line": 190,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 196,
        "type": "direct"
      },
      {
        "callee": "set",
        "line": 196,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 196,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_library_service.py:TestFileAddition.test_add_new_file_to_library": [
      {
        "callee": "add_file_to_library",
        "line": 211,
        "type": "attribute"
      },
      {
        "callee": "assert_called_once",
        "line": 218,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_library_service.py:TestFileAddition.test_add_duplicate_file_adds_source": [
      {
        "callee": "add_file_to_library",
        "line": 236,
        "type": "attribute"
      },
      {
        "callee": "assert_not_called",
        "line": 241,
        "type": "attribute"
      },
      {
        "callee": "assert_called",
        "line": 242,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_library_service.py:TestFileAddition.test_disk_space_check": [
      {
        "callee": "write_bytes",
        "line": 249,
        "type": "attribute"
      },
      {
        "callee": "patch",
        "line": 251,
        "type": "direct"
      },
      {
        "callee": "Mock",
        "line": 252,
        "type": "direct"
      },
      {
        "callee": "raises",
        "line": 256,
        "type": "attribute"
      },
      {
        "callee": "add_file_to_library",
        "line": 257,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_library_service.py:TestFileAddition.test_file_copy_preserves_original": [
      {
        "callee": "add_file_to_library",
        "line": 266,
        "type": "attribute"
      },
      {
        "callee": "exists",
        "line": 271,
        "type": "attribute"
      },
      {
        "callee": "read_bytes",
        "line": 272,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_library_service.py:TestFileAddition.test_checksum_verification_after_copy": [
      {
        "callee": "add_file_to_library",
        "line": 280,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_library_service.py:TestSourceTracking.test_add_multiple_sources": [
      {
        "callee": "isoformat",
        "line": 298,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 298,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 304,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 304,
        "type": "attribute"
      },
      {
        "callee": "dumps",
        "line": 310,
        "type": "attribute"
      },
      {
        "callee": "add_file_source",
        "line": 314,
        "type": "attribute"
      },
      {
        "callee": "assert_called",
        "line": 317,
        "type": "attribute"
      },
      {
        "callee": "loads",
        "line": 320,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 321,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_library_service.py:TestSourceTracking.test_duplicate_source_not_added": [
      {
        "callee": "dumps",
        "line": 335,
        "type": "attribute"
      },
      {
        "callee": "add_file_source",
        "line": 339,
        "type": "attribute"
      },
      {
        "callee": "assert_not_called",
        "line": 342,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_library_service.py:TestFileDeletion.test_delete_file_with_physical": [
      {
        "callee": "mkdir",
        "line": 353,
        "type": "attribute"
      },
      {
        "callee": "write_bytes",
        "line": 354,
        "type": "attribute"
      },
      {
        "callee": "delete_file",
        "line": 364,
        "type": "attribute"
      },
      {
        "callee": "exists",
        "line": 367,
        "type": "attribute"
      },
      {
        "callee": "assert_called_once",
        "line": 368,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_library_service.py:TestFileDeletion.test_delete_file_database_only": [
      {
        "callee": "mkdir",
        "line": 374,
        "type": "attribute"
      },
      {
        "callee": "write_bytes",
        "line": 375,
        "type": "attribute"
      },
      {
        "callee": "delete_file",
        "line": 385,
        "type": "attribute"
      },
      {
        "callee": "exists",
        "line": 388,
        "type": "attribute"
      },
      {
        "callee": "assert_called_once",
        "line": 389,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_library_service.py:TestListFiles.test_list_files_with_pagination": [
      {
        "callee": "range",
        "line": 400,
        "type": "direct"
      },
      {
        "callee": "list_files",
        "line": 405,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 407,
        "type": "direct"
      },
      {
        "callee": "assert_called_once",
        "line": 409,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_library_service.py:TestListFiles.test_list_files_with_filters": [
      {
        "callee": "list_files",
        "line": 420,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_library_service.py:TestReprocessing.test_reprocess_file": [
      {
        "callee": "reprocess_file",
        "line": 439,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_library_service.py:TestReprocessing.test_reprocess_nonexistent_file": [
      {
        "callee": "reprocess_file",
        "line": 448,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_library_service.py:TestStatistics.test_get_statistics": [
      {
        "callee": "get_library_statistics",
        "line": 466,
        "type": "attribute"
      },
      {
        "callee": "assert_called_once",
        "line": 469,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_library_service.py:TestErrorHandling.test_add_file_missing_source": [
      {
        "callee": "raises",
        "line": 478,
        "type": "attribute"
      },
      {
        "callee": "Path",
        "line": 479,
        "type": "direct"
      },
      {
        "callee": "add_file_to_library",
        "line": 480,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_library_service.py:TestErrorHandling.test_add_file_invalid_source_type": [
      {
        "callee": "raises",
        "line": 487,
        "type": "attribute"
      },
      {
        "callee": "add_file_to_library",
        "line": 488,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_library_service.py:TestErrorHandling.test_database_error_cleanup": [
      {
        "callee": "Exception",
        "line": 495,
        "type": "direct"
      },
      {
        "callee": "raises",
        "line": 499,
        "type": "attribute"
      },
      {
        "callee": "add_file_to_library",
        "line": 500,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_library_service.py:TestIntegration.test_full_file_lifecycle": [
      {
        "callee": "add_file_to_library",
        "line": 537,
        "type": "attribute"
      },
      {
        "callee": "get_file_by_checksum",
        "line": 549,
        "type": "attribute"
      },
      {
        "callee": "reprocess_file",
        "line": 553,
        "type": "attribute"
      },
      {
        "callee": "delete_file",
        "line": 557,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_performance.py:PerformanceTestBase.measure_performance": [
      {
        "callee": "Process",
        "line": 46,
        "type": "attribute"
      },
      {
        "callee": "perf_counter",
        "line": 49,
        "type": "attribute"
      },
      {
        "callee": "memory_info",
        "line": 50,
        "type": "attribute"
      },
      {
        "callee": "cpu_percent",
        "line": 51,
        "type": "attribute"
      },
      {
        "callee": "func",
        "line": 55,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 61,
        "type": "direct"
      },
      {
        "callee": "perf_counter",
        "line": 64,
        "type": "attribute"
      },
      {
        "callee": "memory_info",
        "line": 65,
        "type": "attribute"
      },
      {
        "callee": "cpu_percent",
        "line": 66,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_performance.py:PerformanceTestBase.load_test": [
      {
        "callee": "Semaphore",
        "line": 83,
        "type": "attribute"
      },
      {
        "callee": "perf_counter",
        "line": 89,
        "type": "attribute"
      },
      {
        "callee": "bounded_request",
        "line": 91,
        "type": "direct"
      },
      {
        "callee": "range",
        "line": 91,
        "type": "direct"
      },
      {
        "callee": "gather",
        "line": 92,
        "type": "attribute"
      },
      {
        "callee": "perf_counter",
        "line": 94,
        "type": "attribute"
      },
      {
        "callee": "sum",
        "line": 98,
        "type": "direct"
      },
      {
        "callee": "isinstance",
        "line": 98,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 99,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 100,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 101,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 110,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_performance.py:PerformanceTestBase.bounded_request": [
      {
        "callee": "async_func",
        "line": 87,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_performance.py:TestDatabasePerformance.test_large_dataset_queries": [
      {
        "callee": "connect",
        "line": 119,
        "type": "attribute"
      },
      {
        "callee": "cursor",
        "line": 121,
        "type": "attribute"
      },
      {
        "callee": "measure_performance",
        "line": 166,
        "type": "attribute"
      },
      {
        "callee": "measure_performance",
        "line": 188,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 191,
        "type": "direct"
      },
      {
        "callee": "close",
        "line": 193,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_performance.py:TestDatabasePerformance.insert_large_dataset": [
      {
        "callee": "range",
        "line": 129,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 130,
        "type": "attribute"
      },
      {
        "callee": "executemany",
        "line": 139,
        "type": "attribute"
      },
      {
        "callee": "range",
        "line": 146,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 148,
        "type": "attribute"
      },
      {
        "callee": "float",
        "line": 153,
        "type": "direct"
      },
      {
        "callee": "isoformat",
        "line": 154,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 154,
        "type": "attribute"
      },
      {
        "callee": "executemany",
        "line": 158,
        "type": "attribute"
      },
      {
        "callee": "commit",
        "line": 163,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_performance.py:TestDatabasePerformance.complex_query": [
      {
        "callee": "fetchall",
        "line": 173,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 173,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_performance.py:TestDatabasePerformance.database_worker": [
      {
        "callee": "connect",
        "line": 199,
        "type": "attribute"
      },
      {
        "callee": "cursor",
        "line": 200,
        "type": "attribute"
      },
      {
        "callee": "range",
        "line": 203,
        "type": "direct"
      },
      {
        "callee": "execute",
        "line": 207,
        "type": "attribute"
      },
      {
        "callee": "fetchone",
        "line": 208,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 209,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 212,
        "type": "attribute"
      },
      {
        "callee": "float",
        "line": 214,
        "type": "direct"
      },
      {
        "callee": "commit",
        "line": 215,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 216,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 219,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 228,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 228,
        "type": "attribute"
      },
      {
        "callee": "commit",
        "line": 230,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 231,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 234,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 234,
        "type": "direct"
      },
      {
        "callee": "close",
        "line": 236,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_performance.py:TestDatabasePerformance.test_concurrent_database_access": [
      {
        "callee": "perf_counter",
        "line": 240,
        "type": "attribute"
      },
      {
        "callee": "ThreadPoolExecutor",
        "line": 242,
        "type": "attribute"
      },
      {
        "callee": "submit",
        "line": 244,
        "type": "attribute"
      },
      {
        "callee": "range",
        "line": 245,
        "type": "direct"
      },
      {
        "callee": "as_completed",
        "line": 249,
        "type": "attribute"
      },
      {
        "callee": "extend",
        "line": 250,
        "type": "attribute"
      },
      {
        "callee": "result",
        "line": 250,
        "type": "attribute"
      },
      {
        "callee": "perf_counter",
        "line": 252,
        "type": "attribute"
      },
      {
        "callee": "sum",
        "line": 256,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 257,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 258,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 261,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_performance.py:TestDatabasePerformance.test_database_indexing_performance": [
      {
        "callee": "connect",
        "line": 267,
        "type": "attribute"
      },
      {
        "callee": "cursor",
        "line": 268,
        "type": "attribute"
      },
      {
        "callee": "float",
        "line": 273,
        "type": "direct"
      },
      {
        "callee": "isoformat",
        "line": 273,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 273,
        "type": "attribute"
      },
      {
        "callee": "range",
        "line": 274,
        "type": "direct"
      },
      {
        "callee": "executemany",
        "line": 276,
        "type": "attribute"
      },
      {
        "callee": "commit",
        "line": 280,
        "type": "attribute"
      },
      {
        "callee": "measure_performance",
        "line": 292,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 295,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 296,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 297,
        "type": "attribute"
      },
      {
        "callee": "measure_performance",
        "line": 300,
        "type": "attribute"
      },
      {
        "callee": "close",
        "line": 306,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_performance.py:TestDatabasePerformance.query_without_index": [
      {
        "callee": "fetchall",
        "line": 284,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 284,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_performance.py:TestAPIPerformance.api_request": [
      {
        "callee": "patch",
        "line": 318,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 322,
        "type": "attribute"
      },
      {
        "callee": "hasattr",
        "line": 326,
        "type": "direct"
      },
      {
        "callee": "total_seconds",
        "line": 326,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 332,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_performance.py:TestAPIPerformance.test_concurrent_api_requests": [
      {
        "callee": "load_test",
        "line": 343,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_performance.py:TestAPIPerformance.create_large_dataset_response": [
      {
        "callee": "float",
        "line": 374,
        "type": "direct"
      },
      {
        "callee": "float",
        "line": 381,
        "type": "direct"
      },
      {
        "callee": "float",
        "line": 382,
        "type": "direct"
      },
      {
        "callee": "range",
        "line": 385,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_performance.py:TestAPIPerformance.test_large_response_performance": [
      {
        "callee": "measure_performance",
        "line": 403,
        "type": "attribute"
      },
      {
        "callee": "measure_performance",
        "line": 414,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 419,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_performance.py:TestAPIPerformance.serialize_response": [
      {
        "callee": "dumps",
        "line": 412,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_performance.py:WebSocketLoadTester.send_high_frequency_updates": [
      {
        "callee": "perf_counter",
        "line": 435,
        "type": "attribute"
      },
      {
        "callee": "range",
        "line": 439,
        "type": "direct"
      },
      {
        "callee": "float",
        "line": 444,
        "type": "direct"
      },
      {
        "callee": "send",
        "line": 450,
        "type": "attribute"
      },
      {
        "callee": "dumps",
        "line": 450,
        "type": "attribute"
      },
      {
        "callee": "sleep",
        "line": 454,
        "type": "attribute"
      },
      {
        "callee": "perf_counter",
        "line": 456,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_performance.py:TestAPIPerformance.test_websocket_performance": [
      {
        "callee": "WebSocketLoadTester",
        "line": 477,
        "type": "direct"
      },
      {
        "callee": "send_high_frequency_updates",
        "line": 479,
        "type": "attribute"
      },
      {
        "callee": "get_performance_metrics",
        "line": 480,
        "type": "attribute"
      },
      {
        "callee": "abs",
        "line": 487,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_performance.py:TestFileDownloadPerformance.simulate_large_file_download": [
      {
        "callee": "join",
        "line": 504,
        "type": "attribute"
      },
      {
        "callee": "perf_counter",
        "line": 506,
        "type": "attribute"
      },
      {
        "callee": "open",
        "line": 508,
        "type": "direct"
      },
      {
        "callee": "range",
        "line": 509,
        "type": "direct"
      },
      {
        "callee": "sleep",
        "line": 511,
        "type": "attribute"
      },
      {
        "callee": "write",
        "line": 515,
        "type": "attribute"
      },
      {
        "callee": "perf_counter",
        "line": 517,
        "type": "attribute"
      },
      {
        "callee": "getsize",
        "line": 520,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_performance.py:TestFileDownloadPerformance.test_large_file_download_performance": [
      {
        "callee": "simulate_large_file_download",
        "line": 534,
        "type": "direct"
      },
      {
        "callee": "abs",
        "line": 537,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_performance.py:TestFileDownloadPerformance.download_worker": [
      {
        "callee": "range",
        "line": 549,
        "type": "direct"
      },
      {
        "callee": "join",
        "line": 551,
        "type": "attribute"
      },
      {
        "callee": "perf_counter",
        "line": 554,
        "type": "attribute"
      },
      {
        "callee": "open",
        "line": 557,
        "type": "direct"
      },
      {
        "callee": "write",
        "line": 558,
        "type": "attribute"
      },
      {
        "callee": "perf_counter",
        "line": 560,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 562,
        "type": "attribute"
      },
      {
        "callee": "sleep",
        "line": 570,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_performance.py:TestFileDownloadPerformance.test_concurrent_file_downloads": [
      {
        "callee": "perf_counter",
        "line": 575,
        "type": "attribute"
      },
      {
        "callee": "ThreadPoolExecutor",
        "line": 577,
        "type": "attribute"
      },
      {
        "callee": "submit",
        "line": 579,
        "type": "attribute"
      },
      {
        "callee": "range",
        "line": 580,
        "type": "direct"
      },
      {
        "callee": "as_completed",
        "line": 584,
        "type": "attribute"
      },
      {
        "callee": "extend",
        "line": 585,
        "type": "attribute"
      },
      {
        "callee": "result",
        "line": 585,
        "type": "attribute"
      },
      {
        "callee": "perf_counter",
        "line": 587,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 591,
        "type": "direct"
      },
      {
        "callee": "sum",
        "line": 592,
        "type": "direct"
      },
      {
        "callee": "sum",
        "line": 593,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_performance.py:TestMemoryAndResourceUsage.simulate_heavy_workload": [
      {
        "callee": "range",
        "line": 615,
        "type": "direct"
      },
      {
        "callee": "range",
        "line": 619,
        "type": "direct"
      },
      {
        "callee": "range",
        "line": 620,
        "type": "direct"
      },
      {
        "callee": "format",
        "line": 621,
        "type": "attribute"
      },
      {
        "callee": "float",
        "line": 621,
        "type": "direct"
      },
      {
        "callee": "range",
        "line": 621,
        "type": "direct"
      },
      {
        "callee": "range",
        "line": 623,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 625,
        "type": "attribute"
      },
      {
        "callee": "items",
        "line": 631,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 633,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 634,
        "type": "direct"
      },
      {
        "callee": "sum",
        "line": 635,
        "type": "direct"
      },
      {
        "callee": "values",
        "line": 635,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 635,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 637,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_performance.py:TestMemoryAndResourceUsage.test_memory_usage_under_load": [
      {
        "callee": "Process",
        "line": 642,
        "type": "attribute"
      },
      {
        "callee": "memory_info",
        "line": 644,
        "type": "attribute"
      },
      {
        "callee": "simulate_heavy_workload",
        "line": 646,
        "type": "direct"
      },
      {
        "callee": "memory_info",
        "line": 648,
        "type": "attribute"
      },
      {
        "callee": "collect",
        "line": 654,
        "type": "attribute"
      },
      {
        "callee": "memory_info",
        "line": 656,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_performance.py:DatabaseConnectionPool.__init__": [
      {
        "callee": "range",
        "line": 674,
        "type": "direct"
      },
      {
        "callee": "connect",
        "line": 675,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 677,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_performance.py:DatabaseConnectionPool.get_connection": [
      {
        "callee": "pop",
        "line": 681,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 682,
        "type": "attribute"
      },
      {
        "callee": "Exception",
        "line": 685,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_performance.py:DatabaseConnectionPool.return_connection": [
      {
        "callee": "remove",
        "line": 689,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 690,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_performance.py:DatabaseConnectionPool.close_all": [
      {
        "callee": "close",
        "line": 694,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_performance.py:TestMemoryAndResourceUsage.test_database_connection_pooling_performance": [
      {
        "callee": "DatabaseConnectionPool",
        "line": 697,
        "type": "direct"
      },
      {
        "callee": "perf_counter",
        "line": 718,
        "type": "attribute"
      },
      {
        "callee": "range",
        "line": 722,
        "type": "direct"
      },
      {
        "callee": "database_operation_with_pool",
        "line": 723,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 724,
        "type": "attribute"
      },
      {
        "callee": "perf_counter",
        "line": 726,
        "type": "attribute"
      },
      {
        "callee": "perf_counter",
        "line": 729,
        "type": "attribute"
      },
      {
        "callee": "range",
        "line": 732,
        "type": "direct"
      },
      {
        "callee": "connect",
        "line": 733,
        "type": "attribute"
      },
      {
        "callee": "cursor",
        "line": 734,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 736,
        "type": "attribute"
      },
      {
        "callee": "fetchone",
        "line": 737,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 739,
        "type": "attribute"
      },
      {
        "callee": "fetchone",
        "line": 740,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 742,
        "type": "attribute"
      },
      {
        "callee": "close",
        "line": 743,
        "type": "attribute"
      },
      {
        "callee": "perf_counter",
        "line": 745,
        "type": "attribute"
      },
      {
        "callee": "close_all",
        "line": 747,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 753,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 753,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_performance.py:TestMemoryAndResourceUsage.database_operation_with_pool": [
      {
        "callee": "get_connection",
        "line": 701,
        "type": "attribute"
      },
      {
        "callee": "cursor",
        "line": 703,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 706,
        "type": "attribute"
      },
      {
        "callee": "fetchone",
        "line": 707,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 709,
        "type": "attribute"
      },
      {
        "callee": "fetchone",
        "line": 710,
        "type": "attribute"
      },
      {
        "callee": "return_connection",
        "line": 715,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_performance.py:TestMemoryAndResourceUsage.cpu_intensive_task": [
      {
        "callee": "range",
        "line": 765,
        "type": "direct"
      },
      {
        "callee": "sin",
        "line": 767,
        "type": "attribute"
      },
      {
        "callee": "cos",
        "line": 767,
        "type": "attribute"
      },
      {
        "callee": "sqrt",
        "line": 767,
        "type": "attribute"
      },
      {
        "callee": "time",
        "line": 771,
        "type": "attribute"
      },
      {
        "callee": "dumps",
        "line": 773,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_performance.py:TestMemoryAndResourceUsage.test_cpu_usage_optimization": [
      {
        "callee": "Process",
        "line": 781,
        "type": "attribute"
      },
      {
        "callee": "cpu_percent",
        "line": 784,
        "type": "attribute"
      },
      {
        "callee": "perf_counter",
        "line": 785,
        "type": "attribute"
      },
      {
        "callee": "cpu_intensive_task",
        "line": 787,
        "type": "direct"
      },
      {
        "callee": "perf_counter",
        "line": 789,
        "type": "attribute"
      },
      {
        "callee": "cpu_percent",
        "line": 790,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_watch_folders.py:TestWatchFolderConfiguration.test_config_settings": [
      {
        "callee": "PrinternizerSettings",
        "line": 25,
        "type": "direct"
      },
      {
        "callee": "PrinternizerSettings",
        "line": 34,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 36,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_watch_folders.py:TestWatchFolderConfiguration.test_config_service_watch_folders": [
      {
        "callee": "ConfigService",
        "line": 42,
        "type": "direct"
      },
      {
        "callee": "validate_watch_folder",
        "line": 45,
        "type": "attribute"
      },
      {
        "callee": "TemporaryDirectory",
        "line": 50,
        "type": "attribute"
      },
      {
        "callee": "validate_watch_folder",
        "line": 51,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_watch_folders.py:TestFileWatcherService.file_watcher": [
      {
        "callee": "Mock",
        "line": 62,
        "type": "direct"
      },
      {
        "callee": "Mock",
        "line": 68,
        "type": "direct"
      },
      {
        "callee": "AsyncMock",
        "line": 69,
        "type": "direct"
      },
      {
        "callee": "FileWatcherService",
        "line": 71,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_watch_folders.py:TestFileWatcherService.test_local_file_creation": [
      {
        "callee": "LocalFile",
        "line": 76,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_watch_folders.py:TestFileWatcherService.test_file_watcher_status": [
      {
        "callee": "get_watch_status",
        "line": 94,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_watch_folders.py:TestFileWatcherService.test_print_file_handler_extension_filtering": [
      {
        "callee": "Mock",
        "line": 109,
        "type": "direct"
      },
      {
        "callee": "PrintFileHandler",
        "line": 110,
        "type": "direct"
      },
      {
        "callee": "should_process_file",
        "line": 113,
        "type": "attribute"
      },
      {
        "callee": "should_process_file",
        "line": 114,
        "type": "attribute"
      },
      {
        "callee": "should_process_file",
        "line": 115,
        "type": "attribute"
      },
      {
        "callee": "should_process_file",
        "line": 116,
        "type": "attribute"
      },
      {
        "callee": "should_process_file",
        "line": 117,
        "type": "attribute"
      },
      {
        "callee": "should_process_file",
        "line": 120,
        "type": "attribute"
      },
      {
        "callee": "should_process_file",
        "line": 121,
        "type": "attribute"
      },
      {
        "callee": "should_process_file",
        "line": 122,
        "type": "attribute"
      },
      {
        "callee": "should_process_file",
        "line": 125,
        "type": "attribute"
      },
      {
        "callee": "should_process_file",
        "line": 126,
        "type": "attribute"
      },
      {
        "callee": "should_process_file",
        "line": 127,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_watch_folders.py:TestFileWatcherService.test_local_files_list": [
      {
        "callee": "get_local_files",
        "line": 131,
        "type": "attribute"
      },
      {
        "callee": "isinstance",
        "line": 134,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 135,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_watch_folders.py:TestWatchFolderIntegration.test_file_service_local_integration": [
      {
        "callee": "Mock",
        "line": 169,
        "type": "direct"
      },
      {
        "callee": "Mock",
        "line": 170,
        "type": "direct"
      },
      {
        "callee": "Mock",
        "line": 171,
        "type": "direct"
      },
      {
        "callee": "FileService",
        "line": 174,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_websocket.py:TestWebSocketConnection.test_websocket_connection_establishment": [
      {
        "callee": "patch",
        "line": 21,
        "type": "direct"
      },
      {
        "callee": "mock_connect",
        "line": 26,
        "type": "direct"
      },
      {
        "callee": "assert_called_once_with",
        "line": 28,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_websocket.py:TestWebSocketConnection.test_websocket_authentication": [
      {
        "callee": "dumps",
        "line": 39,
        "type": "attribute"
      },
      {
        "callee": "send",
        "line": 46,
        "type": "attribute"
      },
      {
        "callee": "dumps",
        "line": 46,
        "type": "attribute"
      },
      {
        "callee": "recv",
        "line": 49,
        "type": "attribute"
      },
      {
        "callee": "loads",
        "line": 50,
        "type": "attribute"
      },
      {
        "callee": "assert_called_once_with",
        "line": 55,
        "type": "attribute"
      },
      {
        "callee": "dumps",
        "line": 55,
        "type": "attribute"
      },
      {
        "callee": "assert_called_once",
        "line": 56,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_websocket.py:TestWebSocketConnection.test_websocket_subscription_management": [
      {
        "callee": "dumps",
        "line": 67,
        "type": "attribute"
      },
      {
        "callee": "send",
        "line": 73,
        "type": "attribute"
      },
      {
        "callee": "dumps",
        "line": 73,
        "type": "attribute"
      },
      {
        "callee": "recv",
        "line": 76,
        "type": "attribute"
      },
      {
        "callee": "loads",
        "line": 77,
        "type": "attribute"
      },
      {
        "callee": "set",
        "line": 80,
        "type": "direct"
      },
      {
        "callee": "set",
        "line": 80,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_websocket.py:TestWebSocketConnection.test_websocket_connection_error_handling": [
      {
        "callee": "patch",
        "line": 87,
        "type": "direct"
      },
      {
        "callee": "ConnectionError",
        "line": 89,
        "type": "direct"
      },
      {
        "callee": "raises",
        "line": 91,
        "type": "attribute"
      },
      {
        "callee": "mock_connect",
        "line": 92,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_websocket.py:TestWebSocketConnection.test_websocket_reconnection_logic": [
      {
        "callee": "patch",
        "line": 100,
        "type": "direct"
      },
      {
        "callee": "ConnectionError",
        "line": 103,
        "type": "direct"
      },
      {
        "callee": "range",
        "line": 109,
        "type": "direct"
      },
      {
        "callee": "mock_connect",
        "line": 111,
        "type": "direct"
      },
      {
        "callee": "sleep",
        "line": 117,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_websocket.py:TestWebSocketRealTimeUpdates.test_printer_status_updates": [
      {
        "callee": "dumps",
        "line": 147,
        "type": "attribute"
      },
      {
        "callee": "recv",
        "line": 150,
        "type": "attribute"
      },
      {
        "callee": "loads",
        "line": 151,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_websocket.py:TestWebSocketRealTimeUpdates.test_job_progress_updates": [
      {
        "callee": "dumps",
        "line": 175,
        "type": "attribute"
      },
      {
        "callee": "recv",
        "line": 178,
        "type": "attribute"
      },
      {
        "callee": "loads",
        "line": 179,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_websocket.py:TestWebSocketRealTimeUpdates.test_file_download_progress_updates": [
      {
        "callee": "dumps",
        "line": 204,
        "type": "attribute"
      },
      {
        "callee": "recv",
        "line": 207,
        "type": "attribute"
      },
      {
        "callee": "loads",
        "line": 208,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_websocket.py:TestWebSocketRealTimeUpdates.test_system_event_notifications": [
      {
        "callee": "dumps",
        "line": 229,
        "type": "attribute"
      },
      {
        "callee": "recv",
        "line": 232,
        "type": "attribute"
      },
      {
        "callee": "loads",
        "line": 233,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_websocket.py:TestWebSocketRealTimeUpdates.test_batch_update_processing": [
      {
        "callee": "dumps",
        "line": 263,
        "type": "attribute"
      },
      {
        "callee": "recv",
        "line": 266,
        "type": "attribute"
      },
      {
        "callee": "loads",
        "line": 267,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 270,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_websocket.py:TestWebSocketErrorHandling.test_message_parsing_errors": [
      {
        "callee": "ConnectionClosedError",
        "line": 296,
        "type": "attribute"
      },
      {
        "callee": "recv",
        "line": 301,
        "type": "attribute"
      },
      {
        "callee": "loads",
        "line": 303,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_websocket.py:TestWebSocketErrorHandling.test_connection_timeout_handling": [
      {
        "callee": "patch",
        "line": 313,
        "type": "direct"
      },
      {
        "callee": "TimeoutError",
        "line": 315,
        "type": "attribute"
      },
      {
        "callee": "raises",
        "line": 317,
        "type": "attribute"
      },
      {
        "callee": "wait_for",
        "line": 318,
        "type": "attribute"
      },
      {
        "callee": "mock_connect",
        "line": 318,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_websocket.py:TestWebSocketErrorHandling.test_heartbeat_mechanism": [
      {
        "callee": "send",
        "line": 336,
        "type": "attribute"
      },
      {
        "callee": "dumps",
        "line": 336,
        "type": "attribute"
      },
      {
        "callee": "dumps",
        "line": 339,
        "type": "attribute"
      },
      {
        "callee": "recv",
        "line": 342,
        "type": "attribute"
      },
      {
        "callee": "loads",
        "line": 343,
        "type": "attribute"
      },
      {
        "callee": "assert_called_once_with",
        "line": 348,
        "type": "attribute"
      },
      {
        "callee": "dumps",
        "line": 348,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_websocket.py:TestWebSocketErrorHandling.test_connection_recovery_after_network_error": [
      {
        "callee": "patch",
        "line": 355,
        "type": "direct"
      },
      {
        "callee": "ConnectionClosedError",
        "line": 358,
        "type": "attribute"
      },
      {
        "callee": "ConnectionClosedError",
        "line": 359,
        "type": "attribute"
      },
      {
        "callee": "enumerate",
        "line": 368,
        "type": "direct"
      },
      {
        "callee": "mock_connect",
        "line": 370,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 374,
        "type": "direct"
      },
      {
        "callee": "sleep",
        "line": 376,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_websocket.py:TestWebSocketErrorHandling.test_message_queue_overflow_handling": [
      {
        "callee": "range",
        "line": 385,
        "type": "direct"
      },
      {
        "callee": "isoformat",
        "line": 390,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 390,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 392,
        "type": "attribute"
      },
      {
        "callee": "dumps",
        "line": 392,
        "type": "attribute"
      },
      {
        "callee": "range",
        "line": 400,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 402,
        "type": "direct"
      },
      {
        "callee": "recv",
        "line": 403,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 404,
        "type": "attribute"
      },
      {
        "callee": "loads",
        "line": 404,
        "type": "attribute"
      },
      {
        "callee": "pop",
        "line": 407,
        "type": "attribute"
      },
      {
        "callee": "recv",
        "line": 408,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 409,
        "type": "attribute"
      },
      {
        "callee": "loads",
        "line": 409,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 414,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_websocket.py:TestWebSocketPerformance.test_high_frequency_updates_performance": [
      {
        "callee": "range",
        "line": 427,
        "type": "direct"
      },
      {
        "callee": "isoformat",
        "line": 432,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 432,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 434,
        "type": "attribute"
      },
      {
        "callee": "dumps",
        "line": 434,
        "type": "attribute"
      },
      {
        "callee": "time",
        "line": 441,
        "type": "attribute"
      },
      {
        "callee": "range",
        "line": 444,
        "type": "direct"
      },
      {
        "callee": "recv",
        "line": 445,
        "type": "attribute"
      },
      {
        "callee": "loads",
        "line": 446,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 447,
        "type": "attribute"
      },
      {
        "callee": "time",
        "line": 449,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 453,
        "type": "direct"
      },
      {
        "callee": "enumerate",
        "line": 457,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_websocket.py:TestWebSocketPerformance.test_concurrent_websocket_connections": [
      {
        "callee": "range",
        "line": 467,
        "type": "direct"
      },
      {
        "callee": "AsyncMock",
        "line": 468,
        "type": "direct"
      },
      {
        "callee": "dumps",
        "line": 469,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 472,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 472,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 474,
        "type": "attribute"
      },
      {
        "callee": "receive_messages",
        "line": 484,
        "type": "direct"
      },
      {
        "callee": "enumerate",
        "line": 485,
        "type": "direct"
      },
      {
        "callee": "gather",
        "line": 488,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 491,
        "type": "direct"
      },
      {
        "callee": "set",
        "line": 492,
        "type": "direct"
      },
      {
        "callee": "set",
        "line": 492,
        "type": "direct"
      },
      {
        "callee": "range",
        "line": 492,
        "type": "direct"
      }
    ],
    "tests\\backend\\test_websocket.py:TestWebSocketPerformance.receive_messages": [
      {
        "callee": "recv",
        "line": 478,
        "type": "attribute"
      },
      {
        "callee": "loads",
        "line": 479,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_websocket.py:TestWebSocketPerformance.test_memory_usage_with_long_running_connection": [
      {
        "callee": "collect",
        "line": 501,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 502,
        "type": "direct"
      },
      {
        "callee": "get_objects",
        "line": 502,
        "type": "attribute"
      },
      {
        "callee": "range",
        "line": 506,
        "type": "direct"
      },
      {
        "callee": "isoformat",
        "line": 511,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 511,
        "type": "attribute"
      },
      {
        "callee": "dumps",
        "line": 514,
        "type": "attribute"
      },
      {
        "callee": "recv",
        "line": 517,
        "type": "attribute"
      },
      {
        "callee": "loads",
        "line": 518,
        "type": "attribute"
      },
      {
        "callee": "collect",
        "line": 525,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 526,
        "type": "direct"
      },
      {
        "callee": "get_objects",
        "line": 526,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_websocket.py:TestWebSocketGermanBusinessIntegration.test_german_timezone_in_websocket_messages": [
      {
        "callee": "berlin_timestamp",
        "line": 539,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 545,
        "type": "attribute"
      },
      {
        "callee": "dumps",
        "line": 549,
        "type": "attribute"
      },
      {
        "callee": "recv",
        "line": 551,
        "type": "attribute"
      },
      {
        "callee": "loads",
        "line": 552,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_websocket.py:TestWebSocketGermanBusinessIntegration.test_business_cost_updates_via_websocket": [
      {
        "callee": "dumps",
        "line": 578,
        "type": "attribute"
      },
      {
        "callee": "recv",
        "line": 580,
        "type": "attribute"
      },
      {
        "callee": "loads",
        "line": 581,
        "type": "attribute"
      }
    ],
    "tests\\backend\\test_websocket.py:TestWebSocketGermanBusinessIntegration.test_german_quality_assessment_updates": [
      {
        "callee": "dumps",
        "line": 606,
        "type": "attribute"
      },
      {
        "callee": "recv",
        "line": 608,
        "type": "attribute"
      },
      {
        "callee": "loads",
        "line": 609,
        "type": "attribute"
      },
      {
        "callee": "range",
        "line": 611,
        "type": "direct"
      }
    ],
    "tests\\conftest.py:temp_database": [
      {
        "callee": "NamedTemporaryFile",
        "line": 22,
        "type": "attribute"
      },
      {
        "callee": "close",
        "line": 23,
        "type": "attribute"
      },
      {
        "callee": "join",
        "line": 26,
        "type": "attribute"
      },
      {
        "callee": "dirname",
        "line": 26,
        "type": "attribute"
      },
      {
        "callee": "open",
        "line": 27,
        "type": "direct"
      },
      {
        "callee": "read",
        "line": 28,
        "type": "attribute"
      },
      {
        "callee": "connect",
        "line": 30,
        "type": "attribute"
      },
      {
        "callee": "executescript",
        "line": 31,
        "type": "attribute"
      },
      {
        "callee": "close",
        "line": 32,
        "type": "attribute"
      },
      {
        "callee": "unlink",
        "line": 37,
        "type": "attribute"
      }
    ],
    "tests\\conftest.py:db_connection": [
      {
        "callee": "connect",
        "line": 43,
        "type": "attribute"
      },
      {
        "callee": "close",
        "line": 46,
        "type": "attribute"
      }
    ],
    "tests\\conftest.py:populated_database": [
      {
        "callee": "cursor",
        "line": 160,
        "type": "attribute"
      },
      {
        "callee": "join",
        "line": 164,
        "type": "attribute"
      },
      {
        "callee": "keys",
        "line": 164,
        "type": "attribute"
      },
      {
        "callee": "join",
        "line": 165,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 166,
        "type": "attribute"
      },
      {
        "callee": "list",
        "line": 167,
        "type": "direct"
      },
      {
        "callee": "values",
        "line": 167,
        "type": "attribute"
      },
      {
        "callee": "join",
        "line": 171,
        "type": "attribute"
      },
      {
        "callee": "keys",
        "line": 171,
        "type": "attribute"
      },
      {
        "callee": "join",
        "line": 172,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 173,
        "type": "attribute"
      },
      {
        "callee": "list",
        "line": 174,
        "type": "direct"
      },
      {
        "callee": "values",
        "line": 174,
        "type": "attribute"
      },
      {
        "callee": "join",
        "line": 178,
        "type": "attribute"
      },
      {
        "callee": "keys",
        "line": 178,
        "type": "attribute"
      },
      {
        "callee": "join",
        "line": 179,
        "type": "attribute"
      },
      {
        "callee": "execute",
        "line": 180,
        "type": "attribute"
      },
      {
        "callee": "list",
        "line": 181,
        "type": "direct"
      },
      {
        "callee": "values",
        "line": 181,
        "type": "attribute"
      },
      {
        "callee": "commit",
        "line": 183,
        "type": "attribute"
      }
    ],
    "tests\\conftest.py:mock_bambu_api": [
      {
        "callee": "Mock",
        "line": 194,
        "type": "direct"
      }
    ],
    "tests\\conftest.py:mock_prusa_api": [
      {
        "callee": "Mock",
        "line": 236,
        "type": "direct"
      }
    ],
    "tests\\conftest.py:mock_websocket": [
      {
        "callee": "MagicMock",
        "line": 276,
        "type": "direct"
      },
      {
        "callee": "AsyncMock",
        "line": 277,
        "type": "direct"
      },
      {
        "callee": "AsyncMock",
        "line": 278,
        "type": "direct"
      },
      {
        "callee": "AsyncMock",
        "line": 279,
        "type": "direct"
      }
    ],
    "tests\\conftest.py:AsyncMock.__call__": [
      {
        "callee": "__call__",
        "line": 286,
        "type": "attribute"
      },
      {
        "callee": "super",
        "line": 286,
        "type": "direct"
      }
    ],
    "tests\\conftest.py:temp_download_directory": [
      {
        "callee": "mkdtemp",
        "line": 332,
        "type": "attribute"
      },
      {
        "callee": "rmtree",
        "line": 335,
        "type": "attribute"
      }
    ],
    "tests\\conftest.py:TestUtils.berlin_timestamp": [
      {
        "callee": "fromisoformat",
        "line": 388,
        "type": "attribute"
      },
      {
        "callee": "timezone",
        "line": 389,
        "type": "attribute"
      },
      {
        "callee": "localize",
        "line": 390,
        "type": "attribute"
      }
    ],
    "tests\\conftest.py:TestUtils.calculate_vat": [
      {
        "callee": "round",
        "line": 395,
        "type": "direct"
      }
    ],
    "tests\\conftest.py:TestUtils.generate_test_file_id": [
      {
        "callee": "uuid4",
        "line": 406,
        "type": "attribute"
      }
    ],
    "tests\\conftest.py:test_utils": [
      {
        "callee": "TestUtils",
        "line": 408,
        "type": "direct"
      }
    ],
    "tests\\conftest.py:event_loop": [
      {
        "callee": "new_event_loop",
        "line": 418,
        "type": "attribute"
      },
      {
        "callee": "close",
        "line": 420,
        "type": "attribute"
      },
      {
        "callee": "fixture",
        "line": 415,
        "type": "attribute"
      }
    ],
    "tests\\conftest.py:api_client": [
      {
        "callee": "Session",
        "line": 431,
        "type": "attribute"
      },
      {
        "callee": "update",
        "line": 432,
        "type": "attribute"
      }
    ],
    "tests\\conftest.py:network_error_scenarios": [
      {
        "callee": "JSONDecodeError",
        "line": 452,
        "type": "attribute"
      }
    ],
    "tests\\fixtures\\ideas_fixtures.py:create_sample_idea": [
      {
        "callee": "str",
        "line": 18,
        "type": "direct"
      },
      {
        "callee": "uuid4",
        "line": 18,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 28,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 28,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 29,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 29,
        "type": "attribute"
      },
      {
        "callee": "update",
        "line": 33,
        "type": "attribute"
      }
    ],
    "tests\\fixtures\\ideas_fixtures.py:create_sample_trending_item": [
      {
        "callee": "now",
        "line": 42,
        "type": "attribute"
      },
      {
        "callee": "timedelta",
        "line": 42,
        "type": "direct"
      },
      {
        "callee": "uuid4",
        "line": 45,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 47,
        "type": "direct"
      },
      {
        "callee": "uuid4",
        "line": 47,
        "type": "attribute"
      },
      {
        "callee": "title",
        "line": 48,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 55,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 55,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 56,
        "type": "attribute"
      },
      {
        "callee": "update",
        "line": 60,
        "type": "attribute"
      }
    ],
    "tests\\fixtures\\ideas_fixtures.py:IdeasTestFixtures.get_sample_ideas": [
      {
        "callee": "create_sample_idea",
        "line": 71,
        "type": "direct"
      },
      {
        "callee": "create_sample_idea",
        "line": 80,
        "type": "direct"
      },
      {
        "callee": "isoformat",
        "line": 86,
        "type": "attribute"
      },
      {
        "callee": "date",
        "line": 86,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 86,
        "type": "attribute"
      },
      {
        "callee": "timedelta",
        "line": 86,
        "type": "direct"
      },
      {
        "callee": "create_sample_idea",
        "line": 88,
        "type": "direct"
      },
      {
        "callee": "create_sample_idea",
        "line": 96,
        "type": "direct"
      },
      {
        "callee": "isoformat",
        "line": 102,
        "type": "attribute"
      },
      {
        "callee": "date",
        "line": 102,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 102,
        "type": "attribute"
      },
      {
        "callee": "create_sample_idea",
        "line": 104,
        "type": "direct"
      }
    ],
    "tests\\fixtures\\ideas_fixtures.py:IdeasTestFixtures.get_sample_trending_items": [
      {
        "callee": "create_sample_trending_item",
        "line": 118,
        "type": "direct"
      },
      {
        "callee": "create_sample_trending_item",
        "line": 126,
        "type": "direct"
      },
      {
        "callee": "create_sample_trending_item",
        "line": 134,
        "type": "direct"
      },
      {
        "callee": "create_sample_trending_item",
        "line": 142,
        "type": "direct"
      }
    ],
    "tests\\fixtures\\ideas_fixtures.py:create_idea_with_tags": [
      {
        "callee": "create_sample_idea",
        "line": 177,
        "type": "direct"
      }
    ],
    "tests\\fixtures\\ideas_fixtures.py:create_business_idea": [
      {
        "callee": "create_sample_idea",
        "line": 188,
        "type": "direct"
      }
    ],
    "tests\\fixtures\\ideas_fixtures.py:create_external_idea": [
      {
        "callee": "create_sample_idea",
        "line": 204,
        "type": "direct"
      },
      {
        "callee": "isoformat",
        "line": 210,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 210,
        "type": "attribute"
      }
    ],
    "tests\\run_essential_tests.py:main": [
      {
        "callee": "ArgumentParser",
        "line": 15,
        "type": "attribute"
      },
      {
        "callee": "add_argument",
        "line": 16,
        "type": "attribute"
      },
      {
        "callee": "add_argument",
        "line": 17,
        "type": "attribute"
      },
      {
        "callee": "add_argument",
        "line": 18,
        "type": "attribute"
      },
      {
        "callee": "parse_args",
        "line": 19,
        "type": "attribute"
      },
      {
        "callee": "Path",
        "line": 22,
        "type": "direct"
      },
      {
        "callee": "Path",
        "line": 23,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 33,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 34,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 35,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 36,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 37,
        "type": "direct"
      },
      {
        "callee": "exists",
        "line": 43,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 44,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 47,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 49,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 50,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 51,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 58,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 60,
        "type": "attribute"
      },
      {
        "callee": "extend",
        "line": 63,
        "type": "attribute"
      },
      {
        "callee": "extend",
        "line": 70,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 74,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 74,
        "type": "direct"
      },
      {
        "callee": "chdir",
        "line": 77,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 79,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 81,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 82,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 85,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 86,
        "type": "direct"
      },
      {
        "callee": "join",
        "line": 86,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 87,
        "type": "direct"
      },
      {
        "callee": "run",
        "line": 90,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 93,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 94,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 97,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 100,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 101,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 104,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 105,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 106,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 107,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 108,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 109,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 110,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 111,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 114,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 115,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 118,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 119,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 120,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 121,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 122,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 123,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 124,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 125,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 126,
        "type": "direct"
      }
    ],
    "tests\\run_essential_tests.py:run_frontend_tests": [
      {
        "callee": "print",
        "line": 133,
        "type": "direct"
      },
      {
        "callee": "run",
        "line": 137,
        "type": "attribute"
      },
      {
        "callee": "run",
        "line": 138,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 140,
        "type": "direct"
      },
      {
        "callee": "Path",
        "line": 143,
        "type": "direct"
      },
      {
        "callee": "exists",
        "line": 144,
        "type": "attribute"
      },
      {
        "callee": "run",
        "line": 145,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 146,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 150,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 152,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 156,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 160,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 161,
        "type": "direct"
      }
    ],
    "tests\\run_milestone_1_2_tests.py:Milestone12TestRunner.__init__": [
      {
        "callee": "Path",
        "line": 29,
        "type": "direct"
      }
    ],
    "tests\\run_milestone_1_2_tests.py:Milestone12TestRunner.print_header": [
      {
        "callee": "print",
        "line": 49,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 50,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 51,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 52,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 53,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 54,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 55,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 56,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 57,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 58,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 59,
        "type": "direct"
      }
    ],
    "tests\\run_milestone_1_2_tests.py:Milestone12TestRunner.check_dependencies": [
      {
        "callee": "print",
        "line": 63,
        "type": "direct"
      },
      {
        "callee": "__import__",
        "line": 75,
        "type": "direct"
      },
      {
        "callee": "replace",
        "line": 75,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 77,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 80,
        "type": "direct"
      },
      {
        "callee": "join",
        "line": 80,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 81,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 84,
        "type": "direct"
      }
    ],
    "tests\\run_milestone_1_2_tests.py:Milestone12TestRunner.run_backend_tests": [
      {
        "callee": "print",
        "line": 89,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 90,
        "type": "direct"
      },
      {
        "callee": "extend",
        "line": 96,
        "type": "attribute"
      },
      {
        "callee": "extend",
        "line": 99,
        "type": "attribute"
      },
      {
        "callee": "endswith",
        "line": 106,
        "type": "attribute"
      },
      {
        "callee": "exists",
        "line": 108,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 109,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 109,
        "type": "direct"
      },
      {
        "callee": "exists",
        "line": 114,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 115,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 115,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 118,
        "type": "direct"
      },
      {
        "callee": "extend",
        "line": 121,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 123,
        "type": "direct"
      },
      {
        "callee": "join",
        "line": 123,
        "type": "attribute"
      },
      {
        "callee": "Path",
        "line": 123,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 124,
        "type": "direct"
      },
      {
        "callee": "join",
        "line": 124,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 125,
        "type": "direct"
      },
      {
        "callee": "run",
        "line": 128,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 131,
        "type": "direct"
      }
    ],
    "tests\\run_milestone_1_2_tests.py:Milestone12TestRunner.run_frontend_tests": [
      {
        "callee": "print",
        "line": 136,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 137,
        "type": "direct"
      },
      {
        "callee": "exists",
        "line": 142,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 143,
        "type": "direct"
      },
      {
        "callee": "run",
        "line": 148,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 151,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 152,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 156,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 158,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 160,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 161,
        "type": "direct"
      },
      {
        "callee": "join",
        "line": 161,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 162,
        "type": "direct"
      },
      {
        "callee": "run",
        "line": 165,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 168,
        "type": "direct"
      }
    ],
    "tests\\run_milestone_1_2_tests.py:Milestone12TestRunner.print_summary": [
      {
        "callee": "now",
        "line": 173,
        "type": "attribute"
      },
      {
        "callee": "total_seconds",
        "line": 174,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 176,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 179,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 180,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 181,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 182,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 183,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 184,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 185,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 186,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 187,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 188,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 189,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 191,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 193,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 195,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 197,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 198,
        "type": "direct"
      },
      {
        "callee": "strftime",
        "line": 198,
        "type": "attribute"
      }
    ],
    "tests\\run_milestone_1_2_tests.py:Milestone12TestRunner.run_tests": [
      {
        "callee": "now",
        "line": 202,
        "type": "attribute"
      },
      {
        "callee": "print_header",
        "line": 204,
        "type": "attribute"
      },
      {
        "callee": "check_dependencies",
        "line": 207,
        "type": "attribute"
      },
      {
        "callee": "run_backend_tests",
        "line": 211,
        "type": "attribute"
      },
      {
        "callee": "run_frontend_tests",
        "line": 214,
        "type": "attribute"
      },
      {
        "callee": "print_summary",
        "line": 217,
        "type": "attribute"
      }
    ],
    "tests\\run_milestone_1_2_tests.py:main": [
      {
        "callee": "ArgumentParser",
        "line": 224,
        "type": "attribute"
      },
      {
        "callee": "add_argument",
        "line": 236,
        "type": "attribute"
      },
      {
        "callee": "add_argument",
        "line": 242,
        "type": "attribute"
      },
      {
        "callee": "parse_args",
        "line": 248,
        "type": "attribute"
      },
      {
        "callee": "Milestone12TestRunner",
        "line": 251,
        "type": "direct"
      },
      {
        "callee": "run_tests",
        "line": 252,
        "type": "attribute"
      },
      {
        "callee": "exit",
        "line": 255,
        "type": "attribute"
      }
    ],
    "tests\\test_essential_config.py:TestGermanBusinessConfig.test_german_timezone_configuration": [
      {
        "callee": "timezone",
        "line": 22,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 23,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 27,
        "type": "direct"
      }
    ],
    "tests\\test_essential_config.py:TestGermanBusinessConfig.test_material_cost_calculation": [
      {
        "callee": "abs",
        "line": 53,
        "type": "direct"
      },
      {
        "callee": "round",
        "line": 55,
        "type": "direct"
      }
    ],
    "tests\\test_essential_config.py:TestGermanBusinessConfig.test_power_cost_calculation": [
      {
        "callee": "abs",
        "line": 67,
        "type": "direct"
      }
    ],
    "tests\\test_essential_config.py:TestSystemConfiguration.test_environment_variables": [
      {
        "callee": "items",
        "line": 80,
        "type": "attribute"
      },
      {
        "callee": "getenv",
        "line": 82,
        "type": "attribute"
      }
    ],
    "tests\\test_essential_config.py:TestSystemConfiguration.test_database_path_configuration": [
      {
        "callee": "endswith",
        "line": 94,
        "type": "attribute"
      }
    ],
    "tests\\test_essential_config.py:TestSystemConfiguration.test_api_base_configuration": [
      {
        "callee": "isinstance",
        "line": 107,
        "type": "direct"
      }
    ],
    "tests\\test_essential_config.py:TestConfigService.test_config_service_initialization": [
      {
        "callee": "ConfigService",
        "line": 142,
        "type": "direct"
      }
    ],
    "tests\\test_essential_config.py:TestConfigService.test_config_service_german_settings": [
      {
        "callee": "ConfigService",
        "line": 147,
        "type": "direct"
      },
      {
        "callee": "hasattr",
        "line": 150,
        "type": "direct"
      }
    ],
    "tests\\test_essential_config.py:TestBusinessLogic.test_business_hours_validation": [
      {
        "callee": "int",
        "line": 164,
        "type": "direct"
      },
      {
        "callee": "split",
        "line": 164,
        "type": "attribute"
      },
      {
        "callee": "int",
        "line": 165,
        "type": "direct"
      },
      {
        "callee": "split",
        "line": 165,
        "type": "attribute"
      }
    ],
    "tests\\test_essential_config.py:TestBusinessLogic.test_customer_data_validation": [
      {
        "callee": "isoformat",
        "line": 177,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 177,
        "type": "attribute"
      },
      {
        "callee": "endswith",
        "line": 182,
        "type": "attribute"
      }
    ],
    "tests\\test_essential_config.py:TestBusinessLogic.is_business_job": [
      {
        "callee": "any",
        "line": 203,
        "type": "direct"
      }
    ],
    "tests\\test_essential_config.py:TestBusinessLogic.test_job_classification": [
      {
        "callee": "is_business_job",
        "line": 205,
        "type": "direct"
      },
      {
        "callee": "is_business_job",
        "line": 206,
        "type": "direct"
      },
      {
        "callee": "is_business_job",
        "line": 207,
        "type": "direct"
      },
      {
        "callee": "is_business_job",
        "line": 208,
        "type": "direct"
      }
    ],
    "tests\\test_essential_config.py:TestBusinessLogic.test_file_naming_conventions": [
      {
        "callee": "split",
        "line": 221,
        "type": "attribute"
      }
    ],
    "tests\\test_essential_integration.py:async_client": [
      {
        "callee": "TestClient",
        "line": 18,
        "type": "direct"
      }
    ],
    "tests\\test_essential_integration.py:TestCoreWorkflowIntegration.test_complete_printer_setup_workflow": [
      {
        "callee": "post",
        "line": 37,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 39,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 43,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 45,
        "type": "attribute"
      },
      {
        "callee": "post",
        "line": 49,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 53,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 55,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 56,
        "type": "direct"
      }
    ],
    "tests\\test_essential_integration.py:TestCoreWorkflowIntegration.test_health_check_system_integration": [
      {
        "callee": "get",
        "line": 63,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 66,
        "type": "attribute"
      }
    ],
    "tests\\test_essential_integration.py:TestCoreWorkflowIntegration.test_files_discovery_workflow": [
      {
        "callee": "get",
        "line": 81,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 83,
        "type": "attribute"
      },
      {
        "callee": "isinstance",
        "line": 86,
        "type": "direct"
      }
    ],
    "tests\\test_essential_integration.py:TestCoreWorkflowIntegration.test_jobs_monitoring_workflow": [
      {
        "callee": "get",
        "line": 92,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 94,
        "type": "attribute"
      },
      {
        "callee": "isinstance",
        "line": 97,
        "type": "direct"
      }
    ],
    "tests\\test_essential_integration.py:TestCoreWorkflowIntegration.test_analytics_basic_functionality": [
      {
        "callee": "get",
        "line": 101,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 103,
        "type": "attribute"
      },
      {
        "callee": "isinstance",
        "line": 106,
        "type": "direct"
      }
    ],
    "tests\\test_essential_integration.py:TestCoreWorkflowIntegration.test_system_configuration_workflow": [
      {
        "callee": "get",
        "line": 110,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 112,
        "type": "attribute"
      },
      {
        "callee": "isinstance",
        "line": 115,
        "type": "direct"
      }
    ],
    "tests\\test_essential_integration.py:TestCoreWorkflowIntegration.test_websocket_connection_basic": [
      {
        "callee": "startswith",
        "line": 129,
        "type": "attribute"
      },
      {
        "callee": "skip",
        "line": 134,
        "type": "attribute"
      }
    ],
    "tests\\test_essential_integration.py:TestCoreWorkflowIntegration.test_german_business_integration": [
      {
        "callee": "post",
        "line": 148,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 151,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 155,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 157,
        "type": "attribute"
      }
    ],
    "tests\\test_essential_integration.py:TestErrorHandlingIntegration.test_invalid_printer_data_handling": [
      {
        "callee": "post",
        "line": 173,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 176,
        "type": "attribute"
      }
    ],
    "tests\\test_essential_integration.py:TestErrorHandlingIntegration.test_nonexistent_resource_handling": [
      {
        "callee": "get",
        "line": 184,
        "type": "attribute"
      },
      {
        "callee": "json",
        "line": 187,
        "type": "attribute"
      }
    ],
    "tests\\test_essential_integration.py:TestErrorHandlingIntegration.test_duplicate_printer_handling": [
      {
        "callee": "post",
        "line": 201,
        "type": "attribute"
      },
      {
        "callee": "post",
        "line": 205,
        "type": "attribute"
      }
    ],
    "tests\\test_essential_integration.py:TestGermanBusinessIntegration.test_timezone_integration": [
      {
        "callee": "timezone",
        "line": 217,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 218,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 221,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 221,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 221,
        "type": "direct"
      }
    ],
    "tests\\test_essential_integration.py:TestGermanBusinessIntegration.calculate_job_cost": [
      {
        "callee": "round",
        "line": 230,
        "type": "direct"
      }
    ],
    "tests\\test_essential_integration.py:TestGermanBusinessIntegration.test_currency_formatting_integration": [
      {
        "callee": "calculate_job_cost",
        "line": 233,
        "type": "direct"
      },
      {
        "callee": "round",
        "line": 234,
        "type": "direct"
      }
    ],
    "tests\\test_essential_integration.py:TestGermanBusinessIntegration.classify_customer": [
      {
        "callee": "any",
        "line": 244,
        "type": "direct"
      }
    ],
    "tests\\test_essential_integration.py:TestGermanBusinessIntegration.test_business_vs_private_classification": [
      {
        "callee": "classify_customer",
        "line": 247,
        "type": "direct"
      },
      {
        "callee": "classify_customer",
        "line": 248,
        "type": "direct"
      },
      {
        "callee": "classify_customer",
        "line": 249,
        "type": "direct"
      },
      {
        "callee": "classify_customer",
        "line": 250,
        "type": "direct"
      }
    ],
    "tests\\test_essential_integration.py:TestGermanBusinessIntegration.test_file_naming_german_support": [
      {
        "callee": "any",
        "line": 263,
        "type": "direct"
      },
      {
        "callee": "endswith",
        "line": 265,
        "type": "attribute"
      }
    ],
    "tests\\test_essential_integration.py:TestHardwareIntegration.test_bambu_lab_real_connection": [
      {
        "callee": "skip",
        "line": 277,
        "type": "attribute"
      }
    ],
    "tests\\test_essential_integration.py:TestHardwareIntegration.test_prusa_real_connection": [
      {
        "callee": "skip",
        "line": 281,
        "type": "attribute"
      }
    ],
    "tests\\test_essential_models.py:TestPrinterModel.test_valid_bambu_printer_creation": [
      {
        "callee": "Printer",
        "line": 28,
        "type": "direct"
      }
    ],
    "tests\\test_essential_models.py:TestPrinterModel.test_valid_prusa_printer_creation": [
      {
        "callee": "Printer",
        "line": 45,
        "type": "direct"
      }
    ],
    "tests\\test_essential_models.py:TestPrinterModel.test_printer_required_fields": [
      {
        "callee": "raises",
        "line": 52,
        "type": "attribute"
      },
      {
        "callee": "Printer",
        "line": 53,
        "type": "direct"
      },
      {
        "callee": "errors",
        "line": 55,
        "type": "attribute"
      }
    ],
    "tests\\test_essential_models.py:TestPrinterModel.test_printer_config_optional_fields": [
      {
        "callee": "PrinterConfig",
        "line": 64,
        "type": "direct"
      }
    ],
    "tests\\test_essential_models.py:TestJobModel.test_valid_job_creation": [
      {
        "callee": "Job",
        "line": 84,
        "type": "direct"
      }
    ],
    "tests\\test_essential_models.py:TestJobModel.test_job_business_logic_fields": [
      {
        "callee": "Job",
        "line": 92,
        "type": "direct"
      }
    ],
    "tests\\test_essential_models.py:TestJobModel.test_job_create_minimal": [
      {
        "callee": "JobCreate",
        "line": 109,
        "type": "direct"
      }
    ],
    "tests\\test_essential_models.py:TestJobModel.test_job_update_fields": [
      {
        "callee": "JobUpdate",
        "line": 119,
        "type": "direct"
      }
    ],
    "tests\\test_essential_models.py:TestFileModel.test_valid_file_creation": [
      {
        "callee": "File",
        "line": 142,
        "type": "direct"
      }
    ],
    "tests\\test_essential_models.py:TestFileModel.test_file_download_status_progression": [
      {
        "callee": "File",
        "line": 150,
        "type": "direct"
      },
      {
        "callee": "File",
        "line": 160,
        "type": "direct"
      }
    ],
    "tests\\test_essential_models.py:TestEnumValidation.test_printer_status_enum_values": [
      {
        "callee": "hasattr",
        "line": 186,
        "type": "direct"
      },
      {
        "callee": "upper",
        "line": 186,
        "type": "attribute"
      }
    ],
    "tests\\test_essential_models.py:TestEnumValidation.test_job_status_enum_values": [
      {
        "callee": "hasattr",
        "line": 193,
        "type": "direct"
      },
      {
        "callee": "upper",
        "line": 193,
        "type": "attribute"
      }
    ],
    "tests\\test_essential_models.py:TestModelSerialization.test_printer_json_serialization": [
      {
        "callee": "Printer",
        "line": 208,
        "type": "direct"
      },
      {
        "callee": "now",
        "line": 212,
        "type": "attribute"
      },
      {
        "callee": "model_dump",
        "line": 215,
        "type": "attribute"
      }
    ],
    "tests\\test_essential_models.py:TestModelSerialization.test_job_json_serialization": [
      {
        "callee": "Job",
        "line": 223,
        "type": "direct"
      },
      {
        "callee": "model_dump",
        "line": 232,
        "type": "attribute"
      }
    ],
    "tests\\test_essential_printer_api.py:TestEssentialPrinterAPIEndpoints.mock_printer_id": [
      {
        "callee": "str",
        "line": 27,
        "type": "direct"
      },
      {
        "callee": "uuid4",
        "line": 27,
        "type": "direct"
      }
    ],
    "tests\\test_essential_printer_api.py:TestEssentialPrinterAPIEndpoints.mock_bambu_printer": [
      {
        "callee": "patch",
        "line": 32,
        "type": "direct"
      },
      {
        "callee": "BambuLabPrinter",
        "line": 33,
        "type": "direct"
      }
    ],
    "tests\\test_essential_printer_api.py:TestEssentialPrinterAPIEndpoints.mock_prusa_printer": [
      {
        "callee": "PrusaPrinter",
        "line": 45,
        "type": "direct"
      }
    ],
    "tests\\test_essential_printer_api.py:TestEssentialPrinterAPIEndpoints.test_printer_status_endpoint_real_time": [
      {
        "callee": "str",
        "line": 63,
        "type": "direct"
      },
      {
        "callee": "uuid4",
        "line": 63,
        "type": "direct"
      },
      {
        "callee": "isoformat",
        "line": 70,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 70,
        "type": "attribute"
      },
      {
        "callee": "object",
        "line": 73,
        "type": "attribute"
      },
      {
        "callee": "get_status",
        "line": 76,
        "type": "attribute"
      }
    ],
    "tests\\test_essential_printer_api.py:TestEssentialPrinterAPIEndpoints.test_printer_monitoring_start_stop": [
      {
        "callee": "object",
        "line": 96,
        "type": "attribute"
      },
      {
        "callee": "connect",
        "line": 99,
        "type": "attribute"
      },
      {
        "callee": "assert_called_once",
        "line": 102,
        "type": "attribute"
      },
      {
        "callee": "object",
        "line": 105,
        "type": "attribute"
      },
      {
        "callee": "disconnect",
        "line": 108,
        "type": "attribute"
      },
      {
        "callee": "assert_called_once",
        "line": 110,
        "type": "attribute"
      }
    ],
    "tests\\test_essential_printer_api.py:TestEssentialPrinterAPIEndpoints.test_drucker_dateien_file_listing": [
      {
        "callee": "object",
        "line": 140,
        "type": "attribute"
      },
      {
        "callee": "list_files",
        "line": 143,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 146,
        "type": "direct"
      },
      {
        "callee": "any",
        "line": 150,
        "type": "direct"
      },
      {
        "callee": "any",
        "line": 151,
        "type": "direct"
      },
      {
        "callee": "any",
        "line": 152,
        "type": "direct"
      }
    ],
    "tests\\test_essential_printer_api.py:TestEssentialPrinterAPIEndpoints.test_one_click_file_download": [
      {
        "callee": "isoformat",
        "line": 177,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 177,
        "type": "attribute"
      },
      {
        "callee": "object",
        "line": 180,
        "type": "attribute"
      },
      {
        "callee": "download_file",
        "line": 183,
        "type": "attribute"
      },
      {
        "callee": "assert_called_once_with",
        "line": 194,
        "type": "attribute"
      }
    ],
    "tests\\test_essential_printer_api.py:TestEssentialPrinterAPIEndpoints.test_current_job_real_time_progress": [
      {
        "callee": "str",
        "line": 201,
        "type": "direct"
      },
      {
        "callee": "uuid4",
        "line": 201,
        "type": "direct"
      },
      {
        "callee": "object",
        "line": 216,
        "type": "attribute"
      },
      {
        "callee": "get_job_info",
        "line": 219,
        "type": "attribute"
      }
    ],
    "tests\\test_essential_printer_api.py:TestEssentialPrinterAPIEndpoints.test_job_sync_history_integration": [
      {
        "callee": "str",
        "line": 245,
        "type": "direct"
      },
      {
        "callee": "uuid4",
        "line": 245,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 255,
        "type": "direct"
      },
      {
        "callee": "uuid4",
        "line": 255,
        "type": "direct"
      },
      {
        "callee": "object",
        "line": 266,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 271,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 271,
        "type": "attribute"
      },
      {
        "callee": "get_job_info",
        "line": 275,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 280,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 286,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 287,
        "type": "direct"
      },
      {
        "callee": "any",
        "line": 296,
        "type": "direct"
      },
      {
        "callee": "any",
        "line": 297,
        "type": "direct"
      }
    ],
    "tests\\test_essential_printer_api.py:TestEssentialPrinterConnectionRecovery.test_bambu_mqtt_connection_recovery": [
      {
        "callee": "patch",
        "line": 306,
        "type": "direct"
      },
      {
        "callee": "BambuLabPrinter",
        "line": 307,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 308,
        "type": "direct"
      },
      {
        "callee": "uuid4",
        "line": 308,
        "type": "direct"
      },
      {
        "callee": "object",
        "line": 318,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 323,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 323,
        "type": "attribute"
      },
      {
        "callee": "get_status",
        "line": 327,
        "type": "attribute"
      }
    ],
    "tests\\test_essential_printer_api.py:TestEssentialPrinterConnectionRecovery.test_prusa_http_connection_recovery": [
      {
        "callee": "PrusaPrinter",
        "line": 338,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 339,
        "type": "direct"
      },
      {
        "callee": "uuid4",
        "line": 339,
        "type": "direct"
      },
      {
        "callee": "object",
        "line": 346,
        "type": "attribute"
      },
      {
        "callee": "get_status",
        "line": 354,
        "type": "attribute"
      },
      {
        "callee": "get_status",
        "line": 359,
        "type": "attribute"
      }
    ],
    "tests\\test_essential_printer_api.py:TestEssentialGermanBusinessIntegration.test_german_material_cost_calculation": [
      {
        "callee": "approx",
        "line": 379,
        "type": "attribute"
      },
      {
        "callee": "approx",
        "line": 380,
        "type": "attribute"
      },
      {
        "callee": "approx",
        "line": 381,
        "type": "attribute"
      }
    ],
    "tests\\test_essential_printer_api.py:TestEssentialGermanBusinessIntegration.test_german_business_customer_classification": [
      {
        "callee": "any",
        "line": 400,
        "type": "direct"
      }
    ],
    "tests\\test_essential_printer_api.py:TestEssentialGermanBusinessIntegration.test_german_timezone_handling": [
      {
        "callee": "ZoneInfo",
        "line": 410,
        "type": "direct"
      },
      {
        "callee": "now",
        "line": 411,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 414,
        "type": "direct"
      },
      {
        "callee": "astimezone",
        "line": 417,
        "type": "attribute"
      },
      {
        "callee": "abs",
        "line": 421,
        "type": "direct"
      },
      {
        "callee": "total_seconds",
        "line": 421,
        "type": "attribute"
      },
      {
        "callee": "astimezone",
        "line": 421,
        "type": "attribute"
      }
    ],
    "tests\\test_essential_printer_drivers.py:TestEssentialBambuLabDriverIntegration.mock_bambu_printer": [
      {
        "callee": "patch",
        "line": 28,
        "type": "direct"
      },
      {
        "callee": "MagicMock",
        "line": 30,
        "type": "direct"
      },
      {
        "callee": "MagicMock",
        "line": 31,
        "type": "direct"
      },
      {
        "callee": "patch",
        "line": 33,
        "type": "direct"
      },
      {
        "callee": "BambuLabPrinter",
        "line": 34,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 35,
        "type": "direct"
      },
      {
        "callee": "uuid4",
        "line": 35,
        "type": "direct"
      }
    ],
    "tests\\test_essential_printer_drivers.py:TestEssentialBambuLabDriverIntegration.test_bambu_mqtt_connection_initialization": [
      {
        "callee": "AsyncMock",
        "line": 49,
        "type": "direct"
      },
      {
        "callee": "AsyncMock",
        "line": 50,
        "type": "direct"
      },
      {
        "callee": "connect",
        "line": 57,
        "type": "attribute"
      },
      {
        "callee": "assert_called_once",
        "line": 61,
        "type": "attribute"
      },
      {
        "callee": "get_device_info",
        "line": 64,
        "type": "attribute"
      }
    ],
    "tests\\test_essential_printer_drivers.py:TestEssentialBambuLabDriverIntegration.test_bambu_real_time_status_via_mqtt": [
      {
        "callee": "object",
        "line": 91,
        "type": "attribute"
      },
      {
        "callee": "get_status",
        "line": 105,
        "type": "attribute"
      }
    ],
    "tests\\test_essential_printer_drivers.py:TestEssentialBambuLabDriverIntegration.test_bambu_file_listing_via_mqtt": [
      {
        "callee": "object",
        "line": 138,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 143,
        "type": "attribute"
      },
      {
        "callee": "fromtimestamp",
        "line": 143,
        "type": "attribute"
      },
      {
        "callee": "list_files",
        "line": 150,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 153,
        "type": "direct"
      },
      {
        "callee": "any",
        "line": 157,
        "type": "direct"
      },
      {
        "callee": "any",
        "line": 158,
        "type": "direct"
      }
    ],
    "tests\\test_essential_printer_drivers.py:TestEssentialBambuLabDriverIntegration.mock_connect_with_retry": [
      {
        "callee": "append",
        "line": 174,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 174,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 175,
        "type": "direct"
      },
      {
        "callee": "PrinterConnectionError",
        "line": 176,
        "type": "direct"
      }
    ],
    "tests\\test_essential_printer_drivers.py:TestEssentialBambuLabDriverIntegration.test_bambu_mqtt_error_recovery": [
      {
        "callee": "object",
        "line": 179,
        "type": "attribute"
      },
      {
        "callee": "raises",
        "line": 181,
        "type": "attribute"
      },
      {
        "callee": "connect",
        "line": 182,
        "type": "attribute"
      },
      {
        "callee": "raises",
        "line": 184,
        "type": "attribute"
      },
      {
        "callee": "connect",
        "line": 185,
        "type": "attribute"
      },
      {
        "callee": "connect",
        "line": 188,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 190,
        "type": "direct"
      }
    ],
    "tests\\test_essential_printer_drivers.py:TestEssentialPrusaDriverIntegration.mock_prusa_printer": [
      {
        "callee": "PrusaPrinter",
        "line": 199,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 200,
        "type": "direct"
      },
      {
        "callee": "uuid4",
        "line": 200,
        "type": "direct"
      }
    ],
    "tests\\test_essential_printer_drivers.py:TestEssentialPrusaDriverIntegration.test_prusa_http_api_connection": [
      {
        "callee": "patch",
        "line": 224,
        "type": "direct"
      },
      {
        "callee": "AsyncMock",
        "line": 225,
        "type": "direct"
      },
      {
        "callee": "AsyncMock",
        "line": 227,
        "type": "direct"
      },
      {
        "callee": "object",
        "line": 231,
        "type": "attribute"
      },
      {
        "callee": "check_connection",
        "line": 239,
        "type": "attribute"
      }
    ],
    "tests\\test_essential_printer_drivers.py:TestEssentialPrusaDriverIntegration.mock_poll_status": [
      {
        "callee": "min",
        "line": 283,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 283,
        "type": "direct"
      }
    ],
    "tests\\test_essential_printer_drivers.py:TestEssentialPrusaDriverIntegration.test_prusa_30_second_polling_status": [
      {
        "callee": "object",
        "line": 287,
        "type": "attribute"
      },
      {
        "callee": "get_status",
        "line": 297,
        "type": "attribute"
      },
      {
        "callee": "sleep",
        "line": 312,
        "type": "attribute"
      },
      {
        "callee": "get_status",
        "line": 313,
        "type": "attribute"
      }
    ],
    "tests\\test_essential_printer_drivers.py:TestEssentialPrusaDriverIntegration.test_prusa_file_download_http": [
      {
        "callee": "patch",
        "line": 326,
        "type": "direct"
      },
      {
        "callee": "AsyncMock",
        "line": 328,
        "type": "direct"
      },
      {
        "callee": "AsyncMock",
        "line": 330,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 331,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 331,
        "type": "direct"
      },
      {
        "callee": "object",
        "line": 334,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 338,
        "type": "direct"
      },
      {
        "callee": "decode",
        "line": 340,
        "type": "attribute"
      },
      {
        "callee": "download_file",
        "line": 343,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 348,
        "type": "direct"
      }
    ],
    "tests\\test_essential_printer_drivers.py:TestEssentialPrusaDriverIntegration.test_prusa_job_history_sync": [
      {
        "callee": "object",
        "line": 383,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 390,
        "type": "direct"
      },
      {
        "callee": "uuid4",
        "line": 390,
        "type": "direct"
      },
      {
        "callee": "isoformat",
        "line": 393,
        "type": "attribute"
      },
      {
        "callee": "fromtimestamp",
        "line": 393,
        "type": "attribute"
      },
      {
        "callee": "isoformat",
        "line": 394,
        "type": "attribute"
      },
      {
        "callee": "fromtimestamp",
        "line": 394,
        "type": "attribute"
      },
      {
        "callee": "any",
        "line": 397,
        "type": "direct"
      },
      {
        "callee": "sync_job_history",
        "line": 404,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 409,
        "type": "direct"
      },
      {
        "callee": "any",
        "line": 418,
        "type": "direct"
      },
      {
        "callee": "any",
        "line": 419,
        "type": "direct"
      }
    ],
    "tests\\test_essential_printer_drivers.py:TestEssentialPrinterDriverComparison.test_unified_status_interface": [
      {
        "callee": "patch",
        "line": 429,
        "type": "direct"
      },
      {
        "callee": "BambuLabPrinter",
        "line": 430,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 431,
        "type": "direct"
      },
      {
        "callee": "uuid4",
        "line": 431,
        "type": "direct"
      },
      {
        "callee": "PrusaPrinter",
        "line": 438,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 439,
        "type": "direct"
      },
      {
        "callee": "uuid4",
        "line": 439,
        "type": "direct"
      },
      {
        "callee": "set",
        "line": 470,
        "type": "direct"
      },
      {
        "callee": "keys",
        "line": 470,
        "type": "attribute"
      },
      {
        "callee": "set",
        "line": 471,
        "type": "direct"
      },
      {
        "callee": "keys",
        "line": 471,
        "type": "attribute"
      },
      {
        "callee": "isinstance",
        "line": 475,
        "type": "direct"
      },
      {
        "callee": "isinstance",
        "line": 476,
        "type": "direct"
      },
      {
        "callee": "isinstance",
        "line": 477,
        "type": "direct"
      },
      {
        "callee": "isinstance",
        "line": 478,
        "type": "direct"
      }
    ],
    "tests\\test_essential_printer_drivers.py:TestEssentialPrinterDriverComparison.test_connection_recovery_consistency": [
      {
        "callee": "raises",
        "line": 498,
        "type": "attribute"
      },
      {
        "callee": "PrinterConnectionError",
        "line": 499,
        "type": "direct"
      },
      {
        "callee": "lower",
        "line": 502,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 502,
        "type": "direct"
      },
      {
        "callee": "lower",
        "line": 503,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 503,
        "type": "direct"
      }
    ],
    "tests\\test_essential_printer_drivers.py:TestEssentialPrinterDriverComparison.classify_customer_type": [
      {
        "callee": "any",
        "line": 520,
        "type": "direct"
      }
    ],
    "tests\\test_essential_printer_drivers.py:TestEssentialPrinterDriverComparison.test_german_business_data_integration": [
      {
        "callee": "classify_customer_type",
        "line": 528,
        "type": "direct"
      },
      {
        "callee": "calculate_total_cost",
        "line": 529,
        "type": "direct"
      },
      {
        "callee": "approx",
        "line": 533,
        "type": "attribute"
      }
    ],
    "tests\\test_gcode_analyzer.py:TestGcodeAnalyzer.test_init_enabled": [
      {
        "callee": "GcodeAnalyzer",
        "line": 17,
        "type": "direct"
      }
    ],
    "tests\\test_gcode_analyzer.py:TestGcodeAnalyzer.test_init_disabled": [
      {
        "callee": "GcodeAnalyzer",
        "line": 22,
        "type": "direct"
      }
    ],
    "tests\\test_gcode_analyzer.py:TestGcodeAnalyzer.test_find_print_start_disabled": [
      {
        "callee": "GcodeAnalyzer",
        "line": 27,
        "type": "direct"
      },
      {
        "callee": "find_print_start_line",
        "line": 35,
        "type": "attribute"
      }
    ],
    "tests\\test_gcode_analyzer.py:TestGcodeAnalyzer.test_find_print_start_layer_marker": [
      {
        "callee": "GcodeAnalyzer",
        "line": 40,
        "type": "direct"
      },
      {
        "callee": "find_print_start_line",
        "line": 49,
        "type": "attribute"
      }
    ],
    "tests\\test_gcode_analyzer.py:TestGcodeAnalyzer.test_find_print_start_type_marker": [
      {
        "callee": "GcodeAnalyzer",
        "line": 54,
        "type": "direct"
      },
      {
        "callee": "find_print_start_line",
        "line": 63,
        "type": "attribute"
      }
    ],
    "tests\\test_gcode_analyzer.py:TestGcodeAnalyzer.test_find_print_start_extrusion_based": [
      {
        "callee": "GcodeAnalyzer",
        "line": 68,
        "type": "direct"
      },
      {
        "callee": "find_print_start_line",
        "line": 76,
        "type": "attribute"
      }
    ],
    "tests\\test_gcode_analyzer.py:TestGcodeAnalyzer.test_find_print_start_no_markers": [
      {
        "callee": "GcodeAnalyzer",
        "line": 81,
        "type": "direct"
      },
      {
        "callee": "find_print_start_line",
        "line": 89,
        "type": "attribute"
      }
    ],
    "tests\\test_gcode_analyzer.py:TestGcodeAnalyzer.test_is_likely_print_move_small_extrusion": [
      {
        "callee": "GcodeAnalyzer",
        "line": 94,
        "type": "direct"
      },
      {
        "callee": "_is_likely_print_move",
        "line": 97,
        "type": "attribute"
      }
    ],
    "tests\\test_gcode_analyzer.py:TestGcodeAnalyzer.test_is_likely_print_move_edge_position": [
      {
        "callee": "GcodeAnalyzer",
        "line": 102,
        "type": "direct"
      },
      {
        "callee": "_is_likely_print_move",
        "line": 105,
        "type": "attribute"
      },
      {
        "callee": "_is_likely_print_move",
        "line": 109,
        "type": "attribute"
      }
    ],
    "tests\\test_gcode_analyzer.py:TestGcodeAnalyzer.test_is_likely_print_move_normal_print": [
      {
        "callee": "GcodeAnalyzer",
        "line": 114,
        "type": "direct"
      },
      {
        "callee": "_is_likely_print_move",
        "line": 117,
        "type": "attribute"
      }
    ],
    "tests\\test_gcode_analyzer.py:TestGcodeAnalyzer.test_get_optimized_gcode_lines_with_optimization": [
      {
        "callee": "GcodeAnalyzer",
        "line": 122,
        "type": "direct"
      },
      {
        "callee": "get_optimized_gcode_lines",
        "line": 132,
        "type": "attribute"
      }
    ],
    "tests\\test_gcode_analyzer.py:TestGcodeAnalyzer.test_get_optimized_gcode_lines_disabled": [
      {
        "callee": "GcodeAnalyzer",
        "line": 143,
        "type": "direct"
      },
      {
        "callee": "get_optimized_gcode_lines",
        "line": 152,
        "type": "attribute"
      }
    ],
    "tests\\test_gcode_analyzer.py:TestGcodeAnalyzer.test_get_optimized_gcode_lines_no_optimization_possible": [
      {
        "callee": "GcodeAnalyzer",
        "line": 157,
        "type": "direct"
      },
      {
        "callee": "get_optimized_gcode_lines",
        "line": 164,
        "type": "attribute"
      }
    ],
    "tests\\test_gcode_analyzer.py:TestGcodeAnalyzer.test_analyze_gcode_file_success": [
      {
        "callee": "GcodeAnalyzer",
        "line": 169,
        "type": "direct"
      },
      {
        "callee": "NamedTemporaryFile",
        "line": 180,
        "type": "attribute"
      },
      {
        "callee": "write",
        "line": 181,
        "type": "attribute"
      },
      {
        "callee": "analyze_gcode_file",
        "line": 185,
        "type": "attribute"
      },
      {
        "callee": "unlink",
        "line": 195,
        "type": "attribute"
      }
    ],
    "tests\\test_gcode_analyzer.py:TestGcodeAnalyzer.test_analyze_gcode_file_not_found": [
      {
        "callee": "GcodeAnalyzer",
        "line": 199,
        "type": "direct"
      },
      {
        "callee": "analyze_gcode_file",
        "line": 201,
        "type": "attribute"
      }
    ],
    "tests\\test_gcode_analyzer.py:TestGcodeAnalyzer.test_analyze_gcode_file_disabled": [
      {
        "callee": "GcodeAnalyzer",
        "line": 211,
        "type": "direct"
      },
      {
        "callee": "NamedTemporaryFile",
        "line": 218,
        "type": "attribute"
      },
      {
        "callee": "write",
        "line": 219,
        "type": "attribute"
      },
      {
        "callee": "analyze_gcode_file",
        "line": 223,
        "type": "attribute"
      },
      {
        "callee": "unlink",
        "line": 230,
        "type": "attribute"
      }
    ],
    "tests\\test_gcode_analyzer.py:TestGcodeAnalyzer.test_multiple_slicer_markers": [
      {
        "callee": "GcodeAnalyzer",
        "line": 234,
        "type": "direct"
      },
      {
        "callee": "find_print_start_line",
        "line": 253,
        "type": "attribute"
      }
    ],
    "tests\\test_gcode_analyzer.py:TestGcodeAnalyzer.test_warmup_end_pattern_detection": [
      {
        "callee": "GcodeAnalyzer",
        "line": 258,
        "type": "direct"
      },
      {
        "callee": "find_print_start_line",
        "line": 266,
        "type": "attribute"
      }
    ],
    "tests\\test_gcode_analyzer.py:TestGcodeAnalyzer.test_heating_detection": [
      {
        "callee": "GcodeAnalyzer",
        "line": 279,
        "type": "direct"
      },
      {
        "callee": "find_print_start_line",
        "line": 285,
        "type": "attribute"
      },
      {
        "callee": "parametrize",
        "line": 270,
        "type": "attribute"
      }
    ],
    "tests\\test_ideas_service.py:mock_database": [
      {
        "callee": "MagicMock",
        "line": 21,
        "type": "direct"
      },
      {
        "callee": "AsyncMock",
        "line": 22,
        "type": "direct"
      },
      {
        "callee": "AsyncMock",
        "line": 23,
        "type": "direct"
      },
      {
        "callee": "AsyncMock",
        "line": 24,
        "type": "direct"
      },
      {
        "callee": "AsyncMock",
        "line": 25,
        "type": "direct"
      },
      {
        "callee": "AsyncMock",
        "line": 26,
        "type": "direct"
      },
      {
        "callee": "AsyncMock",
        "line": 27,
        "type": "direct"
      },
      {
        "callee": "AsyncMock",
        "line": 28,
        "type": "direct"
      },
      {
        "callee": "AsyncMock",
        "line": 29,
        "type": "direct"
      },
      {
        "callee": "AsyncMock",
        "line": 30,
        "type": "direct"
      },
      {
        "callee": "AsyncMock",
        "line": 31,
        "type": "direct"
      },
      {
        "callee": "AsyncMock",
        "line": 32,
        "type": "direct"
      },
      {
        "callee": "AsyncMock",
        "line": 33,
        "type": "direct"
      },
      {
        "callee": "AsyncMock",
        "line": 34,
        "type": "direct"
      },
      {
        "callee": "AsyncMock",
        "line": 35,
        "type": "direct"
      }
    ],
    "tests\\test_ideas_service.py:idea_service": [
      {
        "callee": "IdeaService",
        "line": 42,
        "type": "direct"
      }
    ],
    "tests\\test_ideas_service.py:TestIdeaService.test_create_idea_success": [
      {
        "callee": "create_sample_idea",
        "line": 51,
        "type": "direct"
      },
      {
        "callee": "create_idea",
        "line": 53,
        "type": "attribute"
      },
      {
        "callee": "assert_called_once",
        "line": 57,
        "type": "attribute"
      }
    ],
    "tests\\test_ideas_service.py:TestIdeaService.test_create_idea_with_tags": [
      {
        "callee": "create_sample_idea",
        "line": 62,
        "type": "direct"
      },
      {
        "callee": "create_idea",
        "line": 67,
        "type": "attribute"
      },
      {
        "callee": "assert_called_once",
        "line": 70,
        "type": "attribute"
      },
      {
        "callee": "assert_called_once_with",
        "line": 71,
        "type": "attribute"
      }
    ],
    "tests\\test_ideas_service.py:TestIdeaService.test_create_idea_missing_title": [
      {
        "callee": "create_sample_idea",
        "line": 76,
        "type": "direct"
      },
      {
        "callee": "create_idea",
        "line": 79,
        "type": "attribute"
      },
      {
        "callee": "assert_not_called",
        "line": 82,
        "type": "attribute"
      }
    ],
    "tests\\test_ideas_service.py:TestIdeaService.test_get_idea_success": [
      {
        "callee": "create_sample_idea",
        "line": 87,
        "type": "direct"
      },
      {
        "callee": "get_idea",
        "line": 91,
        "type": "attribute"
      },
      {
        "callee": "isinstance",
        "line": 94,
        "type": "direct"
      }
    ],
    "tests\\test_ideas_service.py:TestIdeaService.test_get_idea_not_found": [
      {
        "callee": "get_idea",
        "line": 103,
        "type": "attribute"
      }
    ],
    "tests\\test_ideas_service.py:TestIdeaService.test_list_ideas_with_filters": [
      {
        "callee": "get_sample_ideas",
        "line": 110,
        "type": "attribute"
      },
      {
        "callee": "list_ideas",
        "line": 115,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 118,
        "type": "direct"
      },
      {
        "callee": "assert_called_once_with",
        "line": 121,
        "type": "attribute"
      }
    ],
    "tests\\test_ideas_service.py:TestIdeaService.test_update_idea_success": [
      {
        "callee": "str",
        "line": 133,
        "type": "direct"
      },
      {
        "callee": "uuid4",
        "line": 133,
        "type": "attribute"
      },
      {
        "callee": "update_idea",
        "line": 136,
        "type": "attribute"
      },
      {
        "callee": "assert_called_once_with",
        "line": 139,
        "type": "attribute"
      }
    ],
    "tests\\test_ideas_service.py:TestIdeaService.test_update_idea_with_tags": [
      {
        "callee": "str",
        "line": 144,
        "type": "direct"
      },
      {
        "callee": "uuid4",
        "line": 144,
        "type": "attribute"
      },
      {
        "callee": "update_idea",
        "line": 148,
        "type": "attribute"
      },
      {
        "callee": "assert_called_once_with",
        "line": 151,
        "type": "attribute"
      },
      {
        "callee": "assert_called_once_with",
        "line": 152,
        "type": "attribute"
      }
    ],
    "tests\\test_ideas_service.py:TestIdeaService.test_delete_idea_success": [
      {
        "callee": "str",
        "line": 157,
        "type": "direct"
      },
      {
        "callee": "uuid4",
        "line": 157,
        "type": "attribute"
      },
      {
        "callee": "delete_idea",
        "line": 159,
        "type": "attribute"
      },
      {
        "callee": "assert_called_once_with",
        "line": 162,
        "type": "attribute"
      }
    ],
    "tests\\test_ideas_service.py:TestIdeaService.test_update_idea_status": [
      {
        "callee": "str",
        "line": 167,
        "type": "direct"
      },
      {
        "callee": "uuid4",
        "line": 167,
        "type": "attribute"
      },
      {
        "callee": "update_idea_status",
        "line": 170,
        "type": "attribute"
      },
      {
        "callee": "assert_called_once_with",
        "line": 173,
        "type": "attribute"
      }
    ],
    "tests\\test_ideas_service.py:TestIdeaService.test_get_statistics": [
      {
        "callee": "get_statistics",
        "line": 188,
        "type": "attribute"
      },
      {
        "callee": "assert_called_once",
        "line": 191,
        "type": "attribute"
      }
    ],
    "tests\\test_ideas_service.py:TestIdeaService.test_cache_trending_success": [
      {
        "callee": "get_sample_trending_items",
        "line": 196,
        "type": "attribute"
      },
      {
        "callee": "cache_trending",
        "line": 199,
        "type": "attribute"
      }
    ],
    "tests\\test_ideas_service.py:TestIdeaService.test_get_trending": [
      {
        "callee": "get_sample_trending_items",
        "line": 207,
        "type": "attribute"
      },
      {
        "callee": "get_trending",
        "line": 210,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 212,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 212,
        "type": "direct"
      },
      {
        "callee": "assert_called_once_with",
        "line": 213,
        "type": "attribute"
      }
    ],
    "tests\\test_ideas_service.py:TestIdeaService.test_save_trending_as_idea": [
      {
        "callee": "create_sample_trending_item",
        "line": 218,
        "type": "direct"
      },
      {
        "callee": "save_trending_as_idea",
        "line": 221,
        "type": "attribute"
      },
      {
        "callee": "assert_called_once",
        "line": 224,
        "type": "attribute"
      }
    ],
    "tests\\test_ideas_service.py:TestIdeaService.test_search_ideas": [
      {
        "callee": "AsyncMock",
        "line": 252,
        "type": "direct"
      },
      {
        "callee": "search_ideas",
        "line": 255,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 256,
        "type": "direct"
      },
      {
        "callee": "search_ideas",
        "line": 260,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 261,
        "type": "direct"
      },
      {
        "callee": "search_ideas",
        "line": 265,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 266,
        "type": "direct"
      },
      {
        "callee": "search_ideas",
        "line": 269,
        "type": "attribute"
      },
      {
        "callee": "len",
        "line": 270,
        "type": "direct"
      }
    ],
    "tests\\test_ideas_service.py:TestIdeaService.test_cleanup_expired_trending": [
      {
        "callee": "cleanup_expired_trending",
        "line": 275,
        "type": "attribute"
      },
      {
        "callee": "assert_called_once",
        "line": 278,
        "type": "attribute"
      }
    ],
    "tests\\test_ideas_service.py:TestIdeaModel.test_idea_creation_from_dict": [
      {
        "callee": "create_sample_idea",
        "line": 286,
        "type": "direct"
      },
      {
        "callee": "from_dict",
        "line": 287,
        "type": "attribute"
      }
    ],
    "tests\\test_ideas_service.py:TestIdeaModel.test_idea_to_dict": [
      {
        "callee": "create_sample_idea",
        "line": 296,
        "type": "direct"
      },
      {
        "callee": "from_dict",
        "line": 297,
        "type": "attribute"
      },
      {
        "callee": "to_dict",
        "line": 298,
        "type": "attribute"
      }
    ],
    "tests\\test_ideas_service.py:TestIdeaModel.test_idea_validation_success": [
      {
        "callee": "create_sample_idea",
        "line": 306,
        "type": "direct"
      },
      {
        "callee": "from_dict",
        "line": 307,
        "type": "attribute"
      },
      {
        "callee": "validate",
        "line": 309,
        "type": "attribute"
      }
    ],
    "tests\\test_ideas_service.py:TestIdeaModel.test_idea_validation_missing_title": [
      {
        "callee": "create_sample_idea",
        "line": 313,
        "type": "direct"
      },
      {
        "callee": "from_dict",
        "line": 315,
        "type": "attribute"
      },
      {
        "callee": "validate",
        "line": 317,
        "type": "attribute"
      }
    ],
    "tests\\test_ideas_service.py:TestIdeaModel.test_idea_validation_invalid_priority": [
      {
        "callee": "create_sample_idea",
        "line": 321,
        "type": "direct"
      },
      {
        "callee": "from_dict",
        "line": 322,
        "type": "attribute"
      },
      {
        "callee": "validate",
        "line": 324,
        "type": "attribute"
      }
    ],
    "tests\\test_ideas_service.py:TestIdeaModel.test_idea_validation_invalid_status": [
      {
        "callee": "create_sample_idea",
        "line": 328,
        "type": "direct"
      },
      {
        "callee": "from_dict",
        "line": 329,
        "type": "attribute"
      },
      {
        "callee": "validate",
        "line": 331,
        "type": "attribute"
      }
    ],
    "tests\\test_ideas_service.py:TestIdeaModel.test_get_formatted_time": [
      {
        "callee": "from_dict",
        "line": 336,
        "type": "attribute"
      },
      {
        "callee": "create_sample_idea",
        "line": 336,
        "type": "direct"
      },
      {
        "callee": "get_formatted_time",
        "line": 337,
        "type": "attribute"
      },
      {
        "callee": "from_dict",
        "line": 340,
        "type": "attribute"
      },
      {
        "callee": "create_sample_idea",
        "line": 340,
        "type": "direct"
      },
      {
        "callee": "get_formatted_time",
        "line": 341,
        "type": "attribute"
      },
      {
        "callee": "from_dict",
        "line": 344,
        "type": "attribute"
      },
      {
        "callee": "create_sample_idea",
        "line": 344,
        "type": "direct"
      },
      {
        "callee": "get_formatted_time",
        "line": 345,
        "type": "attribute"
      }
    ],
    "tests\\test_ideas_service.py:TestTrendingItemModel.test_trending_item_creation": [
      {
        "callee": "create_sample_trending_item",
        "line": 353,
        "type": "direct"
      },
      {
        "callee": "from_dict",
        "line": 354,
        "type": "attribute"
      }
    ],
    "tests\\test_ideas_service.py:TestTrendingItemModel.test_trending_item_to_dict": [
      {
        "callee": "create_sample_trending_item",
        "line": 362,
        "type": "direct"
      },
      {
        "callee": "from_dict",
        "line": 363,
        "type": "attribute"
      },
      {
        "callee": "to_dict",
        "line": 364,
        "type": "attribute"
      }
    ],
    "tests\\test_ideas_service.py:TestTrendingItemModel.test_is_expired_false": [
      {
        "callee": "create_sample_trending_item",
        "line": 372,
        "type": "direct"
      },
      {
        "callee": "from_dict",
        "line": 373,
        "type": "attribute"
      },
      {
        "callee": "is_expired",
        "line": 375,
        "type": "attribute"
      }
    ],
    "tests\\test_ideas_service.py:TestTrendingItemModel.test_is_expired_true": [
      {
        "callee": "replace",
        "line": 379,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 379,
        "type": "attribute"
      },
      {
        "callee": "create_sample_trending_item",
        "line": 380,
        "type": "direct"
      },
      {
        "callee": "isoformat",
        "line": 381,
        "type": "attribute"
      },
      {
        "callee": "from_dict",
        "line": 383,
        "type": "attribute"
      },
      {
        "callee": "is_expired",
        "line": 385,
        "type": "attribute"
      }
    ],
    "tests\\test_printer_interface_conformance.py:test_printer_interface_methods_signature": [
      {
        "callee": "hasattr",
        "line": 21,
        "type": "direct"
      },
      {
        "callee": "getattr",
        "line": 22,
        "type": "direct"
      },
      {
        "callee": "isfunction",
        "line": 24,
        "type": "attribute"
      }
    ],
    "tests\\test_printer_interface_conformance.py:test_prusa_printer_implements_interface": [
      {
        "callee": "PrusaPrinter",
        "line": 29,
        "type": "direct"
      },
      {
        "callee": "hasattr",
        "line": 31,
        "type": "direct"
      },
      {
        "callee": "getattr",
        "line": 32,
        "type": "direct"
      },
      {
        "callee": "iscoroutinefunction",
        "line": 33,
        "type": "attribute"
      }
    ],
    "tests\\test_printer_interface_conformance.py:test_bambu_printer_implements_interface": [
      {
        "callee": "skip",
        "line": 38,
        "type": "attribute"
      },
      {
        "callee": "BambuLabPrinter",
        "line": 39,
        "type": "direct"
      },
      {
        "callee": "hasattr",
        "line": 41,
        "type": "direct"
      },
      {
        "callee": "getattr",
        "line": 42,
        "type": "direct"
      },
      {
        "callee": "iscoroutinefunction",
        "line": 43,
        "type": "attribute"
      }
    ],
    "tests\\test_runner.py:PrinternizerTestRunner.__init__": [
      {
        "callee": "Path",
        "line": 20,
        "type": "direct"
      },
      {
        "callee": "Path",
        "line": 20,
        "type": "direct"
      },
      {
        "callee": "mkdir",
        "line": 26,
        "type": "attribute"
      },
      {
        "callee": "mkdir",
        "line": 27,
        "type": "attribute"
      }
    ],
    "tests\\test_runner.py:PrinternizerTestRunner.run_backend_tests": [
      {
        "callee": "print",
        "line": 31,
        "type": "direct"
      },
      {
        "callee": "extend",
        "line": 38,
        "type": "attribute"
      },
      {
        "callee": "extend",
        "line": 57,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 61,
        "type": "attribute"
      },
      {
        "callee": "extend",
        "line": 64,
        "type": "attribute"
      },
      {
        "callee": "time",
        "line": 71,
        "type": "attribute"
      },
      {
        "callee": "run",
        "line": 72,
        "type": "attribute"
      },
      {
        "callee": "time",
        "line": 73,
        "type": "attribute"
      },
      {
        "callee": "_process_backend_results",
        "line": 76,
        "type": "attribute"
      }
    ],
    "tests\\test_runner.py:PrinternizerTestRunner.run_frontend_tests": [
      {
        "callee": "print",
        "line": 82,
        "type": "direct"
      },
      {
        "callee": "append",
        "line": 92,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 104,
        "type": "attribute"
      },
      {
        "callee": "append",
        "line": 108,
        "type": "attribute"
      },
      {
        "callee": "extend",
        "line": 111,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 112,
        "type": "direct"
      },
      {
        "callee": "str",
        "line": 113,
        "type": "direct"
      },
      {
        "callee": "time",
        "line": 117,
        "type": "attribute"
      },
      {
        "callee": "run",
        "line": 118,
        "type": "attribute"
      },
      {
        "callee": "time",
        "line": 119,
        "type": "attribute"
      },
      {
        "callee": "_process_frontend_results",
        "line": 122,
        "type": "attribute"
      }
    ],
    "tests\\test_runner.py:PrinternizerTestRunner.run_performance_benchmarks": [
      {
        "callee": "print",
        "line": 128,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 129,
        "type": "direct"
      },
      {
        "callee": "time",
        "line": 140,
        "type": "attribute"
      },
      {
        "callee": "run",
        "line": 141,
        "type": "attribute"
      },
      {
        "callee": "time",
        "line": 142,
        "type": "attribute"
      },
      {
        "callee": "_process_benchmark_results",
        "line": 145,
        "type": "attribute"
      }
    ],
    "tests\\test_runner.py:PrinternizerTestRunner.generate_coverage_report": [
      {
        "callee": "print",
        "line": 151,
        "type": "direct"
      },
      {
        "callee": "isoformat",
        "line": 158,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 158,
        "type": "attribute"
      },
      {
        "callee": "exists",
        "line": 165,
        "type": "attribute"
      },
      {
        "callee": "open",
        "line": 166,
        "type": "direct"
      },
      {
        "callee": "load",
        "line": 167,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 169,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 169,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 170,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 170,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 171,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 171,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 172,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 172,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 173,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 173,
        "type": "attribute"
      },
      {
        "callee": "exists",
        "line": 177,
        "type": "attribute"
      },
      {
        "callee": "open",
        "line": 178,
        "type": "direct"
      },
      {
        "callee": "load",
        "line": 179,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 191,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 192,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 193,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 194,
        "type": "attribute"
      },
      {
        "callee": "open",
        "line": 209,
        "type": "direct"
      },
      {
        "callee": "dump",
        "line": 210,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 212,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 216,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 217,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 218,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 218,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 219,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 219,
        "type": "attribute"
      }
    ],
    "tests\\test_runner.py:PrinternizerTestRunner.generate_test_documentation": [
      {
        "callee": "print",
        "line": 225,
        "type": "direct"
      },
      {
        "callee": "_create_test_documentation",
        "line": 227,
        "type": "attribute"
      },
      {
        "callee": "open",
        "line": 230,
        "type": "direct"
      },
      {
        "callee": "write",
        "line": 231,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 233,
        "type": "direct"
      }
    ],
    "tests\\test_runner.py:PrinternizerTestRunner.run_full_test_suite": [
      {
        "callee": "print",
        "line": 239,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 240,
        "type": "direct"
      },
      {
        "callee": "now",
        "line": 240,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 241,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 242,
        "type": "direct"
      },
      {
        "callee": "time",
        "line": 245,
        "type": "attribute"
      },
      {
        "callee": "run_backend_tests",
        "line": 255,
        "type": "attribute"
      },
      {
        "callee": "run_frontend_tests",
        "line": 259,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 262,
        "type": "direct"
      },
      {
        "callee": "run_performance_benchmarks",
        "line": 266,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 269,
        "type": "direct"
      },
      {
        "callee": "generate_coverage_report",
        "line": 273,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 276,
        "type": "direct"
      },
      {
        "callee": "generate_test_documentation",
        "line": 280,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 283,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 286,
        "type": "direct"
      },
      {
        "callee": "time",
        "line": 290,
        "type": "attribute"
      },
      {
        "callee": "_print_final_summary",
        "line": 294,
        "type": "attribute"
      }
    ],
    "tests\\test_runner.py:PrinternizerTestRunner._process_backend_results": [
      {
        "callee": "print",
        "line": 303,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 306,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 308,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 309,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 310,
        "type": "direct"
      }
    ],
    "tests\\test_runner.py:PrinternizerTestRunner._process_frontend_results": [
      {
        "callee": "print",
        "line": 314,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 317,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 319,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 320,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 321,
        "type": "direct"
      }
    ],
    "tests\\test_runner.py:PrinternizerTestRunner._process_benchmark_results": [
      {
        "callee": "print",
        "line": 325,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 328,
        "type": "direct"
      },
      {
        "callee": "exists",
        "line": 332,
        "type": "attribute"
      },
      {
        "callee": "open",
        "line": 333,
        "type": "direct"
      },
      {
        "callee": "load",
        "line": 334,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 336,
        "type": "direct"
      },
      {
        "callee": "get",
        "line": 337,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 338,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 339,
        "type": "attribute"
      },
      {
        "callee": "get",
        "line": 339,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 340,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 342,
        "type": "direct"
      }
    ],
    "tests\\test_runner.py:PrinternizerTestRunner._create_test_documentation": [
      {
        "callee": "strftime",
        "line": 352,
        "type": "attribute"
      },
      {
        "callee": "now",
        "line": 352,
        "type": "attribute"
      }
    ],
    "tests\\test_runner.py:PrinternizerTestRunner._print_final_summary": [
      {
        "callee": "print",
        "line": 617,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 618,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 619,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 622,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 625,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 626,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 627,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 628,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 631,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 632,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 633,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 641,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 643,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 645,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 646,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 647,
        "type": "direct"
      }
    ],
    "tests\\test_runner.py:main": [
      {
        "callee": "ArgumentParser",
        "line": 652,
        "type": "attribute"
      },
      {
        "callee": "add_argument",
        "line": 653,
        "type": "attribute"
      },
      {
        "callee": "add_argument",
        "line": 654,
        "type": "attribute"
      },
      {
        "callee": "add_argument",
        "line": 655,
        "type": "attribute"
      },
      {
        "callee": "add_argument",
        "line": 656,
        "type": "attribute"
      },
      {
        "callee": "add_argument",
        "line": 658,
        "type": "attribute"
      },
      {
        "callee": "add_argument",
        "line": 659,
        "type": "attribute"
      },
      {
        "callee": "add_argument",
        "line": 660,
        "type": "attribute"
      },
      {
        "callee": "add_argument",
        "line": 661,
        "type": "attribute"
      },
      {
        "callee": "add_argument",
        "line": 662,
        "type": "attribute"
      },
      {
        "callee": "add_argument",
        "line": 663,
        "type": "attribute"
      },
      {
        "callee": "parse_args",
        "line": 665,
        "type": "attribute"
      },
      {
        "callee": "PrinternizerTestRunner",
        "line": 667,
        "type": "direct"
      },
      {
        "callee": "generate_coverage_report",
        "line": 673,
        "type": "attribute"
      },
      {
        "callee": "generate_test_documentation",
        "line": 675,
        "type": "attribute"
      },
      {
        "callee": "run_full_test_suite",
        "line": 677,
        "type": "attribute"
      },
      {
        "callee": "run_backend_tests",
        "line": 682,
        "type": "attribute"
      },
      {
        "callee": "run_frontend_tests",
        "line": 687,
        "type": "attribute"
      },
      {
        "callee": "run_performance_benchmarks",
        "line": 692,
        "type": "attribute"
      },
      {
        "callee": "run_full_test_suite",
        "line": 695,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 698,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 701,
        "type": "direct"
      },
      {
        "callee": "exit",
        "line": 705,
        "type": "attribute"
      }
    ],
    "tests\\test_url_parser_service.py:url_parser": [
      {
        "callee": "UrlParserService",
        "line": 13,
        "type": "direct"
      }
    ],
    "tests\\test_url_parser_service.py:TestUrlParserService.test_detect_platform_makerworld": [
      {
        "callee": "detect_platform",
        "line": 28,
        "type": "attribute"
      }
    ],
    "tests\\test_url_parser_service.py:TestUrlParserService.test_detect_platform_printables": [
      {
        "callee": "detect_platform",
        "line": 40,
        "type": "attribute"
      }
    ],
    "tests\\test_url_parser_service.py:TestUrlParserService.test_detect_platform_thingiverse": [
      {
        "callee": "detect_platform",
        "line": 52,
        "type": "attribute"
      }
    ],
    "tests\\test_url_parser_service.py:TestUrlParserService.test_detect_platform_unknown": [
      {
        "callee": "detect_platform",
        "line": 64,
        "type": "attribute"
      }
    ],
    "tests\\test_url_parser_service.py:TestUrlParserService.test_extract_model_id_makerworld": [
      {
        "callee": "extract_model_id",
        "line": 77,
        "type": "attribute"
      }
    ],
    "tests\\test_url_parser_service.py:TestUrlParserService.test_extract_model_id_printables": [
      {
        "callee": "extract_model_id",
        "line": 90,
        "type": "attribute"
      }
    ],
    "tests\\test_url_parser_service.py:TestUrlParserService.test_extract_model_id_thingiverse": [
      {
        "callee": "extract_model_id",
        "line": 103,
        "type": "attribute"
      }
    ],
    "tests\\test_url_parser_service.py:TestUrlParserService.test_clean_title": [
      {
        "callee": "_clean_title",
        "line": 117,
        "type": "attribute"
      }
    ],
    "tests\\test_url_parser_service.py:TestUrlParserService.test_extract_creator_from_title": [
      {
        "callee": "extract_creator_from_title",
        "line": 130,
        "type": "attribute"
      }
    ],
    "tests\\test_url_parser_service.py:TestUrlParserService.test_validate_url": [
      {
        "callee": "validate_url",
        "line": 149,
        "type": "attribute"
      },
      {
        "callee": "validate_url",
        "line": 152,
        "type": "attribute"
      }
    ],
    "tests\\test_url_parser_service.py:TestUrlParserService.test_get_supported_platforms": [
      {
        "callee": "get_supported_platforms",
        "line": 156,
        "type": "attribute"
      },
      {
        "callee": "isinstance",
        "line": 159,
        "type": "direct"
      },
      {
        "callee": "all",
        "line": 160,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 161,
        "type": "direct"
      },
      {
        "callee": "len",
        "line": 161,
        "type": "direct"
      }
    ],
    "tests\\test_url_parser_service.py:TestUrlParserService.test_get_platform_info": [
      {
        "callee": "get_platform_info",
        "line": 165,
        "type": "attribute"
      },
      {
        "callee": "isinstance",
        "line": 167,
        "type": "direct"
      },
      {
        "callee": "get_platform_info",
        "line": 173,
        "type": "attribute"
      }
    ],
    "tests\\test_url_parser_service.py:TestUrlParserService.test_parse_url_success": [
      {
        "callee": "object",
        "line": 183,
        "type": "attribute"
      },
      {
        "callee": "AsyncMock",
        "line": 184,
        "type": "direct"
      },
      {
        "callee": "AsyncMock",
        "line": 185,
        "type": "direct"
      },
      {
        "callee": "parse_url",
        "line": 191,
        "type": "attribute"
      }
    ],
    "tests\\test_url_parser_service.py:TestUrlParserService.test_parse_url_http_error": [
      {
        "callee": "object",
        "line": 205,
        "type": "attribute"
      },
      {
        "callee": "AsyncMock",
        "line": 206,
        "type": "direct"
      },
      {
        "callee": "AsyncMock",
        "line": 207,
        "type": "direct"
      },
      {
        "callee": "parse_url",
        "line": 212,
        "type": "attribute"
      }
    ],
    "tests\\test_url_parser_service.py:TestUrlParserService.test_parse_url_invalid_url": [
      {
        "callee": "parse_url",
        "line": 225,
        "type": "attribute"
      }
    ],
    "tests\\test_url_parser_service.py:TestUrlParserService.test_fetch_page_title_success": [
      {
        "callee": "object",
        "line": 238,
        "type": "attribute"
      },
      {
        "callee": "AsyncMock",
        "line": 239,
        "type": "direct"
      },
      {
        "callee": "AsyncMock",
        "line": 240,
        "type": "direct"
      },
      {
        "callee": "fetch_page_title",
        "line": 246,
        "type": "attribute"
      }
    ],
    "tests\\test_url_parser_service.py:TestUrlParserService.test_fetch_page_title_no_title_tag": [
      {
        "callee": "object",
        "line": 255,
        "type": "attribute"
      },
      {
        "callee": "AsyncMock",
        "line": 256,
        "type": "direct"
      },
      {
        "callee": "AsyncMock",
        "line": 257,
        "type": "direct"
      },
      {
        "callee": "fetch_page_title",
        "line": 263,
        "type": "attribute"
      }
    ],
    "tests\\test_url_parser_service.py:TestUrlParserService.test_close_session": [
      {
        "callee": "AsyncMock",
        "line": 270,
        "type": "direct"
      },
      {
        "callee": "close",
        "line": 272,
        "type": "attribute"
      },
      {
        "callee": "assert_called_once",
        "line": 274,
        "type": "attribute"
      }
    ],
    "tests\\test_working_core.py:TestCoreModels.test_printer_model_creation": [
      {
        "callee": "Printer",
        "line": 24,
        "type": "direct"
      },
      {
        "callee": "Printer",
        "line": 37,
        "type": "direct"
      }
    ],
    "tests\\test_working_core.py:TestCoreModels.test_job_model_business_logic": [
      {
        "callee": "Job",
        "line": 50,
        "type": "direct"
      },
      {
        "callee": "Job",
        "line": 66,
        "type": "direct"
      }
    ],
    "tests\\test_working_core.py:TestCoreModels.test_file_model_statuses": [
      {
        "callee": "File",
        "line": 80,
        "type": "direct"
      },
      {
        "callee": "File",
        "line": 93,
        "type": "direct"
      }
    ],
    "tests\\test_working_core.py:TestGermanBusinessLogic.test_vat_calculations": [
      {
        "callee": "abs",
        "line": 124,
        "type": "direct"
      }
    ],
    "tests\\test_working_core.py:TestGermanBusinessLogic.classify_customer": [
      {
        "callee": "any",
        "line": 131,
        "type": "direct"
      }
    ],
    "tests\\test_working_core.py:TestGermanBusinessLogic.test_business_classification": [
      {
        "callee": "classify_customer",
        "line": 134,
        "type": "direct"
      },
      {
        "callee": "classify_customer",
        "line": 135,
        "type": "direct"
      },
      {
        "callee": "classify_customer",
        "line": 136,
        "type": "direct"
      },
      {
        "callee": "classify_customer",
        "line": 139,
        "type": "direct"
      },
      {
        "callee": "classify_customer",
        "line": 140,
        "type": "direct"
      },
      {
        "callee": "classify_customer",
        "line": 141,
        "type": "direct"
      }
    ],
    "tests\\test_working_core.py:TestGermanBusinessLogic.test_file_naming_german_support": [
      {
        "callee": "split",
        "line": 154,
        "type": "attribute"
      }
    ],
    "tests\\test_working_core.py:TestConfigurationValidation.test_printer_config_updates": [
      {
        "callee": "PrinterConfig",
        "line": 168,
        "type": "direct"
      }
    ],
    "tests\\test_working_core.py:TestConfigurationValidation.test_job_creation_and_updates": [
      {
        "callee": "JobCreate",
        "line": 182,
        "type": "direct"
      },
      {
        "callee": "JobUpdate",
        "line": 192,
        "type": "direct"
      }
    ],
    "verify_phase2_integration.py:check_file_exists": [
      {
        "callee": "exists",
        "line": 13,
        "type": "attribute"
      },
      {
        "callee": "stat",
        "line": 14,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 15,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 18,
        "type": "direct"
      }
    ],
    "verify_phase2_integration.py:check_file_contains": [
      {
        "callee": "read_text",
        "line": 24,
        "type": "attribute"
      },
      {
        "callee": "print",
        "line": 26,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 29,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 32,
        "type": "direct"
      }
    ],
    "verify_phase2_integration.py:main": [
      {
        "callee": "print",
        "line": 37,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 38,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 39,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 40,
        "type": "direct"
      },
      {
        "callee": "Path",
        "line": 42,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 46,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 47,
        "type": "direct"
      },
      {
        "callee": "check_file_exists",
        "line": 56,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 59,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 62,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 63,
        "type": "direct"
      },
      {
        "callee": "check_file_contains",
        "line": 72,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 75,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 78,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 79,
        "type": "direct"
      },
      {
        "callee": "check_file_contains",
        "line": 89,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 92,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 95,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 96,
        "type": "direct"
      },
      {
        "callee": "check_file_contains",
        "line": 99,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 104,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 107,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 108,
        "type": "direct"
      },
      {
        "callee": "check_file_contains",
        "line": 111,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 116,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 119,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 120,
        "type": "direct"
      },
      {
        "callee": "run",
        "line": 124,
        "type": "attribute"
      },
      {
        "callee": "str",
        "line": 125,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 130,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 132,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 135,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 137,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 140,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 142,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 143,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 144,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 145,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 146,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 147,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 148,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 149,
        "type": "direct"
      },
      {
        "callee": "print",
        "line": 152,
        "type": "direct"
      }
    ]
  },
  "entry_points": [
    {
      "type": "main",
      "file": "demo_gcode_optimization.py",
      "description": "Script entry point (__main__)"
    },
    {
      "type": "main",
      "file": "scripts\\analyze_codebase.py",
      "description": "Script entry point (__main__)"
    },
    {
      "type": "main",
      "file": "scripts\\bambu_credentials.py",
      "description": "Script entry point (__main__)"
    },
    {
      "type": "main",
      "file": "scripts\\debug_bambu_ftp.py",
      "description": "Script entry point (__main__)"
    },
    {
      "type": "main",
      "file": "scripts\\debug_bambu_ftp_v2.py",
      "description": "Script entry point (__main__)"
    },
    {
      "type": "main",
      "file": "scripts\\download_bambu_files.py",
      "description": "Script entry point (__main__)"
    },
    {
      "type": "main",
      "file": "scripts\\download_target_file.py",
      "description": "Script entry point (__main__)"
    },
    {
      "type": "main",
      "file": "scripts\\error_analysis_agent.py",
      "description": "Script entry point (__main__)"
    },
    {
      "type": "main",
      "file": "scripts\\quick_bambu_check.py",
      "description": "Script entry point (__main__)"
    },
    {
      "type": "main",
      "file": "scripts\\simple_bambu_test.py",
      "description": "Script entry point (__main__)"
    },
    {
      "type": "main",
      "file": "scripts\\test_bambu_credentials.py",
      "description": "Script entry point (__main__)"
    },
    {
      "type": "main",
      "file": "scripts\\test_bambu_ftp_direct.py",
      "description": "Script entry point (__main__)"
    },
    {
      "type": "main",
      "file": "scripts\\test_complete_bambu_ftp.py",
      "description": "Script entry point (__main__)"
    },
    {
      "type": "main",
      "file": "scripts\\test_existing_bambu_api.py",
      "description": "Script entry point (__main__)"
    },
    {
      "type": "main",
      "file": "scripts\\test_ssl_connection.py",
      "description": "Script entry point (__main__)"
    },
    {
      "type": "main",
      "file": "scripts\\verify_bambu_download.py",
      "description": "Script entry point (__main__)"
    },
    {
      "type": "main",
      "file": "scripts\\working_bambu_ftp.py",
      "description": "Script entry point (__main__)"
    },
    {
      "type": "main",
      "file": "src\\main.py",
      "description": "Script entry point (__main__)"
    },
    {
      "type": "main",
      "file": "tests\\backend\\test_job_null_fix.py",
      "description": "Script entry point (__main__)"
    },
    {
      "type": "main",
      "file": "tests\\backend\\test_job_validation.py",
      "description": "Script entry point (__main__)"
    },
    {
      "type": "main",
      "file": "tests\\backend\\test_watch_folders.py",
      "description": "Script entry point (__main__)"
    },
    {
      "type": "main",
      "file": "tests\\run_essential_tests.py",
      "description": "Script entry point (__main__)"
    },
    {
      "type": "main",
      "file": "tests\\run_milestone_1_2_tests.py",
      "description": "Script entry point (__main__)"
    },
    {
      "type": "main",
      "file": "tests\\test_essential_integration.py",
      "description": "Script entry point (__main__)"
    },
    {
      "type": "main",
      "file": "tests\\test_runner.py",
      "description": "Script entry point (__main__)"
    },
    {
      "type": "main",
      "file": "tests\\test_working_core.py",
      "description": "Script entry point (__main__)"
    },
    {
      "type": "main",
      "file": "verify_phase2_integration.py",
      "description": "Script entry point (__main__)"
    }
  ]
}